name: "/usr/local/include/wine/windows/windows.h"
function {
  name: "HandleToULong"
  return_type: "UI"
  parameter {
    name: "h"
    type: "*cV;"
  }
}
function {
  name: "HandleToLong"
  return_type: "I"
  parameter {
    name: "h"
    type: "*cV;"
  }
}
function {
  name: "ULongToHandle"
  return_type: "*V;"
  parameter {
    name: "ul"
    type: "UI"
  }
}
function {
  name: "LongToHandle"
  return_type: "*V;"
  parameter {
    name: "l"
    type: "I"
  }
}
function {
  name: "PtrToUlong"
  return_type: "UI"
  parameter {
    name: "p"
    type: "*cV;"
  }
}
function {
  name: "PtrToLong"
  return_type: "I"
  parameter {
    name: "p"
    type: "*cV;"
  }
}
function {
  name: "PtrToUint"
  return_type: "UI"
  parameter {
    name: "p"
    type: "*cV;"
  }
}
function {
  name: "PtrToInt"
  return_type: "I"
  parameter {
    name: "p"
    type: "*cV;"
  }
}
function {
  name: "PtrToUshort"
  return_type: "US"
  parameter {
    name: "p"
    type: "*cV;"
  }
}
function {
  name: "PtrToShort"
  return_type: "S"
  parameter {
    name: "p"
    type: "*cV;"
  }
}
function {
  name: "IntToPtr"
  return_type: "*V;"
  parameter {
    name: "i"
    type: "I"
  }
}
function {
  name: "UIntToPtr"
  return_type: "*V;"
  parameter {
    name: "ui"
    type: "UI"
  }
}
function {
  name: "LongToPtr"
  return_type: "*V;"
  parameter {
    name: "l"
    type: "I"
  }
}
function {
  name: "ULongToPtr"
  return_type: "*V;"
  parameter {
    name: "ul"
    type: "UI"
  }
}
function {
  name: "___runetype"
  return_type: "UI"
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "___tolower"
  return_type: "I"
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "___toupper"
  return_type: "I"
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "isascii"
  return_type: "I"
  parameter {
    name: "_c"
    type: "I"
  }
}
function {
  name: "__maskrune"
  return_type: "I"
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "__istype"
  return_type: "I"
  parameter {
    name: "_c"
    type: "I"
  }
  parameter {
    name: "_f"
    type: "UI"
  }
}
function {
  name: "__isctype"
  return_type: "I"
  parameter {
    name: "_c"
    type: "I"
  }
  parameter {
    name: "_f"
    type: "UI"
  }
}
function {
  name: "__toupper"
  return_type: "I"
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "__tolower"
  return_type: "I"
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "__wcwidth"
  return_type: "I"
  parameter {
    name: "_c"
    type: "I"
  }
}
function {
  name: "isalnum"
  return_type: "I"
  parameter {
    name: "_c"
    type: "I"
  }
}
function {
  name: "isalpha"
  return_type: "I"
  parameter {
    name: "_c"
    type: "I"
  }
}
function {
  name: "isblank"
  return_type: "I"
  parameter {
    name: "_c"
    type: "I"
  }
}
function {
  name: "iscntrl"
  return_type: "I"
  parameter {
    name: "_c"
    type: "I"
  }
}
function {
  name: "isdigit"
  return_type: "I"
  parameter {
    name: "_c"
    type: "I"
  }
}
function {
  name: "isgraph"
  return_type: "I"
  parameter {
    name: "_c"
    type: "I"
  }
}
function {
  name: "islower"
  return_type: "I"
  parameter {
    name: "_c"
    type: "I"
  }
}
function {
  name: "isprint"
  return_type: "I"
  parameter {
    name: "_c"
    type: "I"
  }
}
function {
  name: "ispunct"
  return_type: "I"
  parameter {
    name: "_c"
    type: "I"
  }
}
function {
  name: "isspace"
  return_type: "I"
  parameter {
    name: "_c"
    type: "I"
  }
}
function {
  name: "isupper"
  return_type: "I"
  parameter {
    name: "_c"
    type: "I"
  }
}
function {
  name: "isxdigit"
  return_type: "I"
  parameter {
    name: "_c"
    type: "I"
  }
}
function {
  name: "toascii"
  return_type: "I"
  parameter {
    name: "_c"
    type: "I"
  }
}
function {
  name: "tolower"
  return_type: "I"
  parameter {
    name: "_c"
    type: "I"
  }
}
function {
  name: "toupper"
  return_type: "I"
  parameter {
    name: "_c"
    type: "I"
  }
}
function {
  name: "digittoint"
  return_type: "I"
  parameter {
    name: "_c"
    type: "I"
  }
}
function {
  name: "ishexnumber"
  return_type: "I"
  parameter {
    name: "_c"
    type: "I"
  }
}
function {
  name: "isideogram"
  return_type: "I"
  parameter {
    name: "_c"
    type: "I"
  }
}
function {
  name: "isnumber"
  return_type: "I"
  parameter {
    name: "_c"
    type: "I"
  }
}
function {
  name: "isphonogram"
  return_type: "I"
  parameter {
    name: "_c"
    type: "I"
  }
}
function {
  name: "isrune"
  return_type: "I"
  parameter {
    name: "_c"
    type: "I"
  }
}
function {
  name: "isspecial"
  return_type: "I"
  parameter {
    name: "_c"
    type: "I"
  }
}
function {
  name: "memchr"
  return_type: "*V;"
  parameter {
    name: ""
    type: "*cV;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "memcmp"
  return_type: "I"
  parameter {
    name: ""
    type: "*cV;"
  }
  parameter {
    name: ""
    type: "*cV;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "memcpy"
  return_type: "*V;"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*cV;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "memmove"
  return_type: "*V;"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*cV;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "memset"
  return_type: "*V;"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "strcat"
  return_type: "*C;"
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "strchr"
  return_type: "*C;"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "strcmp"
  return_type: "I"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "strcoll"
  return_type: "I"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "strcpy"
  return_type: "*C;"
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "strcspn"
  return_type: "UI"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "strerror"
  return_type: "*C;"
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "strlen"
  return_type: "UI"
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "strncat"
  return_type: "*C;"
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "strncmp"
  return_type: "I"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "strncpy"
  return_type: "*C;"
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "strpbrk"
  return_type: "*C;"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "strrchr"
  return_type: "*C;"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "strspn"
  return_type: "UI"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "strstr"
  return_type: "*C;"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "strtok"
  return_type: "*C;"
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "strxfrm"
  return_type: "UI"
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "strtok_r"
  return_type: "*C;"
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "**C;;"
  }
}
function {
  name: "strerror_r"
  return_type: "I"
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "strdup"
  return_type: "*C;"
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "memccpy"
  return_type: "*V;"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*cV;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "stpcpy"
  return_type: "*C;"
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "stpncpy"
  return_type: "*C;"
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "strndup"
  return_type: "*C;"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "strnlen"
  return_type: "UI"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "strsignal"
  return_type: "*C;"
  parameter {
    name: "sig"
    type: "I"
  }
}
function {
  name: "memset_s"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "memmem"
  return_type: "*V;"
  parameter {
    name: ""
    type: "*cV;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cV;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "memset_pattern4"
  return_type: "V"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*cV;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "memset_pattern8"
  return_type: "V"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*cV;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "memset_pattern16"
  return_type: "V"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*cV;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "strcasestr"
  return_type: "*C;"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "strnstr"
  return_type: "*C;"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "strlcat"
  return_type: "UI"
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "strlcpy"
  return_type: "UI"
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "strmode"
  return_type: "V"
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*C;"
  }
}
function {
  name: "strsep"
  return_type: "*C;"
  parameter {
    name: ""
    type: "**C;;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "swab"
  return_type: "V"
  parameter {
    name: ""
    type: "*cV;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "bcmp"
  return_type: "I"
  parameter {
    name: ""
    type: "*cV;"
  }
  parameter {
    name: ""
    type: "*cV;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "bcopy"
  return_type: "V"
  parameter {
    name: ""
    type: "*cV;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "bzero"
  return_type: "V"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "index"
  return_type: "*C;"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "rindex"
  return_type: "*C;"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "ffs"
  return_type: "I"
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "strcasecmp"
  return_type: "I"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "strncasecmp"
  return_type: "I"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "ffsl"
  return_type: "I"
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "ffsll"
  return_type: "I"
  parameter {
    name: ""
    type: "J"
  }
}
function {
  name: "fls"
  return_type: "I"
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "flsl"
  return_type: "I"
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "flsll"
  return_type: "I"
  parameter {
    name: ""
    type: "J"
  }
}
function {
  name: "RtlFirstEntrySList"
  return_type: "*R_SLIST_ENTRY;;"
  parameter {
    name: ""
    type: "*cRunion _SLIST_HEADER;;"
  }
}
function {
  name: "RtlInitializeSListHead"
  return_type: "V"
  parameter {
    name: ""
    type: "*Runion _SLIST_HEADER;;"
  }
}
function {
  name: "RtlInterlockedFlushSList"
  return_type: "*R_SLIST_ENTRY;;"
  parameter {
    name: ""
    type: "*Runion _SLIST_HEADER;;"
  }
}
function {
  name: "RtlInterlockedPopEntrySList"
  return_type: "*R_SLIST_ENTRY;;"
  parameter {
    name: ""
    type: "*Runion _SLIST_HEADER;;"
  }
}
function {
  name: "RtlInterlockedPushEntrySList"
  return_type: "*R_SLIST_ENTRY;;"
  parameter {
    name: ""
    type: "*Runion _SLIST_HEADER;;"
  }
  parameter {
    name: ""
    type: "*R_SLIST_ENTRY;;"
  }
}
function {
  name: "RtlQueryDepthSList"
  return_type: "US"
  parameter {
    name: ""
    type: "*Runion _SLIST_HEADER;;"
  }
}
function {
  name: "RtlAddFunctionTable"
  return_type: "UB"
  parameter {
    name: ""
    type: "*R_RUNTIME_FUNCTION;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "RtlDeleteFunctionTable"
  return_type: "UB"
  parameter {
    name: ""
    type: "*R_RUNTIME_FUNCTION;;"
  }
}
function {
  name: "RtlLookupFunctionEntry"
  return_type: "*R_RUNTIME_FUNCTION;;"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*R_UNWIND_HISTORY_TABLE;;"
  }
}
function {
  name: "RtlVirtualUnwind"
  return_type: "*V;"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*R_RUNTIME_FUNCTION;;"
  }
  parameter {
    name: ""
    type: "*R_CONTEXT;;"
  }
  parameter {
    name: ""
    type: "**V;;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*R_KNONVOLATILE_CONTEXT_POINTERS;;"
  }
}
function {
  name: "RtlCaptureContext"
  return_type: "V"
  parameter {
    name: ""
    type: "*R_CONTEXT;;"
  }
}
function {
  name: "NtCurrentTeb"
  return_type: "*R_TEB;;"
}
function {
  name: "RtlRunOnceInitialize"
  return_type: "V"
  parameter {
    name: ""
    type: "*Runion _RTL_RUN_ONCE;;"
  }
}
function {
  name: "RtlRunOnceExecuteOnce"
  return_type: "UI"
  parameter {
    name: ""
    type: "*Runion _RTL_RUN_ONCE;;"
  }
  parameter {
    name: ""
    type: "*(*Runion _RTL_RUN_ONCE;;*V;**V;;)UI;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "**V;;"
  }
}
function {
  name: "RtlRunOnceBeginInitialize"
  return_type: "UI"
  parameter {
    name: ""
    type: "*Runion _RTL_RUN_ONCE;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "**V;;"
  }
}
function {
  name: "RtlRunOnceComplete"
  return_type: "UI"
  parameter {
    name: ""
    type: "*Runion _RTL_RUN_ONCE;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "VerSetConditionMask"
  return_type: "UI"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UB"
  }
}
function {
  name: "RtlGetProductInfo"
  return_type: "UB"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "HRESULT_FROM_WIN32"
  return_type: "I"
  parameter {
    name: "x"
    type: "UI"
  }
}
function {
  name: "ActivateActCtx"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "AddAccessAllowedAce"
  return_type: "I"
  parameter {
    name: ""
    type: "*R_ACL;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "AddAccessAllowedAceEx"
  return_type: "I"
  parameter {
    name: ""
    type: "*R_ACL;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "AddAccessDeniedAce"
  return_type: "I"
  parameter {
    name: ""
    type: "*R_ACL;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "AddAccessDeniedAceEx"
  return_type: "I"
  parameter {
    name: ""
    type: "*R_ACL;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "AddAce"
  return_type: "I"
  parameter {
    name: ""
    type: "*R_ACL;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "AddAtomA"
  return_type: "US"
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "AddAtomW"
  return_type: "US"
  parameter {
    name: ""
    type: "*cUS;"
  }
}
function {
  name: "AddAuditAccessAce"
  return_type: "I"
  parameter {
    name: ""
    type: "*R_ACL;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "AddAuditAccessAceEx"
  return_type: "I"
  parameter {
    name: ""
    type: "*R_ACL;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "AddRefActCtx"
  return_type: "V"
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "AddVectoredExceptionHandler"
  return_type: "*V;"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*(*R_EXCEPTION_POINTERS;;)I;"
  }
}
function {
  name: "AdjustTokenGroups"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*R_TOKEN_GROUPS;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*R_TOKEN_GROUPS;;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "AccessCheck"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*R_GENERIC_MAPPING;;"
  }
  parameter {
    name: ""
    type: "*R_PRIVILEGE_SET;;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*I;"
  }
}
function {
  name: "AccessCheckAndAuditAlarmA"
  return_type: "I"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*R_GENERIC_MAPPING;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*I;"
  }
  parameter {
    name: ""
    type: "*I;"
  }
}
function {
  name: "AccessCheckAndAuditAlarmW"
  return_type: "I"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*R_GENERIC_MAPPING;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*I;"
  }
  parameter {
    name: ""
    type: "*I;"
  }
}
function {
  name: "AccessCheckByType"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*R_OBJECT_TYPE_LIST;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*R_GENERIC_MAPPING;;"
  }
  parameter {
    name: ""
    type: "*R_PRIVILEGE_SET;;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*I;"
  }
}
function {
  name: "AcquireSRWLockExclusive"
  return_type: "V"
  parameter {
    name: ""
    type: "*R_RTL_SRWLOCK;;"
  }
}
function {
  name: "AcquireSRWLockShared"
  return_type: "V"
  parameter {
    name: ""
    type: "*R_RTL_SRWLOCK;;"
  }
}
function {
  name: "AdjustTokenPrivileges"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*R_TOKEN_PRIVILEGES;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*R_TOKEN_PRIVILEGES;;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "AllocateAndInitializeSid"
  return_type: "I"
  parameter {
    name: ""
    type: "*RSID_IDENTIFIER_AUTHORITY;;"
  }
  parameter {
    name: ""
    type: "UB"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "**V;;"
  }
}
function {
  name: "AllocateLocallyUniqueId"
  return_type: "I"
  parameter {
    name: ""
    type: "*R_LUID;;"
  }
}
function {
  name: "AreAllAccessesGranted"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "AreAnyAccessesGranted"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "AreFileApisANSI"
  return_type: "I"
}
function {
  name: "AssignProcessToJobObject"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "BackupEventLogA"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "BackupEventLogW"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
}
function {
  name: "BackupRead"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*UB;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "**V;;"
  }
}
function {
  name: "BackupSeek"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "**V;;"
  }
}
function {
  name: "BackupWrite"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*UB;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "**V;;"
  }
}
function {
  name: "Beep"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "BeginUpdateResourceA"
  return_type: "*V;"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "BeginUpdateResourceW"
  return_type: "*V;"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "BindIoCompletionCallback"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*(UIUI*R_OVERLAPPED;;)V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "BuildCommDCBA"
  return_type: "I"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*RtagDCB;;"
  }
}
function {
  name: "BuildCommDCBW"
  return_type: "I"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*RtagDCB;;"
  }
}
function {
  name: "BuildCommDCBAndTimeoutsA"
  return_type: "I"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*RtagDCB;;"
  }
  parameter {
    name: ""
    type: "*RtagCOMMTIMEOUTS;;"
  }
}
function {
  name: "BuildCommDCBAndTimeoutsW"
  return_type: "I"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*RtagDCB;;"
  }
  parameter {
    name: ""
    type: "*RtagCOMMTIMEOUTS;;"
  }
}
function {
  name: "CallNamedPipeA"
  return_type: "I"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "CallNamedPipeW"
  return_type: "I"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "CancelIo"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "CancelIoEx"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*R_OVERLAPPED;;"
  }
}
function {
  name: "CancelTimerQueueTimer"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "CancelWaitableTimer"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "ChangeTimerQueueTimer"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "CheckTokenMembership"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*I;"
  }
}
function {
  name: "ClearCommBreak"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "ClearCommError"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*RtagCOMSTAT;;"
  }
}
function {
  name: "ClearEventLogA"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "ClearEventLogW"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
}
function {
  name: "CloseEventLog"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "CloseHandle"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "CommConfigDialogA"
  return_type: "I"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*RtagCOMMCONFIG;;"
  }
}
function {
  name: "CommConfigDialogW"
  return_type: "I"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*RtagCOMMCONFIG;;"
  }
}
function {
  name: "ConnectNamedPipe"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*R_OVERLAPPED;;"
  }
}
function {
  name: "ContinueDebugEvent"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "ConvertToGlobalHandle"
  return_type: "*V;"
  parameter {
    name: "hSrc"
    type: "*V;"
  }
}
function {
  name: "CopyFileA"
  return_type: "I"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "CopyFileW"
  return_type: "I"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "CopyFileExA"
  return_type: "I"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*(Runion _LARGE_INTEGER;Runion _LARGE_INTEGER;Runion _LARGE_INTEGER;Runion _LARGE_INTEGER;UIUI*V;*V;*V;)UI;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*I;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "CopyFileExW"
  return_type: "I"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*(Runion _LARGE_INTEGER;Runion _LARGE_INTEGER;Runion _LARGE_INTEGER;Runion _LARGE_INTEGER;UIUI*V;*V;*V;)UI;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*I;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "CopySid"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "CompareFileTime"
  return_type: "I"
  parameter {
    name: ""
    type: "*cR_FILETIME;;"
  }
  parameter {
    name: ""
    type: "*cR_FILETIME;;"
  }
}
function {
  name: "ConvertFiberToThread"
  return_type: "I"
}
function {
  name: "ConvertThreadToFiber"
  return_type: "*V;"
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "ConvertThreadToFiberEx"
  return_type: "*V;"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "ConvertToAutoInheritPrivateObjectSecurity"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "**V;;"
  }
  parameter {
    name: ""
    type: "*R_GUID;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*R_GENERIC_MAPPING;;"
  }
}
function {
  name: "CreateActCtxA"
  return_type: "*V;"
  parameter {
    name: ""
    type: "*cRtagACTCTXA;;"
  }
}
function {
  name: "CreateActCtxW"
  return_type: "*V;"
  parameter {
    name: ""
    type: "*cRtagACTCTXW;;"
  }
}
function {
  name: "CreateDirectoryA"
  return_type: "I"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*R_SECURITY_ATTRIBUTES;;"
  }
}
function {
  name: "CreateDirectoryW"
  return_type: "I"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*R_SECURITY_ATTRIBUTES;;"
  }
}
function {
  name: "CreateDirectoryExA"
  return_type: "I"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*R_SECURITY_ATTRIBUTES;;"
  }
}
function {
  name: "CreateDirectoryExW"
  return_type: "I"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*R_SECURITY_ATTRIBUTES;;"
  }
}
function {
  name: "CreateEventA"
  return_type: "*V;"
  parameter {
    name: ""
    type: "*R_SECURITY_ATTRIBUTES;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "CreateEventW"
  return_type: "*V;"
  parameter {
    name: ""
    type: "*R_SECURITY_ATTRIBUTES;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
}
function {
  name: "CreateEventExA"
  return_type: "*V;"
  parameter {
    name: ""
    type: "*R_SECURITY_ATTRIBUTES;;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "CreateEventExW"
  return_type: "*V;"
  parameter {
    name: ""
    type: "*R_SECURITY_ATTRIBUTES;;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "CreateFiber"
  return_type: "*V;"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*(*V;)V;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "CreateFiberEx"
  return_type: "*V;"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*(*V;)V;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "CreateFileA"
  return_type: "*V;"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*R_SECURITY_ATTRIBUTES;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "CreateFileW"
  return_type: "*V;"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*R_SECURITY_ATTRIBUTES;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "CreateFileMappingA"
  return_type: "*V;"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*R_SECURITY_ATTRIBUTES;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "CreateFileMappingW"
  return_type: "*V;"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*R_SECURITY_ATTRIBUTES;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
}
function {
  name: "CreateIoCompletionPort"
  return_type: "*V;"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "CreateJobObjectA"
  return_type: "*V;"
  parameter {
    name: ""
    type: "*R_SECURITY_ATTRIBUTES;;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "CreateJobObjectW"
  return_type: "*V;"
  parameter {
    name: ""
    type: "*R_SECURITY_ATTRIBUTES;;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
}
function {
  name: "CreateMailslotA"
  return_type: "*V;"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*R_SECURITY_ATTRIBUTES;;"
  }
}
function {
  name: "CreateMailslotW"
  return_type: "*V;"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*R_SECURITY_ATTRIBUTES;;"
  }
}
function {
  name: "CreateMemoryResourceNotification"
  return_type: "*V;"
  parameter {
    name: ""
    type: "X(Enum.enum _MEMORY_RESOURCE_NOTIFICATION_TYPE)"
  }
}
function {
  name: "CreateMutexA"
  return_type: "*V;"
  parameter {
    name: ""
    type: "*R_SECURITY_ATTRIBUTES;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "CreateMutexW"
  return_type: "*V;"
  parameter {
    name: ""
    type: "*R_SECURITY_ATTRIBUTES;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
}
function {
  name: "CreateMutexExA"
  return_type: "*V;"
  parameter {
    name: ""
    type: "*R_SECURITY_ATTRIBUTES;;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "CreateMutexExW"
  return_type: "*V;"
  parameter {
    name: ""
    type: "*R_SECURITY_ATTRIBUTES;;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "CreateNamedPipeA"
  return_type: "*V;"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*R_SECURITY_ATTRIBUTES;;"
  }
}
function {
  name: "CreateNamedPipeW"
  return_type: "*V;"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*R_SECURITY_ATTRIBUTES;;"
  }
}
function {
  name: "CreatePipe"
  return_type: "I"
  parameter {
    name: ""
    type: "**V;;"
  }
  parameter {
    name: ""
    type: "**V;;"
  }
  parameter {
    name: ""
    type: "*R_SECURITY_ATTRIBUTES;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "CreatePrivateObjectSecurity"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "**V;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*R_GENERIC_MAPPING;;"
  }
}
function {
  name: "CreateProcessA"
  return_type: "I"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "*R_SECURITY_ATTRIBUTES;;"
  }
  parameter {
    name: ""
    type: "*R_SECURITY_ATTRIBUTES;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*R_STARTUPINFOA;;"
  }
  parameter {
    name: ""
    type: "*R_PROCESS_INFORMATION;;"
  }
}
function {
  name: "CreateProcessW"
  return_type: "I"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "*R_SECURITY_ATTRIBUTES;;"
  }
  parameter {
    name: ""
    type: "*R_SECURITY_ATTRIBUTES;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*R_STARTUPINFOW;;"
  }
  parameter {
    name: ""
    type: "*R_PROCESS_INFORMATION;;"
  }
}
function {
  name: "CreateProcessAsUserA"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "*R_SECURITY_ATTRIBUTES;;"
  }
  parameter {
    name: ""
    type: "*R_SECURITY_ATTRIBUTES;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*R_STARTUPINFOA;;"
  }
  parameter {
    name: ""
    type: "*R_PROCESS_INFORMATION;;"
  }
}
function {
  name: "CreateProcessAsUserW"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "*R_SECURITY_ATTRIBUTES;;"
  }
  parameter {
    name: ""
    type: "*R_SECURITY_ATTRIBUTES;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*R_STARTUPINFOW;;"
  }
  parameter {
    name: ""
    type: "*R_PROCESS_INFORMATION;;"
  }
}
function {
  name: "CreateProcessWithLogonW"
  return_type: "I"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*R_STARTUPINFOW;;"
  }
  parameter {
    name: ""
    type: "*R_PROCESS_INFORMATION;;"
  }
}
function {
  name: "CreateRemoteThread"
  return_type: "*V;"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*R_SECURITY_ATTRIBUTES;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*(*V;)UI;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "CreateRestrictedToken"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*R_SID_AND_ATTRIBUTES;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*R_LUID_AND_ATTRIBUTES;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*R_SID_AND_ATTRIBUTES;;"
  }
  parameter {
    name: ""
    type: "**V;;"
  }
}
function {
  name: "CreateSemaphoreA"
  return_type: "*V;"
  parameter {
    name: ""
    type: "*R_SECURITY_ATTRIBUTES;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "CreateSemaphoreW"
  return_type: "*V;"
  parameter {
    name: ""
    type: "*R_SECURITY_ATTRIBUTES;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
}
function {
  name: "CreateSemaphoreExA"
  return_type: "*V;"
  parameter {
    name: ""
    type: "*R_SECURITY_ATTRIBUTES;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "CreateSemaphoreExW"
  return_type: "*V;"
  parameter {
    name: ""
    type: "*R_SECURITY_ATTRIBUTES;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "CreateTapePartition"
  return_type: "UI"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "CreateThread"
  return_type: "*V;"
  parameter {
    name: ""
    type: "*R_SECURITY_ATTRIBUTES;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*(*V;)UI;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "CreateTimerQueue"
  return_type: "*V;"
}
function {
  name: "CreateTimerQueueTimer"
  return_type: "I"
  parameter {
    name: ""
    type: "**V;;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*(*V;UB)V;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "CreateWaitableTimerA"
  return_type: "*V;"
  parameter {
    name: ""
    type: "*R_SECURITY_ATTRIBUTES;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "CreateWaitableTimerW"
  return_type: "*V;"
  parameter {
    name: ""
    type: "*R_SECURITY_ATTRIBUTES;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
}
function {
  name: "CreateWaitableTimerExA"
  return_type: "*V;"
  parameter {
    name: ""
    type: "*R_SECURITY_ATTRIBUTES;;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "CreateWaitableTimerExW"
  return_type: "*V;"
  parameter {
    name: ""
    type: "*R_SECURITY_ATTRIBUTES;;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "CreateWellKnownSid"
  return_type: "I"
  parameter {
    name: ""
    type: "X(Enum.WELL_KNOWN_SID_TYPE)"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "DeactivateActCtx"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "DebugActiveProcess"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "DebugActiveProcessStop"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "DebugBreak"
  return_type: "V"
}
function {
  name: "DebugBreakProcess"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "DebugSetProcessKillOnExit"
  return_type: "I"
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "DecodePointer"
  return_type: "*V;"
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "DecryptFileA"
  return_type: "I"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "DecryptFileW"
  return_type: "I"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "DefineDosDeviceA"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "DefineDosDeviceW"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
}
function {
  name: "DeleteAce"
  return_type: "I"
  parameter {
    name: ""
    type: "*R_ACL;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "DeleteAtom"
  return_type: "US"
  parameter {
    name: ""
    type: "US"
  }
}
function {
  name: "DeleteCriticalSection"
  return_type: "V"
  parameter {
    name: "lpCrit"
    type: "*R_RTL_CRITICAL_SECTION;;"
  }
}
function {
  name: "DeleteFiber"
  return_type: "V"
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "DeleteFileA"
  return_type: "I"
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "DeleteFileW"
  return_type: "I"
  parameter {
    name: ""
    type: "*cUS;"
  }
}
function {
  name: "DeleteTimerQueue"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "DeleteTimerQueueEx"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "DeleteTimerQueueTimer"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "DeleteVolumeMountPointA"
  return_type: "I"
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "DeleteVolumeMountPointW"
  return_type: "I"
  parameter {
    name: ""
    type: "*cUS;"
  }
}
function {
  name: "DeregisterEventSource"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "DestroyPrivateObjectSecurity"
  return_type: "I"
  parameter {
    name: ""
    type: "**V;;"
  }
}
function {
  name: "DeviceIoControl"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*R_OVERLAPPED;;"
  }
}
function {
  name: "DisableThreadLibraryCalls"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHINSTANCE__;;"
  }
}
function {
  name: "DisconnectNamedPipe"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "DnsHostnameToComputerNameA"
  return_type: "I"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "DnsHostnameToComputerNameW"
  return_type: "I"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "DosDateTimeToFileTime"
  return_type: "I"
  parameter {
    name: ""
    type: "US"
  }
  parameter {
    name: ""
    type: "US"
  }
  parameter {
    name: ""
    type: "*R_FILETIME;;"
  }
}
function {
  name: "DuplicateHandle"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "**V;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "DuplicateToken"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "X(Enum.enum _SECURITY_IMPERSONATION_LEVEL)"
  }
  parameter {
    name: ""
    type: "**V;;"
  }
}
function {
  name: "DuplicateTokenEx"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*R_SECURITY_ATTRIBUTES;;"
  }
  parameter {
    name: ""
    type: "X(Enum.enum _SECURITY_IMPERSONATION_LEVEL)"
  }
  parameter {
    name: ""
    type: "X(Enum.enum tagTOKEN_TYPE)"
  }
  parameter {
    name: ""
    type: "**V;;"
  }
}
function {
  name: "EscapeCommFunction"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "EncodePointer"
  return_type: "*V;"
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "EncryptFileA"
  return_type: "I"
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "EncryptFileW"
  return_type: "I"
  parameter {
    name: ""
    type: "*cUS;"
  }
}
function {
  name: "EndUpdateResourceA"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "EndUpdateResourceW"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "EnterCriticalSection"
  return_type: "V"
  parameter {
    name: "lpCrit"
    type: "*R_RTL_CRITICAL_SECTION;;"
  }
}
function {
  name: "EnumResourceLanguagesA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHINSTANCE__;;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*(*RHINSTANCE__;;*cC;*cC;USI)I;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "EnumResourceLanguagesW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHINSTANCE__;;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*(*RHINSTANCE__;;*cUS;*cUS;USI)I;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "EnumResourceNamesA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHINSTANCE__;;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*(*RHINSTANCE__;;*cC;*C;I)I;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "EnumResourceNamesW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHINSTANCE__;;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*(*RHINSTANCE__;;*cUS;*US;I)I;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "EnumResourceTypesA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHINSTANCE__;;"
  }
  parameter {
    name: ""
    type: "*(*RHINSTANCE__;;*C;I)I;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "EnumResourceTypesW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHINSTANCE__;;"
  }
  parameter {
    name: ""
    type: "*(*RHINSTANCE__;;*US;I)I;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "EqualSid"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "EqualPrefixSid"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "EraseTape"
  return_type: "UI"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "ExitProcess"
  return_type: "V"
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "ExitThread"
  return_type: "V"
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "ExpandEnvironmentStringsA"
  return_type: "UI"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "ExpandEnvironmentStringsW"
  return_type: "UI"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "FatalAppExitA"
  return_type: "V"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "FatalAppExitW"
  return_type: "V"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
}
function {
  name: "FatalExit"
  return_type: "V"
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "FileEncryptionStatusA"
  return_type: "I"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "FileEncryptionStatusW"
  return_type: "I"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "FileTimeToDosDateTime"
  return_type: "I"
  parameter {
    name: ""
    type: "*cR_FILETIME;;"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "*US;"
  }
}
function {
  name: "FileTimeToLocalFileTime"
  return_type: "I"
  parameter {
    name: ""
    type: "*cR_FILETIME;;"
  }
  parameter {
    name: ""
    type: "*R_FILETIME;;"
  }
}
function {
  name: "FileTimeToSystemTime"
  return_type: "I"
  parameter {
    name: ""
    type: "*cR_FILETIME;;"
  }
  parameter {
    name: ""
    type: "*R_SYSTEMTIME;;"
  }
}
function {
  name: "FindActCtxSectionStringA"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cR_GUID;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*RtagACTCTX_SECTION_KEYED_DATA;;"
  }
}
function {
  name: "FindActCtxSectionStringW"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cR_GUID;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*RtagACTCTX_SECTION_KEYED_DATA;;"
  }
}
function {
  name: "FindActCtxSectionGuid"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cR_GUID;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cR_GUID;;"
  }
  parameter {
    name: ""
    type: "*RtagACTCTX_SECTION_KEYED_DATA;;"
  }
}
function {
  name: "FindAtomA"
  return_type: "US"
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "FindAtomW"
  return_type: "US"
  parameter {
    name: ""
    type: "*cUS;"
  }
}
function {
  name: "FindClose"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "FindFirstChangeNotificationA"
  return_type: "*V;"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "FindFirstChangeNotificationW"
  return_type: "*V;"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "FindFirstFileA"
  return_type: "*V;"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*R_WIN32_FIND_DATAA;;"
  }
}
function {
  name: "FindFirstFileW"
  return_type: "*V;"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*R_WIN32_FIND_DATAW;;"
  }
}
function {
  name: "FindFirstFileExA"
  return_type: "*V;"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "X(Enum.enum _FINDEX_INFO_LEVELS)"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "X(Enum.enum _FINDEX_SEARCH_OPS)"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "FindFirstFileExW"
  return_type: "*V;"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "X(Enum.enum _FINDEX_INFO_LEVELS)"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "X(Enum.enum _FINDEX_SEARCH_OPS)"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "FindFirstFreeAce"
  return_type: "I"
  parameter {
    name: ""
    type: "*R_ACL;;"
  }
  parameter {
    name: ""
    type: "**V;;"
  }
}
function {
  name: "FindNextChangeNotification"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "FindNextFileA"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*R_WIN32_FIND_DATAA;;"
  }
}
function {
  name: "FindNextFileW"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*R_WIN32_FIND_DATAW;;"
  }
}
function {
  name: "FindCloseChangeNotification"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "FindResourceA"
  return_type: "*RHRSRC__;;"
  parameter {
    name: ""
    type: "*RHINSTANCE__;;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "FindResourceW"
  return_type: "*RHRSRC__;;"
  parameter {
    name: ""
    type: "*RHINSTANCE__;;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
}
function {
  name: "FindResourceExA"
  return_type: "*RHRSRC__;;"
  parameter {
    name: ""
    type: "*RHINSTANCE__;;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "US"
  }
}
function {
  name: "FindResourceExW"
  return_type: "*RHRSRC__;;"
  parameter {
    name: ""
    type: "*RHINSTANCE__;;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "US"
  }
}
function {
  name: "FindFirstVolumeA"
  return_type: "*V;"
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "FindFirstVolumeW"
  return_type: "*V;"
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "FindFirstVolumeMountPointA"
  return_type: "*V;"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "FindFirstVolumeMountPointW"
  return_type: "*V;"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "FindNextVolumeA"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "FindNextVolumeW"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "FindNextVolumeMountPointA"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "FindNextVolumeMountPointW"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "FindVolumeClose"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "FindVolumeMountPointClose"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "FlsAlloc"
  return_type: "UI"
  parameter {
    name: ""
    type: "*(*V;)V;"
  }
}
function {
  name: "FlsFree"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "FlsGetValue"
  return_type: "*V;"
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "FlsSetValue"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "FlushFileBuffers"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "FlushInstructionCache"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*cV;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "FlushViewOfFile"
  return_type: "I"
  parameter {
    name: ""
    type: "*cV;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "FormatMessageA"
  return_type: "UI"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cV;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*I;"
  }
}
function {
  name: "FormatMessageW"
  return_type: "UI"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cV;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*I;"
  }
}
function {
  name: "FreeEnvironmentStringsA"
  return_type: "I"
  parameter {
    name: ""
    type: "*C;"
  }
}
function {
  name: "FreeEnvironmentStringsW"
  return_type: "I"
  parameter {
    name: ""
    type: "*US;"
  }
}
function {
  name: "FreeLibrary"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHINSTANCE__;;"
  }
}
function {
  name: "FreeLibraryAndExitThread"
  return_type: "V"
  parameter {
    name: ""
    type: "*RHINSTANCE__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "FreeResource"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "FreeSid"
  return_type: "*V;"
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "GetAce"
  return_type: "I"
  parameter {
    name: ""
    type: "*R_ACL;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "**V;;"
  }
}
function {
  name: "GetAclInformation"
  return_type: "I"
  parameter {
    name: ""
    type: "*R_ACL;;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "X(Enum.enum _ACL_INFORMATION_CLASS)"
  }
}
function {
  name: "GetAtomNameA"
  return_type: "UI"
  parameter {
    name: ""
    type: "US"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "GetAtomNameW"
  return_type: "UI"
  parameter {
    name: ""
    type: "US"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "GetBinaryTypeA"
  return_type: "I"
  parameter {
    name: "lpApplicationName"
    type: "*cC;"
  }
  parameter {
    name: "lpBinaryType"
    type: "*UI;"
  }
}
function {
  name: "GetBinaryTypeW"
  return_type: "I"
  parameter {
    name: "lpApplicationName"
    type: "*cUS;"
  }
  parameter {
    name: "lpBinaryType"
    type: "*UI;"
  }
}
function {
  name: "GetCurrentActCtx"
  return_type: "I"
  parameter {
    name: ""
    type: "**V;;"
  }
}
function {
  name: "GetCommConfig"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*RtagCOMMCONFIG;;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "GetCommMask"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "GetCommModemStatus"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "GetCommProperties"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*RtagCOMMPROP;;"
  }
}
function {
  name: "GetCommState"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*RtagDCB;;"
  }
}
function {
  name: "GetCommTimeouts"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*RtagCOMMTIMEOUTS;;"
  }
}
function {
  name: "GetCommandLineA"
  return_type: "*C;"
}
function {
  name: "GetCommandLineW"
  return_type: "*US;"
}
function {
  name: "GetCompressedFileSizeA"
  return_type: "UI"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "GetCompressedFileSizeW"
  return_type: "UI"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "GetComputerNameA"
  return_type: "I"
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "GetComputerNameW"
  return_type: "I"
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "GetComputerNameExA"
  return_type: "I"
  parameter {
    name: ""
    type: "X(Enum.enum _COMPUTER_NAME_FORMAT)"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "GetComputerNameExW"
  return_type: "I"
  parameter {
    name: ""
    type: "X(Enum.enum _COMPUTER_NAME_FORMAT)"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "GetCurrentDirectoryA"
  return_type: "UI"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*C;"
  }
}
function {
  name: "GetCurrentDirectoryW"
  return_type: "UI"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*US;"
  }
}
function {
  name: "GetCurrentHwProfileA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RtagHW_PROFILE_INFOA;;"
  }
}
function {
  name: "GetCurrentHwProfileW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RtagHW_PROFILE_INFOW;;"
  }
}
function {
  name: "GetCurrentProcess"
  return_type: "*V;"
}
function {
  name: "GetCurrentProcessorNumber"
  return_type: "UI"
}
function {
  name: "GetCurrentProcessorNumberEx"
  return_type: "V"
  parameter {
    name: ""
    type: "*R_PROCESSOR_NUMBER;;"
  }
}
function {
  name: "GetCurrentThread"
  return_type: "*V;"
}
function {
  name: "GetDefaultCommConfigA"
  return_type: "I"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*RtagCOMMCONFIG;;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "GetDefaultCommConfigW"
  return_type: "I"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*RtagCOMMCONFIG;;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "GetDevicePowerState"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*I;"
  }
}
function {
  name: "GetDiskFreeSpaceA"
  return_type: "I"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "GetDiskFreeSpaceW"
  return_type: "I"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "GetDiskFreeSpaceExA"
  return_type: "I"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*Runion _ULARGE_INTEGER;;"
  }
  parameter {
    name: ""
    type: "*Runion _ULARGE_INTEGER;;"
  }
  parameter {
    name: ""
    type: "*Runion _ULARGE_INTEGER;;"
  }
}
function {
  name: "GetDiskFreeSpaceExW"
  return_type: "I"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*Runion _ULARGE_INTEGER;;"
  }
  parameter {
    name: ""
    type: "*Runion _ULARGE_INTEGER;;"
  }
  parameter {
    name: ""
    type: "*Runion _ULARGE_INTEGER;;"
  }
}
function {
  name: "GetDllDirectoryA"
  return_type: "UI"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*C;"
  }
}
function {
  name: "GetDllDirectoryW"
  return_type: "UI"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*US;"
  }
}
function {
  name: "GetDriveTypeA"
  return_type: "UI"
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "GetDriveTypeW"
  return_type: "UI"
  parameter {
    name: ""
    type: "*cUS;"
  }
}
function {
  name: "GetDynamicTimeZoneInformation"
  return_type: "UI"
  parameter {
    name: ""
    type: "*R_TIME_DYNAMIC_ZONE_INFORMATION;;"
  }
}
function {
  name: "GetEnvironmentStringsA"
  return_type: "*C;"
}
function {
  name: "GetEnvironmentStringsW"
  return_type: "*US;"
}
function {
  name: "GetEnvironmentVariableA"
  return_type: "UI"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "GetEnvironmentVariableW"
  return_type: "UI"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "GetErrorMode"
  return_type: "UI"
}
function {
  name: "GetEventLogInformation"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "GetExitCodeProcess"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "GetExitCodeThread"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "GetFileAttributesA"
  return_type: "UI"
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "GetFileAttributesW"
  return_type: "UI"
  parameter {
    name: ""
    type: "*cUS;"
  }
}
function {
  name: "GetFileAttributesExA"
  return_type: "I"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "X(Enum.enum _GET_FILEEX_INFO_LEVELS)"
  }
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "GetFileAttributesExW"
  return_type: "I"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "X(Enum.enum _GET_FILEEX_INFO_LEVELS)"
  }
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "GetFileInformationByHandle"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*R_BY_HANDLE_FILE_INFORMATION;;"
  }
}
function {
  name: "GetFileInformationByHandleEx"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "X(Enum.enum _FILE_INFO_BY_HANDLE_CLASS)"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "GetFileSecurityA"
  return_type: "I"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "GetFileSecurityW"
  return_type: "I"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "GetFileSize"
  return_type: "UI"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "GetFileSizeEx"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*Runion _LARGE_INTEGER;;"
  }
}
function {
  name: "GetFileTime"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*R_FILETIME;;"
  }
  parameter {
    name: ""
    type: "*R_FILETIME;;"
  }
  parameter {
    name: ""
    type: "*R_FILETIME;;"
  }
}
function {
  name: "GetFileType"
  return_type: "UI"
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "GetFullPathNameA"
  return_type: "UI"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "**C;;"
  }
}
function {
  name: "GetFullPathNameW"
  return_type: "UI"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "**US;;"
  }
}
function {
  name: "GetHandleInformation"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "GetKernelObjectSecurity"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "GetLengthSid"
  return_type: "UI"
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "GetLocalTime"
  return_type: "V"
  parameter {
    name: ""
    type: "*R_SYSTEMTIME;;"
  }
}
function {
  name: "GetLogicalDrives"
  return_type: "UI"
}
function {
  name: "GetLogicalDriveStringsA"
  return_type: "UI"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*C;"
  }
}
function {
  name: "GetLogicalDriveStringsW"
  return_type: "UI"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*US;"
  }
}
function {
  name: "GetLongPathNameA"
  return_type: "UI"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "GetLongPathNameW"
  return_type: "UI"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "GetMailslotInfo"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "GetModuleFileNameA"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHINSTANCE__;;"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "GetModuleFileNameW"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHINSTANCE__;;"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "GetModuleHandleA"
  return_type: "*RHINSTANCE__;;"
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "GetModuleHandleW"
  return_type: "*RHINSTANCE__;;"
  parameter {
    name: ""
    type: "*cUS;"
  }
}
function {
  name: "GetModuleHandleExA"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "**RHINSTANCE__;;;"
  }
}
function {
  name: "GetModuleHandleExW"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "**RHINSTANCE__;;;"
  }
}
function {
  name: "GetNamedPipeHandleStateA"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "GetNamedPipeHandleStateW"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "GetNamedPipeInfo"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "GetNativeSystemInfo"
  return_type: "V"
  parameter {
    name: ""
    type: "*R_SYSTEM_INFO;;"
  }
}
function {
  name: "GetNumberOfEventLogRecords"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "GetOldestEventLogRecord"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "GetOverlappedResult"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*R_OVERLAPPED;;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "GetPriorityClass"
  return_type: "UI"
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "GetPrivateObjectSecurity"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "GetPrivateProfileIntA"
  return_type: "UI"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "GetPrivateProfileIntW"
  return_type: "UI"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
}
function {
  name: "GetPrivateProfileSectionA"
  return_type: "I"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "GetPrivateProfileSectionW"
  return_type: "I"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
}
function {
  name: "GetPrivateProfileSectionNamesA"
  return_type: "UI"
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "GetPrivateProfileSectionNamesW"
  return_type: "UI"
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
}
function {
  name: "GetPrivateProfileStringA"
  return_type: "I"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "GetPrivateProfileStringW"
  return_type: "I"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
}
function {
  name: "GetPrivateProfileStructA"
  return_type: "I"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "GetPrivateProfileStructW"
  return_type: "I"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
}
function {
  name: "GetProcAddress"
  return_type: "*(.)I;"
  parameter {
    name: ""
    type: "*RHINSTANCE__;;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "GetProcessAffinityMask"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "GetLogicalProcessorInformation"
  return_type: "I"
  parameter {
    name: ""
    type: "*R_SYSTEM_LOGICAL_PROCESSOR_INFORMATION;;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "GetLogicalProcessorInformationEx"
  return_type: "I"
  parameter {
    name: ""
    type: "X(Enum.enum _LOGICAL_PROCESSOR_RELATIONSHIP)"
  }
  parameter {
    name: ""
    type: "*R_SYSTEM_LOGICAL_PROCESSOR_INFORMATION_EX;;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "GetProcessHeaps"
  return_type: "UI"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "**V;;"
  }
}
function {
  name: "GetProcessId"
  return_type: "UI"
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "GetProcessIoCounters"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*R_IO_COUNTERS;;"
  }
}
function {
  name: "GetProcessPriorityBoost"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*I;"
  }
}
function {
  name: "GetProcessShutdownParameters"
  return_type: "I"
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "GetProcessTimes"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*R_FILETIME;;"
  }
  parameter {
    name: ""
    type: "*R_FILETIME;;"
  }
  parameter {
    name: ""
    type: "*R_FILETIME;;"
  }
  parameter {
    name: ""
    type: "*R_FILETIME;;"
  }
}
function {
  name: "GetProcessVersion"
  return_type: "UI"
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "GetProcessWorkingSetSize"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "GetProductInfo"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "GetProfileIntA"
  return_type: "UI"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "GetProfileIntW"
  return_type: "UI"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "GetProfileSectionA"
  return_type: "I"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "GetProfileSectionW"
  return_type: "I"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "GetProfileStringA"
  return_type: "I"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "GetProfileStringW"
  return_type: "I"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "GetQueuedCompletionStatus"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "**R_OVERLAPPED;;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "GetSecurityDescriptorControl"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "GetSecurityDescriptorDacl"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*I;"
  }
  parameter {
    name: ""
    type: "**R_ACL;;;"
  }
  parameter {
    name: ""
    type: "*I;"
  }
}
function {
  name: "GetSecurityDescriptorGroup"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "**V;;"
  }
  parameter {
    name: ""
    type: "*I;"
  }
}
function {
  name: "GetSecurityDescriptorLength"
  return_type: "UI"
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "GetSecurityDescriptorOwner"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "**V;;"
  }
  parameter {
    name: ""
    type: "*I;"
  }
}
function {
  name: "GetSecurityDescriptorSacl"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*I;"
  }
  parameter {
    name: ""
    type: "**R_ACL;;;"
  }
  parameter {
    name: ""
    type: "*I;"
  }
}
function {
  name: "GetSidIdentifierAuthority"
  return_type: "*RSID_IDENTIFIER_AUTHORITY;;"
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "GetSidLengthRequired"
  return_type: "UI"
  parameter {
    name: ""
    type: "UB"
  }
}
function {
  name: "GetSidSubAuthority"
  return_type: "*UI;"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "GetSidSubAuthorityCount"
  return_type: "*UB;"
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "GetShortPathNameA"
  return_type: "UI"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "GetShortPathNameW"
  return_type: "UI"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "GetStartupInfoA"
  return_type: "V"
  parameter {
    name: ""
    type: "*R_STARTUPINFOA;;"
  }
}
function {
  name: "GetStartupInfoW"
  return_type: "V"
  parameter {
    name: ""
    type: "*R_STARTUPINFOW;;"
  }
}
function {
  name: "GetStdHandle"
  return_type: "*V;"
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "GetSystemDirectoryA"
  return_type: "UI"
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "GetSystemDirectoryW"
  return_type: "UI"
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "GetSystemInfo"
  return_type: "V"
  parameter {
    name: ""
    type: "*R_SYSTEM_INFO;;"
  }
}
function {
  name: "GetSystemPowerStatus"
  return_type: "I"
  parameter {
    name: ""
    type: "*R_SYSTEM_POWER_STATUS;;"
  }
}
function {
  name: "GetSystemRegistryQuota"
  return_type: "I"
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "GetSystemTime"
  return_type: "V"
  parameter {
    name: ""
    type: "*R_SYSTEMTIME;;"
  }
}
function {
  name: "GetSystemTimeAdjustment"
  return_type: "I"
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*I;"
  }
}
function {
  name: "GetSystemTimeAsFileTime"
  return_type: "V"
  parameter {
    name: ""
    type: "*R_FILETIME;;"
  }
}
function {
  name: "GetSystemWindowsDirectoryA"
  return_type: "UI"
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "GetSystemWindowsDirectoryW"
  return_type: "UI"
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "GetSystemWow64DirectoryA"
  return_type: "UI"
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "GetSystemWow64DirectoryW"
  return_type: "UI"
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "GetTapeParameters"
  return_type: "UI"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "GetTapePosition"
  return_type: "UI"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "GetTapeStatus"
  return_type: "UI"
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "GetTempFileNameA"
  return_type: "UI"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*C;"
  }
}
function {
  name: "GetTempFileNameW"
  return_type: "UI"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*US;"
  }
}
function {
  name: "GetTempPathA"
  return_type: "UI"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*C;"
  }
}
function {
  name: "GetTempPathW"
  return_type: "UI"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*US;"
  }
}
function {
  name: "GetThreadId"
  return_type: "UI"
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "GetThreadIOPendingFlag"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*I;"
  }
}
function {
  name: "GetTickCount"
  return_type: "UI"
}
function {
  name: "GetTickCount64"
  return_type: "UI"
}
function {
  name: "GetTimeZoneInformation"
  return_type: "UI"
  parameter {
    name: ""
    type: "*R_TIME_ZONE_INFORMATION;;"
  }
}
function {
  name: "GetThreadContext"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*R_CONTEXT;;"
  }
}
function {
  name: "GetThreadErrorMode"
  return_type: "UI"
}
function {
  name: "GetThreadPriority"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "GetThreadPriorityBoost"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*I;"
  }
}
function {
  name: "GetThreadSelectorEntry"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*R_LDT_ENTRY;;"
  }
}
function {
  name: "GetThreadTimes"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*R_FILETIME;;"
  }
  parameter {
    name: ""
    type: "*R_FILETIME;;"
  }
  parameter {
    name: ""
    type: "*R_FILETIME;;"
  }
  parameter {
    name: ""
    type: "*R_FILETIME;;"
  }
}
function {
  name: "GetTokenInformation"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "X(Enum.enum _TOKEN_INFORMATION_CLASS)"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "GetUserNameA"
  return_type: "I"
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "GetUserNameW"
  return_type: "I"
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "GetVersion"
  return_type: "UI"
}
function {
  name: "GetVersionExA"
  return_type: "I"
  parameter {
    name: ""
    type: "*ROSVERSIONINFOA;;"
  }
}
function {
  name: "GetVersionExW"
  return_type: "I"
  parameter {
    name: ""
    type: "*ROSVERSIONINFOW;;"
  }
}
function {
  name: "GetVolumeInformationA"
  return_type: "I"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "GetVolumeInformationW"
  return_type: "I"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "GetVolumeNameForVolumeMountPointA"
  return_type: "I"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "GetVolumeNameForVolumeMountPointW"
  return_type: "I"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "GetVolumePathNameA"
  return_type: "I"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "GetVolumePathNameW"
  return_type: "I"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "GetVolumePathNamesForVolumeNameA"
  return_type: "I"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "GetVolumePathNamesForVolumeNameW"
  return_type: "I"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "GetWindowsDirectoryA"
  return_type: "UI"
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "GetWindowsDirectoryW"
  return_type: "UI"
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "GetWriteWatch"
  return_type: "UI"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "**V;;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "GlobalAddAtomA"
  return_type: "US"
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "GlobalAddAtomW"
  return_type: "US"
  parameter {
    name: ""
    type: "*cUS;"
  }
}
function {
  name: "GlobalAlloc"
  return_type: "*V;"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "GlobalCompact"
  return_type: "UI"
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "GlobalDeleteAtom"
  return_type: "US"
  parameter {
    name: ""
    type: "US"
  }
}
function {
  name: "GlobalFindAtomA"
  return_type: "US"
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "GlobalFindAtomW"
  return_type: "US"
  parameter {
    name: ""
    type: "*cUS;"
  }
}
function {
  name: "GlobalFix"
  return_type: "V"
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "GlobalFlags"
  return_type: "UI"
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "GlobalFree"
  return_type: "*V;"
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "GlobalGetAtomNameA"
  return_type: "UI"
  parameter {
    name: ""
    type: "US"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "GlobalGetAtomNameW"
  return_type: "UI"
  parameter {
    name: ""
    type: "US"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "GlobalHandle"
  return_type: "*V;"
  parameter {
    name: ""
    type: "*cV;"
  }
}
function {
  name: "GlobalLock"
  return_type: "*V;"
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "GlobalMemoryStatus"
  return_type: "V"
  parameter {
    name: ""
    type: "*RtagMEMORYSTATUS;;"
  }
}
function {
  name: "GlobalMemoryStatusEx"
  return_type: "I"
  parameter {
    name: ""
    type: "*RtagMEMORYSTATUSEX;;"
  }
}
function {
  name: "GlobalReAlloc"
  return_type: "*V;"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "GlobalSize"
  return_type: "UI"
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "GlobalUnfix"
  return_type: "V"
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "GlobalUnlock"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "GlobalUnWire"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "GlobalWire"
  return_type: "*V;"
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "HeapAlloc"
  return_type: "*V;"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "HeapCompact"
  return_type: "UI"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "HeapCreate"
  return_type: "*V;"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "HeapDestroy"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "HeapFree"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "HeapLock"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "HeapReAlloc"
  return_type: "*V;"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "HeapQueryInformation"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "X(Enum.enum _HEAP_INFORMATION_CLASS)"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "HeapSetInformation"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "X(Enum.enum _HEAP_INFORMATION_CLASS)"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "HeapSize"
  return_type: "UI"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cV;"
  }
}
function {
  name: "HeapUnlock"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "HeapValidate"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cV;"
  }
}
function {
  name: "HeapWalk"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*R_PROCESS_HEAP_ENTRY;;"
  }
}
function {
  name: "InitAtomTable"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "InitializeAcl"
  return_type: "I"
  parameter {
    name: ""
    type: "*R_ACL;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "InitializeConditionVariable"
  return_type: "V"
  parameter {
    name: ""
    type: "*R_RTL_CONDITION_VARIABLE;;"
  }
}
function {
  name: "InitializeCriticalSection"
  return_type: "V"
  parameter {
    name: "lpCrit"
    type: "*R_RTL_CRITICAL_SECTION;;"
  }
}
function {
  name: "InitializeCriticalSectionAndSpinCount"
  return_type: "I"
  parameter {
    name: ""
    type: "*R_RTL_CRITICAL_SECTION;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "InitializeCriticalSectionEx"
  return_type: "I"
  parameter {
    name: ""
    type: "*R_RTL_CRITICAL_SECTION;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "InitializeSecurityDescriptor"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "InitializeSid"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*RSID_IDENTIFIER_AUTHORITY;;"
  }
  parameter {
    name: ""
    type: "UB"
  }
}
function {
  name: "InitializeSListHead"
  return_type: "V"
  parameter {
    name: ""
    type: "*Runion _SLIST_HEADER;;"
  }
}
function {
  name: "InitializeSRWLock"
  return_type: "V"
  parameter {
    name: ""
    type: "*R_RTL_SRWLOCK;;"
  }
}
function {
  name: "InitOnceBeginInitialize"
  return_type: "I"
  parameter {
    name: ""
    type: "*Runion _RTL_RUN_ONCE;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*I;"
  }
  parameter {
    name: ""
    type: "**V;;"
  }
}
function {
  name: "InitOnceComplete"
  return_type: "I"
  parameter {
    name: ""
    type: "*Runion _RTL_RUN_ONCE;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "InitOnceExecuteOnce"
  return_type: "I"
  parameter {
    name: ""
    type: "*Runion _RTL_RUN_ONCE;;"
  }
  parameter {
    name: ""
    type: "*(*Runion _RTL_RUN_ONCE;;*V;**V;;)I;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "**V;;"
  }
}
function {
  name: "InitOnceInitialize"
  return_type: "V"
  parameter {
    name: ""
    type: "*Runion _RTL_RUN_ONCE;;"
  }
}
function {
  name: "InterlockedFlushSList"
  return_type: "*R_SLIST_ENTRY;;"
  parameter {
    name: ""
    type: "*Runion _SLIST_HEADER;;"
  }
}
function {
  name: "InterlockedPopEntrySList"
  return_type: "*R_SLIST_ENTRY;;"
  parameter {
    name: ""
    type: "*Runion _SLIST_HEADER;;"
  }
}
function {
  name: "InterlockedPushEntrySList"
  return_type: "*R_SLIST_ENTRY;;"
  parameter {
    name: ""
    type: "*Runion _SLIST_HEADER;;"
  }
  parameter {
    name: ""
    type: "*R_SLIST_ENTRY;;"
  }
}
function {
  name: "IsBadCodePtr"
  return_type: "I"
  parameter {
    name: ""
    type: "*(.)I;"
  }
}
function {
  name: "IsBadHugeReadPtr"
  return_type: "I"
  parameter {
    name: ""
    type: "*cV;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "IsBadHugeWritePtr"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "IsBadReadPtr"
  return_type: "I"
  parameter {
    name: ""
    type: "*cV;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "IsBadStringPtrA"
  return_type: "I"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "IsBadStringPtrW"
  return_type: "I"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "IsBadWritePtr"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "IsDebuggerPresent"
  return_type: "I"
}
function {
  name: "IsSystemResumeAutomatic"
  return_type: "I"
}
function {
  name: "IsTextUnicode"
  return_type: "I"
  parameter {
    name: ""
    type: "*cV;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*I;"
  }
}
function {
  name: "IsTokenRestricted"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "IsValidAcl"
  return_type: "I"
  parameter {
    name: ""
    type: "*R_ACL;;"
  }
}
function {
  name: "IsValidSecurityDescriptor"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "IsValidSid"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "IsWellKnownSid"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "X(Enum.WELL_KNOWN_SID_TYPE)"
  }
}
function {
  name: "IsWow64Process"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*I;"
  }
}
function {
  name: "ImpersonateLoggedOnUser"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "ImpersonateNamedPipeClient"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "ImpersonateSelf"
  return_type: "I"
  parameter {
    name: ""
    type: "X(Enum.enum _SECURITY_IMPERSONATION_LEVEL)"
  }
}
function {
  name: "IsProcessInJob"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*I;"
  }
}
function {
  name: "IsProcessorFeaturePresent"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "LeaveCriticalSection"
  return_type: "V"
  parameter {
    name: "lpCrit"
    type: "*R_RTL_CRITICAL_SECTION;;"
  }
}
function {
  name: "LoadLibraryA"
  return_type: "*RHINSTANCE__;;"
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "LoadLibraryW"
  return_type: "*RHINSTANCE__;;"
  parameter {
    name: ""
    type: "*cUS;"
  }
}
function {
  name: "LoadLibraryExA"
  return_type: "*RHINSTANCE__;;"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "LoadLibraryExW"
  return_type: "*RHINSTANCE__;;"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "LoadModule"
  return_type: "UI"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "LoadResource"
  return_type: "*V;"
  parameter {
    name: ""
    type: "*RHINSTANCE__;;"
  }
  parameter {
    name: ""
    type: "*RHRSRC__;;"
  }
}
function {
  name: "LocalAlloc"
  return_type: "*V;"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "LocalCompact"
  return_type: "UI"
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "LocalFlags"
  return_type: "UI"
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "LocalFree"
  return_type: "*V;"
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "LocalHandle"
  return_type: "*V;"
  parameter {
    name: ""
    type: "*cV;"
  }
}
function {
  name: "LocalLock"
  return_type: "*V;"
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "LocalReAlloc"
  return_type: "*V;"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "LocalShrink"
  return_type: "UI"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "LocalSize"
  return_type: "UI"
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "LocalUnlock"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "LockResource"
  return_type: "*V;"
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "LookupAccountNameA"
  return_type: "I"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*X(Enum.enum tagSID_NAME_USE);"
  }
}
function {
  name: "LookupAccountNameW"
  return_type: "I"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*X(Enum.enum tagSID_NAME_USE);"
  }
}
function {
  name: "LookupAccountSidA"
  return_type: "I"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*X(Enum.enum tagSID_NAME_USE);"
  }
}
function {
  name: "LookupAccountSidW"
  return_type: "I"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*X(Enum.enum tagSID_NAME_USE);"
  }
}
function {
  name: "LocalFileTimeToFileTime"
  return_type: "I"
  parameter {
    name: ""
    type: "*cR_FILETIME;;"
  }
  parameter {
    name: ""
    type: "*R_FILETIME;;"
  }
}
function {
  name: "LockFile"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "LockFileEx"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*R_OVERLAPPED;;"
  }
}
function {
  name: "LogonUserA"
  return_type: "I"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "**V;;"
  }
}
function {
  name: "LogonUserW"
  return_type: "I"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "**V;;"
  }
}
function {
  name: "LookupPrivilegeDisplayNameA"
  return_type: "I"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "LookupPrivilegeDisplayNameW"
  return_type: "I"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "LookupPrivilegeNameA"
  return_type: "I"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*R_LUID;;"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "LookupPrivilegeNameW"
  return_type: "I"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*R_LUID;;"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "LookupPrivilegeValueA"
  return_type: "I"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*R_LUID;;"
  }
}
function {
  name: "LookupPrivilegeValueW"
  return_type: "I"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*R_LUID;;"
  }
}
function {
  name: "MakeAbsoluteSD"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*R_ACL;;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*R_ACL;;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "MakeCriticalSectionGlobal"
  return_type: "V"
  parameter {
    name: "lpCrit"
    type: "*R_RTL_CRITICAL_SECTION;;"
  }
}
function {
  name: "MakeSelfRelativeSD"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "MapGenericMask"
  return_type: "V"
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*R_GENERIC_MAPPING;;"
  }
}
function {
  name: "MapHModuleSL"
  return_type: "*RHINSTANCE__;;"
  parameter {
    name: ""
    type: "US"
  }
}
function {
  name: "MapHModuleLS"
  return_type: "US"
  parameter {
    name: ""
    type: "*RHINSTANCE__;;"
  }
}
function {
  name: "MapViewOfFile"
  return_type: "*V;"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "MapViewOfFileEx"
  return_type: "*V;"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "MoveFileA"
  return_type: "I"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "MoveFileW"
  return_type: "I"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
}
function {
  name: "MoveFileExA"
  return_type: "I"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "MoveFileExW"
  return_type: "I"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "MoveFileWithProgressA"
  return_type: "I"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*(Runion _LARGE_INTEGER;Runion _LARGE_INTEGER;Runion _LARGE_INTEGER;Runion _LARGE_INTEGER;UIUI*V;*V;*V;)UI;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "MoveFileWithProgressW"
  return_type: "I"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*(Runion _LARGE_INTEGER;Runion _LARGE_INTEGER;Runion _LARGE_INTEGER;Runion _LARGE_INTEGER;UIUI*V;*V;*V;)UI;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "MulDiv"
  return_type: "I"
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "NeedCurrentDirectoryForExePathA"
  return_type: "I"
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "NeedCurrentDirectoryForExePathW"
  return_type: "I"
  parameter {
    name: ""
    type: "*cUS;"
  }
}
function {
  name: "NotifyChangeEventLog"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "ObjectCloseAuditAlarmA"
  return_type: "I"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "ObjectCloseAuditAlarmW"
  return_type: "I"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "ObjectDeleteAuditAlarmA"
  return_type: "I"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "ObjectDeleteAuditAlarmW"
  return_type: "I"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "ObjectOpenAuditAlarmA"
  return_type: "I"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*R_PRIVILEGE_SET;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*I;"
  }
}
function {
  name: "ObjectOpenAuditAlarmW"
  return_type: "I"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*R_PRIVILEGE_SET;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*I;"
  }
}
function {
  name: "ObjectPrivilegeAuditAlarmA"
  return_type: "I"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*R_PRIVILEGE_SET;;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "ObjectPrivilegeAuditAlarmW"
  return_type: "I"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*R_PRIVILEGE_SET;;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "OpenBackupEventLogA"
  return_type: "*V;"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "OpenBackupEventLogW"
  return_type: "*V;"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
}
function {
  name: "OpenEventA"
  return_type: "*V;"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "OpenEventW"
  return_type: "*V;"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
}
function {
  name: "OpenEventLogA"
  return_type: "*V;"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "OpenEventLogW"
  return_type: "*V;"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
}
function {
  name: "OpenFile"
  return_type: "I"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*R_OFSTRUCT;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "OpenFileMappingA"
  return_type: "*V;"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "OpenFileMappingW"
  return_type: "*V;"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
}
function {
  name: "OpenJobObjectA"
  return_type: "*V;"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "OpenJobObjectW"
  return_type: "*V;"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
}
function {
  name: "OpenMutexA"
  return_type: "*V;"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "OpenMutexW"
  return_type: "*V;"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
}
function {
  name: "OpenProcess"
  return_type: "*V;"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "OpenProcessToken"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "**V;;"
  }
}
function {
  name: "OpenSemaphoreA"
  return_type: "*V;"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "OpenSemaphoreW"
  return_type: "*V;"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
}
function {
  name: "OpenThread"
  return_type: "*V;"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "OpenThreadToken"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "**V;;"
  }
}
function {
  name: "OpenWaitableTimerA"
  return_type: "*V;"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "OpenWaitableTimerW"
  return_type: "*V;"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
}
function {
  name: "OutputDebugStringA"
  return_type: "V"
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "OutputDebugStringW"
  return_type: "V"
  parameter {
    name: ""
    type: "*cUS;"
  }
}
function {
  name: "PeekNamedPipe"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "PostQueuedCompletionStatus"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*R_OVERLAPPED;;"
  }
}
function {
  name: "PrepareTape"
  return_type: "UI"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "ProcessIdToSessionId"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "PrivilegeCheck"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*R_PRIVILEGE_SET;;"
  }
  parameter {
    name: ""
    type: "*I;"
  }
}
function {
  name: "PrivilegedServiceAuditAlarmA"
  return_type: "I"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*R_PRIVILEGE_SET;;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "PrivilegedServiceAuditAlarmW"
  return_type: "I"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*R_PRIVILEGE_SET;;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "PulseEvent"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "PurgeComm"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "QueryActCtxW"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "QueryDepthSList"
  return_type: "US"
  parameter {
    name: ""
    type: "*Runion _SLIST_HEADER;;"
  }
}
function {
  name: "QueryDosDeviceA"
  return_type: "UI"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "QueryDosDeviceW"
  return_type: "UI"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "QueryFullProcessImageNameA"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "QueryFullProcessImageNameW"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "QueryInformationJobObject"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "X(Enum.enum _JOBOBJECTINFOCLASS)"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "QueryMemoryResourceNotification"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*I;"
  }
}
function {
  name: "QueryPerformanceCounter"
  return_type: "I"
  parameter {
    name: ""
    type: "*Runion _LARGE_INTEGER;;"
  }
}
function {
  name: "QueryPerformanceFrequency"
  return_type: "I"
  parameter {
    name: ""
    type: "*Runion _LARGE_INTEGER;;"
  }
}
function {
  name: "QueueUserAPC"
  return_type: "UI"
  parameter {
    name: ""
    type: "*(UI)V;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "QueueUserWorkItem"
  return_type: "I"
  parameter {
    name: ""
    type: "*(*V;)UI;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "RaiseException"
  return_type: "V"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cUI;"
  }
}
function {
  name: "ReadEventLogA"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "ReadEventLogW"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "ReadDirectoryChangesW"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*R_OVERLAPPED;;"
  }
  parameter {
    name: ""
    type: "*(UIUI*R_OVERLAPPED;;)V;"
  }
}
function {
  name: "ReadFile"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*R_OVERLAPPED;;"
  }
}
function {
  name: "ReadFileEx"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*R_OVERLAPPED;;"
  }
  parameter {
    name: ""
    type: "*(UIUI*R_OVERLAPPED;;)V;"
  }
}
function {
  name: "ReadFileScatter"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*Runion _FILE_SEGMENT_ELEMENT;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*R_OVERLAPPED;;"
  }
}
function {
  name: "ReadProcessMemory"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*cV;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "RegisterEventSourceA"
  return_type: "*V;"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "RegisterEventSourceW"
  return_type: "*V;"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
}
function {
  name: "RegisterWaitForSingleObject"
  return_type: "I"
  parameter {
    name: ""
    type: "**V;;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*(*V;UB)V;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "RegisterWaitForSingleObjectEx"
  return_type: "*V;"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*(*V;UB)V;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "ReleaseActCtx"
  return_type: "V"
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "ReleaseMutex"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "ReleaseSemaphore"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*I;"
  }
}
function {
  name: "ReleaseSRWLockExclusive"
  return_type: "V"
  parameter {
    name: ""
    type: "*R_RTL_SRWLOCK;;"
  }
}
function {
  name: "ReleaseSRWLockShared"
  return_type: "V"
  parameter {
    name: ""
    type: "*R_RTL_SRWLOCK;;"
  }
}
function {
  name: "RemoveVectoredExceptionHandler"
  return_type: "UI"
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "ReplaceFileA"
  return_type: "I"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "ReplaceFileW"
  return_type: "I"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "RemoveDirectoryA"
  return_type: "I"
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "RemoveDirectoryW"
  return_type: "I"
  parameter {
    name: ""
    type: "*cUS;"
  }
}
function {
  name: "ReportEventA"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "US"
  }
  parameter {
    name: ""
    type: "US"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "US"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "**cC;;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "ReportEventW"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "US"
  }
  parameter {
    name: ""
    type: "US"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "US"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "**cUS;;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "RequestWakeupLatency"
  return_type: "I"
  parameter {
    name: "latency"
    type: "X(Enum.enum _LATENCY_TIME)"
  }
}
function {
  name: "ResetEvent"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "ResetWriteWatch"
  return_type: "UI"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "ResumeThread"
  return_type: "UI"
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "RevertToSelf"
  return_type: "I"
}
function {
  name: "SearchPathA"
  return_type: "UI"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "**C;;"
  }
}
function {
  name: "SearchPathW"
  return_type: "UI"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "**US;;"
  }
}
function {
  name: "SetAclInformation"
  return_type: "I"
  parameter {
    name: ""
    type: "*R_ACL;;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "X(Enum.enum _ACL_INFORMATION_CLASS)"
  }
}
function {
  name: "SetCommConfig"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*RtagCOMMCONFIG;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "SetCommBreak"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "SetCommMask"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "SetCommState"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*RtagDCB;;"
  }
}
function {
  name: "SetCommTimeouts"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*RtagCOMMTIMEOUTS;;"
  }
}
function {
  name: "SetComputerNameA"
  return_type: "I"
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "SetComputerNameW"
  return_type: "I"
  parameter {
    name: ""
    type: "*cUS;"
  }
}
function {
  name: "SetComputerNameExA"
  return_type: "I"
  parameter {
    name: ""
    type: "X(Enum.enum _COMPUTER_NAME_FORMAT)"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "SetComputerNameExW"
  return_type: "I"
  parameter {
    name: ""
    type: "X(Enum.enum _COMPUTER_NAME_FORMAT)"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
}
function {
  name: "SetCriticalSectionSpinCount"
  return_type: "UI"
  parameter {
    name: ""
    type: "*R_RTL_CRITICAL_SECTION;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "SetCurrentDirectoryA"
  return_type: "I"
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "SetCurrentDirectoryW"
  return_type: "I"
  parameter {
    name: ""
    type: "*cUS;"
  }
}
function {
  name: "SetDefaultCommConfigA"
  return_type: "I"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*RtagCOMMCONFIG;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "SetDefaultCommConfigW"
  return_type: "I"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*RtagCOMMCONFIG;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "SetDllDirectoryA"
  return_type: "I"
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "SetDllDirectoryW"
  return_type: "I"
  parameter {
    name: ""
    type: "*cUS;"
  }
}
function {
  name: "SetDynamicTimeZoneInformation"
  return_type: "I"
  parameter {
    name: ""
    type: "*cR_TIME_DYNAMIC_ZONE_INFORMATION;;"
  }
}
function {
  name: "SetEndOfFile"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "SetEnvironmentVariableA"
  return_type: "I"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "SetEnvironmentVariableW"
  return_type: "I"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
}
function {
  name: "SetErrorMode"
  return_type: "UI"
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "SetEvent"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "SetFileApisToANSI"
  return_type: "V"
}
function {
  name: "SetFileApisToOEM"
  return_type: "V"
}
function {
  name: "SetFileAttributesA"
  return_type: "I"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "SetFileAttributesW"
  return_type: "I"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "SetFilePointer"
  return_type: "UI"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*I;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "SetFilePointerEx"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "Runion _LARGE_INTEGER;"
  }
  parameter {
    name: ""
    type: "*Runion _LARGE_INTEGER;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "SetFileSecurityA"
  return_type: "I"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "SetFileSecurityW"
  return_type: "I"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "SetFileTime"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*cR_FILETIME;;"
  }
  parameter {
    name: ""
    type: "*cR_FILETIME;;"
  }
  parameter {
    name: ""
    type: "*cR_FILETIME;;"
  }
}
function {
  name: "SetFileValidData"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "SetHandleCount"
  return_type: "UI"
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "SetHandleInformation"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "SetInformationJobObject"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "X(Enum.enum _JOBOBJECTINFOCLASS)"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "SetKernelObjectSecurity"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "SetLocalTime"
  return_type: "I"
  parameter {
    name: ""
    type: "*cR_SYSTEMTIME;;"
  }
}
function {
  name: "SetMailslotInfo"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "SetNamedPipeHandleState"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "SetPriorityClass"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "SetPrivateObjectSecurity"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "**V;;"
  }
  parameter {
    name: ""
    type: "*R_GENERIC_MAPPING;;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "SetProcessAffinityMask"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "SetProcessPriorityBoost"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "SetProcessShutdownParameters"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "SetProcessWorkingSetSize"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "SetSecurityDescriptorControl"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "US"
  }
  parameter {
    name: ""
    type: "US"
  }
}
function {
  name: "SetSecurityDescriptorDacl"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*R_ACL;;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "SetSecurityDescriptorGroup"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "SetSecurityDescriptorOwner"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "SetSecurityDescriptorSacl"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*R_ACL;;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "SetStdHandle"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "SetSystemPowerState"
  return_type: "I"
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "SetSystemTime"
  return_type: "I"
  parameter {
    name: ""
    type: "*cR_SYSTEMTIME;;"
  }
}
function {
  name: "SetSystemTimeAdjustment"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "SetTapeParameters"
  return_type: "UI"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "SetTapePosition"
  return_type: "UI"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "SetThreadAffinityMask"
  return_type: "UI"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "SetThreadContext"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*cR_CONTEXT;;"
  }
}
function {
  name: "SetThreadErrorMode"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "SetThreadExecutionState"
  return_type: "UI"
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "SetThreadIdealProcessor"
  return_type: "UI"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "SetThreadPriority"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "SetThreadPriorityBoost"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "SetThreadToken"
  return_type: "I"
  parameter {
    name: ""
    type: "**V;;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "SetTimerQueueTimer"
  return_type: "*V;"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*(*V;UB)V;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "SetTimeZoneInformation"
  return_type: "I"
  parameter {
    name: ""
    type: "*cR_TIME_ZONE_INFORMATION;;"
  }
}
function {
  name: "SetTokenInformation"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "X(Enum.enum _TOKEN_INFORMATION_CLASS)"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "SetUnhandledExceptionFilter"
  return_type: "*(*R_EXCEPTION_POINTERS;;)I;"
  parameter {
    name: ""
    type: "*(*R_EXCEPTION_POINTERS;;)I;"
  }
}
function {
  name: "SetVolumeLabelA"
  return_type: "I"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "SetVolumeLabelW"
  return_type: "I"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
}
function {
  name: "SetVolumeMountPointA"
  return_type: "I"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "SetVolumeMountPointW"
  return_type: "I"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "SetWaitableTimer"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*cRunion _LARGE_INTEGER;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*(*V;UIUI)V;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "SetupComm"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "SignalObjectAndWait"
  return_type: "UI"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "SizeofResource"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHINSTANCE__;;"
  }
  parameter {
    name: ""
    type: "*RHRSRC__;;"
  }
}
function {
  name: "Sleep"
  return_type: "V"
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "SleepConditionVariableCS"
  return_type: "I"
  parameter {
    name: ""
    type: "*R_RTL_CONDITION_VARIABLE;;"
  }
  parameter {
    name: ""
    type: "*R_RTL_CRITICAL_SECTION;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "SleepEx"
  return_type: "UI"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "SuspendThread"
  return_type: "UI"
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "SwitchToFiber"
  return_type: "V"
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "SwitchToThread"
  return_type: "I"
}
function {
  name: "SystemTimeToFileTime"
  return_type: "I"
  parameter {
    name: ""
    type: "*cR_SYSTEMTIME;;"
  }
  parameter {
    name: ""
    type: "*R_FILETIME;;"
  }
}
function {
  name: "SystemTimeToTzSpecificLocalTime"
  return_type: "I"
  parameter {
    name: ""
    type: "*cR_TIME_ZONE_INFORMATION;;"
  }
  parameter {
    name: ""
    type: "*cR_SYSTEMTIME;;"
  }
  parameter {
    name: ""
    type: "*R_SYSTEMTIME;;"
  }
}
function {
  name: "TerminateJobObject"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "TerminateProcess"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "TerminateThread"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "TlsAlloc"
  return_type: "UI"
}
function {
  name: "TlsFree"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "TlsGetValue"
  return_type: "*V;"
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "TlsSetValue"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "TransactNamedPipe"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*R_OVERLAPPED;;"
  }
}
function {
  name: "TransmitCommChar"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "C"
  }
}
function {
  name: "TryAcquireSRWLockExclusive"
  return_type: "I"
  parameter {
    name: ""
    type: "*R_RTL_SRWLOCK;;"
  }
}
function {
  name: "TryAcquireSRWLockShared"
  return_type: "I"
  parameter {
    name: ""
    type: "*R_RTL_SRWLOCK;;"
  }
}
function {
  name: "TryEnterCriticalSection"
  return_type: "I"
  parameter {
    name: "lpCrit"
    type: "*R_RTL_CRITICAL_SECTION;;"
  }
}
function {
  name: "TzSpecificLocalTimeToSystemTime"
  return_type: "I"
  parameter {
    name: ""
    type: "*cR_TIME_ZONE_INFORMATION;;"
  }
  parameter {
    name: ""
    type: "*cR_SYSTEMTIME;;"
  }
  parameter {
    name: ""
    type: "*R_SYSTEMTIME;;"
  }
}
function {
  name: "UnhandledExceptionFilter"
  return_type: "I"
  parameter {
    name: ""
    type: "*R_EXCEPTION_POINTERS;;"
  }
}
function {
  name: "UnlockFile"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "UnlockFileEx"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*R_OVERLAPPED;;"
  }
}
function {
  name: "UnmapViewOfFile"
  return_type: "I"
  parameter {
    name: ""
    type: "*cV;"
  }
}
function {
  name: "UnregisterWait"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "UnregisterWaitEx"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "UpdateResourceA"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "US"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "UpdateResourceW"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "US"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "VerifyVersionInfoA"
  return_type: "I"
  parameter {
    name: ""
    type: "*ROSVERSIONINFOEXA;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "VerifyVersionInfoW"
  return_type: "I"
  parameter {
    name: ""
    type: "*ROSVERSIONINFOEXW;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "VirtualAlloc"
  return_type: "*V;"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "VirtualAllocEx"
  return_type: "*V;"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "VirtualFree"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "VirtualFreeEx"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "VirtualLock"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "VirtualProtect"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "VirtualProtectEx"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "VirtualQuery"
  return_type: "UI"
  parameter {
    name: ""
    type: "*cV;"
  }
  parameter {
    name: ""
    type: "*R_MEMORY_BASIC_INFORMATION;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "VirtualQueryEx"
  return_type: "UI"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*cV;"
  }
  parameter {
    name: ""
    type: "*R_MEMORY_BASIC_INFORMATION;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "VirtualUnlock"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "WTSGetActiveConsoleSessionId"
  return_type: "UI"
}
function {
  name: "WaitCommEvent"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*R_OVERLAPPED;;"
  }
}
function {
  name: "WaitForDebugEvent"
  return_type: "I"
  parameter {
    name: ""
    type: "*R_DEBUG_EVENT;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "WaitForMultipleObjects"
  return_type: "UI"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*c*V;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "WaitForMultipleObjectsEx"
  return_type: "UI"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*c*V;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "WaitForSingleObject"
  return_type: "UI"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "WaitForSingleObjectEx"
  return_type: "UI"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "WaitNamedPipeA"
  return_type: "I"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "WaitNamedPipeW"
  return_type: "I"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "WakeAllConditionVariable"
  return_type: "V"
  parameter {
    name: ""
    type: "*R_RTL_CONDITION_VARIABLE;;"
  }
}
function {
  name: "WakeConditionVariable"
  return_type: "V"
  parameter {
    name: ""
    type: "*R_RTL_CONDITION_VARIABLE;;"
  }
}
function {
  name: "WinExec"
  return_type: "UI"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "Wow64DisableWow64FsRedirection"
  return_type: "I"
  parameter {
    name: ""
    type: "**V;;"
  }
}
function {
  name: "Wow64EnableWow64FsRedirection"
  return_type: "UB"
  parameter {
    name: ""
    type: "UB"
  }
}
function {
  name: "Wow64RevertWow64FsRedirection"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "WriteFile"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*cV;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*R_OVERLAPPED;;"
  }
}
function {
  name: "WriteFileEx"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*cV;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*R_OVERLAPPED;;"
  }
  parameter {
    name: ""
    type: "*(UIUI*R_OVERLAPPED;;)V;"
  }
}
function {
  name: "WriteFileGather"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*Runion _FILE_SEGMENT_ELEMENT;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*R_OVERLAPPED;;"
  }
}
function {
  name: "WritePrivateProfileSectionA"
  return_type: "I"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "WritePrivateProfileSectionW"
  return_type: "I"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
}
function {
  name: "WritePrivateProfileStringA"
  return_type: "I"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "WritePrivateProfileStringW"
  return_type: "I"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
}
function {
  name: "WritePrivateProfileStructA"
  return_type: "I"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "WritePrivateProfileStructW"
  return_type: "I"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
}
function {
  name: "WriteProcessMemory"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*cV;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "WriteProfileSectionA"
  return_type: "I"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "WriteProfileSectionW"
  return_type: "I"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
}
function {
  name: "WriteProfileStringA"
  return_type: "I"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "WriteProfileStringW"
  return_type: "I"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
}
function {
  name: "WriteTapemark"
  return_type: "UI"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "ZombifyActCtx"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "lstrcmpA"
  return_type: "I"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "lstrcmpW"
  return_type: "I"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
}
function {
  name: "lstrcmpiA"
  return_type: "I"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "lstrcmpiW"
  return_type: "I"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
}
function {
  name: "lstrcatA"
  return_type: "*C;"
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "lstrcatW"
  return_type: "*US;"
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
}
function {
  name: "lstrcpyA"
  return_type: "*C;"
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "lstrcpyW"
  return_type: "*US;"
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
}
function {
  name: "lstrcpynA"
  return_type: "*C;"
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "lstrcpynW"
  return_type: "*US;"
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "lstrlenA"
  return_type: "I"
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "lstrlenW"
  return_type: "I"
  parameter {
    name: ""
    type: "*cUS;"
  }
}
function {
  name: "_hread"
  return_type: "I"
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "_hwrite"
  return_type: "I"
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "_lcreat"
  return_type: "I"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "_lclose"
  return_type: "I"
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "_llseek"
  return_type: "I"
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "_lopen"
  return_type: "I"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "_lread"
  return_type: "UI"
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "_lwrite"
  return_type: "UI"
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "wine_get_unix_file_name"
  return_type: "*C;"
  parameter {
    name: "dos"
    type: "*cUS;"
  }
}
function {
  name: "wine_get_dos_file_name"
  return_type: "*US;"
  parameter {
    name: "str"
    type: "*cC;"
  }
}
function {
  name: "InterlockedCompareExchange"
  return_type: "I"
  parameter {
    name: "dest"
    type: "*I;"
  }
  parameter {
    name: "xchg"
    type: "I"
  }
  parameter {
    name: "compare"
    type: "I"
  }
}
function {
  name: "InterlockedCompareExchangePointer"
  return_type: "*V;"
  parameter {
    name: "dest"
    type: "**V;;"
  }
  parameter {
    name: "xchg"
    type: "*V;"
  }
  parameter {
    name: "compare"
    type: "*V;"
  }
}
function {
  name: "InterlockedCompareExchange64"
  return_type: "I"
  parameter {
    name: "dest"
    type: "*I;"
  }
  parameter {
    name: "xchg"
    type: "I"
  }
  parameter {
    name: "compare"
    type: "I"
  }
}
function {
  name: "InterlockedExchange"
  return_type: "I"
  parameter {
    name: "dest"
    type: "*I;"
  }
  parameter {
    name: "val"
    type: "I"
  }
}
function {
  name: "InterlockedExchangePointer"
  return_type: "*V;"
  parameter {
    name: "dest"
    type: "**V;;"
  }
  parameter {
    name: "val"
    type: "*V;"
  }
}
function {
  name: "InterlockedExchangeAdd"
  return_type: "I"
  parameter {
    name: "dest"
    type: "*I;"
  }
  parameter {
    name: "incr"
    type: "I"
  }
}
function {
  name: "InterlockedIncrement"
  return_type: "I"
  parameter {
    name: "dest"
    type: "*I;"
  }
}
function {
  name: "InterlockedDecrement"
  return_type: "I"
  parameter {
    name: "dest"
    type: "*I;"
  }
}
function {
  name: "GetLastError"
  return_type: "UI"
}
function {
  name: "GetCurrentProcessId"
  return_type: "UI"
}
function {
  name: "GetCurrentThreadId"
  return_type: "UI"
}
function {
  name: "SetLastError"
  return_type: "V"
  parameter {
    name: "err"
    type: "UI"
  }
}
function {
  name: "GetProcessHeap"
  return_type: "*V;"
}
function {
  name: "WinMain"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHINSTANCE__;;"
  }
  parameter {
    name: ""
    type: "*RHINSTANCE__;;"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "AbortDoc"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
}
function {
  name: "AbortPath"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
}
function {
  name: "AddFontResourceA"
  return_type: "I"
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "AddFontResourceW"
  return_type: "I"
  parameter {
    name: ""
    type: "*cUS;"
  }
}
function {
  name: "AddFontResourceExA"
  return_type: "I"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "AddFontResourceExW"
  return_type: "I"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "AddFontMemResourceEx"
  return_type: "*V;"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "AlphaBlend"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "R_BLENDFUNCTION;"
  }
}
function {
  name: "AngleArc"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "F"
  }
  parameter {
    name: ""
    type: "F"
  }
}
function {
  name: "AnimatePalette"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHPALETTE__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cRtagPALETTEENTRY;;"
  }
}
function {
  name: "Arc"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "ArcTo"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "BeginPath"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
}
function {
  name: "BitBlt"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "ChoosePixelFormat"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "*cRtagPIXELFORMATDESCRIPTOR;;"
  }
}
function {
  name: "Chord"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "CloseEnhMetaFile"
  return_type: "*RHENHMETAFILE__;;"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
}
function {
  name: "CloseFigure"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
}
function {
  name: "CloseMetaFile"
  return_type: "*RHMETAFILE__;;"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
}
function {
  name: "CombineRgn"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHRGN__;;"
  }
  parameter {
    name: ""
    type: "*RHRGN__;;"
  }
  parameter {
    name: ""
    type: "*RHRGN__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "CombineTransform"
  return_type: "I"
  parameter {
    name: ""
    type: "*RtagXFORM;;"
  }
  parameter {
    name: ""
    type: "*cRtagXFORM;;"
  }
  parameter {
    name: ""
    type: "*cRtagXFORM;;"
  }
}
function {
  name: "CopyEnhMetaFileA"
  return_type: "*RHENHMETAFILE__;;"
  parameter {
    name: ""
    type: "*RHENHMETAFILE__;;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "CopyEnhMetaFileW"
  return_type: "*RHENHMETAFILE__;;"
  parameter {
    name: ""
    type: "*RHENHMETAFILE__;;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
}
function {
  name: "CopyMetaFileA"
  return_type: "*RHMETAFILE__;;"
  parameter {
    name: ""
    type: "*RHMETAFILE__;;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "CopyMetaFileW"
  return_type: "*RHMETAFILE__;;"
  parameter {
    name: ""
    type: "*RHMETAFILE__;;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
}
function {
  name: "CreateBitmap"
  return_type: "*RHBITMAP__;;"
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cV;"
  }
}
function {
  name: "CreateBitmapIndirect"
  return_type: "*RHBITMAP__;;"
  parameter {
    name: ""
    type: "*cRBITMAP;;"
  }
}
function {
  name: "CreateBrushIndirect"
  return_type: "*RHBRUSH__;;"
  parameter {
    name: ""
    type: "*cRLOGBRUSH;;"
  }
}
function {
  name: "CreateColorSpaceA"
  return_type: "*RHCOLORSPACE__;;"
  parameter {
    name: ""
    type: "*RtagLOGCOLORSPACEA;;"
  }
}
function {
  name: "CreateColorSpaceW"
  return_type: "*RHCOLORSPACE__;;"
  parameter {
    name: ""
    type: "*RtagLOGCOLORSPACEW;;"
  }
}
function {
  name: "CreateCompatibleBitmap"
  return_type: "*RHBITMAP__;;"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "CreateCompatibleDC"
  return_type: "*RHDC__;;"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
}
function {
  name: "CreateDCA"
  return_type: "*RHDC__;;"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*cRDEVMODEA;;"
  }
}
function {
  name: "CreateDCW"
  return_type: "*RHDC__;;"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*cRDEVMODEW;;"
  }
}
function {
  name: "CreateDIBitmap"
  return_type: "*RHBITMAP__;;"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "*cRBITMAPINFOHEADER;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cV;"
  }
  parameter {
    name: ""
    type: "*cRtagBITMAPINFO;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "CreateDIBPatternBrush"
  return_type: "*RHBRUSH__;;"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "CreateDIBPatternBrushPt"
  return_type: "*RHBRUSH__;;"
  parameter {
    name: ""
    type: "*cV;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "CreateDIBSection"
  return_type: "*RHBITMAP__;;"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "*cRtagBITMAPINFO;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "**V;;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: "offset"
    type: "UI"
  }
}
function {
  name: "CreateDiscardableBitmap"
  return_type: "*RHBITMAP__;;"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "CreateEllipticRgn"
  return_type: "*RHRGN__;;"
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "CreateEllipticRgnIndirect"
  return_type: "*RHRGN__;;"
  parameter {
    name: ""
    type: "*cRtagRECT;;"
  }
}
function {
  name: "CreateEnhMetaFileA"
  return_type: "*RHDC__;;"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*cRtagRECT;;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "CreateEnhMetaFileW"
  return_type: "*RHDC__;;"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*cRtagRECT;;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
}
function {
  name: "CreateFontA"
  return_type: "*RHFONT__;;"
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "CreateFontW"
  return_type: "*RHFONT__;;"
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
}
function {
  name: "CreateFontIndirectA"
  return_type: "*RHFONT__;;"
  parameter {
    name: ""
    type: "*cRtagLOGFONTA;;"
  }
}
function {
  name: "CreateFontIndirectW"
  return_type: "*RHFONT__;;"
  parameter {
    name: ""
    type: "*cRtagLOGFONTW;;"
  }
}
function {
  name: "CreateFontIndirectExA"
  return_type: "*RHFONT__;;"
  parameter {
    name: ""
    type: "*cRENUMLOGFONTEXDVA;;"
  }
}
function {
  name: "CreateFontIndirectExW"
  return_type: "*RHFONT__;;"
  parameter {
    name: ""
    type: "*cRENUMLOGFONTEXDVW;;"
  }
}
function {
  name: "CreateHalftonePalette"
  return_type: "*RHPALETTE__;;"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
}
function {
  name: "CreateHatchBrush"
  return_type: "*RHBRUSH__;;"
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "CreateICA"
  return_type: "*RHDC__;;"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*cRDEVMODEA;;"
  }
}
function {
  name: "CreateICW"
  return_type: "*RHDC__;;"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*cRDEVMODEW;;"
  }
}
function {
  name: "CreateMetaFileA"
  return_type: "*RHDC__;;"
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "CreateMetaFileW"
  return_type: "*RHDC__;;"
  parameter {
    name: ""
    type: "*cUS;"
  }
}
function {
  name: "CreatePalette"
  return_type: "*RHPALETTE__;;"
  parameter {
    name: ""
    type: "*cRtagLOGPALETTE;;"
  }
}
function {
  name: "CreatePatternBrush"
  return_type: "*RHBRUSH__;;"
  parameter {
    name: ""
    type: "*RHBITMAP__;;"
  }
}
function {
  name: "CreatePen"
  return_type: "*RHPEN__;;"
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "CreatePenIndirect"
  return_type: "*RHPEN__;;"
  parameter {
    name: ""
    type: "*cRLOGPEN;;"
  }
}
function {
  name: "CreatePolyPolygonRgn"
  return_type: "*RHRGN__;;"
  parameter {
    name: ""
    type: "*cRtagPOINT;;"
  }
  parameter {
    name: ""
    type: "*cI;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "CreatePolygonRgn"
  return_type: "*RHRGN__;;"
  parameter {
    name: ""
    type: "*cRtagPOINT;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "CreateRectRgn"
  return_type: "*RHRGN__;;"
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "CreateRectRgnIndirect"
  return_type: "*RHRGN__;;"
  parameter {
    name: ""
    type: "*cRtagRECT;;"
  }
}
function {
  name: "CreateRoundRectRgn"
  return_type: "*RHRGN__;;"
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "CreateScalableFontResourceA"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "CreateScalableFontResourceW"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
}
function {
  name: "CreateSolidBrush"
  return_type: "*RHBRUSH__;;"
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "DPtoLP"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "*RtagPOINT;;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "DeleteColorSpace"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHCOLORSPACE__;;"
  }
}
function {
  name: "DeleteDC"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
}
function {
  name: "DeleteEnhMetaFile"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHENHMETAFILE__;;"
  }
}
function {
  name: "DeleteMetaFile"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHMETAFILE__;;"
  }
}
function {
  name: "DeleteObject"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "DescribePixelFormat"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*RtagPIXELFORMATDESCRIPTOR;;"
  }
}
function {
  name: "DrawEscape"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "Ellipse"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "EndDoc"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
}
function {
  name: "EndPath"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
}
function {
  name: "EnumEnhMetaFile"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "*RHENHMETAFILE__;;"
  }
  parameter {
    name: ""
    type: "*(*RHDC__;;*RHANDLETABLE;;*cRENHMETARECORD;;II)I;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*cRtagRECT;;"
  }
}
function {
  name: "EnumFontFamiliesA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*(*cRtagLOGFONTA;;*cRtagTEXTMETRICA;;UII)I;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "EnumFontFamiliesW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*(*cRtagLOGFONTW;;*cRtagTEXTMETRICW;;UII)I;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "EnumFontFamiliesExA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "*RtagLOGFONTA;;"
  }
  parameter {
    name: ""
    type: "*(*cRtagLOGFONTA;;*cRtagTEXTMETRICA;;UII)I;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "EnumFontFamiliesExW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "*RtagLOGFONTW;;"
  }
  parameter {
    name: ""
    type: "*(*cRtagLOGFONTW;;*cRtagTEXTMETRICW;;UII)I;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "EnumFontsA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*(*cRtagLOGFONTA;;*cRtagTEXTMETRICA;;UII)I;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "EnumFontsW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*(*cRtagLOGFONTW;;*cRtagTEXTMETRICW;;UII)I;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "EnumICMProfilesA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "*(*C;I)I;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "EnumICMProfilesW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "*(*US;I)I;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "EnumMetaFile"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "*RHMETAFILE__;;"
  }
  parameter {
    name: ""
    type: "*(*RHDC__;;*RHANDLETABLE;;*RMETARECORD;;II)I;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "EnumObjects"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*(*V;I)I;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "EqualRgn"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHRGN__;;"
  }
  parameter {
    name: ""
    type: "*RHRGN__;;"
  }
}
function {
  name: "Escape"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "ExcludeClipRect"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "ExtCreatePen"
  return_type: "*RHPEN__;;"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cRLOGBRUSH;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cUI;"
  }
}
function {
  name: "ExtCreateRegion"
  return_type: "*RHRGN__;;"
  parameter {
    name: ""
    type: "*cRtagXFORM;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cR_RGNDATA;;"
  }
}
function {
  name: "ExtEscape"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*C;"
  }
}
function {
  name: "ExtFloodFill"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "ExtSelectClipRgn"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "*RHRGN__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "ExtTextOutA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cRtagRECT;;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cI;"
  }
}
function {
  name: "ExtTextOutW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cRtagRECT;;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cI;"
  }
}
function {
  name: "FillPath"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
}
function {
  name: "FillRgn"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "*RHRGN__;;"
  }
  parameter {
    name: ""
    type: "*RHBRUSH__;;"
  }
}
function {
  name: "FixBrushOrgEx"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*RtagPOINT;;"
  }
}
function {
  name: "FlattenPath"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
}
function {
  name: "FloodFill"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "FrameRgn"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "*RHRGN__;;"
  }
  parameter {
    name: ""
    type: "*RHBRUSH__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "GdiAlphaBlend"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "R_BLENDFUNCTION;"
  }
}
function {
  name: "GdiComment"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cUB;"
  }
}
function {
  name: "GdiConvertToDevmodeW"
  return_type: "*RDEVMODEW;;"
  parameter {
    name: ""
    type: "*cRDEVMODEA;;"
  }
}
function {
  name: "GdiFlush"
  return_type: "I"
}
function {
  name: "GdiGetCharDimensions"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "*RtagTEXTMETRICW;;"
  }
  parameter {
    name: ""
    type: "*I;"
  }
}
function {
  name: "GdiGetCodePage"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
}
function {
  name: "GdiGradientFill"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "*R_TRIVERTEX;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "GdiIsMetaFileDC"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
}
function {
  name: "GdiIsMetaPrintDC"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
}
function {
  name: "GdiIsPlayMetafileDC"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
}
function {
  name: "GdiTransparentBlt"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "GetArcDirection"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
}
function {
  name: "GetAspectRatioFilterEx"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "*RtagSIZE;;"
  }
}
function {
  name: "GetBitmapBits"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHBITMAP__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "GetBitmapDimensionEx"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHBITMAP__;;"
  }
  parameter {
    name: ""
    type: "*RtagSIZE;;"
  }
}
function {
  name: "GetBrushOrgEx"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "*RtagPOINT;;"
  }
}
function {
  name: "GetBkColor"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
}
function {
  name: "GetBkMode"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
}
function {
  name: "GetBoundsRect"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "*RtagRECT;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "GetCharABCWidthsA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*RABC;;"
  }
}
function {
  name: "GetCharABCWidthsW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*RABC;;"
  }
}
function {
  name: "GetCharABCWidthsFloatA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*R_ABCFLOAT;;"
  }
}
function {
  name: "GetCharABCWidthsFloatW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*R_ABCFLOAT;;"
  }
}
function {
  name: "GetCharABCWidthsI"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "*RABC;;"
  }
}
function {
  name: "GetCharacterPlacementA"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*RtagGCP_RESULTSA;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "GetCharacterPlacementW"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*RtagGCP_RESULTSW;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "GetCharWidth32A"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*I;"
  }
}
function {
  name: "GetCharWidth32W"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*I;"
  }
}
function {
  name: "GetCharWidthA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*I;"
  }
}
function {
  name: "GetCharWidthI"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "*I;"
  }
}
function {
  name: "GetCharWidthW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*I;"
  }
}
function {
  name: "GetCharWidthFloatA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*F;"
  }
}
function {
  name: "GetCharWidthFloatW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*F;"
  }
}
function {
  name: "GetClipBox"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "*RtagRECT;;"
  }
}
function {
  name: "GetClipRgn"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "*RHRGN__;;"
  }
}
function {
  name: "GetColorAdjustment"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "*RtagCOLORADJUSTMENT;;"
  }
}
function {
  name: "GetColorSpace"
  return_type: "*RHCOLORSPACE__;;"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
}
function {
  name: "GetCurrentObject"
  return_type: "*V;"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "GetCurrentPositionEx"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "*RtagPOINT;;"
  }
}
function {
  name: "GetDeviceCaps"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "GetDeviceGammaRamp"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "GetDCBrushColor"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
}
function {
  name: "GetDCOrgEx"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "*RtagPOINT;;"
  }
}
function {
  name: "GetDCPenColor"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
}
function {
  name: "GetDIBColorTable"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*RtagRGBQUAD;;"
  }
}
function {
  name: "GetDIBits"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "*RHBITMAP__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*RtagBITMAPINFO;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "GetEnhMetaFileA"
  return_type: "*RHENHMETAFILE__;;"
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "GetEnhMetaFileW"
  return_type: "*RHENHMETAFILE__;;"
  parameter {
    name: ""
    type: "*cUS;"
  }
}
function {
  name: "GetEnhMetaFileBits"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHENHMETAFILE__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UB;"
  }
}
function {
  name: "GetEnhMetaFileDescriptionA"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHENHMETAFILE__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*C;"
  }
}
function {
  name: "GetEnhMetaFileDescriptionW"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHENHMETAFILE__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*US;"
  }
}
function {
  name: "GetEnhMetaFileHeader"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHENHMETAFILE__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*RENHMETAHEADER;;"
  }
}
function {
  name: "GetEnhMetaFilePaletteEntries"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHENHMETAFILE__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*RtagPALETTEENTRY;;"
  }
}
function {
  name: "GetFontData"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "GetFontLanguageInfo"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
}
function {
  name: "GetFontUnicodeRanges"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "*RtagGLYPHSET;;"
  }
}
function {
  name: "GetGlyphIndicesA"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "GetGlyphIndicesW"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "GetGlyphOutlineA"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*RGLYPHMETRICS;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*cRMAT2;;"
  }
}
function {
  name: "GetGlyphOutlineW"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*RGLYPHMETRICS;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*cRMAT2;;"
  }
}
function {
  name: "GetGraphicsMode"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
}
function {
  name: "GetICMProfileA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*C;"
  }
}
function {
  name: "GetICMProfileW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*US;"
  }
}
function {
  name: "GetKerningPairsA"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*RKERNINGPAIR;;"
  }
}
function {
  name: "GetKerningPairsW"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*RKERNINGPAIR;;"
  }
}
function {
  name: "GetLayout"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
}
function {
  name: "GetLogColorSpaceA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHCOLORSPACE__;;"
  }
  parameter {
    name: ""
    type: "*RtagLOGCOLORSPACEA;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "GetLogColorSpaceW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHCOLORSPACE__;;"
  }
  parameter {
    name: ""
    type: "*RtagLOGCOLORSPACEW;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "GetMapMode"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
}
function {
  name: "GetMetaFileA"
  return_type: "*RHMETAFILE__;;"
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "GetMetaFileW"
  return_type: "*RHMETAFILE__;;"
  parameter {
    name: ""
    type: "*cUS;"
  }
}
function {
  name: "GetMetaFileBitsEx"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHMETAFILE__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "GetMetaRgn"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "*RHRGN__;;"
  }
}
function {
  name: "GetMiterLimit"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "*F;"
  }
}
function {
  name: "GetNearestColor"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "GetNearestPaletteIndex"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHPALETTE__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "GetObjectA"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "GetObjectW"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "GetObjectType"
  return_type: "UI"
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "GetOutlineTextMetricsA"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*R_OUTLINETEXTMETRICA;;"
  }
}
function {
  name: "GetOutlineTextMetricsW"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*R_OUTLINETEXTMETRICW;;"
  }
}
function {
  name: "GetPaletteEntries"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHPALETTE__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*RtagPALETTEENTRY;;"
  }
}
function {
  name: "GetPath"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "*RtagPOINT;;"
  }
  parameter {
    name: ""
    type: "*UB;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "GetPixel"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "GetPixelFormat"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
}
function {
  name: "GetPolyFillMode"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
}
function {
  name: "GetRandomRgn"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "*RHRGN__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "GetRasterizerCaps"
  return_type: "I"
  parameter {
    name: ""
    type: "*RRASTERIZER_STATUS;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "GetRegionData"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHRGN__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*R_RGNDATA;;"
  }
}
function {
  name: "GetRelAbs"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "GetRgnBox"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHRGN__;;"
  }
  parameter {
    name: ""
    type: "*RtagRECT;;"
  }
}
function {
  name: "GetROP2"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
}
function {
  name: "GetStockObject"
  return_type: "*V;"
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "GetStretchBltMode"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
}
function {
  name: "GetSystemPaletteEntries"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*RtagPALETTEENTRY;;"
  }
}
function {
  name: "GetSystemPaletteUse"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
}
function {
  name: "GetTextAlign"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
}
function {
  name: "GetTextCharacterExtra"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
}
function {
  name: "GetTextCharset"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
}
function {
  name: "GetTextCharsetInfo"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "*RFONTSIGNATURE;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "GetTextColor"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
}
function {
  name: "GetTextExtentExPointA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*I;"
  }
  parameter {
    name: ""
    type: "*I;"
  }
  parameter {
    name: ""
    type: "*RtagSIZE;;"
  }
}
function {
  name: "GetTextExtentExPointW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*I;"
  }
  parameter {
    name: ""
    type: "*I;"
  }
  parameter {
    name: ""
    type: "*RtagSIZE;;"
  }
}
function {
  name: "GetTextExtentPointA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*RtagSIZE;;"
  }
}
function {
  name: "GetTextExtentPointW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*RtagSIZE;;"
  }
}
function {
  name: "GetTextExtentPoint32A"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*RtagSIZE;;"
  }
}
function {
  name: "GetTextExtentPoint32W"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*RtagSIZE;;"
  }
}
function {
  name: "GetTextExtentExPointI"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*I;"
  }
  parameter {
    name: ""
    type: "*I;"
  }
  parameter {
    name: ""
    type: "*RtagSIZE;;"
  }
}
function {
  name: "GetTextExtentPointI"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*RtagSIZE;;"
  }
}
function {
  name: "GetTextFaceA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*C;"
  }
}
function {
  name: "GetTextFaceW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*US;"
  }
}
function {
  name: "GetTextMetricsA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "*RtagTEXTMETRICA;;"
  }
}
function {
  name: "GetTextMetricsW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "*RtagTEXTMETRICW;;"
  }
}
function {
  name: "GetTransform"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*RtagXFORM;;"
  }
}
function {
  name: "GetViewportExtEx"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "*RtagSIZE;;"
  }
}
function {
  name: "GetViewportOrgEx"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "*RtagPOINT;;"
  }
}
function {
  name: "GetWindowExtEx"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "*RtagSIZE;;"
  }
}
function {
  name: "GetWindowOrgEx"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "*RtagPOINT;;"
  }
}
function {
  name: "GetWinMetaFileBits"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHENHMETAFILE__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UB;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
}
function {
  name: "GetWorldTransform"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "*RtagXFORM;;"
  }
}
function {
  name: "GradientFill"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "*R_TRIVERTEX;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "IntersectClipRect"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "InvertRgn"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "*RHRGN__;;"
  }
}
function {
  name: "LineDDA"
  return_type: "I"
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*(III)V;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "LineTo"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "LPtoDP"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "*RtagPOINT;;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "MaskBlt"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*RHBITMAP__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "MirrorRgn"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*RHRGN__;;"
  }
}
function {
  name: "ModifyWorldTransform"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "*cRtagXFORM;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "MoveToEx"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*RtagPOINT;;"
  }
}
function {
  name: "OffsetClipRgn"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "OffsetRgn"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHRGN__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "OffsetViewportOrgEx"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*RtagPOINT;;"
  }
}
function {
  name: "OffsetWindowOrgEx"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*RtagPOINT;;"
  }
}
function {
  name: "PaintRgn"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "*RHRGN__;;"
  }
}
function {
  name: "PatBlt"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "PathToRegion"
  return_type: "*RHRGN__;;"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
}
function {
  name: "Pie"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "PlayEnhMetaFile"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "*RHENHMETAFILE__;;"
  }
  parameter {
    name: ""
    type: "*cRtagRECT;;"
  }
}
function {
  name: "PlayEnhMetaFileRecord"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "*RHANDLETABLE;;"
  }
  parameter {
    name: ""
    type: "*cRENHMETARECORD;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "PlayMetaFile"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "*RHMETAFILE__;;"
  }
}
function {
  name: "PlayMetaFileRecord"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "*RHANDLETABLE;;"
  }
  parameter {
    name: ""
    type: "*RMETARECORD;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "PlgBlt"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "*cRtagPOINT;;"
  }
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*RHBITMAP__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "PolyBezier"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "*cRtagPOINT;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "PolyBezierTo"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "*cRtagPOINT;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "PolyDraw"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "*cRtagPOINT;;"
  }
  parameter {
    name: ""
    type: "*cUB;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "PolyPolygon"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "*cRtagPOINT;;"
  }
  parameter {
    name: ""
    type: "*cI;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "PolyPolyline"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "*cRtagPOINT;;"
  }
  parameter {
    name: ""
    type: "*cUI;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "Polygon"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "*cRtagPOINT;;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "Polyline"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "*cRtagPOINT;;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "PolylineTo"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "*cRtagPOINT;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "PtInRegion"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHRGN__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "PtVisible"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "RealizePalette"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
}
function {
  name: "Rectangle"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "RectInRegion"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHRGN__;;"
  }
  parameter {
    name: ""
    type: "*cRtagRECT;;"
  }
}
function {
  name: "RectVisible"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "*cRtagRECT;;"
  }
}
function {
  name: "RemoveFontMemResourceEx"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "RemoveFontResourceA"
  return_type: "I"
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "RemoveFontResourceW"
  return_type: "I"
  parameter {
    name: ""
    type: "*cUS;"
  }
}
function {
  name: "RemoveFontResourceExA"
  return_type: "I"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "RemoveFontResourceExW"
  return_type: "I"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "ResetDCA"
  return_type: "*RHDC__;;"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "*cRDEVMODEA;;"
  }
}
function {
  name: "ResetDCW"
  return_type: "*RHDC__;;"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "*cRDEVMODEW;;"
  }
}
function {
  name: "ResizePalette"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHPALETTE__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "RestoreDC"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "RoundRect"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "SaveDC"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
}
function {
  name: "ScaleViewportExtEx"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*RtagSIZE;;"
  }
}
function {
  name: "ScaleWindowExtEx"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*RtagSIZE;;"
  }
}
function {
  name: "SelectClipPath"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "SelectClipRgn"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "*RHRGN__;;"
  }
}
function {
  name: "SelectObject"
  return_type: "*V;"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "SelectPalette"
  return_type: "*RHPALETTE__;;"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "*RHPALETTE__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "SetAbortProc"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "*(*RHDC__;;I)I;"
  }
}
function {
  name: "SetArcDirection"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "SetBitmapBits"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHBITMAP__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*cV;"
  }
}
function {
  name: "SetBitmapDimensionEx"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHBITMAP__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*RtagSIZE;;"
  }
}
function {
  name: "SetBkColor"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "SetBkMode"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "SetBoundsRect"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "*cRtagRECT;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "SetBrushOrgEx"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*RtagPOINT;;"
  }
}
function {
  name: "SetColorAdjustment"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "*cRtagCOLORADJUSTMENT;;"
  }
}
function {
  name: "SetColorSpace"
  return_type: "*RHCOLORSPACE__;;"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "*RHCOLORSPACE__;;"
  }
}
function {
  name: "SetDeviceGammaRamp"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "SetDCBrushColor"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "SetDCPenColor"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "SetDIBColorTable"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cRtagRGBQUAD;;"
  }
}
function {
  name: "SetDIBits"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "*RHBITMAP__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cV;"
  }
  parameter {
    name: ""
    type: "*cRtagBITMAPINFO;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "SetDIBitsToDevice"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cV;"
  }
  parameter {
    name: ""
    type: "*cRtagBITMAPINFO;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "SetEnhMetaFileBits"
  return_type: "*RHENHMETAFILE__;;"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cUB;"
  }
}
function {
  name: "SetGraphicsMode"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "SetICMMode"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "SetICMProfileA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "*C;"
  }
}
function {
  name: "SetICMProfileW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "*US;"
  }
}
function {
  name: "SetLayout"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "SetMapMode"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "SetMapperFlags"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "SetMetaFileBitsEx"
  return_type: "*RHMETAFILE__;;"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cUB;"
  }
}
function {
  name: "SetMetaRgn"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
}
function {
  name: "SetMiterLimit"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "F"
  }
  parameter {
    name: ""
    type: "*F;"
  }
}
function {
  name: "SetPaletteEntries"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHPALETTE__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cRtagPALETTEENTRY;;"
  }
}
function {
  name: "SetPixel"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "SetPixelV"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "SetPixelFormat"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*cRtagPIXELFORMATDESCRIPTOR;;"
  }
}
function {
  name: "SetPolyFillMode"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "SetRectRgn"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHRGN__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "SetRelAbs"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "SetROP2"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "SetStretchBltMode"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "SetSystemPaletteUse"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "SetTextAlign"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "SetTextCharacterExtra"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "SetTextColor"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "SetTextJustification"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "SetViewportExtEx"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*RtagSIZE;;"
  }
}
function {
  name: "SetViewportOrgEx"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*RtagPOINT;;"
  }
}
function {
  name: "SetWindowExtEx"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*RtagSIZE;;"
  }
}
function {
  name: "SetWindowOrgEx"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*RtagPOINT;;"
  }
}
function {
  name: "SetWinMetaFileBits"
  return_type: "*RHENHMETAFILE__;;"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cUB;"
  }
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "*cRMETAFILEPICT;;"
  }
}
function {
  name: "SetWorldTransform"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "*cRtagXFORM;;"
  }
}
function {
  name: "StartDocA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "*cRDOCINFOA;;"
  }
}
function {
  name: "StartDocW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "*cRDOCINFOW;;"
  }
}
function {
  name: "StartPage"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
}
function {
  name: "EndPage"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
}
function {
  name: "StretchBlt"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "StretchDIBits"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*cV;"
  }
  parameter {
    name: ""
    type: "*cRtagBITMAPINFO;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "StrokeAndFillPath"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
}
function {
  name: "StrokePath"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
}
function {
  name: "SwapBuffers"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
}
function {
  name: "TextOutA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "TextOutW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "TranslateCharsetInfo"
  return_type: "I"
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*RCHARSETINFO;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "TransparentBlt"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "UnrealizeObject"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "UpdateColors"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
}
function {
  name: "UpdateICMRegKeyA"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "UpdateICMRegKeyW"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "WidenPath"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
}
function {
  name: "PolyTextOutA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "*cRPOLYTEXTA;;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "PolyTextOutW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "*cRPOLYTEXTW;;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "wglCreateContext"
  return_type: "*RHGLRC__;;"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
}
function {
  name: "wglCreateLayerContext"
  return_type: "*RHGLRC__;;"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "wglCopyContext"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHGLRC__;;"
  }
  parameter {
    name: ""
    type: "*RHGLRC__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "wglDeleteContext"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHGLRC__;;"
  }
}
function {
  name: "wglDescribeLayerPlane"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*RLAYERPLANEDESCRIPTOR;;"
  }
}
function {
  name: "wglGetCurrentContext"
  return_type: "*RHGLRC__;;"
}
function {
  name: "wglGetCurrentDC"
  return_type: "*RHDC__;;"
}
function {
  name: "wglGetLayerPaletteEntries"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*cUI;"
  }
}
function {
  name: "wglGetProcAddress"
  return_type: "*(.)I;"
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "wglMakeCurrent"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "*RHGLRC__;;"
  }
}
function {
  name: "wglRealizeLayerPalette"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "wglSetLayerPaletteEntries"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*cUI;"
  }
}
function {
  name: "wglShareLists"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHGLRC__;;"
  }
  parameter {
    name: ""
    type: "*RHGLRC__;;"
  }
}
function {
  name: "wglSwapLayerBuffers"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "wglUseFontBitmapsA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "wglUseFontBitmapsW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "wglUseFontOutlinesA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "F"
  }
  parameter {
    name: ""
    type: "F"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*RGLYPHMETRICSFLOAT;;"
  }
}
function {
  name: "wglUseFontOutlinesW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "F"
  }
  parameter {
    name: ""
    type: "F"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*RGLYPHMETRICSFLOAT;;"
  }
}
function {
  name: "GetSysColor"
  return_type: "UI"
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "SetSysColors"
  return_type: "I"
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*cI;"
  }
  parameter {
    name: ""
    type: "*cUI;"
  }
}
function {
  name: "ChangeDisplaySettingsA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RDEVMODEA;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "ChangeDisplaySettingsW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RDEVMODEW;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "ChangeDisplaySettingsExA"
  return_type: "I"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*RDEVMODEA;;"
  }
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "ChangeDisplaySettingsExW"
  return_type: "I"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*RDEVMODEW;;"
  }
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "CreateDesktopA"
  return_type: "*RHDESK__;;"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*RDEVMODEA;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*R_SECURITY_ATTRIBUTES;;"
  }
}
function {
  name: "CreateDesktopW"
  return_type: "*RHDESK__;;"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*RDEVMODEW;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*R_SECURITY_ATTRIBUTES;;"
  }
}
function {
  name: "EnumDisplayDevicesA"
  return_type: "I"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*RDISPLAY_DEVICEA;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "EnumDisplayDevicesW"
  return_type: "I"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*RDISPLAY_DEVICEW;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "EnumDisplaySettingsA"
  return_type: "I"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*RDEVMODEA;;"
  }
}
function {
  name: "EnumDisplaySettingsW"
  return_type: "I"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*RDEVMODEW;;"
  }
}
function {
  name: "EnumDisplaySettingsExA"
  return_type: "I"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*RDEVMODEA;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "EnumDisplaySettingsExW"
  return_type: "I"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*RDEVMODEW;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "UpdateLayeredWindow"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "*RtagPOINT;;"
  }
  parameter {
    name: ""
    type: "*RtagSIZE;;"
  }
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "*RtagPOINT;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*R_BLENDFUNCTION;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "UpdateLayeredWindowIndirect"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*cRtagUPDATELAYEREDWINDOWINFO;;"
  }
}
function {
  name: "ActivateKeyboardLayout"
  return_type: "*RHKL__;;"
  parameter {
    name: ""
    type: "*RHKL__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "AdjustWindowRect"
  return_type: "I"
  parameter {
    name: ""
    type: "*RtagRECT;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "AdjustWindowRectEx"
  return_type: "I"
  parameter {
    name: ""
    type: "*RtagRECT;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "AllowSetForegroundWindow"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "AnimateWindow"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "AnyPopup"
  return_type: "I"
}
function {
  name: "AppendMenuA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHMENU__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "AppendMenuW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHMENU__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
}
function {
  name: "ArrangeIconicWindows"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
}
function {
  name: "AttachThreadInput"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "BeginDeferWindowPos"
  return_type: "*V;"
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "BeginPaint"
  return_type: "*RHDC__;;"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*RtagPAINTSTRUCT;;"
  }
}
function {
  name: "BringWindowToTop"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
}
function {
  name: "BroadcastSystemMessageA"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "BroadcastSystemMessageW"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "BroadcastSystemMessageExA"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*RtagBSMINFO;;"
  }
}
function {
  name: "BroadcastSystemMessageExW"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*RtagBSMINFO;;"
  }
}
function {
  name: "CalcChildScroll"
  return_type: "V"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "CallMsgFilterA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RtagMSG;;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "CallMsgFilterW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RtagMSG;;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "CallNextHookEx"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHHOOK__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "CallWindowProcA"
  return_type: "I"
  parameter {
    name: ""
    type: "*(*RHWND__;;UIUII)I;"
  }
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "CallWindowProcW"
  return_type: "I"
  parameter {
    name: ""
    type: "*(*RHWND__;;UIUII)I;"
  }
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "CascadeWindows"
  return_type: "US"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cRtagRECT;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*c*RHWND__;;;"
  }
}
function {
  name: "ChangeClipboardChain"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
}
function {
  name: "ChangeMenuA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHMENU__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "ChangeMenuW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHMENU__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "CharLowerA"
  return_type: "*C;"
  parameter {
    name: ""
    type: "*C;"
  }
}
function {
  name: "CharLowerW"
  return_type: "*US;"
  parameter {
    name: ""
    type: "*US;"
  }
}
function {
  name: "CharLowerBuffA"
  return_type: "UI"
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "CharLowerBuffW"
  return_type: "UI"
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "CharNextA"
  return_type: "*C;"
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "CharNextW"
  return_type: "*US;"
  parameter {
    name: ""
    type: "*cUS;"
  }
}
function {
  name: "CharNextExA"
  return_type: "*C;"
  parameter {
    name: ""
    type: "US"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "CharPrevA"
  return_type: "*C;"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "CharPrevW"
  return_type: "*US;"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
}
function {
  name: "CharPrevExA"
  return_type: "*C;"
  parameter {
    name: ""
    type: "US"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "CharUpperA"
  return_type: "*C;"
  parameter {
    name: ""
    type: "*C;"
  }
}
function {
  name: "CharUpperW"
  return_type: "*US;"
  parameter {
    name: ""
    type: "*US;"
  }
}
function {
  name: "CharUpperBuffA"
  return_type: "UI"
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "CharUpperBuffW"
  return_type: "UI"
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "CharToOemA"
  return_type: "I"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*C;"
  }
}
function {
  name: "CharToOemW"
  return_type: "I"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*C;"
  }
}
function {
  name: "CharToOemBuffA"
  return_type: "I"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "CharToOemBuffW"
  return_type: "I"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "CheckDlgButton"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "CheckMenuItem"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHMENU__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "CheckMenuRadioItem"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHMENU__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "CheckRadioButton"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "ChildWindowFromPoint"
  return_type: "*RHWND__;;"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "RtagPOINT;"
  }
}
function {
  name: "ChildWindowFromPointEx"
  return_type: "*RHWND__;;"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "RtagPOINT;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "ClientToScreen"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*RtagPOINT;;"
  }
}
function {
  name: "ClipCursor"
  return_type: "I"
  parameter {
    name: ""
    type: "*cRtagRECT;;"
  }
}
function {
  name: "CloseClipboard"
  return_type: "I"
}
function {
  name: "CloseDesktop"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDESK__;;"
  }
}
function {
  name: "CloseWindow"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
}
function {
  name: "CloseWindowStation"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWINSTA__;;"
  }
}
function {
  name: "CopyAcceleratorTableA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHACCEL__;;"
  }
  parameter {
    name: ""
    type: "*RtagACCEL;;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "CopyAcceleratorTableW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHACCEL__;;"
  }
  parameter {
    name: ""
    type: "*RtagACCEL;;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "CopyIcon"
  return_type: "*RHICON__;;"
  parameter {
    name: ""
    type: "*RHICON__;;"
  }
}
function {
  name: "CopyImage"
  return_type: "*V;"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "CopyRect"
  return_type: "I"
  parameter {
    name: ""
    type: "*RtagRECT;;"
  }
  parameter {
    name: ""
    type: "*cRtagRECT;;"
  }
}
function {
  name: "CountClipboardFormats"
  return_type: "I"
}
function {
  name: "CreateAcceleratorTableA"
  return_type: "*RHACCEL__;;"
  parameter {
    name: ""
    type: "*RtagACCEL;;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "CreateAcceleratorTableW"
  return_type: "*RHACCEL__;;"
  parameter {
    name: ""
    type: "*RtagACCEL;;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "CreateIconIndirect"
  return_type: "*RHICON__;;"
  parameter {
    name: ""
    type: "*R_ICONINFO;;"
  }
}
function {
  name: "CreateCaret"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*RHBITMAP__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "CreateCursor"
  return_type: "*RHICON__;;"
  parameter {
    name: ""
    type: "*RHINSTANCE__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*cV;"
  }
  parameter {
    name: ""
    type: "*cV;"
  }
}
function {
  name: "CreateDialogIndirectParamA"
  return_type: "*RHWND__;;"
  parameter {
    name: ""
    type: "*RHINSTANCE__;;"
  }
  parameter {
    name: ""
    type: "*cRtagDLGTEMPLATE;;"
  }
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*(*RHWND__;;UIUII)I;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "CreateDialogIndirectParamW"
  return_type: "*RHWND__;;"
  parameter {
    name: ""
    type: "*RHINSTANCE__;;"
  }
  parameter {
    name: ""
    type: "*cRtagDLGTEMPLATE;;"
  }
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*(*RHWND__;;UIUII)I;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "CreateDialogParamA"
  return_type: "*RHWND__;;"
  parameter {
    name: ""
    type: "*RHINSTANCE__;;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*(*RHWND__;;UIUII)I;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "CreateDialogParamW"
  return_type: "*RHWND__;;"
  parameter {
    name: ""
    type: "*RHINSTANCE__;;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*(*RHWND__;;UIUII)I;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "CreateIcon"
  return_type: "*RHICON__;;"
  parameter {
    name: ""
    type: "*RHINSTANCE__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "UB"
  }
  parameter {
    name: ""
    type: "UB"
  }
  parameter {
    name: ""
    type: "*cV;"
  }
  parameter {
    name: ""
    type: "*cV;"
  }
}
function {
  name: "CreateIconFromResource"
  return_type: "*RHICON__;;"
  parameter {
    name: ""
    type: "*UB;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "CreateIconFromResourceEx"
  return_type: "*RHICON__;;"
  parameter {
    name: ""
    type: "*UB;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "CreateMenu"
  return_type: "*RHMENU__;;"
}
function {
  name: "CreatePopupMenu"
  return_type: "*RHMENU__;;"
}
function {
  name: "CreateWindowExA"
  return_type: "*RHWND__;;"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*RHMENU__;;"
  }
  parameter {
    name: ""
    type: "*RHINSTANCE__;;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "CreateWindowExW"
  return_type: "*RHWND__;;"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*RHMENU__;;"
  }
  parameter {
    name: ""
    type: "*RHINSTANCE__;;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "CreateWindowStationA"
  return_type: "*RHWINSTA__;;"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*R_SECURITY_ATTRIBUTES;;"
  }
}
function {
  name: "CreateWindowStationW"
  return_type: "*RHWINSTA__;;"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*R_SECURITY_ATTRIBUTES;;"
  }
}
function {
  name: "CreateMDIWindowA"
  return_type: "*RHWND__;;"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*RHINSTANCE__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "CreateMDIWindowW"
  return_type: "*RHWND__;;"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*RHINSTANCE__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "DefDlgProcA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "DefDlgProcW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "DeferWindowPos"
  return_type: "*V;"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "DefFrameProcA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "DefFrameProcW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "DefMDIChildProcA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "DefMDIChildProcW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "DefRawInputProc"
  return_type: "I"
  parameter {
    name: ""
    type: "**RtagRAWINPUT;;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "DefWindowProcA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "DefWindowProcW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "DeleteMenu"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHMENU__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "DestroyAcceleratorTable"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHACCEL__;;"
  }
}
function {
  name: "DestroyCaret"
  return_type: "I"
}
function {
  name: "DestroyCursor"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHICON__;;"
  }
}
function {
  name: "DestroyIcon"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHICON__;;"
  }
}
function {
  name: "DestroyMenu"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHMENU__;;"
  }
}
function {
  name: "DestroyWindow"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
}
function {
  name: "DialogBoxIndirectParamA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHINSTANCE__;;"
  }
  parameter {
    name: ""
    type: "*cRtagDLGTEMPLATE;;"
  }
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*(*RHWND__;;UIUII)I;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "DialogBoxIndirectParamW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHINSTANCE__;;"
  }
  parameter {
    name: ""
    type: "*cRtagDLGTEMPLATE;;"
  }
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*(*RHWND__;;UIUII)I;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "DialogBoxParamA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHINSTANCE__;;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*(*RHWND__;;UIUII)I;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "DialogBoxParamW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHINSTANCE__;;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*(*RHWND__;;UIUII)I;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "DispatchMessageA"
  return_type: "I"
  parameter {
    name: ""
    type: "*cRtagMSG;;"
  }
}
function {
  name: "DispatchMessageW"
  return_type: "I"
  parameter {
    name: ""
    type: "*cRtagMSG;;"
  }
}
function {
  name: "DlgDirListA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "DlgDirListW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "DlgDirListComboBoxA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "DlgDirListComboBoxW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "DlgDirSelectComboBoxExA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "DlgDirSelectComboBoxExW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "DlgDirSelectExA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "DlgDirSelectExW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "DragDetect"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "RtagPOINT;"
  }
}
function {
  name: "DragObject"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*RHICON__;;"
  }
}
function {
  name: "DrawAnimatedRects"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*cRtagRECT;;"
  }
  parameter {
    name: ""
    type: "*cRtagRECT;;"
  }
}
function {
  name: "DrawCaption"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "*cRtagRECT;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "DrawCaptionTempA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "*cRtagRECT;;"
  }
  parameter {
    name: ""
    type: "*RHFONT__;;"
  }
  parameter {
    name: ""
    type: "*RHICON__;;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "DrawCaptionTempW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "*cRtagRECT;;"
  }
  parameter {
    name: ""
    type: "*RHFONT__;;"
  }
  parameter {
    name: ""
    type: "*RHICON__;;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "DrawEdge"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "*RtagRECT;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "DrawFocusRect"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "*cRtagRECT;;"
  }
}
function {
  name: "DrawFrameControl"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "*RtagRECT;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "DrawIcon"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*RHICON__;;"
  }
}
function {
  name: "DrawIconEx"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*RHICON__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*RHBRUSH__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "DrawMenuBar"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
}
function {
  name: "DrawStateA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "*RHBRUSH__;;"
  }
  parameter {
    name: ""
    type: "*(*RHDC__;;IUIII)I;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "DrawStateW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "*RHBRUSH__;;"
  }
  parameter {
    name: ""
    type: "*(*RHDC__;;IUIII)I;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "DrawTextA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*RtagRECT;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "DrawTextW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*RtagRECT;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "DrawTextExA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*RtagRECT;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*RtagDRAWTEXTPARAMS;;"
  }
}
function {
  name: "DrawTextExW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*RtagRECT;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*RtagDRAWTEXTPARAMS;;"
  }
}
function {
  name: "EmptyClipboard"
  return_type: "I"
}
function {
  name: "EnableMenuItem"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHMENU__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "EnableScrollBar"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "EnableWindow"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "EndDeferWindowPos"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "EndDialog"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "EndMenu"
  return_type: "I"
}
function {
  name: "EndPaint"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*cRtagPAINTSTRUCT;;"
  }
}
function {
  name: "EnumChildWindows"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*(*RHWND__;;I)I;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "EnumClipboardFormats"
  return_type: "UI"
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "EnumDesktopsA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWINSTA__;;"
  }
  parameter {
    name: ""
    type: "*(*C;I)I;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "EnumDesktopsW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWINSTA__;;"
  }
  parameter {
    name: ""
    type: "*(*US;I)I;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "EnumDesktopWindows"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDESK__;;"
  }
  parameter {
    name: ""
    type: "*(*RHWND__;;I)I;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "EnumDisplayMonitors"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "*RtagRECT;;"
  }
  parameter {
    name: ""
    type: "*(*RHMONITOR__;;*RHDC__;;*RtagRECT;;I)I;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "EnumPropsA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*(*RHWND__;;*cC;*V;)I;"
  }
}
function {
  name: "EnumPropsW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*(*RHWND__;;*cUS;*V;)I;"
  }
}
function {
  name: "EnumPropsExA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*(*RHWND__;;*C;*V;UI)I;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "EnumPropsExW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*(*RHWND__;;*US;*V;UI)I;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "EnumThreadWindows"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*(*RHWND__;;I)I;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "EnumWindows"
  return_type: "I"
  parameter {
    name: ""
    type: "*(*RHWND__;;I)I;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "EnumWindowStationsA"
  return_type: "I"
  parameter {
    name: ""
    type: "*(*C;I)I;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "EnumWindowStationsW"
  return_type: "I"
  parameter {
    name: ""
    type: "*(*US;I)I;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "EqualRect"
  return_type: "I"
  parameter {
    name: ""
    type: "*cRtagRECT;;"
  }
  parameter {
    name: ""
    type: "*cRtagRECT;;"
  }
}
function {
  name: "ExcludeUpdateRgn"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
}
function {
  name: "ExitWindowsEx"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "FillRect"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "*cRtagRECT;;"
  }
  parameter {
    name: ""
    type: "*RHBRUSH__;;"
  }
}
function {
  name: "FindWindowA"
  return_type: "*RHWND__;;"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "FindWindowW"
  return_type: "*RHWND__;;"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
}
function {
  name: "FindWindowExA"
  return_type: "*RHWND__;;"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "FindWindowExW"
  return_type: "*RHWND__;;"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
}
function {
  name: "FlashWindow"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "FlashWindowEx"
  return_type: "I"
  parameter {
    name: ""
    type: "*RFLASHWINFO;;"
  }
}
function {
  name: "FrameRect"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "*cRtagRECT;;"
  }
  parameter {
    name: ""
    type: "*RHBRUSH__;;"
  }
}
function {
  name: "GetActiveWindow"
  return_type: "*RHWND__;;"
}
function {
  name: "GetAltTabInfoA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*RALTTABINFO;;"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "GetAltTabInfoW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*RALTTABINFO;;"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "GetAncestor"
  return_type: "*RHWND__;;"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "GetAppCompatFlags"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHTASK__;;"
  }
}
function {
  name: "GetAsyncKeyState"
  return_type: "S"
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "GetCapture"
  return_type: "*RHWND__;;"
}
function {
  name: "GetCaretBlinkTime"
  return_type: "UI"
}
function {
  name: "GetCaretPos"
  return_type: "I"
  parameter {
    name: ""
    type: "*RtagPOINT;;"
  }
}
function {
  name: "GetClassInfoA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHINSTANCE__;;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*RtagWNDCLASSA;;"
  }
}
function {
  name: "GetClassInfoW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHINSTANCE__;;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*RtagWNDCLASSW;;"
  }
}
function {
  name: "GetClassInfoExA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHINSTANCE__;;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*RtagWNDCLASSEXA;;"
  }
}
function {
  name: "GetClassInfoExW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHINSTANCE__;;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*RtagWNDCLASSEXW;;"
  }
}
function {
  name: "GetClassLongA"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "GetClassLongW"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "GetClassLongPtrA"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "GetClassLongPtrW"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "GetClassNameA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "GetClassNameW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "GetClassWord"
  return_type: "US"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "GetClientRect"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*RtagRECT;;"
  }
}
function {
  name: "GetClipboardData"
  return_type: "*V;"
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "GetClipboardFormatNameA"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "GetClipboardFormatNameW"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "GetClipboardOwner"
  return_type: "*RHWND__;;"
}
function {
  name: "GetClipboardSequenceNumber"
  return_type: "UI"
}
function {
  name: "GetClipboardViewer"
  return_type: "*RHWND__;;"
}
function {
  name: "GetClipCursor"
  return_type: "I"
  parameter {
    name: ""
    type: "*RtagRECT;;"
  }
}
function {
  name: "GetComboBoxInfo"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*RtagCOMBOBOXINFO;;"
  }
}
function {
  name: "GetCursor"
  return_type: "*RHICON__;;"
}
function {
  name: "GetCursorInfo"
  return_type: "I"
  parameter {
    name: ""
    type: "*RtagCURSORINFO;;"
  }
}
function {
  name: "GetCursorFrameInfo"
  return_type: "*RHICON__;;"
  parameter {
    name: ""
    type: "*RHICON__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "GetCursorPos"
  return_type: "I"
  parameter {
    name: ""
    type: "*RtagPOINT;;"
  }
}
function {
  name: "GetDC"
  return_type: "*RHDC__;;"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
}
function {
  name: "GetDCEx"
  return_type: "*RHDC__;;"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*RHRGN__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "GetDesktopWindow"
  return_type: "*RHWND__;;"
}
function {
  name: "GetDialogBaseUnits"
  return_type: "UI"
}
function {
  name: "GetDlgCtrlID"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
}
function {
  name: "GetDlgItem"
  return_type: "*RHWND__;;"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "GetDlgItemInt"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*I;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "GetDlgItemTextA"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "GetDlgItemTextW"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "GetDoubleClickTime"
  return_type: "UI"
}
function {
  name: "GetFocus"
  return_type: "*RHWND__;;"
}
function {
  name: "GetForegroundWindow"
  return_type: "*RHWND__;;"
}
function {
  name: "GetGUIThreadInfo"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*RtagGUITHREADINFO;;"
  }
}
function {
  name: "GetIconInfo"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHICON__;;"
  }
  parameter {
    name: ""
    type: "*R_ICONINFO;;"
  }
}
function {
  name: "GetIconInfoExA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHICON__;;"
  }
  parameter {
    name: ""
    type: "*R_ICONINFOEXA;;"
  }
}
function {
  name: "GetIconInfoExW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHICON__;;"
  }
  parameter {
    name: ""
    type: "*R_ICONINFOEXW;;"
  }
}
function {
  name: "GetInputState"
  return_type: "I"
}
function {
  name: "GetInternalWindowPos"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*RtagRECT;;"
  }
  parameter {
    name: ""
    type: "*RtagPOINT;;"
  }
}
function {
  name: "GetKBCodePage"
  return_type: "UI"
}
function {
  name: "GetKeyboardLayout"
  return_type: "*RHKL__;;"
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "GetKeyboardLayoutList"
  return_type: "UI"
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "**RHKL__;;;"
  }
}
function {
  name: "GetKeyboardState"
  return_type: "I"
  parameter {
    name: ""
    type: "*UB;"
  }
}
function {
  name: "GetKeyboardType"
  return_type: "I"
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "GetKeyNameTextA"
  return_type: "I"
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "GetKeyNameTextW"
  return_type: "I"
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "GetKeyboardLayoutNameA"
  return_type: "I"
  parameter {
    name: ""
    type: "*C;"
  }
}
function {
  name: "GetKeyboardLayoutNameW"
  return_type: "I"
  parameter {
    name: ""
    type: "*US;"
  }
}
function {
  name: "GetKeyState"
  return_type: "S"
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "GetLastActivePopup"
  return_type: "*RHWND__;;"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
}
function {
  name: "GetLastInputInfo"
  return_type: "I"
  parameter {
    name: ""
    type: "*RtagLASTINPUTINFO;;"
  }
}
function {
  name: "GetRawInputBuffer"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RtagRAWINPUT;;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "GetRawInputData"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHRAWINPUT__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "GetRawInputDeviceInfoA"
  return_type: "UI"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "GetRawInputDeviceInfoW"
  return_type: "UI"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "GetRawInputDeviceList"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RtagRAWINPUTDEVICELIST;;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "GetRegisteredRawInputDevices"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RtagRAWINPUTDEVICE;;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "GetLayeredWindowAttributes"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UB;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "GetMenu"
  return_type: "*RHMENU__;;"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
}
function {
  name: "GetMenuBarInfo"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*RtagMENUBARINFO;;"
  }
}
function {
  name: "GetMenuCheckMarkDimensions"
  return_type: "UI"
}
function {
  name: "GetMenuContextHelpId"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHMENU__;;"
  }
}
function {
  name: "GetMenuDefaultItem"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHMENU__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "GetMenuInfo"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHMENU__;;"
  }
  parameter {
    name: ""
    type: "*RtagMENUINFO;;"
  }
}
function {
  name: "GetMenuItemCount"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHMENU__;;"
  }
}
function {
  name: "GetMenuItemID"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHMENU__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "GetMenuItemInfoA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHMENU__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*RtagMENUITEMINFOA;;"
  }
}
function {
  name: "GetMenuItemInfoW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHMENU__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*RtagMENUITEMINFOW;;"
  }
}
function {
  name: "GetMenuItemRect"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*RHMENU__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*RtagRECT;;"
  }
}
function {
  name: "GetMenuState"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHMENU__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "GetMenuStringA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHMENU__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "GetMenuStringW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHMENU__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "GetMessageA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RtagMSG;;"
  }
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "GetMessageW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RtagMSG;;"
  }
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "GetMessageExtraInfo"
  return_type: "I"
}
function {
  name: "GetMessagePos"
  return_type: "UI"
}
function {
  name: "GetMessageTime"
  return_type: "I"
}
function {
  name: "GetMonitorInfoA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHMONITOR__;;"
  }
  parameter {
    name: ""
    type: "*RtagMONITORINFO;;"
  }
}
function {
  name: "GetMonitorInfoW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHMONITOR__;;"
  }
  parameter {
    name: ""
    type: "*RtagMONITORINFO;;"
  }
}
function {
  name: "GetNextDlgGroupItem"
  return_type: "*RHWND__;;"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "GetNextDlgTabItem"
  return_type: "*RHWND__;;"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "GetOpenClipboardWindow"
  return_type: "*RHWND__;;"
}
function {
  name: "GetParent"
  return_type: "*RHWND__;;"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
}
function {
  name: "GetPriorityClipboardFormat"
  return_type: "I"
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "GetProcessDefaultLayout"
  return_type: "I"
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "GetPropA"
  return_type: "*V;"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "GetPropW"
  return_type: "*V;"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
}
function {
  name: "GetQueueStatus"
  return_type: "UI"
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "GetScrollInfo"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*RtagSCROLLINFO;;"
  }
}
function {
  name: "GetScrollBarInfo"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*RtagSCROLLBARINFO;;"
  }
}
function {
  name: "GetScrollPos"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "GetScrollRange"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*I;"
  }
  parameter {
    name: ""
    type: "*I;"
  }
}
function {
  name: "GetShellWindow"
  return_type: "*RHWND__;;"
}
function {
  name: "GetSubMenu"
  return_type: "*RHMENU__;;"
  parameter {
    name: ""
    type: "*RHMENU__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "GetSysColorBrush"
  return_type: "*RHBRUSH__;;"
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "GetSystemMenu"
  return_type: "*RHMENU__;;"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "GetSystemMetrics"
  return_type: "I"
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "GetTabbedTextExtentA"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*cI;"
  }
}
function {
  name: "GetTabbedTextExtentW"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*cI;"
  }
}
function {
  name: "GetTitleBarInfo"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*RtagTITLEBARINFO;;"
  }
}
function {
  name: "GetThreadDesktop"
  return_type: "*RHDESK__;;"
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "GetTopWindow"
  return_type: "*RHWND__;;"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
}
function {
  name: "GetUpdateRect"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*RtagRECT;;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "GetUpdateRgn"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*RHRGN__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "GetUserObjectInformationA"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "GetUserObjectInformationW"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "GetUserObjectSecurity"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "GetWindow"
  return_type: "*RHWND__;;"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "GetWindowContextHelpId"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
}
function {
  name: "GetWindowDC"
  return_type: "*RHDC__;;"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
}
function {
  name: "GetWindowInfo"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*RtagWINDOWINFO;;"
  }
}
function {
  name: "GetWindowLongA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "GetWindowLongW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "GetWindowLongPtrA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "GetWindowLongPtrW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "GetWindowModuleFileNameA"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "GetWindowModuleFileNameW"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "GetWindowPlacement"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*RtagWINDOWPLACEMENT;;"
  }
}
function {
  name: "GetWindowRect"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*RtagRECT;;"
  }
}
function {
  name: "GetWindowRgn"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*RHRGN__;;"
  }
}
function {
  name: "GetProcessWindowStation"
  return_type: "*RHWINSTA__;;"
}
function {
  name: "GetWindowTextA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "GetWindowTextW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "GetWindowTextLengthA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
}
function {
  name: "GetWindowTextLengthW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
}
function {
  name: "GetWindowThreadProcessId"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "GetWindowWord"
  return_type: "US"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "GrayStringA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "*RHBRUSH__;;"
  }
  parameter {
    name: ""
    type: "*(*RHDC__;;II)I;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "GrayStringW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "*RHBRUSH__;;"
  }
  parameter {
    name: ""
    type: "*(*RHDC__;;II)I;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "HideCaret"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
}
function {
  name: "HiliteMenuItem"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*RHMENU__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "InflateRect"
  return_type: "I"
  parameter {
    name: ""
    type: "*RtagRECT;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "InSendMessage"
  return_type: "I"
}
function {
  name: "InSendMessageEx"
  return_type: "UI"
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "InsertMenuA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHMENU__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "InsertMenuW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHMENU__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
}
function {
  name: "InsertMenuItemA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHMENU__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*cRtagMENUITEMINFOA;;"
  }
}
function {
  name: "InsertMenuItemW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHMENU__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*cRtagMENUITEMINFOW;;"
  }
}
function {
  name: "InternalGetWindowText"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "IntersectRect"
  return_type: "I"
  parameter {
    name: ""
    type: "*RtagRECT;;"
  }
  parameter {
    name: ""
    type: "*cRtagRECT;;"
  }
  parameter {
    name: ""
    type: "*cRtagRECT;;"
  }
}
function {
  name: "InvalidateRect"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*cRtagRECT;;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "InvalidateRgn"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*RHRGN__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "InvertRect"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "*cRtagRECT;;"
  }
}
function {
  name: "IsCharAlphaA"
  return_type: "I"
  parameter {
    name: ""
    type: "C"
  }
}
function {
  name: "IsCharAlphaW"
  return_type: "I"
  parameter {
    name: ""
    type: "US"
  }
}
function {
  name: "IsCharAlphaNumericA"
  return_type: "I"
  parameter {
    name: ""
    type: "C"
  }
}
function {
  name: "IsCharAlphaNumericW"
  return_type: "I"
  parameter {
    name: ""
    type: "US"
  }
}
function {
  name: "IsCharLowerA"
  return_type: "I"
  parameter {
    name: ""
    type: "C"
  }
}
function {
  name: "IsCharLowerW"
  return_type: "I"
  parameter {
    name: ""
    type: "US"
  }
}
function {
  name: "IsCharUpperA"
  return_type: "I"
  parameter {
    name: ""
    type: "C"
  }
}
function {
  name: "IsCharUpperW"
  return_type: "I"
  parameter {
    name: ""
    type: "US"
  }
}
function {
  name: "IsChild"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
}
function {
  name: "IsClipboardFormatAvailable"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "IsDialogMessageA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*RtagMSG;;"
  }
}
function {
  name: "IsDialogMessageW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*RtagMSG;;"
  }
}
function {
  name: "IsDlgButtonChecked"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "IsGUIThread"
  return_type: "I"
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "IsHungAppWindow"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
}
function {
  name: "IsIconic"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
}
function {
  name: "IsMenu"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHMENU__;;"
  }
}
function {
  name: "IsRectEmpty"
  return_type: "I"
  parameter {
    name: ""
    type: "*cRtagRECT;;"
  }
}
function {
  name: "IsWinEventHookInstalled"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "IsWindow"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
}
function {
  name: "IsWindowEnabled"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
}
function {
  name: "IsWindowUnicode"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
}
function {
  name: "IsWindowVisible"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
}
function {
  name: "IsZoomed"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
}
function {
  name: "KillSystemTimer"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "KillTimer"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "LoadAcceleratorsA"
  return_type: "*RHACCEL__;;"
  parameter {
    name: ""
    type: "*RHINSTANCE__;;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "LoadAcceleratorsW"
  return_type: "*RHACCEL__;;"
  parameter {
    name: ""
    type: "*RHINSTANCE__;;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
}
function {
  name: "LoadBitmapA"
  return_type: "*RHBITMAP__;;"
  parameter {
    name: ""
    type: "*RHINSTANCE__;;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "LoadBitmapW"
  return_type: "*RHBITMAP__;;"
  parameter {
    name: ""
    type: "*RHINSTANCE__;;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
}
function {
  name: "LoadCursorA"
  return_type: "*RHICON__;;"
  parameter {
    name: ""
    type: "*RHINSTANCE__;;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "LoadCursorW"
  return_type: "*RHICON__;;"
  parameter {
    name: ""
    type: "*RHINSTANCE__;;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
}
function {
  name: "LoadCursorFromFileA"
  return_type: "*RHICON__;;"
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "LoadCursorFromFileW"
  return_type: "*RHICON__;;"
  parameter {
    name: ""
    type: "*cUS;"
  }
}
function {
  name: "LoadIconA"
  return_type: "*RHICON__;;"
  parameter {
    name: ""
    type: "*RHINSTANCE__;;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "LoadIconW"
  return_type: "*RHICON__;;"
  parameter {
    name: ""
    type: "*RHINSTANCE__;;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
}
function {
  name: "LoadImageA"
  return_type: "*V;"
  parameter {
    name: ""
    type: "*RHINSTANCE__;;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "LoadImageW"
  return_type: "*V;"
  parameter {
    name: ""
    type: "*RHINSTANCE__;;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "LoadKeyboardLayoutA"
  return_type: "*RHKL__;;"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "LoadKeyboardLayoutW"
  return_type: "*RHKL__;;"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "LoadMenuA"
  return_type: "*RHMENU__;;"
  parameter {
    name: ""
    type: "*RHINSTANCE__;;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "LoadMenuW"
  return_type: "*RHMENU__;;"
  parameter {
    name: ""
    type: "*RHINSTANCE__;;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
}
function {
  name: "LoadMenuIndirectA"
  return_type: "*RHMENU__;;"
  parameter {
    name: ""
    type: "*cV;"
  }
}
function {
  name: "LoadMenuIndirectW"
  return_type: "*RHMENU__;;"
  parameter {
    name: ""
    type: "*cV;"
  }
}
function {
  name: "LoadStringA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHINSTANCE__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "LoadStringW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHINSTANCE__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "LockSetForegroundWindow"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "LockWindowUpdate"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
}
function {
  name: "LookupIconIdFromDirectory"
  return_type: "I"
  parameter {
    name: ""
    type: "*UB;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "LookupIconIdFromDirectoryEx"
  return_type: "I"
  parameter {
    name: ""
    type: "*UB;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "MapVirtualKeyA"
  return_type: "UI"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "MapVirtualKeyW"
  return_type: "UI"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "MapVirtualKeyExA"
  return_type: "UI"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*RHKL__;;"
  }
}
function {
  name: "MapVirtualKeyExW"
  return_type: "UI"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*RHKL__;;"
  }
}
function {
  name: "MapDialogRect"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*RtagRECT;;"
  }
}
function {
  name: "MapWindowPoints"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*RtagPOINT;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "MenuItemFromPoint"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*RHMENU__;;"
  }
  parameter {
    name: ""
    type: "RtagPOINT;"
  }
}
function {
  name: "MessageBeep"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "MessageBoxA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "MessageBoxW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "MessageBoxExA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "US"
  }
}
function {
  name: "MessageBoxExW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "US"
  }
}
function {
  name: "MessageBoxIndirectA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RtagMSGBOXPARAMSA;;"
  }
}
function {
  name: "MessageBoxIndirectW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RtagMSGBOXPARAMSW;;"
  }
}
function {
  name: "ModifyMenuA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHMENU__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "ModifyMenuW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHMENU__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
}
function {
  name: "MonitorFromPoint"
  return_type: "*RHMONITOR__;;"
  parameter {
    name: ""
    type: "RtagPOINT;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "MonitorFromRect"
  return_type: "*RHMONITOR__;;"
  parameter {
    name: ""
    type: "*RtagRECT;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "MonitorFromWindow"
  return_type: "*RHMONITOR__;;"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "MoveWindow"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "MsgWaitForMultipleObjects"
  return_type: "UI"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*c*V;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "MsgWaitForMultipleObjectsEx"
  return_type: "UI"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*c*V;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "NotifyWinEvent"
  return_type: "V"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "OemKeyScan"
  return_type: "UI"
  parameter {
    name: ""
    type: "US"
  }
}
function {
  name: "OemToCharA"
  return_type: "I"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*C;"
  }
}
function {
  name: "OemToCharW"
  return_type: "I"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*US;"
  }
}
function {
  name: "OemToCharBuffA"
  return_type: "I"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "OemToCharBuffW"
  return_type: "I"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "OffsetRect"
  return_type: "I"
  parameter {
    name: ""
    type: "*RtagRECT;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "OpenClipboard"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
}
function {
  name: "OpenDesktopA"
  return_type: "*RHDESK__;;"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "OpenDesktopW"
  return_type: "*RHDESK__;;"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "OpenIcon"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
}
function {
  name: "OpenInputDesktop"
  return_type: "*RHDESK__;;"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "OpenWindowStationA"
  return_type: "*RHWINSTA__;;"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "OpenWindowStationW"
  return_type: "*RHWINSTA__;;"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "PaintDesktop"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
}
function {
  name: "PeekMessageA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RtagMSG;;"
  }
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "PeekMessageW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RtagMSG;;"
  }
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "PostMessageA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "PostMessageW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "PostQuitMessage"
  return_type: "V"
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "PostThreadMessageA"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "PostThreadMessageW"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "PrivateExtractIconExA"
  return_type: "UI"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "**RHICON__;;;"
  }
  parameter {
    name: ""
    type: "**RHICON__;;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "PrivateExtractIconExW"
  return_type: "UI"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "**RHICON__;;;"
  }
  parameter {
    name: ""
    type: "**RHICON__;;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "PrivateExtractIconsA"
  return_type: "UI"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "**RHICON__;;;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "PrivateExtractIconsW"
  return_type: "UI"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "**RHICON__;;;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "PtInRect"
  return_type: "I"
  parameter {
    name: ""
    type: "*cRtagRECT;;"
  }
  parameter {
    name: ""
    type: "RtagPOINT;"
  }
}
function {
  name: "RealChildWindowFromPoint"
  return_type: "*RHWND__;;"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "RtagPOINT;"
  }
}
function {
  name: "RealGetWindowClassA"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "RealGetWindowClassW"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "RedrawWindow"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*cRtagRECT;;"
  }
  parameter {
    name: ""
    type: "*RHRGN__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "RegisterClassA"
  return_type: "US"
  parameter {
    name: ""
    type: "*cRtagWNDCLASSA;;"
  }
}
function {
  name: "RegisterClassW"
  return_type: "US"
  parameter {
    name: ""
    type: "*cRtagWNDCLASSW;;"
  }
}
function {
  name: "RegisterClassExA"
  return_type: "US"
  parameter {
    name: ""
    type: "*cRtagWNDCLASSEXA;;"
  }
}
function {
  name: "RegisterClassExW"
  return_type: "US"
  parameter {
    name: ""
    type: "*cRtagWNDCLASSEXW;;"
  }
}
function {
  name: "RegisterClipboardFormatA"
  return_type: "UI"
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "RegisterClipboardFormatW"
  return_type: "UI"
  parameter {
    name: ""
    type: "*cUS;"
  }
}
function {
  name: "RegisterDeviceNotificationA"
  return_type: "*V;"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "RegisterDeviceNotificationW"
  return_type: "*V;"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "RegisterHotKey"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "RegisterRawInputDevices"
  return_type: "I"
  parameter {
    name: ""
    type: "*RtagRAWINPUTDEVICE;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "RegisterWindowMessageA"
  return_type: "UI"
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "RegisterWindowMessageW"
  return_type: "UI"
  parameter {
    name: ""
    type: "*cUS;"
  }
}
function {
  name: "ReleaseCapture"
  return_type: "I"
}
function {
  name: "ReleaseDC"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
}
function {
  name: "RemoveMenu"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHMENU__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "RemovePropA"
  return_type: "*V;"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "RemovePropW"
  return_type: "*V;"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
}
function {
  name: "ReplyMessage"
  return_type: "I"
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "ScreenToClient"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*RtagPOINT;;"
  }
}
function {
  name: "ScrollChildren"
  return_type: "V"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "ScrollDC"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*cRtagRECT;;"
  }
  parameter {
    name: ""
    type: "*cRtagRECT;;"
  }
  parameter {
    name: ""
    type: "*RHRGN__;;"
  }
  parameter {
    name: ""
    type: "*RtagRECT;;"
  }
}
function {
  name: "ScrollWindow"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*cRtagRECT;;"
  }
  parameter {
    name: ""
    type: "*cRtagRECT;;"
  }
}
function {
  name: "ScrollWindowEx"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*cRtagRECT;;"
  }
  parameter {
    name: ""
    type: "*cRtagRECT;;"
  }
  parameter {
    name: ""
    type: "*RHRGN__;;"
  }
  parameter {
    name: ""
    type: "*RtagRECT;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "SendDlgItemMessageA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "SendDlgItemMessageW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "SendInput"
  return_type: "UI"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*RtagINPUT;;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "SendMessageA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "SendMessageW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "SendMessageCallbackA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*(*RHWND__;;UIUII)V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "SendMessageCallbackW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*(*RHWND__;;UIUII)V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "SendMessageTimeoutA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "SendMessageTimeoutW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "SendNotifyMessageA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "SendNotifyMessageW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "SetActiveWindow"
  return_type: "*RHWND__;;"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
}
function {
  name: "SetCapture"
  return_type: "*RHWND__;;"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
}
function {
  name: "SetCaretBlinkTime"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "SetCaretPos"
  return_type: "I"
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "SetClassLongA"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "SetClassLongW"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "SetClassLongPtrA"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "SetClassLongPtrW"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "SetClassWord"
  return_type: "US"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "US"
  }
}
function {
  name: "SetClipboardData"
  return_type: "*V;"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "SetClipboardViewer"
  return_type: "*RHWND__;;"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
}
function {
  name: "SetCursor"
  return_type: "*RHICON__;;"
  parameter {
    name: ""
    type: "*RHICON__;;"
  }
}
function {
  name: "SetCursorPos"
  return_type: "I"
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "SetDebugErrorLevel"
  return_type: "V"
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "SetDeskWallPaper"
  return_type: "I"
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "SetDlgItemInt"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "SetDlgItemTextA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "SetDlgItemTextW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
}
function {
  name: "SetDoubleClickTime"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "SetFocus"
  return_type: "*RHWND__;;"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
}
function {
  name: "SetForegroundWindow"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
}
function {
  name: "SetInternalWindowPos"
  return_type: "V"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*RtagRECT;;"
  }
  parameter {
    name: ""
    type: "*RtagPOINT;;"
  }
}
function {
  name: "SetKeyboardState"
  return_type: "I"
  parameter {
    name: ""
    type: "*UB;"
  }
}
function {
  name: "SetLastErrorEx"
  return_type: "V"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "SetLayeredWindowAttributes"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UB"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "SetMenu"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*RHMENU__;;"
  }
}
function {
  name: "SetMenuContextHelpId"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHMENU__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "SetMenuDefaultItem"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHMENU__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "SetMenuInfo"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHMENU__;;"
  }
  parameter {
    name: ""
    type: "*cRtagMENUINFO;;"
  }
}
function {
  name: "SetMenuItemBitmaps"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHMENU__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*RHBITMAP__;;"
  }
  parameter {
    name: ""
    type: "*RHBITMAP__;;"
  }
}
function {
  name: "SetMenuItemInfoA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHMENU__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*cRtagMENUITEMINFOA;;"
  }
}
function {
  name: "SetMenuItemInfoW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHMENU__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*cRtagMENUITEMINFOW;;"
  }
}
function {
  name: "SetMessageExtraInfo"
  return_type: "I"
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "SetMessageQueue"
  return_type: "I"
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "SetProcessDefaultLayout"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "SetProcessWindowStation"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWINSTA__;;"
  }
}
function {
  name: "SetParent"
  return_type: "*RHWND__;;"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
}
function {
  name: "SetPropA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "SetPropW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "SetRect"
  return_type: "I"
  parameter {
    name: ""
    type: "*RtagRECT;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "SetRectEmpty"
  return_type: "I"
  parameter {
    name: ""
    type: "*RtagRECT;;"
  }
}
function {
  name: "SetScrollInfo"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*cRtagSCROLLINFO;;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "SetScrollPos"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "SetScrollRange"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "SetSystemCursor"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHICON__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "SetSystemMenu"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*RHMENU__;;"
  }
}
function {
  name: "SetSystemTimer"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*(*RHWND__;;UIUIUI)V;"
  }
}
function {
  name: "SetThreadDesktop"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDESK__;;"
  }
}
function {
  name: "SetTimer"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*(*RHWND__;;UIUIUI)V;"
  }
}
function {
  name: "SetUserObjectInformationA"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "SetUserObjectInformationW"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "SetUserObjectSecurity"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "SetWindowContextHelpId"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "SetWindowLongA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "SetWindowLongW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "SetWindowLongPtrA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "SetWindowLongPtrW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "SetWindowPlacement"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*cRtagWINDOWPLACEMENT;;"
  }
}
function {
  name: "SetWindowsHookA"
  return_type: "*RHHOOK__;;"
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*(IUII)I;"
  }
}
function {
  name: "SetWindowsHookW"
  return_type: "*RHHOOK__;;"
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*(IUII)I;"
  }
}
function {
  name: "SetWindowsHookExA"
  return_type: "*RHHOOK__;;"
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*(IUII)I;"
  }
  parameter {
    name: ""
    type: "*RHINSTANCE__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "SetWindowsHookExW"
  return_type: "*RHHOOK__;;"
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*(IUII)I;"
  }
  parameter {
    name: ""
    type: "*RHINSTANCE__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "SetWindowPos"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "SetWindowRgn"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*RHRGN__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "SetWindowTextA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "SetWindowTextW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
}
function {
  name: "SetWindowWord"
  return_type: "US"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "US"
  }
}
function {
  name: "SetWinEventHook"
  return_type: "*RHWINEVENTHOOK__;;"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*RHINSTANCE__;;"
  }
  parameter {
    name: ""
    type: "*(*RHWINEVENTHOOK__;;UI*RHWND__;;IIUIUI)V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "ShowCaret"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
}
function {
  name: "ShowCursor"
  return_type: "I"
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "ShowScrollBar"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "ShowOwnedPopups"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "ShowWindow"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "ShowWindowAsync"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "SubtractRect"
  return_type: "I"
  parameter {
    name: ""
    type: "*RtagRECT;;"
  }
  parameter {
    name: ""
    type: "*cRtagRECT;;"
  }
  parameter {
    name: ""
    type: "*cRtagRECT;;"
  }
}
function {
  name: "SwapMouseButton"
  return_type: "I"
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "SwitchDesktop"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDESK__;;"
  }
}
function {
  name: "SwitchToThisWindow"
  return_type: "V"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "SystemParametersInfoA"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "SystemParametersInfoW"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "TabbedTextOutA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*cI;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "TabbedTextOutW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*cI;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "TileWindows"
  return_type: "US"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cRtagRECT;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*c*RHWND__;;;"
  }
}
function {
  name: "ToAscii"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cUB;"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "ToAsciiEx"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cUB;"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*RHKL__;;"
  }
}
function {
  name: "ToUnicode"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cUB;"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "ToUnicodeEx"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cUB;"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*RHKL__;;"
  }
}
function {
  name: "TrackMouseEvent"
  return_type: "I"
  parameter {
    name: ""
    type: "*RtagTRACKMOUSEEVENT;;"
  }
}
function {
  name: "TrackPopupMenu"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHMENU__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*cRtagRECT;;"
  }
}
function {
  name: "TrackPopupMenuEx"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHMENU__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*RtagTPMPARAMS;;"
  }
}
function {
  name: "TranslateAcceleratorA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*RHACCEL__;;"
  }
  parameter {
    name: ""
    type: "*RtagMSG;;"
  }
}
function {
  name: "TranslateAcceleratorW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*RHACCEL__;;"
  }
  parameter {
    name: ""
    type: "*RtagMSG;;"
  }
}
function {
  name: "TranslateMDISysAccel"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*RtagMSG;;"
  }
}
function {
  name: "TranslateMessage"
  return_type: "I"
  parameter {
    name: ""
    type: "*cRtagMSG;;"
  }
}
function {
  name: "UnhookWinEvent"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWINEVENTHOOK__;;"
  }
}
function {
  name: "UnhookWindowsHook"
  return_type: "I"
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*(IUII)I;"
  }
}
function {
  name: "UnhookWindowsHookEx"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHHOOK__;;"
  }
}
function {
  name: "UnloadKeyboardLayout"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHKL__;;"
  }
}
function {
  name: "UnionRect"
  return_type: "I"
  parameter {
    name: ""
    type: "*RtagRECT;;"
  }
  parameter {
    name: ""
    type: "*cRtagRECT;;"
  }
  parameter {
    name: ""
    type: "*cRtagRECT;;"
  }
}
function {
  name: "UnregisterClassA"
  return_type: "I"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*RHINSTANCE__;;"
  }
}
function {
  name: "UnregisterClassW"
  return_type: "I"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*RHINSTANCE__;;"
  }
}
function {
  name: "UnregisterDeviceNotification"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "UnregisterHotKey"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "UpdateWindow"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
}
function {
  name: "UserHandleGrantAccess"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "UserRealizePalette"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
}
function {
  name: "ValidateRect"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*cRtagRECT;;"
  }
}
function {
  name: "ValidateRgn"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*RHRGN__;;"
  }
}
function {
  name: "VkKeyScanA"
  return_type: "S"
  parameter {
    name: ""
    type: "C"
  }
}
function {
  name: "VkKeyScanW"
  return_type: "S"
  parameter {
    name: ""
    type: "US"
  }
}
function {
  name: "VkKeyScanExA"
  return_type: "US"
  parameter {
    name: ""
    type: "C"
  }
  parameter {
    name: ""
    type: "*RHKL__;;"
  }
}
function {
  name: "VkKeyScanExW"
  return_type: "US"
  parameter {
    name: ""
    type: "US"
  }
  parameter {
    name: ""
    type: "*RHKL__;;"
  }
}
function {
  name: "WaitForInputIdle"
  return_type: "UI"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "WaitMessage"
  return_type: "I"
}
function {
  name: "WindowFromDC"
  return_type: "*RHWND__;;"
  parameter {
    name: ""
    type: "*RHDC__;;"
  }
}
function {
  name: "WindowFromPoint"
  return_type: "*RHWND__;;"
  parameter {
    name: ""
    type: "RtagPOINT;"
  }
}
function {
  name: "WinHelpA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "WinHelpW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "keybd_event"
  return_type: "V"
  parameter {
    name: ""
    type: "UB"
  }
  parameter {
    name: ""
    type: "UB"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "mouse_event"
  return_type: "V"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "wsprintfA"
  return_type: "I"
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "wsprintfW"
  return_type: "I"
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
}
function {
  name: "wvsprintfA"
  return_type: "I"
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: "__builtin_ms_va_list"
    type: "I"
  }
}
function {
  name: "wvsprintfW"
  return_type: "I"
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: "__builtin_ms_va_list"
    type: "I"
  }
}
function {
  name: "SYSTEM_KillSystemTimer"
  return_type: "US"
  parameter {
    name: ""
    type: "US"
  }
}
function {
  name: "CompareStringA"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "CompareStringW"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "CompareStringEx"
  return_type: "I"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*R_nlsversioninfo;;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "ConvertDefaultLocale"
  return_type: "UI"
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "EnumCalendarInfoA"
  return_type: "I"
  parameter {
    name: ""
    type: "*(*C;)I;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "EnumCalendarInfoW"
  return_type: "I"
  parameter {
    name: ""
    type: "*(*US;)I;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "EnumCalendarInfoExA"
  return_type: "I"
  parameter {
    name: ""
    type: "*(*C;UI)I;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "EnumCalendarInfoExW"
  return_type: "I"
  parameter {
    name: ""
    type: "*(*US;UI)I;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "EnumDateFormatsA"
  return_type: "I"
  parameter {
    name: ""
    type: "*(*C;)I;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "EnumDateFormatsW"
  return_type: "I"
  parameter {
    name: ""
    type: "*(*US;)I;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "EnumDateFormatsExA"
  return_type: "I"
  parameter {
    name: ""
    type: "*(*C;UI)I;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "EnumDateFormatsExW"
  return_type: "I"
  parameter {
    name: ""
    type: "*(*US;UI)I;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "EnumSystemCodePagesA"
  return_type: "I"
  parameter {
    name: ""
    type: "*(*C;)I;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "EnumSystemCodePagesW"
  return_type: "I"
  parameter {
    name: ""
    type: "*(*US;)I;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "EnumSystemGeoID"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*(I)I;"
  }
}
function {
  name: "EnumSystemLocalesA"
  return_type: "I"
  parameter {
    name: ""
    type: "*(*C;)I;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "EnumSystemLocalesW"
  return_type: "I"
  parameter {
    name: ""
    type: "*(*US;)I;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "EnumSystemLocalesEx"
  return_type: "I"
  parameter {
    name: ""
    type: "*(*US;UII)I;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "EnumSystemLanguageGroupsA"
  return_type: "I"
  parameter {
    name: ""
    type: "*(UI*C;*C;UII)I;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "EnumSystemLanguageGroupsW"
  return_type: "I"
  parameter {
    name: ""
    type: "*(UI*US;*US;UII)I;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "EnumLanguageGroupLocalesA"
  return_type: "I"
  parameter {
    name: ""
    type: "*(UIUI*C;I)I;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "EnumLanguageGroupLocalesW"
  return_type: "I"
  parameter {
    name: ""
    type: "*(UIUI*US;I)I;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "EnumTimeFormatsA"
  return_type: "I"
  parameter {
    name: ""
    type: "*(*C;)I;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "EnumTimeFormatsW"
  return_type: "I"
  parameter {
    name: ""
    type: "*(*US;)I;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "EnumUILanguagesA"
  return_type: "I"
  parameter {
    name: ""
    type: "*(*C;I)I;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "EnumUILanguagesW"
  return_type: "I"
  parameter {
    name: ""
    type: "*(*US;I)I;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "FoldStringA"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "FoldStringW"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "GetACP"
  return_type: "UI"
}
function {
  name: "GetCPInfo"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*RCPINFO;;"
  }
}
function {
  name: "GetCPInfoExA"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*RCPINFOEXA;;"
  }
}
function {
  name: "GetCPInfoExW"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*RCPINFOEXW;;"
  }
}
function {
  name: "GetCalendarInfoA"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "GetCalendarInfoW"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "GetCurrencyFormatA"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*cR_currencyfmtA;;"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "GetCurrencyFormatW"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*cR_currencyfmtW;;"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "GetDateFormatA"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cR_SYSTEMTIME;;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "GetDateFormatW"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cR_SYSTEMTIME;;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "GetGeoInfoA"
  return_type: "I"
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "US"
  }
}
function {
  name: "GetGeoInfoW"
  return_type: "I"
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "US"
  }
}
function {
  name: "GetLocaleInfoA"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "GetLocaleInfoW"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "GetNumberFormatA"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*cR_numberfmtA;;"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "GetNumberFormatW"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*cR_numberfmtW;;"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "GetOEMCP"
  return_type: "UI"
}
function {
  name: "GetStringTypeA"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*US;"
  }
}
function {
  name: "GetStringTypeW"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*US;"
  }
}
function {
  name: "GetStringTypeExA"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*US;"
  }
}
function {
  name: "GetStringTypeExW"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*US;"
  }
}
function {
  name: "GetSystemDefaultLangID"
  return_type: "US"
}
function {
  name: "GetSystemDefaultLCID"
  return_type: "UI"
}
function {
  name: "GetSystemDefaultUILanguage"
  return_type: "US"
}
function {
  name: "GetThreadLocale"
  return_type: "UI"
}
function {
  name: "GetTimeFormatA"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cR_SYSTEMTIME;;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "GetTimeFormatW"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cR_SYSTEMTIME;;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "GetUserDefaultLangID"
  return_type: "US"
}
function {
  name: "GetUserDefaultLCID"
  return_type: "UI"
}
function {
  name: "GetUserDefaultLocaleName"
  return_type: "I"
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "GetUserDefaultUILanguage"
  return_type: "US"
}
function {
  name: "GetUserGeoID"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "IdnToAscii"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "IdnToNameprepUnicode"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "IdnToUnicode"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "IsDBCSLeadByte"
  return_type: "I"
  parameter {
    name: ""
    type: "UB"
  }
}
function {
  name: "IsDBCSLeadByteEx"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UB"
  }
}
function {
  name: "IsNormalizedString"
  return_type: "I"
  parameter {
    name: ""
    type: "X(Enum.enum _NORM_FORM)"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "IsValidCodePage"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "IsValidLocale"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "IsValidLanguageGroup"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "LCIDToLocaleName"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "LCMapStringA"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "LCMapStringW"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "LCMapStringEx"
  return_type: "I"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*R_nlsversioninfo;;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "LocaleNameToLCID"
  return_type: "UI"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "MultiByteToWideChar"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "NormalizeString"
  return_type: "I"
  parameter {
    name: ""
    type: "X(Enum.enum _NORM_FORM)"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "SetCalendarInfoA"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "SetCalendarInfoW"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
}
function {
  name: "SetLocaleInfoA"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "SetLocaleInfoW"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
}
function {
  name: "SetThreadLocale"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "SetUserGeoID"
  return_type: "I"
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "WideCharToMultiByte"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*I;"
  }
}
function {
  name: "GetConsoleFontSize"
  return_type: "RtagCOORD;"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "GetLargestConsoleWindowSize"
  return_type: "RtagCOORD;"
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "AddConsoleAliasA"
  return_type: "I"
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "*C;"
  }
}
function {
  name: "AddConsoleAliasW"
  return_type: "I"
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "*US;"
  }
}
function {
  name: "AllocConsole"
  return_type: "I"
}
function {
  name: "AttachConsole"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "CreateConsoleScreenBuffer"
  return_type: "*V;"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*R_SECURITY_ATTRIBUTES;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "FillConsoleOutputAttribute"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "US"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "RtagCOORD;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "FillConsoleOutputCharacterA"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "C"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "RtagCOORD;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "FillConsoleOutputCharacterW"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "US"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "RtagCOORD;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "FlushConsoleInputBuffer"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "FreeConsole"
  return_type: "I"
}
function {
  name: "GenerateConsoleCtrlEvent"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "GetConsoleAliasA"
  return_type: "UI"
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*C;"
  }
}
function {
  name: "GetConsoleAliasW"
  return_type: "UI"
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*US;"
  }
}
function {
  name: "GetConsoleAliasesA"
  return_type: "UI"
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*C;"
  }
}
function {
  name: "GetConsoleAliasesW"
  return_type: "UI"
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*US;"
  }
}
function {
  name: "GetConsoleAliasesLengthA"
  return_type: "UI"
  parameter {
    name: ""
    type: "*C;"
  }
}
function {
  name: "GetConsoleAliasesLengthW"
  return_type: "UI"
  parameter {
    name: ""
    type: "*US;"
  }
}
function {
  name: "GetConsoleAliasExesA"
  return_type: "UI"
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "GetConsoleAliasExesW"
  return_type: "UI"
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "GetConsoleAliasExesLengthA"
  return_type: "UI"
}
function {
  name: "GetConsoleAliasExesLengthW"
  return_type: "UI"
}
function {
  name: "GetConsoleCP"
  return_type: "UI"
}
function {
  name: "GetConsoleCursorInfo"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*R_CONSOLE_CURSOR_INFO;;"
  }
}
function {
  name: "GetConsoleDisplayMode"
  return_type: "I"
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "GetConsoleHistoryInfo"
  return_type: "I"
  parameter {
    name: ""
    type: "*RtagCONSOLE_HISTORY_INFO;;"
  }
}
function {
  name: "GetConsoleInputExeNameA"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*C;"
  }
}
function {
  name: "GetConsoleInputExeNameW"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*US;"
  }
}
function {
  name: "GetConsoleMode"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "GetConsoleOriginalTitleA"
  return_type: "UI"
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "GetConsoleOriginalTitleW"
  return_type: "UI"
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "GetConsoleOutputCP"
  return_type: "UI"
}
function {
  name: "GetConsoleProcessList"
  return_type: "UI"
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "GetConsoleScreenBufferInfo"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*RtagCONSOLE_SCREEN_BUFFER_INFO;;"
  }
}
function {
  name: "GetConsoleScreenBufferInfoEx"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*R_CONSOLE_SCREEN_BUFFER_INFOEX;;"
  }
}
function {
  name: "GetConsoleTitleA"
  return_type: "UI"
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "GetConsoleTitleW"
  return_type: "UI"
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "GetConsoleWindow"
  return_type: "*RHWND__;;"
}
function {
  name: "GetCurrentConsoleFont"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*R_CONSOLE_FONT_INFO;;"
  }
}
function {
  name: "GetCurrentConsoleFontEx"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*R_CONSOLE_FONT_INFOEX;;"
  }
}
function {
  name: "GetNumberOfConsoleInputEvents"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "GetNumberOfConsoleMouseButtons"
  return_type: "I"
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "PeekConsoleInputA"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*RtagINPUT_RECORD;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "PeekConsoleInputW"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*RtagINPUT_RECORD;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "ReadConsoleA"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "ReadConsoleW"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "ReadConsoleInputA"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*RtagINPUT_RECORD;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "ReadConsoleInputW"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*RtagINPUT_RECORD;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "ReadConsoleOutputA"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*RtagCHAR_INFO;;"
  }
  parameter {
    name: ""
    type: "RtagCOORD;"
  }
  parameter {
    name: ""
    type: "RtagCOORD;"
  }
  parameter {
    name: ""
    type: "*RtagSMALL_RECT;;"
  }
}
function {
  name: "ReadConsoleOutputW"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*RtagCHAR_INFO;;"
  }
  parameter {
    name: ""
    type: "RtagCOORD;"
  }
  parameter {
    name: ""
    type: "RtagCOORD;"
  }
  parameter {
    name: ""
    type: "*RtagSMALL_RECT;;"
  }
}
function {
  name: "ReadConsoleOutputAttribute"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "RtagCOORD;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "ReadConsoleOutputCharacterA"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "RtagCOORD;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "ReadConsoleOutputCharacterW"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "RtagCOORD;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "ScrollConsoleScreenBufferA"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*RtagSMALL_RECT;;"
  }
  parameter {
    name: ""
    type: "*RtagSMALL_RECT;;"
  }
  parameter {
    name: ""
    type: "RtagCOORD;"
  }
  parameter {
    name: ""
    type: "*RtagCHAR_INFO;;"
  }
}
function {
  name: "ScrollConsoleScreenBufferW"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*RtagSMALL_RECT;;"
  }
  parameter {
    name: ""
    type: "*RtagSMALL_RECT;;"
  }
  parameter {
    name: ""
    type: "RtagCOORD;"
  }
  parameter {
    name: ""
    type: "*RtagCHAR_INFO;;"
  }
}
function {
  name: "SetConsoleActiveScreenBuffer"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "SetConsoleCP"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "SetConsoleCtrlHandler"
  return_type: "I"
  parameter {
    name: ""
    type: "*(UI)I;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "SetConsoleCursorInfo"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*R_CONSOLE_CURSOR_INFO;;"
  }
}
function {
  name: "SetConsoleCursorPosition"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "RtagCOORD;"
  }
}
function {
  name: "SetConsoleDisplayMode"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*RtagCOORD;;"
  }
}
function {
  name: "SetConsoleHistoryInfo"
  return_type: "I"
  parameter {
    name: ""
    type: "*RtagCONSOLE_HISTORY_INFO;;"
  }
}
function {
  name: "SetConsoleMode"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "SetConsoleOutputCP"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "SetConsoleScreenBufferInfoEx"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*R_CONSOLE_SCREEN_BUFFER_INFOEX;;"
  }
}
function {
  name: "SetConsoleScreenBufferSize"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "RtagCOORD;"
  }
}
function {
  name: "SetConsoleTextAttribute"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "US"
  }
}
function {
  name: "SetConsoleTitleA"
  return_type: "I"
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "SetConsoleTitleW"
  return_type: "I"
  parameter {
    name: ""
    type: "*cUS;"
  }
}
function {
  name: "SetConsoleWindowInfo"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*RtagSMALL_RECT;;"
  }
}
function {
  name: "SetCurrentConsoleFontEx"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*R_CONSOLE_FONT_INFOEX;;"
  }
}
function {
  name: "WriteConsoleA"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*cV;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "WriteConsoleW"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*cV;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "WriteConsoleInputA"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*cRtagINPUT_RECORD;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "WriteConsoleInputW"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*cRtagINPUT_RECORD;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "WriteConsoleOutputA"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*cRtagCHAR_INFO;;"
  }
  parameter {
    name: ""
    type: "RtagCOORD;"
  }
  parameter {
    name: ""
    type: "RtagCOORD;"
  }
  parameter {
    name: ""
    type: "*RtagSMALL_RECT;;"
  }
}
function {
  name: "WriteConsoleOutputW"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*cRtagCHAR_INFO;;"
  }
  parameter {
    name: ""
    type: "RtagCOORD;"
  }
  parameter {
    name: ""
    type: "RtagCOORD;"
  }
  parameter {
    name: ""
    type: "*RtagSMALL_RECT;;"
  }
}
function {
  name: "WriteConsoleOutputAttribute"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "RtagCOORD;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "WriteConsoleOutputCharacterA"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "RtagCOORD;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "WriteConsoleOutputCharacterW"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "RtagCOORD;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "VerFindFileA"
  return_type: "UI"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "VerFindFileW"
  return_type: "UI"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "VerInstallFileA"
  return_type: "UI"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "VerInstallFileW"
  return_type: "UI"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "VerLanguageNameA"
  return_type: "UI"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "VerLanguageNameW"
  return_type: "UI"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "VerQueryValueA"
  return_type: "I"
  parameter {
    name: ""
    type: "*cV;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "**V;;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "VerQueryValueW"
  return_type: "I"
  parameter {
    name: ""
    type: "*cV;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "**V;;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "GetFileVersionInfoSizeA"
  return_type: "UI"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "GetFileVersionInfoSizeW"
  return_type: "UI"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "GetFileVersionInfoA"
  return_type: "I"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "GetFileVersionInfoW"
  return_type: "I"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "GetFileVersionInfoSizeExA"
  return_type: "UI"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "GetFileVersionInfoSizeExW"
  return_type: "UI"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "GetFileVersionInfoExA"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "GetFileVersionInfoExW"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "AbortSystemShutdownA"
  return_type: "I"
  parameter {
    name: ""
    type: "*C;"
  }
}
function {
  name: "AbortSystemShutdownW"
  return_type: "I"
  parameter {
    name: ""
    type: "*US;"
  }
}
function {
  name: "InitiateSystemShutdownA"
  return_type: "I"
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "InitiateSystemShutdownW"
  return_type: "I"
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "InitiateSystemShutdownExA"
  return_type: "I"
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "InitiateSystemShutdownExW"
  return_type: "I"
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "RegCloseKey"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHKEY__;;"
  }
}
function {
  name: "RegConnectRegistryA"
  return_type: "I"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*RHKEY__;;"
  }
  parameter {
    name: ""
    type: "**RHKEY__;;;"
  }
}
function {
  name: "RegConnectRegistryW"
  return_type: "I"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*RHKEY__;;"
  }
  parameter {
    name: ""
    type: "**RHKEY__;;;"
  }
}
function {
  name: "RegCreateKeyA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHKEY__;;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "**RHKEY__;;;"
  }
}
function {
  name: "RegCreateKeyW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHKEY__;;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "**RHKEY__;;;"
  }
}
function {
  name: "RegCreateKeyExA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHKEY__;;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*R_SECURITY_ATTRIBUTES;;"
  }
  parameter {
    name: ""
    type: "**RHKEY__;;;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "RegCreateKeyExW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHKEY__;;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*R_SECURITY_ATTRIBUTES;;"
  }
  parameter {
    name: ""
    type: "**RHKEY__;;;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "RegDeleteKeyA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHKEY__;;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "RegDeleteKeyW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHKEY__;;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
}
function {
  name: "RegDeleteKeyExA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHKEY__;;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "RegDeleteKeyExW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHKEY__;;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "RegDeleteKeyValueA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHKEY__;;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "RegDeleteKeyValueW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHKEY__;;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
}
function {
  name: "RegDeleteTreeA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHKEY__;;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "RegDeleteTreeW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHKEY__;;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
}
function {
  name: "RegDeleteValueA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHKEY__;;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "RegDeleteValueW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHKEY__;;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
}
function {
  name: "RegDisablePredefinedCache"
  return_type: "I"
}
function {
  name: "RegEnumKeyA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHKEY__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "RegEnumKeyW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHKEY__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "RegEnumKeyExA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHKEY__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*R_FILETIME;;"
  }
}
function {
  name: "RegEnumKeyExW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHKEY__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*R_FILETIME;;"
  }
}
function {
  name: "RegEnumValueA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHKEY__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UB;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "RegEnumValueW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHKEY__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UB;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "RegFlushKey"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHKEY__;;"
  }
}
function {
  name: "RegGetKeySecurity"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHKEY__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "RegGetValueA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHKEY__;;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "RegGetValueW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHKEY__;;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "RegLoadKeyA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHKEY__;;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "RegLoadKeyW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHKEY__;;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
}
function {
  name: "RegLoadMUIStringA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHKEY__;;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "RegLoadMUIStringW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHKEY__;;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
}
function {
  name: "RegNotifyChangeKeyValue"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHKEY__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "RegOpenCurrentUser"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "**RHKEY__;;;"
  }
}
function {
  name: "RegOpenKeyA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHKEY__;;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "**RHKEY__;;;"
  }
}
function {
  name: "RegOpenKeyW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHKEY__;;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "**RHKEY__;;;"
  }
}
function {
  name: "RegOpenKeyExW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHKEY__;;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "**RHKEY__;;;"
  }
}
function {
  name: "RegOpenKeyExA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHKEY__;;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "**RHKEY__;;;"
  }
}
function {
  name: "RegOpenUserClassesRoot"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "**RHKEY__;;;"
  }
}
function {
  name: "RegOverridePredefKey"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHKEY__;;"
  }
  parameter {
    name: ""
    type: "*RHKEY__;;"
  }
}
function {
  name: "RegQueryInfoKeyW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHKEY__;;"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*R_FILETIME;;"
  }
}
function {
  name: "RegQueryInfoKeyA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHKEY__;;"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*R_FILETIME;;"
  }
}
function {
  name: "RegQueryMultipleValuesA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHKEY__;;"
  }
  parameter {
    name: ""
    type: "*Rvalue_entA;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "RegQueryMultipleValuesW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHKEY__;;"
  }
  parameter {
    name: ""
    type: "*Rvalue_entW;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "RegQueryValueA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHKEY__;;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "*I;"
  }
}
function {
  name: "RegQueryValueW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHKEY__;;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "*I;"
  }
}
function {
  name: "RegQueryValueExA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHKEY__;;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UB;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "RegQueryValueExW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHKEY__;;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UB;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "RegReplaceKeyA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHKEY__;;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "RegReplaceKeyW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHKEY__;;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
}
function {
  name: "RegRestoreKeyA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHKEY__;;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "RegRestoreKeyW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHKEY__;;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "RegSaveKeyA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHKEY__;;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*R_SECURITY_ATTRIBUTES;;"
  }
}
function {
  name: "RegSaveKeyW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHKEY__;;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*R_SECURITY_ATTRIBUTES;;"
  }
}
function {
  name: "RegSetKeySecurity"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHKEY__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "RegSetValueA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHKEY__;;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "RegSetValueW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHKEY__;;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "RegSetValueExA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHKEY__;;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cUB;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "RegSetValueExW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHKEY__;;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cUB;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "RegUnLoadKeyA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHKEY__;;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "RegUnLoadKeyW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHKEY__;;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
}
function {
  name: "WNetAddConnectionA"
  return_type: "UI"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "WNetAddConnectionW"
  return_type: "UI"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
}
function {
  name: "WNetAddConnection2A"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RNETRESOURCEA;;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "WNetAddConnection2W"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RNETRESOURCEW;;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "WNetAddConnection3A"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*RNETRESOURCEA;;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "WNetAddConnection3W"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*RNETRESOURCEW;;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "WNetCancelConnectionA"
  return_type: "UI"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "WNetCancelConnectionW"
  return_type: "UI"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "WNetCancelConnection2A"
  return_type: "UI"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "WNetCancelConnection2W"
  return_type: "UI"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "WNetGetConnectionA"
  return_type: "UI"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "WNetGetConnectionW"
  return_type: "UI"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "WNetGetLastErrorA"
  return_type: "UI"
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "WNetGetLastErrorW"
  return_type: "UI"
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "WNetRestoreConnectionA"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "WNetRestoreConnectionW"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
}
function {
  name: "WNetUseConnectionA"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*RNETRESOURCEA;;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "WNetUseConnectionW"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*RNETRESOURCEW;;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "WNetSetConnectionA"
  return_type: "UI"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "WNetSetConnectionW"
  return_type: "UI"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "WNetConnectionDialog"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "WNetDisconnectDialog"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "WNetConnectionDialog1A"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RCONNECTDLGSTRUCTA;;"
  }
}
function {
  name: "WNetConnectionDialog1W"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RCONNECTDLGSTRUCTW;;"
  }
}
function {
  name: "WNetDisconnectDialog1A"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RDISCDLGSTRUCTA;;"
  }
}
function {
  name: "WNetDisconnectDialog1W"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RDISCDLGSTRUCTW;;"
  }
}
function {
  name: "WNetOpenEnumA"
  return_type: "UI"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*RNETRESOURCEA;;"
  }
  parameter {
    name: ""
    type: "**V;;"
  }
}
function {
  name: "WNetOpenEnumW"
  return_type: "UI"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*RNETRESOURCEW;;"
  }
  parameter {
    name: ""
    type: "**V;;"
  }
}
function {
  name: "WNetEnumResourceA"
  return_type: "UI"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "WNetEnumResourceW"
  return_type: "UI"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "WNetGetResourceInformationA"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RNETRESOURCEA;;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "**C;;"
  }
}
function {
  name: "WNetGetResourceInformationW"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RNETRESOURCEW;;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "**US;;"
  }
}
function {
  name: "WNetGetResourceParentA"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RNETRESOURCEA;;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "WNetGetResourceParentW"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RNETRESOURCEW;;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "WNetCloseEnum"
  return_type: "UI"
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "WNetGetUniversalNameA"
  return_type: "UI"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "WNetGetUniversalNameW"
  return_type: "UI"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "WNetGetUserA"
  return_type: "UI"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "WNetGetUserW"
  return_type: "UI"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "WNetGetProviderNameA"
  return_type: "UI"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "WNetGetProviderNameW"
  return_type: "UI"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "WNetGetNetworkInformationA"
  return_type: "UI"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*RNETINFOSTRUCT;;"
  }
}
function {
  name: "WNetGetNetworkInformationW"
  return_type: "UI"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*RNETINFOSTRUCT;;"
  }
}
function {
  name: "MultinetGetConnectionPerformanceA"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RNETRESOURCEA;;"
  }
  parameter {
    name: ""
    type: "*RNETCONNECTINFOSTRUCT;;"
  }
}
function {
  name: "MultinetGetConnectionPerformanceW"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RNETRESOURCEW;;"
  }
  parameter {
    name: ""
    type: "*RNETCONNECTINFOSTRUCT;;"
  }
}
function {
  name: "MultinetGetErrorTextA"
  return_type: "UI"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "MultinetGetErrorTextW"
  return_type: "UI"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "WNetEnumCachedPasswords"
  return_type: "UI"
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "US"
  }
  parameter {
    name: ""
    type: "UB"
  }
  parameter {
    name: ""
    type: "*(*RtagPASSWORD_CACHE_ENTRY;;UI)I;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "WNetGetCachedPassword"
  return_type: "UI"
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "US"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "UB"
  }
}
function {
  name: "WNetCachePassword"
  return_type: "UI"
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "US"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "US"
  }
  parameter {
    name: ""
    type: "UB"
  }
  parameter {
    name: ""
    type: "US"
  }
}
function {
  name: "DdeSetQualityOfService"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*cR_SECURITY_QUALITY_OF_SERVICE;;"
  }
  parameter {
    name: ""
    type: "*R_SECURITY_QUALITY_OF_SERVICE;;"
  }
}
function {
  name: "FreeDDElParam"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "ImpersonateDdeClientWindow"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
}
function {
  name: "PackDDElParam"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "ReuseDDElParam"
  return_type: "I"
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "UnpackDDElParam"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "DdeAbandonTransaction"
  return_type: "I"
  parameter {
    name: "idInst"
    type: "UI"
  }
  parameter {
    name: "hConv"
    type: "*RHCONV__;;"
  }
  parameter {
    name: "idTransaction"
    type: "UI"
  }
}
function {
  name: "DdeAccessData"
  return_type: "*UB;"
  parameter {
    name: ""
    type: "*RHDDEDATA__;;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "DdeAddData"
  return_type: "*RHDDEDATA__;;"
  parameter {
    name: ""
    type: "*RHDDEDATA__;;"
  }
  parameter {
    name: ""
    type: "*UB;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "DdeClientTransaction"
  return_type: "*RHDDEDATA__;;"
  parameter {
    name: ""
    type: "*UB;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*RHCONV__;;"
  }
  parameter {
    name: ""
    type: "*RHSZ__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "DdeCmpStringHandles"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHSZ__;;"
  }
  parameter {
    name: ""
    type: "*RHSZ__;;"
  }
}
function {
  name: "DdeConnect"
  return_type: "*RHCONV__;;"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*RHSZ__;;"
  }
  parameter {
    name: ""
    type: "*RHSZ__;;"
  }
  parameter {
    name: ""
    type: "*RtagCONVCONTEXT;;"
  }
}
function {
  name: "DdeConnectList"
  return_type: "*RHCONVLIST__;;"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*RHSZ__;;"
  }
  parameter {
    name: ""
    type: "*RHSZ__;;"
  }
  parameter {
    name: ""
    type: "*RHCONVLIST__;;"
  }
  parameter {
    name: ""
    type: "*RtagCONVCONTEXT;;"
  }
}
function {
  name: "DdeCreateDataHandle"
  return_type: "*RHDDEDATA__;;"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UB;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*RHSZ__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "DdeCreateStringHandleA"
  return_type: "*RHSZ__;;"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "DdeCreateStringHandleW"
  return_type: "*RHSZ__;;"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "DdeDisconnect"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHCONV__;;"
  }
}
function {
  name: "DdeDisconnectList"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHCONVLIST__;;"
  }
}
function {
  name: "DdeEnableCallback"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*RHCONV__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "DdeFreeDataHandle"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDDEDATA__;;"
  }
}
function {
  name: "DdeFreeStringHandle"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*RHSZ__;;"
  }
}
function {
  name: "DdeGetData"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHDDEDATA__;;"
  }
  parameter {
    name: ""
    type: "*UB;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "DdeGetLastError"
  return_type: "UI"
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "DdeImpersonateClient"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHCONV__;;"
  }
}
function {
  name: "DdeInitializeA"
  return_type: "UI"
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*(UIUI*RHCONV__;;*RHSZ__;;*RHSZ__;;*RHDDEDATA__;;UIUI)*RHDDEDATA__;;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "DdeInitializeW"
  return_type: "UI"
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*(UIUI*RHCONV__;;*RHSZ__;;*RHSZ__;;*RHDDEDATA__;;UIUI)*RHDDEDATA__;;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "DdeKeepStringHandle"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*RHSZ__;;"
  }
}
function {
  name: "DdeNameService"
  return_type: "*RHDDEDATA__;;"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*RHSZ__;;"
  }
  parameter {
    name: ""
    type: "*RHSZ__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "DdePostAdvise"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*RHSZ__;;"
  }
  parameter {
    name: ""
    type: "*RHSZ__;;"
  }
}
function {
  name: "DdeQueryConvInfo"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHCONV__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*RtagCONVINFO;;"
  }
}
function {
  name: "DdeQueryNextServer"
  return_type: "*RHCONV__;;"
  parameter {
    name: ""
    type: "*RHCONVLIST__;;"
  }
  parameter {
    name: ""
    type: "*RHCONV__;;"
  }
}
function {
  name: "DdeQueryStringA"
  return_type: "UI"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*RHSZ__;;"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "DdeQueryStringW"
  return_type: "UI"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*RHSZ__;;"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "DdeReconnect"
  return_type: "*RHCONV__;;"
  parameter {
    name: ""
    type: "*RHCONV__;;"
  }
}
function {
  name: "DdeSetUserHandle"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHCONV__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "DdeUnaccessData"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHDDEDATA__;;"
  }
}
function {
  name: "DdeUninitialize"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "LZDone"
  return_type: "V"
}
function {
  name: "CopyLZFile"
  return_type: "I"
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "LZOpenFileA"
  return_type: "I"
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "*R_OFSTRUCT;;"
  }
  parameter {
    name: ""
    type: "US"
  }
}
function {
  name: "LZOpenFileW"
  return_type: "I"
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "*R_OFSTRUCT;;"
  }
  parameter {
    name: ""
    type: "US"
  }
}
function {
  name: "LZRead"
  return_type: "I"
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "LZStart"
  return_type: "I"
}
function {
  name: "LZClose"
  return_type: "V"
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "LZCopy"
  return_type: "I"
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "LZInit"
  return_type: "I"
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "LZSeek"
  return_type: "I"
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "GetExpandedNameA"
  return_type: "I"
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "*C;"
  }
}
function {
  name: "GetExpandedNameW"
  return_type: "I"
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "*US;"
  }
}
function {
  name: "DefDriverProc"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*RHDRVR__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "OpenDriverA"
  return_type: "*RHDRVR__;;"
  parameter {
    name: "szDriverName"
    type: "*cC;"
  }
  parameter {
    name: "szSectionName"
    type: "*cC;"
  }
  parameter {
    name: "lParam2"
    type: "I"
  }
}
function {
  name: "OpenDriver"
  return_type: "*RHDRVR__;;"
  parameter {
    name: "szDriverName"
    type: "*cUS;"
  }
  parameter {
    name: "szSectionName"
    type: "*cUS;"
  }
  parameter {
    name: "lParam2"
    type: "I"
  }
}
function {
  name: "CloseDriver"
  return_type: "I"
  parameter {
    name: "hDriver"
    type: "*RHDRVR__;;"
  }
  parameter {
    name: "lParam1"
    type: "I"
  }
  parameter {
    name: "lParam2"
    type: "I"
  }
}
function {
  name: "SendDriverMessage"
  return_type: "I"
  parameter {
    name: "hDriver"
    type: "*RHDRVR__;;"
  }
  parameter {
    name: "message"
    type: "UI"
  }
  parameter {
    name: "lParam1"
    type: "I"
  }
  parameter {
    name: "lParam2"
    type: "I"
  }
}
function {
  name: "GetDriverModuleHandle"
  return_type: "*RHINSTANCE__;;"
  parameter {
    name: "hDriver"
    type: "*RHDRVR__;;"
  }
}
function {
  name: "GetDriverFlags"
  return_type: "UI"
  parameter {
    name: "hDriver"
    type: "*RHDRVR__;;"
  }
}
function {
  name: "mmsystemGetVersion"
  return_type: "UI"
}
function {
  name: "sndPlaySoundA"
  return_type: "I"
  parameter {
    name: "lpszSound"
    type: "*cC;"
  }
  parameter {
    name: "fuSound"
    type: "UI"
  }
}
function {
  name: "sndPlaySoundW"
  return_type: "I"
  parameter {
    name: "lpszSound"
    type: "*cUS;"
  }
  parameter {
    name: "fuSound"
    type: "UI"
  }
}
function {
  name: "PlaySoundA"
  return_type: "I"
  parameter {
    name: "pszSound"
    type: "*cC;"
  }
  parameter {
    name: "hmod"
    type: "*RHINSTANCE__;;"
  }
  parameter {
    name: "fdwSound"
    type: "UI"
  }
}
function {
  name: "PlaySoundW"
  return_type: "I"
  parameter {
    name: "pszSound"
    type: "*cUS;"
  }
  parameter {
    name: "hmod"
    type: "*RHINSTANCE__;;"
  }
  parameter {
    name: "fdwSound"
    type: "UI"
  }
}
function {
  name: "waveOutGetNumDevs"
  return_type: "UI"
}
function {
  name: "waveOutGetDevCapsA"
  return_type: "UI"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*RtagWAVEOUTCAPSA;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "waveOutGetDevCapsW"
  return_type: "UI"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*RtagWAVEOUTCAPSW;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "waveOutGetVolume"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHWAVEOUT__;;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "waveOutSetVolume"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHWAVEOUT__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "waveOutGetErrorTextA"
  return_type: "UI"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "waveOutGetErrorTextW"
  return_type: "UI"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "waveOutOpen"
  return_type: "UI"
  parameter {
    name: ""
    type: "**RHWAVEOUT__;;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cRtWAVEFORMATEX;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "waveOutClose"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHWAVEOUT__;;"
  }
}
function {
  name: "waveOutPrepareHeader"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHWAVEOUT__;;"
  }
  parameter {
    name: ""
    type: "*Rwavehdr_tag;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "waveOutUnprepareHeader"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHWAVEOUT__;;"
  }
  parameter {
    name: ""
    type: "*Rwavehdr_tag;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "waveOutWrite"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHWAVEOUT__;;"
  }
  parameter {
    name: ""
    type: "*Rwavehdr_tag;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "waveOutPause"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHWAVEOUT__;;"
  }
}
function {
  name: "waveOutRestart"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHWAVEOUT__;;"
  }
}
function {
  name: "waveOutReset"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHWAVEOUT__;;"
  }
}
function {
  name: "waveOutBreakLoop"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHWAVEOUT__;;"
  }
}
function {
  name: "waveOutGetPosition"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHWAVEOUT__;;"
  }
  parameter {
    name: ""
    type: "*Rmmtime_tag;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "waveOutGetPitch"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHWAVEOUT__;;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "waveOutSetPitch"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHWAVEOUT__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "waveOutGetPlaybackRate"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHWAVEOUT__;;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "waveOutSetPlaybackRate"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHWAVEOUT__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "waveOutGetID"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHWAVEOUT__;;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "waveOutMessage"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHWAVEOUT__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "waveInGetNumDevs"
  return_type: "UI"
}
function {
  name: "waveInGetDevCapsA"
  return_type: "UI"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*RtagWAVEINCAPSA;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "waveInGetDevCapsW"
  return_type: "UI"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*RtagWAVEINCAPSW;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "waveInGetErrorTextA"
  return_type: "UI"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "waveInGetErrorTextW"
  return_type: "UI"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "waveInOpen"
  return_type: "UI"
  parameter {
    name: ""
    type: "**RHWAVEIN__;;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cRtWAVEFORMATEX;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "waveInClose"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHWAVEIN__;;"
  }
}
function {
  name: "waveInPrepareHeader"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHWAVEIN__;;"
  }
  parameter {
    name: ""
    type: "*Rwavehdr_tag;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "waveInUnprepareHeader"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHWAVEIN__;;"
  }
  parameter {
    name: ""
    type: "*Rwavehdr_tag;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "waveInAddBuffer"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHWAVEIN__;;"
  }
  parameter {
    name: ""
    type: "*Rwavehdr_tag;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "waveInStart"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHWAVEIN__;;"
  }
}
function {
  name: "waveInStop"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHWAVEIN__;;"
  }
}
function {
  name: "waveInReset"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHWAVEIN__;;"
  }
}
function {
  name: "waveInGetPosition"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHWAVEIN__;;"
  }
  parameter {
    name: ""
    type: "*Rmmtime_tag;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "waveInGetID"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHWAVEIN__;;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "waveInMessage"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHWAVEIN__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "midiOutGetNumDevs"
  return_type: "UI"
}
function {
  name: "midiOutGetDevCapsA"
  return_type: "UI"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*RtagMIDIOUTCAPSA;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "midiOutGetDevCapsW"
  return_type: "UI"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*RtagMIDIOUTCAPSW;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "midiOutGetVolume"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHMIDIOUT__;;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "midiOutSetVolume"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHMIDIOUT__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "midiOutGetErrorTextA"
  return_type: "UI"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "midiOutGetErrorTextW"
  return_type: "UI"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "midiOutOpen"
  return_type: "UI"
  parameter {
    name: ""
    type: "**RHMIDIOUT__;;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "midiOutClose"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHMIDIOUT__;;"
  }
}
function {
  name: "midiOutPrepareHeader"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHMIDIOUT__;;"
  }
  parameter {
    name: ""
    type: "*Rmidihdr_tag;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "midiOutUnprepareHeader"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHMIDIOUT__;;"
  }
  parameter {
    name: ""
    type: "*Rmidihdr_tag;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "midiOutShortMsg"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHMIDIOUT__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "midiOutLongMsg"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHMIDIOUT__;;"
  }
  parameter {
    name: ""
    type: "*Rmidihdr_tag;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "midiOutReset"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHMIDIOUT__;;"
  }
}
function {
  name: "midiOutCachePatches"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHMIDIOUT__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "midiOutCacheDrumPatches"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHMIDIOUT__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "midiOutGetID"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHMIDIOUT__;;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "midiOutMessage"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHMIDIOUT__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "midiInGetNumDevs"
  return_type: "UI"
}
function {
  name: "midiInGetDevCapsA"
  return_type: "UI"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*RtagMIDIINCAPSA;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "midiInGetDevCapsW"
  return_type: "UI"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*RtagMIDIINCAPSW;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "midiInGetErrorTextA"
  return_type: "UI"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "midiInGetErrorTextW"
  return_type: "UI"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "midiInOpen"
  return_type: "UI"
  parameter {
    name: ""
    type: "**RHMIDIIN__;;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "midiInClose"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHMIDIIN__;;"
  }
}
function {
  name: "midiInPrepareHeader"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHMIDIIN__;;"
  }
  parameter {
    name: ""
    type: "*Rmidihdr_tag;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "midiInUnprepareHeader"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHMIDIIN__;;"
  }
  parameter {
    name: ""
    type: "*Rmidihdr_tag;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "midiInAddBuffer"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHMIDIIN__;;"
  }
  parameter {
    name: ""
    type: "*Rmidihdr_tag;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "midiInStart"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHMIDIIN__;;"
  }
}
function {
  name: "midiInStop"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHMIDIIN__;;"
  }
}
function {
  name: "midiInReset"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHMIDIIN__;;"
  }
}
function {
  name: "midiInGetID"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHMIDIIN__;;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "midiInMessage"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHMIDIIN__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "midiStreamClose"
  return_type: "UI"
  parameter {
    name: "hms"
    type: "*RHMIDISTRM__;;"
  }
}
function {
  name: "midiStreamOpen"
  return_type: "UI"
  parameter {
    name: ""
    type: "**RHMIDISTRM__;;;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "midiStreamOut"
  return_type: "UI"
  parameter {
    name: "hms"
    type: "*RHMIDISTRM__;;"
  }
  parameter {
    name: "lpMidiHdr"
    type: "*Rmidihdr_tag;;"
  }
  parameter {
    name: "cbMidiHdr"
    type: "UI"
  }
}
function {
  name: "midiStreamPause"
  return_type: "UI"
  parameter {
    name: "hms"
    type: "*RHMIDISTRM__;;"
  }
}
function {
  name: "midiStreamPosition"
  return_type: "UI"
  parameter {
    name: "hms"
    type: "*RHMIDISTRM__;;"
  }
  parameter {
    name: "lpmmt"
    type: "*Rmmtime_tag;;"
  }
  parameter {
    name: "cbmmt"
    type: "UI"
  }
}
function {
  name: "midiStreamProperty"
  return_type: "UI"
  parameter {
    name: "hms"
    type: "*RHMIDISTRM__;;"
  }
  parameter {
    name: "lpPropData"
    type: "*UB;"
  }
  parameter {
    name: "dwProperty"
    type: "UI"
  }
}
function {
  name: "midiStreamRestart"
  return_type: "UI"
  parameter {
    name: "hms"
    type: "*RHMIDISTRM__;;"
  }
}
function {
  name: "midiStreamStop"
  return_type: "UI"
  parameter {
    name: "hms"
    type: "*RHMIDISTRM__;;"
  }
}
function {
  name: "auxGetNumDevs"
  return_type: "UI"
}
function {
  name: "auxGetDevCapsA"
  return_type: "UI"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*RtagAUXCAPSA;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "auxGetDevCapsW"
  return_type: "UI"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*RtagAUXCAPSW;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "auxSetVolume"
  return_type: "UI"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "auxGetVolume"
  return_type: "UI"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "auxOutMessage"
  return_type: "UI"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "timeGetSystemTime"
  return_type: "UI"
  parameter {
    name: ""
    type: "*Rmmtime_tag;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "timeGetTime"
  return_type: "UI"
}
function {
  name: "timeSetEvent"
  return_type: "UI"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*(UIUIUIUIUI)V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "timeKillEvent"
  return_type: "UI"
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "timeGetDevCaps"
  return_type: "UI"
  parameter {
    name: ""
    type: "*Rtimecaps_tag;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "timeBeginPeriod"
  return_type: "UI"
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "timeEndPeriod"
  return_type: "UI"
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "joyGetDevCapsA"
  return_type: "UI"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*RtagJOYCAPSA;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "joyGetDevCapsW"
  return_type: "UI"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*RtagJOYCAPSW;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "joyGetNumDevs"
  return_type: "UI"
}
function {
  name: "joyGetPos"
  return_type: "UI"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*Rjoyinfo_tag;;"
  }
}
function {
  name: "joyGetPosEx"
  return_type: "UI"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*Rjoyinfoex_tag;;"
  }
}
function {
  name: "joyGetThreshold"
  return_type: "UI"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "joyReleaseCapture"
  return_type: "UI"
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "joySetCapture"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "joySetThreshold"
  return_type: "UI"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "mixerGetNumDevs"
  return_type: "UI"
}
function {
  name: "mixerOpen"
  return_type: "UI"
  parameter {
    name: ""
    type: "**RHMIXER__;;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "mixerClose"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHMIXER__;;"
  }
}
function {
  name: "mixerMessage"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHMIXER__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "mixerGetDevCapsA"
  return_type: "UI"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*RtagMIXERCAPSA;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "mixerGetDevCapsW"
  return_type: "UI"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*RtagMIXERCAPSW;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "mixerGetLineInfoA"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHMIXEROBJ__;;"
  }
  parameter {
    name: ""
    type: "*RtagMIXERLINEA;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "mixerGetLineInfoW"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHMIXEROBJ__;;"
  }
  parameter {
    name: ""
    type: "*RtagMIXERLINEW;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "mixerGetID"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHMIXEROBJ__;;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "mixerGetLineControlsA"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHMIXEROBJ__;;"
  }
  parameter {
    name: ""
    type: "*RtagMIXERLINECONTROLSA;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "mixerGetLineControlsW"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHMIXEROBJ__;;"
  }
  parameter {
    name: ""
    type: "*RtagMIXERLINECONTROLSW;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "mixerGetControlDetailsA"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHMIXEROBJ__;;"
  }
  parameter {
    name: ""
    type: "*RtMIXERCONTROLDETAILS;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "mixerGetControlDetailsW"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHMIXEROBJ__;;"
  }
  parameter {
    name: ""
    type: "*RtMIXERCONTROLDETAILS;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "mixerSetControlDetails"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHMIXEROBJ__;;"
  }
  parameter {
    name: ""
    type: "*RtMIXERCONTROLDETAILS;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "mmioInstallIOProcA"
  return_type: "*(*C;UIII)I;"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*(*C;UIII)I;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "mmioInstallIOProcW"
  return_type: "*(*C;UIII)I;"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*(*C;UIII)I;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "mmioStringToFOURCCA"
  return_type: "UI"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "mmioStringToFOURCCW"
  return_type: "UI"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "mmioOpenA"
  return_type: "*RHMMIO__;;"
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "*R_MMIOINFO;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "mmioOpenW"
  return_type: "*RHMMIO__;;"
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "*R_MMIOINFO;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "mmioRenameA"
  return_type: "UI"
  parameter {
    name: "szFileName"
    type: "*cC;"
  }
  parameter {
    name: "szNewFileName"
    type: "*cC;"
  }
  parameter {
    name: "lpmmioinfo"
    type: "*cR_MMIOINFO;;"
  }
  parameter {
    name: "dwRenameFlags"
    type: "UI"
  }
}
function {
  name: "mmioRenameW"
  return_type: "UI"
  parameter {
    name: "szFileName"
    type: "*cUS;"
  }
  parameter {
    name: "szNewFileName"
    type: "*cUS;"
  }
  parameter {
    name: "lpmmioinfo"
    type: "*cR_MMIOINFO;;"
  }
  parameter {
    name: "dwRenameFlags"
    type: "UI"
  }
}
function {
  name: "mmioClose"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHMMIO__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "mmioRead"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHMMIO__;;"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "mmioWrite"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHMMIO__;;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "mmioSeek"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHMMIO__;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "mmioGetInfo"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHMMIO__;;"
  }
  parameter {
    name: ""
    type: "*R_MMIOINFO;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "mmioSetInfo"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHMMIO__;;"
  }
  parameter {
    name: ""
    type: "*cR_MMIOINFO;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "mmioSetBuffer"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHMMIO__;;"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "mmioFlush"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHMMIO__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "mmioAdvance"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHMMIO__;;"
  }
  parameter {
    name: ""
    type: "*R_MMIOINFO;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "mmioSendMessage"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHMMIO__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "mmioDescend"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHMMIO__;;"
  }
  parameter {
    name: ""
    type: "*R_MMCKINFO;;"
  }
  parameter {
    name: ""
    type: "*cR_MMCKINFO;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "mmioAscend"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHMMIO__;;"
  }
  parameter {
    name: ""
    type: "*R_MMCKINFO;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "mmioCreateChunk"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHMMIO__;;"
  }
  parameter {
    name: ""
    type: "*R_MMCKINFO;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "mciExecute"
  return_type: "I"
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "mciSendCommandA"
  return_type: "UI"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "mciSendCommandW"
  return_type: "UI"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "mciSendStringA"
  return_type: "UI"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
}
function {
  name: "mciSendStringW"
  return_type: "UI"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
}
function {
  name: "mciGetDeviceIDA"
  return_type: "UI"
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "mciGetDeviceIDW"
  return_type: "UI"
  parameter {
    name: ""
    type: "*cUS;"
  }
}
function {
  name: "mciGetDeviceIDFromElementIDA"
  return_type: "UI"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "mciGetDeviceIDFromElementIDW"
  return_type: "UI"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
}
function {
  name: "mciGetErrorStringA"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "mciGetErrorStringW"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "mciSetYieldProc"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*(UIUI)UI;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "mciGetCreatorTask"
  return_type: "*RHTASK__;;"
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "mciGetYieldProc"
  return_type: "*(UIUI)UI;"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "Netbios"
  return_type: "UB"
  parameter {
    name: "pncb"
    type: "*R_NCB;;"
  }
}
function {
  name: "DceErrorInqTextA"
  return_type: "I"
  parameter {
    name: "e"
    type: "I"
  }
  parameter {
    name: "buffer"
    type: "*UB;"
  }
}
function {
  name: "DceErrorInqTextW"
  return_type: "I"
  parameter {
    name: "e"
    type: "I"
  }
  parameter {
    name: "buffer"
    type: "*US;"
  }
}
function {
  name: "RpcRaiseException"
  return_type: "V"
  parameter {
    name: "exception"
    type: "I"
  }
}
function {
  name: "RpcBindingCopy"
  return_type: "I"
  parameter {
    name: "SourceBinding"
    type: "*V;"
  }
  parameter {
    name: "DestinationBinding"
    type: "**V;;"
  }
}
function {
  name: "RpcBindingFree"
  return_type: "I"
  parameter {
    name: "Binding"
    type: "**V;;"
  }
}
function {
  name: "RpcBindingInqObject"
  return_type: "I"
  parameter {
    name: "Binding"
    type: "*V;"
  }
  parameter {
    name: "ObjectUuid"
    type: "*R_GUID;;"
  }
}
function {
  name: "RpcBindingInqOption"
  return_type: "I"
  parameter {
    name: "Binding"
    type: "*V;"
  }
  parameter {
    name: "Option"
    type: "UI"
  }
  parameter {
    name: "OptionValue"
    type: "*UI;"
  }
}
function {
  name: "RpcBindingReset"
  return_type: "I"
  parameter {
    name: "Binding"
    type: "*V;"
  }
}
function {
  name: "RpcBindingSetObject"
  return_type: "I"
  parameter {
    name: "Binding"
    type: "*V;"
  }
  parameter {
    name: "ObjectUuid"
    type: "*R_GUID;;"
  }
}
function {
  name: "RpcBindingSetOption"
  return_type: "I"
  parameter {
    name: "Binding"
    type: "*V;"
  }
  parameter {
    name: "Option"
    type: "UI"
  }
  parameter {
    name: "OptionValue"
    type: "UI"
  }
}
function {
  name: "RpcObjectSetType"
  return_type: "I"
  parameter {
    name: "ObjUuid"
    type: "*R_GUID;;"
  }
  parameter {
    name: "TypeUuid"
    type: "*R_GUID;;"
  }
}
function {
  name: "RpcBindingFromStringBindingA"
  return_type: "I"
  parameter {
    name: "StringBinding"
    type: "*UB;"
  }
  parameter {
    name: "Binding"
    type: "**V;;"
  }
}
function {
  name: "RpcBindingFromStringBindingW"
  return_type: "I"
  parameter {
    name: "StringBinding"
    type: "*US;"
  }
  parameter {
    name: "Binding"
    type: "**V;;"
  }
}
function {
  name: "RpcBindingToStringBindingA"
  return_type: "I"
  parameter {
    name: "Binding"
    type: "*V;"
  }
  parameter {
    name: "StringBinding"
    type: "**UB;;"
  }
}
function {
  name: "RpcBindingToStringBindingW"
  return_type: "I"
  parameter {
    name: "Binding"
    type: "*V;"
  }
  parameter {
    name: "StringBinding"
    type: "**US;;"
  }
}
function {
  name: "RpcBindingVectorFree"
  return_type: "I"
  parameter {
    name: "BindingVector"
    type: "**R_RPC_BINDING_VECTOR;;;"
  }
}
function {
  name: "RpcStringBindingComposeA"
  return_type: "I"
  parameter {
    name: "ObjUuid"
    type: "*UB;"
  }
  parameter {
    name: "Protseq"
    type: "*UB;"
  }
  parameter {
    name: "NetworkAddr"
    type: "*UB;"
  }
  parameter {
    name: "Endpoint"
    type: "*UB;"
  }
  parameter {
    name: "Options"
    type: "*UB;"
  }
  parameter {
    name: "StringBinding"
    type: "**UB;;"
  }
}
function {
  name: "RpcStringBindingComposeW"
  return_type: "I"
  parameter {
    name: "ObjUuid"
    type: "*US;"
  }
  parameter {
    name: "Protseq"
    type: "*US;"
  }
  parameter {
    name: "NetworkAddr"
    type: "*US;"
  }
  parameter {
    name: "Endpoint"
    type: "*US;"
  }
  parameter {
    name: "Options"
    type: "*US;"
  }
  parameter {
    name: "StringBinding"
    type: "**US;;"
  }
}
function {
  name: "RpcStringBindingParseA"
  return_type: "I"
  parameter {
    name: "StringBinding"
    type: "*UB;"
  }
  parameter {
    name: "ObjUuid"
    type: "**UB;;"
  }
  parameter {
    name: "Protseq"
    type: "**UB;;"
  }
  parameter {
    name: "NetworkAddr"
    type: "**UB;;"
  }
  parameter {
    name: "Endpoint"
    type: "**UB;;"
  }
  parameter {
    name: "NetworkOptions"
    type: "**UB;;"
  }
}
function {
  name: "RpcStringBindingParseW"
  return_type: "I"
  parameter {
    name: "StringBinding"
    type: "*US;"
  }
  parameter {
    name: "ObjUuid"
    type: "**US;;"
  }
  parameter {
    name: "Protseq"
    type: "**US;;"
  }
  parameter {
    name: "NetworkAddr"
    type: "**US;;"
  }
  parameter {
    name: "Endpoint"
    type: "**US;;"
  }
  parameter {
    name: "NetworkOptions"
    type: "**US;;"
  }
}
function {
  name: "RpcEpResolveBinding"
  return_type: "I"
  parameter {
    name: "Binding"
    type: "*V;"
  }
  parameter {
    name: "IfSpec"
    type: "*V;"
  }
}
function {
  name: "RpcEpRegisterA"
  return_type: "I"
  parameter {
    name: "IfSpec"
    type: "*V;"
  }
  parameter {
    name: "BindingVector"
    type: "*R_RPC_BINDING_VECTOR;;"
  }
  parameter {
    name: "UuidVector"
    type: "*R_UUID_VECTOR;;"
  }
  parameter {
    name: "Annotation"
    type: "*UB;"
  }
}
function {
  name: "RpcEpRegisterW"
  return_type: "I"
  parameter {
    name: "IfSpec"
    type: "*V;"
  }
  parameter {
    name: "BindingVector"
    type: "*R_RPC_BINDING_VECTOR;;"
  }
  parameter {
    name: "UuidVector"
    type: "*R_UUID_VECTOR;;"
  }
  parameter {
    name: "Annotation"
    type: "*US;"
  }
}
function {
  name: "RpcEpRegisterNoReplaceA"
  return_type: "I"
  parameter {
    name: "IfSpec"
    type: "*V;"
  }
  parameter {
    name: "BindingVector"
    type: "*R_RPC_BINDING_VECTOR;;"
  }
  parameter {
    name: "UuidVector"
    type: "*R_UUID_VECTOR;;"
  }
  parameter {
    name: "Annotation"
    type: "*UB;"
  }
}
function {
  name: "RpcEpRegisterNoReplaceW"
  return_type: "I"
  parameter {
    name: "IfSpec"
    type: "*V;"
  }
  parameter {
    name: "BindingVector"
    type: "*R_RPC_BINDING_VECTOR;;"
  }
  parameter {
    name: "UuidVector"
    type: "*R_UUID_VECTOR;;"
  }
  parameter {
    name: "Annotation"
    type: "*US;"
  }
}
function {
  name: "RpcEpUnregister"
  return_type: "I"
  parameter {
    name: "IfSpec"
    type: "*V;"
  }
  parameter {
    name: "BindingVector"
    type: "*R_RPC_BINDING_VECTOR;;"
  }
  parameter {
    name: "UuidVector"
    type: "*R_UUID_VECTOR;;"
  }
}
function {
  name: "RpcServerInqBindings"
  return_type: "I"
  parameter {
    name: "BindingVector"
    type: "**R_RPC_BINDING_VECTOR;;;"
  }
}
function {
  name: "RpcServerListen"
  return_type: "I"
  parameter {
    name: "MinimumCallThreads"
    type: "UI"
  }
  parameter {
    name: "MaxCalls"
    type: "UI"
  }
  parameter {
    name: "DontWait"
    type: "UI"
  }
}
function {
  name: "RpcMgmtEnableIdleCleanup"
  return_type: "I"
}
function {
  name: "RpcMgmtSetAuthorizationFn"
  return_type: "I"
  parameter {
    name: ""
    type: "*(*V;UI*I;)I;"
  }
}
function {
  name: "RpcMgmtSetCancelTimeout"
  return_type: "I"
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "RpcMgmtWaitServerListen"
  return_type: "I"
}
function {
  name: "RpcMgmtInqStats"
  return_type: "I"
  parameter {
    name: "Binding"
    type: "*V;"
  }
  parameter {
    name: "Statistics"
    type: "**RRPC_STATS_VECTOR;;;"
  }
}
function {
  name: "RpcMgmtStopServerListening"
  return_type: "I"
  parameter {
    name: "Binding"
    type: "*V;"
  }
}
function {
  name: "RpcMgmtIsServerListening"
  return_type: "I"
  parameter {
    name: "Binding"
    type: "*V;"
  }
}
function {
  name: "RpcMgmtInqIfIds"
  return_type: "I"
  parameter {
    name: "Binding"
    type: "*V;"
  }
  parameter {
    name: "IfIdVector"
    type: "**RRPC_IF_ID_VECTOR;;;"
  }
}
function {
  name: "RpcMgmtEpEltInqBegin"
  return_type: "I"
  parameter {
    name: "EpBinding"
    type: "*V;"
  }
  parameter {
    name: "InquiryType"
    type: "UI"
  }
  parameter {
    name: "IfId"
    type: "*R_RPC_IF_ID;;"
  }
  parameter {
    name: "VersOption"
    type: "UI"
  }
  parameter {
    name: "ObjectUuid"
    type: "*R_GUID;;"
  }
  parameter {
    name: "InquiryContext"
    type: "***V;;;"
  }
}
function {
  name: "RpcMgmtSetComTimeout"
  return_type: "I"
  parameter {
    name: "Binding"
    type: "*V;"
  }
  parameter {
    name: "Timeout"
    type: "UI"
  }
}
function {
  name: "RpcMgmtSetServerStackSize"
  return_type: "I"
  parameter {
    name: "ThreadStackSize"
    type: "UI"
  }
}
function {
  name: "RpcMgmtStatsVectorFree"
  return_type: "I"
  parameter {
    name: "StatsVector"
    type: "**RRPC_STATS_VECTOR;;;"
  }
}
function {
  name: "RpcServerRegisterIf"
  return_type: "I"
  parameter {
    name: "IfSpec"
    type: "*V;"
  }
  parameter {
    name: "MgrTypeUuid"
    type: "*R_GUID;;"
  }
  parameter {
    name: "MgrEpv"
    type: "*V;"
  }
}
function {
  name: "RpcServerRegisterIfEx"
  return_type: "I"
  parameter {
    name: "IfSpec"
    type: "*V;"
  }
  parameter {
    name: "MgrTypeUuid"
    type: "*R_GUID;;"
  }
  parameter {
    name: "MgrEpv"
    type: "*V;"
  }
  parameter {
    name: "Flags"
    type: "UI"
  }
  parameter {
    name: "MaxCalls"
    type: "UI"
  }
  parameter {
    name: "IfCallbackFn"
    type: "*(*V;*V;)I;"
  }
}
function {
  name: "RpcServerRegisterIf2"
  return_type: "I"
  parameter {
    name: "IfSpec"
    type: "*V;"
  }
  parameter {
    name: "MgrTypeUuid"
    type: "*R_GUID;;"
  }
  parameter {
    name: "MgrEpv"
    type: "*V;"
  }
  parameter {
    name: "Flags"
    type: "UI"
  }
  parameter {
    name: "MaxCalls"
    type: "UI"
  }
  parameter {
    name: "MaxRpcSize"
    type: "UI"
  }
  parameter {
    name: "IfCallbackFn"
    type: "*(*V;*V;)I;"
  }
}
function {
  name: "RpcServerUnregisterIf"
  return_type: "I"
  parameter {
    name: "IfSpec"
    type: "*V;"
  }
  parameter {
    name: "MgrTypeUuid"
    type: "*R_GUID;;"
  }
  parameter {
    name: "WaitForCallsToComplete"
    type: "UI"
  }
}
function {
  name: "RpcServerUnregisterIfEx"
  return_type: "I"
  parameter {
    name: "IfSpec"
    type: "*V;"
  }
  parameter {
    name: "MgrTypeUuid"
    type: "*R_GUID;;"
  }
  parameter {
    name: "RundownContextHandles"
    type: "I"
  }
}
function {
  name: "RpcServerUseProtseqA"
  return_type: "I"
  parameter {
    name: "Protseq"
    type: "*UB;"
  }
  parameter {
    name: "MaxCalls"
    type: "UI"
  }
  parameter {
    name: "SecurityDescriptor"
    type: "*V;"
  }
}
function {
  name: "RpcServerUseProtseqW"
  return_type: "I"
  parameter {
    name: "Protseq"
    type: "*US;"
  }
  parameter {
    name: "MaxCalls"
    type: "UI"
  }
  parameter {
    name: "SecurityDescriptor"
    type: "*V;"
  }
}
function {
  name: "RpcServerUseProtseqEpA"
  return_type: "I"
  parameter {
    name: "Protseq"
    type: "*UB;"
  }
  parameter {
    name: "MaxCalls"
    type: "UI"
  }
  parameter {
    name: "Endpoint"
    type: "*UB;"
  }
  parameter {
    name: "SecurityDescriptor"
    type: "*V;"
  }
}
function {
  name: "RpcServerUseProtseqEpW"
  return_type: "I"
  parameter {
    name: "Protseq"
    type: "*US;"
  }
  parameter {
    name: "MaxCalls"
    type: "UI"
  }
  parameter {
    name: "Endpoint"
    type: "*US;"
  }
  parameter {
    name: "SecurityDescriptor"
    type: "*V;"
  }
}
function {
  name: "RpcServerUseProtseqEpExA"
  return_type: "I"
  parameter {
    name: "Protseq"
    type: "*UB;"
  }
  parameter {
    name: "MaxCalls"
    type: "UI"
  }
  parameter {
    name: "Endpoint"
    type: "*UB;"
  }
  parameter {
    name: "SecurityDescriptor"
    type: "*V;"
  }
  parameter {
    name: "Policy"
    type: "*R_RPC_POLICY;;"
  }
}
function {
  name: "RpcServerUseProtseqEpExW"
  return_type: "I"
  parameter {
    name: "Protseq"
    type: "*US;"
  }
  parameter {
    name: "MaxCalls"
    type: "UI"
  }
  parameter {
    name: "Endpoint"
    type: "*US;"
  }
  parameter {
    name: "SecurityDescriptor"
    type: "*V;"
  }
  parameter {
    name: "Policy"
    type: "*R_RPC_POLICY;;"
  }
}
function {
  name: "RpcServerRegisterAuthInfoA"
  return_type: "I"
  parameter {
    name: "ServerPrincName"
    type: "*UB;"
  }
  parameter {
    name: "AuthnSvc"
    type: "UI"
  }
  parameter {
    name: "GetKeyFn"
    type: "*(*V;*US;UI**V;;*I;)V;"
  }
  parameter {
    name: "Arg"
    type: "*V;"
  }
}
function {
  name: "RpcServerRegisterAuthInfoW"
  return_type: "I"
  parameter {
    name: "ServerPrincName"
    type: "*US;"
  }
  parameter {
    name: "AuthnSvc"
    type: "UI"
  }
  parameter {
    name: "GetKeyFn"
    type: "*(*V;*US;UI**V;;*I;)V;"
  }
  parameter {
    name: "Arg"
    type: "*V;"
  }
}
function {
  name: "RpcBindingSetAuthInfoExA"
  return_type: "I"
  parameter {
    name: "Binding"
    type: "*V;"
  }
  parameter {
    name: "ServerPrincName"
    type: "*UB;"
  }
  parameter {
    name: "AuthnLevel"
    type: "UI"
  }
  parameter {
    name: "AuthnSvc"
    type: "UI"
  }
  parameter {
    name: "AuthIdentity"
    type: "*V;"
  }
  parameter {
    name: "AuthzSvr"
    type: "UI"
  }
  parameter {
    name: "SecurityQos"
    type: "*R_RPC_SECURITY_QOS;;"
  }
}
function {
  name: "RpcBindingSetAuthInfoExW"
  return_type: "I"
  parameter {
    name: "Binding"
    type: "*V;"
  }
  parameter {
    name: "ServerPrincName"
    type: "*US;"
  }
  parameter {
    name: "AuthnLevel"
    type: "UI"
  }
  parameter {
    name: "AuthnSvc"
    type: "UI"
  }
  parameter {
    name: "AuthIdentity"
    type: "*V;"
  }
  parameter {
    name: "AuthzSvr"
    type: "UI"
  }
  parameter {
    name: "SecurityQos"
    type: "*R_RPC_SECURITY_QOS;;"
  }
}
function {
  name: "RpcBindingSetAuthInfoA"
  return_type: "I"
  parameter {
    name: "Binding"
    type: "*V;"
  }
  parameter {
    name: "ServerPrincName"
    type: "*UB;"
  }
  parameter {
    name: "AuthnLevel"
    type: "UI"
  }
  parameter {
    name: "AuthnSvc"
    type: "UI"
  }
  parameter {
    name: "AuthIdentity"
    type: "*V;"
  }
  parameter {
    name: "AuthzSvr"
    type: "UI"
  }
}
function {
  name: "RpcBindingSetAuthInfoW"
  return_type: "I"
  parameter {
    name: "Binding"
    type: "*V;"
  }
  parameter {
    name: "ServerPrincName"
    type: "*US;"
  }
  parameter {
    name: "AuthnLevel"
    type: "UI"
  }
  parameter {
    name: "AuthnSvc"
    type: "UI"
  }
  parameter {
    name: "AuthIdentity"
    type: "*V;"
  }
  parameter {
    name: "AuthzSvr"
    type: "UI"
  }
}
function {
  name: "RpcBindingInqAuthInfoExA"
  return_type: "I"
  parameter {
    name: "Binding"
    type: "*V;"
  }
  parameter {
    name: "ServerPrincName"
    type: "**UB;;"
  }
  parameter {
    name: "AuthnLevel"
    type: "*UI;"
  }
  parameter {
    name: "AuthnSvc"
    type: "*UI;"
  }
  parameter {
    name: "AuthIdentity"
    type: "**V;;"
  }
  parameter {
    name: "AuthzSvc"
    type: "*UI;"
  }
  parameter {
    name: "RpcQosVersion"
    type: "UI"
  }
  parameter {
    name: "SecurityQOS"
    type: "*R_RPC_SECURITY_QOS;;"
  }
}
function {
  name: "RpcBindingInqAuthInfoExW"
  return_type: "I"
  parameter {
    name: "Binding"
    type: "*V;"
  }
  parameter {
    name: "ServerPrincName"
    type: "**US;;"
  }
  parameter {
    name: "AuthnLevel"
    type: "*UI;"
  }
  parameter {
    name: "AuthnSvc"
    type: "*UI;"
  }
  parameter {
    name: "AuthIdentity"
    type: "**V;;"
  }
  parameter {
    name: "AuthzSvc"
    type: "*UI;"
  }
  parameter {
    name: "RpcQosVersion"
    type: "UI"
  }
  parameter {
    name: "SecurityQOS"
    type: "*R_RPC_SECURITY_QOS;;"
  }
}
function {
  name: "RpcBindingInqAuthInfoA"
  return_type: "I"
  parameter {
    name: "Binding"
    type: "*V;"
  }
  parameter {
    name: "ServerPrincName"
    type: "**UB;;"
  }
  parameter {
    name: "AuthnLevel"
    type: "*UI;"
  }
  parameter {
    name: "AuthnSvc"
    type: "*UI;"
  }
  parameter {
    name: "AuthIdentity"
    type: "**V;;"
  }
  parameter {
    name: "AuthzSvc"
    type: "*UI;"
  }
}
function {
  name: "RpcBindingInqAuthInfoW"
  return_type: "I"
  parameter {
    name: "Binding"
    type: "*V;"
  }
  parameter {
    name: "ServerPrincName"
    type: "**US;;"
  }
  parameter {
    name: "AuthnLevel"
    type: "*UI;"
  }
  parameter {
    name: "AuthnSvc"
    type: "*UI;"
  }
  parameter {
    name: "AuthIdentity"
    type: "**V;;"
  }
  parameter {
    name: "AuthzSvc"
    type: "*UI;"
  }
}
function {
  name: "RpcBindingInqAuthClientA"
  return_type: "I"
  parameter {
    name: "ClientBinding"
    type: "*V;"
  }
  parameter {
    name: "Privs"
    type: "**V;;"
  }
  parameter {
    name: "ServerPrincName"
    type: "**UB;;"
  }
  parameter {
    name: "AuthnLevel"
    type: "*UI;"
  }
  parameter {
    name: "AuthnSvc"
    type: "*UI;"
  }
  parameter {
    name: "AuthzSvc"
    type: "*UI;"
  }
}
function {
  name: "RpcBindingInqAuthClientW"
  return_type: "I"
  parameter {
    name: "ClientBinding"
    type: "*V;"
  }
  parameter {
    name: "Privs"
    type: "**V;;"
  }
  parameter {
    name: "ServerPrincName"
    type: "**US;;"
  }
  parameter {
    name: "AuthnLevel"
    type: "*UI;"
  }
  parameter {
    name: "AuthnSvc"
    type: "*UI;"
  }
  parameter {
    name: "AuthzSvc"
    type: "*UI;"
  }
}
function {
  name: "RpcBindingInqAuthClientExA"
  return_type: "I"
  parameter {
    name: "ClientBinding"
    type: "*V;"
  }
  parameter {
    name: "Privs"
    type: "**V;;"
  }
  parameter {
    name: "ServerPrincName"
    type: "**UB;;"
  }
  parameter {
    name: "AuthnLevel"
    type: "*UI;"
  }
  parameter {
    name: "AuthnSvc"
    type: "*UI;"
  }
  parameter {
    name: "AuthzSvc"
    type: "*UI;"
  }
  parameter {
    name: "Flags"
    type: "UI"
  }
}
function {
  name: "RpcBindingInqAuthClientExW"
  return_type: "I"
  parameter {
    name: "ClientBinding"
    type: "*V;"
  }
  parameter {
    name: "Privs"
    type: "**V;;"
  }
  parameter {
    name: "ServerPrincName"
    type: "**US;;"
  }
  parameter {
    name: "AuthnLevel"
    type: "*UI;"
  }
  parameter {
    name: "AuthnSvc"
    type: "*UI;"
  }
  parameter {
    name: "AuthzSvc"
    type: "*UI;"
  }
  parameter {
    name: "Flags"
    type: "UI"
  }
}
function {
  name: "RpcCancelThread"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "RpcCancelThreadEx"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "RpcImpersonateClient"
  return_type: "I"
  parameter {
    name: "Binding"
    type: "*V;"
  }
}
function {
  name: "RpcNetworkIsProtseqValidA"
  return_type: "I"
  parameter {
    name: "protseq"
    type: "*UB;"
  }
}
function {
  name: "RpcNetworkIsProtseqValidW"
  return_type: "I"
  parameter {
    name: "protseq"
    type: "*US;"
  }
}
function {
  name: "RpcNetworkInqProtseqsA"
  return_type: "I"
  parameter {
    name: "protseqs"
    type: "**R_RPC_PROTSEQ_VECTORA;;;"
  }
}
function {
  name: "RpcNetworkInqProtseqsW"
  return_type: "I"
  parameter {
    name: "protseqs"
    type: "**R_RPC_PROTSEQ_VECTORW;;;"
  }
}
function {
  name: "RpcProtseqVectorFreeA"
  return_type: "I"
  parameter {
    name: "protseqs"
    type: "**R_RPC_PROTSEQ_VECTORA;;;"
  }
}
function {
  name: "RpcProtseqVectorFreeW"
  return_type: "I"
  parameter {
    name: "protseqs"
    type: "**R_RPC_PROTSEQ_VECTORW;;;"
  }
}
function {
  name: "RpcRevertToSelf"
  return_type: "I"
}
function {
  name: "RpcRevertToSelfEx"
  return_type: "I"
  parameter {
    name: "Binding"
    type: "*V;"
  }
}
function {
  name: "RpcStringFreeA"
  return_type: "I"
  parameter {
    name: "String"
    type: "**UB;;"
  }
}
function {
  name: "RpcStringFreeW"
  return_type: "I"
  parameter {
    name: "String"
    type: "**US;;"
  }
}
function {
  name: "UuidToStringA"
  return_type: "I"
  parameter {
    name: "Uuid"
    type: "*R_GUID;;"
  }
  parameter {
    name: "StringUuid"
    type: "**UB;;"
  }
}
function {
  name: "UuidToStringW"
  return_type: "I"
  parameter {
    name: "Uuid"
    type: "*R_GUID;;"
  }
  parameter {
    name: "StringUuid"
    type: "**US;;"
  }
}
function {
  name: "UuidFromStringA"
  return_type: "I"
  parameter {
    name: "StringUuid"
    type: "*UB;"
  }
  parameter {
    name: "Uuid"
    type: "*R_GUID;;"
  }
}
function {
  name: "UuidFromStringW"
  return_type: "I"
  parameter {
    name: "StringUuid"
    type: "*US;"
  }
  parameter {
    name: "Uuid"
    type: "*R_GUID;;"
  }
}
function {
  name: "UuidCreate"
  return_type: "I"
  parameter {
    name: "Uuid"
    type: "*R_GUID;;"
  }
}
function {
  name: "UuidCreateSequential"
  return_type: "I"
  parameter {
    name: "Uuid"
    type: "*R_GUID;;"
  }
}
function {
  name: "UuidCreateNil"
  return_type: "I"
  parameter {
    name: "Uuid"
    type: "*R_GUID;;"
  }
}
function {
  name: "UuidCompare"
  return_type: "I"
  parameter {
    name: "Uuid1"
    type: "*R_GUID;;"
  }
  parameter {
    name: "Uuid2"
    type: "*R_GUID;;"
  }
  parameter {
    name: "Status_"
    type: "*I;"
  }
}
function {
  name: "UuidEqual"
  return_type: "I"
  parameter {
    name: "Uuid1"
    type: "*R_GUID;;"
  }
  parameter {
    name: "Uuid2"
    type: "*R_GUID;;"
  }
  parameter {
    name: "Status_"
    type: "*I;"
  }
}
function {
  name: "UuidHash"
  return_type: "US"
  parameter {
    name: "Uuid"
    type: "*R_GUID;;"
  }
  parameter {
    name: "Status_"
    type: "*I;"
  }
}
function {
  name: "UuidIsNil"
  return_type: "I"
  parameter {
    name: "Uuid"
    type: "*R_GUID;;"
  }
  parameter {
    name: "Status_"
    type: "*I;"
  }
}
function {
  name: "RpcServerInqDefaultPrincNameA"
  return_type: "I"
  parameter {
    name: "AuthnSvc"
    type: "UI"
  }
  parameter {
    name: "PrincName"
    type: "**UB;;"
  }
}
function {
  name: "RpcServerInqDefaultPrincNameW"
  return_type: "I"
  parameter {
    name: "AuthnSvc"
    type: "UI"
  }
  parameter {
    name: "PrincName"
    type: "**US;;"
  }
}
function {
  name: "I_RpcNegotiateTransferSyntax"
  return_type: "I"
  parameter {
    name: "Message"
    type: "*R_RPC_MESSAGE;;"
  }
}
function {
  name: "I_RpcGetBuffer"
  return_type: "I"
  parameter {
    name: "Message"
    type: "*R_RPC_MESSAGE;;"
  }
}
function {
  name: "I_RpcGetBufferWithObject"
  return_type: "I"
  parameter {
    name: "Message"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "ObjectUuid"
    type: "*R_GUID;;"
  }
}
function {
  name: "I_RpcSendReceive"
  return_type: "I"
  parameter {
    name: "Message"
    type: "*R_RPC_MESSAGE;;"
  }
}
function {
  name: "I_RpcFreeBuffer"
  return_type: "I"
  parameter {
    name: "Message"
    type: "*R_RPC_MESSAGE;;"
  }
}
function {
  name: "I_RpcSend"
  return_type: "I"
  parameter {
    name: "Message"
    type: "*R_RPC_MESSAGE;;"
  }
}
function {
  name: "I_RpcReceive"
  return_type: "I"
  parameter {
    name: "Message"
    type: "*R_RPC_MESSAGE;;"
  }
}
function {
  name: "I_RpcAllocate"
  return_type: "*V;"
  parameter {
    name: "Size"
    type: "UI"
  }
}
function {
  name: "I_RpcFree"
  return_type: "V"
  parameter {
    name: "Object"
    type: "*V;"
  }
}
function {
  name: "I_RpcGetCurrentCallHandle"
  return_type: "*V;"
}
function {
  name: "I_RpcBindingInqTransportType"
  return_type: "I"
  parameter {
    name: "Binding"
    type: "*V;"
  }
  parameter {
    name: "Type"
    type: "*UI;"
  }
}
function {
  name: "I_RpcMapWin32Status"
  return_type: "I"
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "RpcAsyncInitializeHandle"
  return_type: "I"
  parameter {
    name: ""
    type: "*R_RPC_ASYNC_STATE;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "RpcAsyncRegisterInfo"
  return_type: "I"
  parameter {
    name: ""
    type: "*R_RPC_ASYNC_STATE;;"
  }
}
function {
  name: "RpcAsyncGetCallStatus"
  return_type: "I"
  parameter {
    name: ""
    type: "*R_RPC_ASYNC_STATE;;"
  }
}
function {
  name: "RpcAsyncCompleteCall"
  return_type: "I"
  parameter {
    name: ""
    type: "*R_RPC_ASYNC_STATE;;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "RpcAsyncAbortCall"
  return_type: "I"
  parameter {
    name: ""
    type: "*R_RPC_ASYNC_STATE;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "RpcAsyncCancelCall"
  return_type: "I"
  parameter {
    name: ""
    type: "*R_RPC_ASYNC_STATE;;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "RpcAsyncCleanupThread"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "RpcErrorStartEnumeration"
  return_type: "I"
  parameter {
    name: ""
    type: "*RtagRPC_ERROR_ENUM_HANDLE;;"
  }
}
function {
  name: "RpcErrorGetNextRecord"
  return_type: "I"
  parameter {
    name: ""
    type: "*RtagRPC_ERROR_ENUM_HANDLE;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*RtagRPC_EXTENDED_ERROR_INFO;;"
  }
}
function {
  name: "RpcErrorEndEnumeration"
  return_type: "I"
  parameter {
    name: ""
    type: "*RtagRPC_ERROR_ENUM_HANDLE;;"
  }
}
function {
  name: "RpcErrorResetEnumeration"
  return_type: "I"
  parameter {
    name: ""
    type: "*RtagRPC_ERROR_ENUM_HANDLE;;"
  }
}
function {
  name: "RpcErrorGetNumberOfRecords"
  return_type: "I"
  parameter {
    name: ""
    type: "*RtagRPC_ERROR_ENUM_HANDLE;;"
  }
  parameter {
    name: ""
    type: "*I;"
  }
}
function {
  name: "RpcErrorSaveErrorInfo"
  return_type: "I"
  parameter {
    name: ""
    type: "*RtagRPC_ERROR_ENUM_HANDLE;;"
  }
  parameter {
    name: ""
    type: "**V;;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "RpcErrorLoadErrorInfo"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*RtagRPC_ERROR_ENUM_HANDLE;;"
  }
}
function {
  name: "RpcErrorAddRecord"
  return_type: "I"
  parameter {
    name: ""
    type: "*RtagRPC_EXTENDED_ERROR_INFO;;"
  }
}
function {
  name: "RpcErrorClearInformation"
  return_type: "I"
}
function {
  name: "RpcGetAuthorizationContextForClient"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*Runion _LARGE_INTEGER;;"
  }
  parameter {
    name: ""
    type: "R_LUID;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "**V;;"
  }
}
function {
  name: "RpcFreeAuthorizationContext"
  return_type: "I"
  parameter {
    name: ""
    type: "**V;;"
  }
}
function {
  name: "RpcSsContextLockExclusive"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "RpcSsContextLockShared"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "I_RpcAsyncSetHandle"
  return_type: "I"
  parameter {
    name: ""
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: ""
    type: "*R_RPC_ASYNC_STATE;;"
  }
}
function {
  name: "I_RpcAsyncAbortCall"
  return_type: "I"
  parameter {
    name: ""
    type: "*R_RPC_ASYNC_STATE;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "I_RpcExceptionFilter"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "DragAcceptFiles"
  return_type: "V"
  parameter {
    name: "hWnd"
    type: "*RHWND__;;"
  }
  parameter {
    name: "b"
    type: "I"
  }
}
function {
  name: "DragQueryFileA"
  return_type: "UI"
  parameter {
    name: "hDrop"
    type: "*RHDROP__;;"
  }
  parameter {
    name: "lFile"
    type: "UI"
  }
  parameter {
    name: "lpszFile"
    type: "*C;"
  }
  parameter {
    name: "lLength"
    type: "UI"
  }
}
function {
  name: "DragQueryFileW"
  return_type: "UI"
  parameter {
    name: "hDrop"
    type: "*RHDROP__;;"
  }
  parameter {
    name: "lFile"
    type: "UI"
  }
  parameter {
    name: "lpszFile"
    type: "*US;"
  }
  parameter {
    name: "lLength"
    type: "UI"
  }
}
function {
  name: "DragFinish"
  return_type: "V"
  parameter {
    name: "h"
    type: "*RHDROP__;;"
  }
}
function {
  name: "DragQueryPoint"
  return_type: "I"
  parameter {
    name: "hDrop"
    type: "*RHDROP__;;"
  }
  parameter {
    name: "p"
    type: "*RtagPOINT;;"
  }
}
function {
  name: "SHAppBarMessage"
  return_type: "UI"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*R_AppBarData;;"
  }
}
function {
  name: "SHGetFileInfoA"
  return_type: "UI"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*RtagSHFILEINFOA;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "SHGetFileInfoW"
  return_type: "UI"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*RtagSHFILEINFOW;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "SHGetImageList"
  return_type: "I"
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "c*cR_GUID;;"
  }
  parameter {
    name: ""
    type: "**V;;"
  }
}
function {
  name: "SHFileOperationA"
  return_type: "I"
  parameter {
    name: "lpFileOp"
    type: "*R_SHFILEOPSTRUCTA;;"
  }
}
function {
  name: "SHFileOperationW"
  return_type: "I"
  parameter {
    name: "lpFileOp"
    type: "*R_SHFILEOPSTRUCTW;;"
  }
}
function {
  name: "SHFreeNameMappings"
  return_type: "V"
  parameter {
    name: "hNameMappings"
    type: "*V;"
  }
}
function {
  name: "ShellExecuteA"
  return_type: "*RHINSTANCE__;;"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "ShellExecuteW"
  return_type: "*RHINSTANCE__;;"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "ShellExecuteExA"
  return_type: "I"
  parameter {
    name: "lpExecInfo"
    type: "*R_SHELLEXECUTEINFOA;;"
  }
}
function {
  name: "ShellExecuteExW"
  return_type: "I"
  parameter {
    name: "lpExecInfo"
    type: "*R_SHELLEXECUTEINFOW;;"
  }
}
function {
  name: "WinExecErrorA"
  return_type: "V"
  parameter {
    name: "hwnd"
    type: "*RHWND__;;"
  }
  parameter {
    name: "error"
    type: "I"
  }
  parameter {
    name: "lpstrFileName"
    type: "*cC;"
  }
  parameter {
    name: "lpstrTitle"
    type: "*cC;"
  }
}
function {
  name: "WinExecErrorW"
  return_type: "V"
  parameter {
    name: "hwnd"
    type: "*RHWND__;;"
  }
  parameter {
    name: "error"
    type: "I"
  }
  parameter {
    name: "lpstrFileName"
    type: "*cUS;"
  }
  parameter {
    name: "lpstrTitle"
    type: "*cUS;"
  }
}
function {
  name: "Shell_NotifyIconA"
  return_type: "I"
  parameter {
    name: "dwMessage"
    type: "UI"
  }
  parameter {
    name: "lpData"
    type: "*R_NOTIFYICONDATAA;;"
  }
}
function {
  name: "Shell_NotifyIconW"
  return_type: "I"
  parameter {
    name: "dwMessage"
    type: "UI"
  }
  parameter {
    name: "lpData"
    type: "*R_NOTIFYICONDATAW;;"
  }
}
function {
  name: "SHGetNewLinkInfoA"
  return_type: "I"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "*I;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "SHGetNewLinkInfoW"
  return_type: "I"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "*I;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "SHEmptyRecycleBinA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "SHEmptyRecycleBinW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "SHQueryRecycleBinA"
  return_type: "I"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*R_SHQUERYRBINFO;;"
  }
}
function {
  name: "SHQueryRecycleBinW"
  return_type: "I"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*R_SHQUERYRBINFO;;"
  }
}
function {
  name: "SHGetStockIconInfo"
  return_type: "I"
  parameter {
    name: ""
    type: "X(Enum.enum SHSTOCKICONID)"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*R_SHSTOCKICONINFO;;"
  }
}
function {
  name: "CommandLineToArgvW"
  return_type: "**US;;"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*I;"
  }
}
function {
  name: "ExtractIconA"
  return_type: "*RHICON__;;"
  parameter {
    name: ""
    type: "*RHINSTANCE__;;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "ExtractIconW"
  return_type: "*RHICON__;;"
  parameter {
    name: ""
    type: "*RHINSTANCE__;;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "ExtractAssociatedIconA"
  return_type: "*RHICON__;;"
  parameter {
    name: ""
    type: "*RHINSTANCE__;;"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "*US;"
  }
}
function {
  name: "ExtractAssociatedIconW"
  return_type: "*RHICON__;;"
  parameter {
    name: ""
    type: "*RHINSTANCE__;;"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "*US;"
  }
}
function {
  name: "ExtractAssociatedIconExA"
  return_type: "*RHICON__;;"
  parameter {
    name: ""
    type: "*RHINSTANCE__;;"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "*US;"
  }
}
function {
  name: "ExtractAssociatedIconExW"
  return_type: "*RHICON__;;"
  parameter {
    name: ""
    type: "*RHINSTANCE__;;"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "*US;"
  }
}
function {
  name: "ExtractIconExA"
  return_type: "UI"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "**RHICON__;;;"
  }
  parameter {
    name: ""
    type: "**RHICON__;;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "ExtractIconExW"
  return_type: "UI"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "**RHICON__;;;"
  }
  parameter {
    name: ""
    type: "**RHICON__;;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "FindExecutableA"
  return_type: "*RHINSTANCE__;;"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*C;"
  }
}
function {
  name: "FindExecutableW"
  return_type: "*RHINSTANCE__;;"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*US;"
  }
}
function {
  name: "ShellAboutA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*RHICON__;;"
  }
}
function {
  name: "ShellAboutW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*RHICON__;;"
  }
}
function {
  name: "ShellMessageBoxA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHINSTANCE__;;"
  }
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "ShellMessageBoxW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHINSTANCE__;;"
  }
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "DoEnvironmentSubstA"
  return_type: "UI"
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "DoEnvironmentSubstW"
  return_type: "UI"
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "_OSSwapInt16"
  return_type: "US"
  parameter {
    name: "_data"
    type: "US"
  }
}
function {
  name: "_OSSwapInt32"
  return_type: "UI"
  parameter {
    name: "_data"
    type: "UI"
  }
}
function {
  name: "_OSSwapInt64"
  return_type: "UJ"
  parameter {
    name: "_data"
    type: "UJ"
  }
}
function {
  name: "__darwin_fd_isset"
  return_type: "I"
  parameter {
    name: "_n"
    type: "I"
  }
  parameter {
    name: "_p"
    type: "*cRunix_fd_set;;"
  }
}
function {
  name: "asctime"
  return_type: "*C;"
  parameter {
    name: ""
    type: "*cRtm;;"
  }
}
function {
  name: "clock"
  return_type: "UI"
}
function {
  name: "ctime"
  return_type: "*C;"
  parameter {
    name: ""
    type: "*cI;"
  }
}
function {
  name: "difftime"
  return_type: "D"
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "getdate"
  return_type: "*Rtm;;"
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "gmtime"
  return_type: "*Rtm;;"
  parameter {
    name: ""
    type: "*cI;"
  }
}
function {
  name: "localtime"
  return_type: "*Rtm;;"
  parameter {
    name: ""
    type: "*cI;"
  }
}
function {
  name: "mktime"
  return_type: "I"
  parameter {
    name: ""
    type: "*Rtm;;"
  }
}
function {
  name: "strftime"
  return_type: "UI"
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*cRtm;;"
  }
}
function {
  name: "strptime"
  return_type: "*C;"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*Rtm;;"
  }
}
function {
  name: "time"
  return_type: "I"
  parameter {
    name: ""
    type: "*I;"
  }
}
function {
  name: "tzset"
  return_type: "V"
}
function {
  name: "asctime_r"
  return_type: "*C;"
  parameter {
    name: ""
    type: "*cRtm;;"
  }
  parameter {
    name: ""
    type: "*C;"
  }
}
function {
  name: "ctime_r"
  return_type: "*C;"
  parameter {
    name: ""
    type: "*cI;"
  }
  parameter {
    name: ""
    type: "*C;"
  }
}
function {
  name: "gmtime_r"
  return_type: "*Rtm;;"
  parameter {
    name: ""
    type: "*cI;"
  }
  parameter {
    name: ""
    type: "*Rtm;;"
  }
}
function {
  name: "localtime_r"
  return_type: "*Rtm;;"
  parameter {
    name: ""
    type: "*cI;"
  }
  parameter {
    name: ""
    type: "*Rtm;;"
  }
}
function {
  name: "posix2time"
  return_type: "I"
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "tzsetwall"
  return_type: "V"
}
function {
  name: "time2posix"
  return_type: "I"
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "timelocal"
  return_type: "I"
  parameter {
    name: ""
    type: "c*Rtm;;"
  }
}
function {
  name: "timegm"
  return_type: "I"
  parameter {
    name: ""
    type: "c*Rtm;;"
  }
}
function {
  name: "nanosleep"
  return_type: "I"
  parameter {
    name: ""
    type: "*cRtimespec;;"
  }
  parameter {
    name: ""
    type: "*Rtimespec;;"
  }
}
function {
  name: "signal"
  return_type: "*(I)V;"
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*(I)V;"
  }
}
function {
  name: "getpriority"
  return_type: "I"
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "getiopolicy_np"
  return_type: "I"
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "getrlimit"
  return_type: "I"
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*Rrlimit;;"
  }
}
function {
  name: "getrusage"
  return_type: "I"
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*Rrusage;;"
  }
}
function {
  name: "setpriority"
  return_type: "I"
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "setiopolicy_np"
  return_type: "I"
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "setrlimit"
  return_type: "I"
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*cRrlimit;;"
  }
}
function {
  name: "wait"
  return_type: "I"
  parameter {
    name: ""
    type: "*I;"
  }
}
function {
  name: "waitpid"
  return_type: "I"
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*I;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "waitid"
  return_type: "I"
  parameter {
    name: ""
    type: "X(Enum.idtype_t)"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*R__siginfo;;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "wait3"
  return_type: "I"
  parameter {
    name: ""
    type: "*I;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*Rrusage;;"
  }
}
function {
  name: "wait4"
  return_type: "I"
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*I;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*Rrusage;;"
  }
}
function {
  name: "alloca"
  return_type: "*V;"
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "abort"
  return_type: "V"
}
function {
  name: "abs"
  return_type: "I"
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "atexit"
  return_type: "I"
  parameter {
    name: ""
    type: "*()V;"
  }
}
function {
  name: "atof"
  return_type: "D"
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "atoi"
  return_type: "I"
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "atol"
  return_type: "I"
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "atoll"
  return_type: "J"
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "bsearch"
  return_type: "*V;"
  parameter {
    name: ""
    type: "*cV;"
  }
  parameter {
    name: ""
    type: "*cV;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*(*cV;*cV;)I;"
  }
}
function {
  name: "calloc"
  return_type: "*V;"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "div"
  return_type: "Rdiv_t;"
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "exit"
  return_type: "V"
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "free"
  return_type: "V"
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "getenv"
  return_type: "*C;"
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "labs"
  return_type: "I"
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "ldiv"
  return_type: "Rldiv_t;"
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "llabs"
  return_type: "J"
  parameter {
    name: ""
    type: "J"
  }
}
function {
  name: "lldiv"
  return_type: "Rlldiv_t;"
  parameter {
    name: ""
    type: "J"
  }
  parameter {
    name: ""
    type: "J"
  }
}
function {
  name: "malloc"
  return_type: "*V;"
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "mblen"
  return_type: "I"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "mbstowcs"
  return_type: "UI"
  parameter {
    name: ""
    type: "*I;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "mbtowc"
  return_type: "I"
  parameter {
    name: ""
    type: "*I;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "posix_memalign"
  return_type: "I"
  parameter {
    name: ""
    type: "**V;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "qsort"
  return_type: "V"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*(*cV;*cV;)I;"
  }
}
function {
  name: "rand"
  return_type: "I"
}
function {
  name: "realloc"
  return_type: "*V;"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "srand"
  return_type: "V"
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "strtod"
  return_type: "D"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "**C;;"
  }
}
function {
  name: "strtof"
  return_type: "F"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "**C;;"
  }
}
function {
  name: "strtol"
  return_type: "I"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "**C;;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "strtold"
  return_type: "X(LongDouble.long double)"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "**C;;"
  }
}
function {
  name: "strtoll"
  return_type: "J"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "**C;;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "strtoul"
  return_type: "UI"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "**C;;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "strtoull"
  return_type: "UJ"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "**C;;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "system"
  return_type: "I"
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "wcstombs"
  return_type: "UI"
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "*cI;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "wctomb"
  return_type: "I"
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "_Exit"
  return_type: "V"
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "a64l"
  return_type: "I"
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "drand48"
  return_type: "D"
}
function {
  name: "ecvt"
  return_type: "*C;"
  parameter {
    name: ""
    type: "D"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*I;"
  }
  parameter {
    name: ""
    type: "*I;"
  }
}
function {
  name: "erand48"
  return_type: "D"
  parameter {
    name: ""
    type: "X(ConstantArray.unsigned short [3])"
  }
}
function {
  name: "fcvt"
  return_type: "*C;"
  parameter {
    name: ""
    type: "D"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*I;"
  }
  parameter {
    name: ""
    type: "*I;"
  }
}
function {
  name: "gcvt"
  return_type: "*C;"
  parameter {
    name: ""
    type: "D"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*C;"
  }
}
function {
  name: "getsubopt"
  return_type: "I"
  parameter {
    name: ""
    type: "**C;;"
  }
  parameter {
    name: ""
    type: "*c*C;;"
  }
  parameter {
    name: ""
    type: "**C;;"
  }
}
function {
  name: "grantpt"
  return_type: "I"
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "initstate"
  return_type: "*C;"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "jrand48"
  return_type: "I"
  parameter {
    name: ""
    type: "X(ConstantArray.unsigned short [3])"
  }
}
function {
  name: "l64a"
  return_type: "*C;"
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "lcong48"
  return_type: "V"
  parameter {
    name: ""
    type: "X(ConstantArray.unsigned short [7])"
  }
}
function {
  name: "lrand48"
  return_type: "I"
}
function {
  name: "mktemp"
  return_type: "*C;"
  parameter {
    name: ""
    type: "*C;"
  }
}
function {
  name: "mkstemp"
  return_type: "I"
  parameter {
    name: ""
    type: "*C;"
  }
}
function {
  name: "mrand48"
  return_type: "I"
}
function {
  name: "nrand48"
  return_type: "I"
  parameter {
    name: ""
    type: "X(ConstantArray.unsigned short [3])"
  }
}
function {
  name: "posix_openpt"
  return_type: "I"
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "ptsname"
  return_type: "*C;"
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "putenv"
  return_type: "I"
  parameter {
    name: ""
    type: "*C;"
  }
}
function {
  name: "random"
  return_type: "I"
}
function {
  name: "rand_r"
  return_type: "I"
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "realpath"
  return_type: "*C;"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*C;"
  }
}
function {
  name: "seed48"
  return_type: "*US;"
  parameter {
    name: ""
    type: "X(ConstantArray.unsigned short [3])"
  }
}
function {
  name: "setenv"
  return_type: "I"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "setkey"
  return_type: "V"
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "setstate"
  return_type: "*C;"
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "srand48"
  return_type: "V"
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "srandom"
  return_type: "V"
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "unlockpt"
  return_type: "I"
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "unsetenv"
  return_type: "I"
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "arc4random"
  return_type: "UI"
}
function {
  name: "arc4random_addrandom"
  return_type: "V"
  parameter {
    name: ""
    type: "*UB;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "arc4random_buf"
  return_type: "V"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "arc4random_stir"
  return_type: "V"
}
function {
  name: "arc4random_uniform"
  return_type: "UI"
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "atexit_b"
  return_type: "I"
  parameter {
    name: ""
    type: "X(BlockPointer.void (^)(void))"
  }
}
function {
  name: "bsearch_b"
  return_type: "*V;"
  parameter {
    name: ""
    type: "*cV;"
  }
  parameter {
    name: ""
    type: "*cV;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "X(BlockPointer.int (^)(const void *, const void *))"
  }
}
function {
  name: "cgetcap"
  return_type: "*C;"
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "cgetclose"
  return_type: "I"
}
function {
  name: "cgetent"
  return_type: "I"
  parameter {
    name: ""
    type: "**C;;"
  }
  parameter {
    name: ""
    type: "**C;;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "cgetfirst"
  return_type: "I"
  parameter {
    name: ""
    type: "**C;;"
  }
  parameter {
    name: ""
    type: "**C;;"
  }
}
function {
  name: "cgetmatch"
  return_type: "I"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "cgetnext"
  return_type: "I"
  parameter {
    name: ""
    type: "**C;;"
  }
  parameter {
    name: ""
    type: "**C;;"
  }
}
function {
  name: "cgetnum"
  return_type: "I"
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*I;"
  }
}
function {
  name: "cgetset"
  return_type: "I"
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "cgetstr"
  return_type: "I"
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "**C;;"
  }
}
function {
  name: "cgetustr"
  return_type: "I"
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "**C;;"
  }
}
function {
  name: "daemon"
  return_type: "I"
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "devname"
  return_type: "*C;"
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "US"
  }
}
function {
  name: "devname_r"
  return_type: "*C;"
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "US"
  }
  parameter {
    name: "buf"
    type: "*C;"
  }
  parameter {
    name: "len"
    type: "I"
  }
}
function {
  name: "getbsize"
  return_type: "*C;"
  parameter {
    name: ""
    type: "*I;"
  }
  parameter {
    name: ""
    type: "*I;"
  }
}
function {
  name: "getloadavg"
  return_type: "I"
  parameter {
    name: ""
    type: "X(IncompleteArray.double [])"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "getprogname"
  return_type: "*cC;"
}
function {
  name: "heapsort"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*(*cV;*cV;)I;"
  }
}
function {
  name: "heapsort_b"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "X(BlockPointer.int (^)(const void *, const void *))"
  }
}
function {
  name: "mergesort"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*(*cV;*cV;)I;"
  }
}
function {
  name: "mergesort_b"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "X(BlockPointer.int (^)(const void *, const void *))"
  }
}
function {
  name: "psort"
  return_type: "V"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*(*cV;*cV;)I;"
  }
}
function {
  name: "psort_b"
  return_type: "V"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "X(BlockPointer.int (^)(const void *, const void *))"
  }
}
function {
  name: "psort_r"
  return_type: "V"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*(*V;*cV;*cV;)I;"
  }
}
function {
  name: "qsort_b"
  return_type: "V"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "X(BlockPointer.int (^)(const void *, const void *))"
  }
}
function {
  name: "qsort_r"
  return_type: "V"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*(*V;*cV;*cV;)I;"
  }
}
function {
  name: "radixsort"
  return_type: "I"
  parameter {
    name: ""
    type: "**cUB;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*cUB;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "setprogname"
  return_type: "V"
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "sradixsort"
  return_type: "I"
  parameter {
    name: ""
    type: "**cUB;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*cUB;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "sranddev"
  return_type: "V"
}
function {
  name: "srandomdev"
  return_type: "V"
}
function {
  name: "reallocf"
  return_type: "*V;"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "strtoq"
  return_type: "J"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "**C;;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "strtouq"
  return_type: "UJ"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "**C;;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "valloc"
  return_type: "*V;"
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "__WSAFDIsSet"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*Rfd_set;;"
  }
}
function {
  name: "__wine_ushort_swap"
  return_type: "US"
  parameter {
    name: "s"
    type: "US"
  }
}
function {
  name: "__wine_ulong_swap"
  return_type: "UI"
  parameter {
    name: "l"
    type: "UI"
  }
}
function {
  name: "WSAAsyncGetHostByAddr"
  return_type: "*V;"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "WSAAsyncGetHostByName"
  return_type: "*V;"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "WSAAsyncGetProtoByName"
  return_type: "*V;"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "WSAAsyncGetProtoByNumber"
  return_type: "*V;"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "WSAAsyncGetServByName"
  return_type: "*V;"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "WSAAsyncGetServByPort"
  return_type: "*V;"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "WSAAsyncSelect"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "WSACancelAsyncRequest"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "WSACancelBlockingCall"
  return_type: "I"
}
function {
  name: "WSACleanup"
  return_type: "I"
}
function {
  name: "WSAGetLastError"
  return_type: "I"
}
function {
  name: "WSAIsBlocking"
  return_type: "I"
}
function {
  name: "WSASetBlockingHook"
  return_type: "*(.)I;"
  parameter {
    name: ""
    type: "*(.)I;"
  }
}
function {
  name: "WSASetLastError"
  return_type: "V"
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "WSAStartup"
  return_type: "I"
  parameter {
    name: ""
    type: "US"
  }
  parameter {
    name: ""
    type: "*RWSAData;;"
  }
}
function {
  name: "WSAUnhookBlockingHook"
  return_type: "I"
}
function {
  name: "accept"
  return_type: "UI"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*Rsockaddr;;"
  }
  parameter {
    name: ""
    type: "*I;"
  }
}
function {
  name: "bind"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cRsockaddr;;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "closesocket"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "connect"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cRsockaddr;;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "gethostbyaddr"
  return_type: "*Rhostent;;"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "gethostbyname"
  return_type: "*Rhostent;;"
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "getpeername"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*Rsockaddr;;"
  }
  parameter {
    name: ""
    type: "*I;"
  }
}
function {
  name: "getprotobyname"
  return_type: "*Rprotoent;;"
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "getprotobynumber"
  return_type: "*Rprotoent;;"
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "select"
  return_type: "I"
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*Rfd_set;;"
  }
  parameter {
    name: ""
    type: "*Rfd_set;;"
  }
  parameter {
    name: ""
    type: "*Rfd_set;;"
  }
  parameter {
    name: ""
    type: "*cRtimeval;;"
  }
}
function {
  name: "getservbyname"
  return_type: "*Rservent;;"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "getservbyport"
  return_type: "*Rservent;;"
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "getsockname"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*Rsockaddr;;"
  }
  parameter {
    name: ""
    type: "*I;"
  }
}
function {
  name: "getsockopt"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "*I;"
  }
}
function {
  name: "inet_addr"
  return_type: "UI"
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "inet_ntoa"
  return_type: "*C;"
  parameter {
    name: ""
    type: "Rin_addr;"
  }
}
function {
  name: "ioctlsocket"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "listen"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "recv"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "recvfrom"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*Rsockaddr;;"
  }
  parameter {
    name: ""
    type: "*I;"
  }
}
function {
  name: "send"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "sendto"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*cRsockaddr;;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "setsockopt"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "shutdown"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "socket"
  return_type: "UI"
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "CryptAcquireContextA"
  return_type: "I"
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "CryptAcquireContextW"
  return_type: "I"
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "CryptGenRandom"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UB;"
  }
}
function {
  name: "CryptContextAddRef"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "CryptCreateHash"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "CryptDecrypt"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UB;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "CryptDeriveKey"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "CryptDestroyHash"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "CryptDestroyKey"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "CryptDuplicateKey"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "CryptDuplicateHash"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "CryptEncrypt"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UB;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "CryptEnumProvidersA"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "CryptEnumProvidersW"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "CryptEnumProviderTypesA"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "CryptEnumProviderTypesW"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "CryptExportKey"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UB;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "CryptGenKey"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "CryptGetKeyParam"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UB;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "CryptGetHashParam"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UB;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "CryptGetProvParam"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UB;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "CryptGetDefaultProviderA"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "CryptGetDefaultProviderW"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "CryptGetUserKey"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "CryptHashData"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cUB;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "CryptHashSessionKey"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "CryptImportKey"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cUB;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "CryptReleaseContext"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "CryptSetHashParam"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cUB;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "CryptSetKeyParam"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cUB;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "CryptSetProviderA"
  return_type: "I"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "CryptSetProviderW"
  return_type: "I"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "CryptSetProviderExA"
  return_type: "I"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "CryptSetProviderExW"
  return_type: "I"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "CryptSetProvParam"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cUB;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "CryptSignHashA"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UB;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "CryptSignHashW"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UB;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "CryptVerifySignatureA"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cUB;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "CryptVerifySignatureW"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cUB;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "CryptMemAlloc"
  return_type: "*V;"
  parameter {
    name: "cbSize"
    type: "UI"
  }
}
function {
  name: "CryptMemRealloc"
  return_type: "*V;"
  parameter {
    name: "pv"
    type: "*V;"
  }
  parameter {
    name: "cbSize"
    type: "UI"
  }
}
function {
  name: "CryptMemFree"
  return_type: "V"
  parameter {
    name: "pv"
    type: "*V;"
  }
}
function {
  name: "CryptBinaryToStringA"
  return_type: "I"
  parameter {
    name: "pbBinary"
    type: "*cUB;"
  }
  parameter {
    name: "cbBinary"
    type: "UI"
  }
  parameter {
    name: "dwFlags"
    type: "UI"
  }
  parameter {
    name: "pszString"
    type: "*C;"
  }
  parameter {
    name: "pcchString"
    type: "*UI;"
  }
}
function {
  name: "CryptBinaryToStringW"
  return_type: "I"
  parameter {
    name: "pbBinary"
    type: "*cUB;"
  }
  parameter {
    name: "cbBinary"
    type: "UI"
  }
  parameter {
    name: "dwFlags"
    type: "UI"
  }
  parameter {
    name: "pszString"
    type: "*US;"
  }
  parameter {
    name: "pcchString"
    type: "*UI;"
  }
}
function {
  name: "CryptStringToBinaryA"
  return_type: "I"
  parameter {
    name: "pszString"
    type: "*cC;"
  }
  parameter {
    name: "cchString"
    type: "UI"
  }
  parameter {
    name: "dwFlags"
    type: "UI"
  }
  parameter {
    name: "pbBinary"
    type: "*UB;"
  }
  parameter {
    name: "pcbBinary"
    type: "*UI;"
  }
  parameter {
    name: "pdwSkip"
    type: "*UI;"
  }
  parameter {
    name: "pdwFlags"
    type: "*UI;"
  }
}
function {
  name: "CryptStringToBinaryW"
  return_type: "I"
  parameter {
    name: "pszString"
    type: "*cUS;"
  }
  parameter {
    name: "cchString"
    type: "UI"
  }
  parameter {
    name: "dwFlags"
    type: "UI"
  }
  parameter {
    name: "pbBinary"
    type: "*UB;"
  }
  parameter {
    name: "pcbBinary"
    type: "*UI;"
  }
  parameter {
    name: "pdwSkip"
    type: "*UI;"
  }
  parameter {
    name: "pdwFlags"
    type: "*UI;"
  }
}
function {
  name: "CryptCreateAsyncHandle"
  return_type: "I"
  parameter {
    name: "dwFlags"
    type: "UI"
  }
  parameter {
    name: "phAsync"
    type: "**V;;"
  }
}
function {
  name: "CryptSetAsyncParam"
  return_type: "I"
  parameter {
    name: "hAsync"
    type: "*V;"
  }
  parameter {
    name: "pszParamOid"
    type: "*C;"
  }
  parameter {
    name: "pvParam"
    type: "*V;"
  }
  parameter {
    name: "pfnFree"
    type: "*(*C;*V;)V;"
  }
}
function {
  name: "CryptGetAsyncParam"
  return_type: "I"
  parameter {
    name: "hAsync"
    type: "*V;"
  }
  parameter {
    name: "pszParamOid"
    type: "*C;"
  }
  parameter {
    name: "ppvParam"
    type: "**V;;"
  }
  parameter {
    name: "ppfnFree"
    type: "**(*C;*V;)V;;"
  }
}
function {
  name: "CryptCloseAsyncHandle"
  return_type: "I"
  parameter {
    name: "hAsync"
    type: "*V;"
  }
}
function {
  name: "CryptRegisterDefaultOIDFunction"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
}
function {
  name: "CryptRegisterOIDFunction"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "CryptGetOIDFunctionValue"
  return_type: "I"
  parameter {
    name: "dwEncodingType"
    type: "UI"
  }
  parameter {
    name: "pszFuncName"
    type: "*cC;"
  }
  parameter {
    name: "pszOID"
    type: "*cC;"
  }
  parameter {
    name: "szValueName"
    type: "*cUS;"
  }
  parameter {
    name: "pdwValueType"
    type: "*UI;"
  }
  parameter {
    name: "pbValueData"
    type: "*UB;"
  }
  parameter {
    name: "pcbValueData"
    type: "*UI;"
  }
}
function {
  name: "CryptSetOIDFunctionValue"
  return_type: "I"
  parameter {
    name: "dwEncodingType"
    type: "UI"
  }
  parameter {
    name: "pszFuncName"
    type: "*cC;"
  }
  parameter {
    name: "pszOID"
    type: "*cC;"
  }
  parameter {
    name: "pwszValueName"
    type: "*cUS;"
  }
  parameter {
    name: "dwValueType"
    type: "UI"
  }
  parameter {
    name: "pbValueData"
    type: "*cUB;"
  }
  parameter {
    name: "cbValueData"
    type: "UI"
  }
}
function {
  name: "CryptUnregisterDefaultOIDFunction"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
}
function {
  name: "CryptUnregisterOIDFunction"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "CryptEnumOIDFunction"
  return_type: "I"
  parameter {
    name: "dwEncodingType"
    type: "UI"
  }
  parameter {
    name: "pszFuncName"
    type: "*cC;"
  }
  parameter {
    name: "pszOID"
    type: "*cC;"
  }
  parameter {
    name: "dwFlags"
    type: "UI"
  }
  parameter {
    name: "pvArg"
    type: "*V;"
  }
  parameter {
    name: "pfnEnumOIDFunc"
    type: "*(UI*cC;*cC;UI*cUI;*c*cUS;;*c*cUB;;*cUI;*V;)I;"
  }
}
function {
  name: "CryptInitOIDFunctionSet"
  return_type: "*V;"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "CryptGetDefaultOIDDllList"
  return_type: "I"
  parameter {
    name: "hFuncSet"
    type: "*V;"
  }
  parameter {
    name: "dwEncodingType"
    type: "UI"
  }
  parameter {
    name: "pwszDllList"
    type: "*US;"
  }
  parameter {
    name: "pcchDllList"
    type: "*UI;"
  }
}
function {
  name: "CryptGetDefaultOIDFunctionAddress"
  return_type: "I"
  parameter {
    name: "hFuncSet"
    type: "*V;"
  }
  parameter {
    name: "dwEncodingType"
    type: "UI"
  }
  parameter {
    name: "pwszDll"
    type: "*cUS;"
  }
  parameter {
    name: "dwFlags"
    type: "UI"
  }
  parameter {
    name: "ppvFuncAddr"
    type: "**V;;"
  }
  parameter {
    name: "phFuncAddr"
    type: "**V;;"
  }
}
function {
  name: "CryptGetOIDFunctionAddress"
  return_type: "I"
  parameter {
    name: "hFuncSet"
    type: "*V;"
  }
  parameter {
    name: "dwEncodingType"
    type: "UI"
  }
  parameter {
    name: "pszOID"
    type: "*cC;"
  }
  parameter {
    name: "dwFlags"
    type: "UI"
  }
  parameter {
    name: "ppvFuncAddr"
    type: "**V;;"
  }
  parameter {
    name: "phFuncAddr"
    type: "**V;;"
  }
}
function {
  name: "CryptFreeOIDFunctionAddress"
  return_type: "I"
  parameter {
    name: "hFuncAddr"
    type: "*V;"
  }
  parameter {
    name: "dwFlags"
    type: "UI"
  }
}
function {
  name: "CryptInstallOIDFunctionAddress"
  return_type: "I"
  parameter {
    name: "hModule"
    type: "*RHINSTANCE__;;"
  }
  parameter {
    name: "dwEncodingType"
    type: "UI"
  }
  parameter {
    name: "pszFuncName"
    type: "*cC;"
  }
  parameter {
    name: "cFuncEntry"
    type: "UI"
  }
  parameter {
    name: "rgFuncEntry"
    type: "X(IncompleteArray.const CRYPT_OID_FUNC_ENTRY [])"
  }
  parameter {
    name: "dwFlags"
    type: "UI"
  }
}
function {
  name: "CryptInstallDefaultContext"
  return_type: "I"
  parameter {
    name: "hCryptProv"
    type: "UI"
  }
  parameter {
    name: "dwDefaultType"
    type: "UI"
  }
  parameter {
    name: "pvDefaultPara"
    type: "*cV;"
  }
  parameter {
    name: "dwFlags"
    type: "UI"
  }
  parameter {
    name: "pvReserved"
    type: "*V;"
  }
  parameter {
    name: "phDefaultContext"
    type: "**V;;"
  }
}
function {
  name: "CryptUninstallDefaultContext"
  return_type: "I"
  parameter {
    name: "hDefaultContext"
    type: "*V;"
  }
  parameter {
    name: "dwFlags"
    type: "UI"
  }
  parameter {
    name: "pvReserved"
    type: "*V;"
  }
}
function {
  name: "CryptEnumOIDInfo"
  return_type: "I"
  parameter {
    name: "dwGroupId"
    type: "UI"
  }
  parameter {
    name: "dwFlags"
    type: "UI"
  }
  parameter {
    name: "pvArg"
    type: "*V;"
  }
  parameter {
    name: "pfnEnumOIDInfo"
    type: "*(*cR_CRYPT_OID_INFO;;*V;)I;"
  }
}
function {
  name: "CryptFindOIDInfo"
  return_type: "*cR_CRYPT_OID_INFO;;"
  parameter {
    name: "dwKeyType"
    type: "UI"
  }
  parameter {
    name: "pvKey"
    type: "*V;"
  }
  parameter {
    name: "dwGroupId"
    type: "UI"
  }
}
function {
  name: "CryptRegisterOIDInfo"
  return_type: "I"
  parameter {
    name: "pInfo"
    type: "*cR_CRYPT_OID_INFO;;"
  }
  parameter {
    name: "dwFlags"
    type: "UI"
  }
}
function {
  name: "CryptUnregisterOIDInfo"
  return_type: "I"
  parameter {
    name: "pInfo"
    type: "*cR_CRYPT_OID_INFO;;"
  }
}
function {
  name: "CryptFindLocalizedName"
  return_type: "*cUS;"
  parameter {
    name: "pwszCryptName"
    type: "*cUS;"
  }
}
function {
  name: "CertAlgIdToOID"
  return_type: "*cC;"
  parameter {
    name: "dwAlgId"
    type: "UI"
  }
}
function {
  name: "CertOIDToAlgId"
  return_type: "UI"
  parameter {
    name: "pszObjId"
    type: "*cC;"
  }
}
function {
  name: "CertOpenStore"
  return_type: "*V;"
  parameter {
    name: "lpszStoreProvider"
    type: "*cC;"
  }
  parameter {
    name: "dwEncodingType"
    type: "UI"
  }
  parameter {
    name: "hCryptProv"
    type: "UI"
  }
  parameter {
    name: "dwFlags"
    type: "UI"
  }
  parameter {
    name: "pvPara"
    type: "*cV;"
  }
}
function {
  name: "CertOpenSystemStoreA"
  return_type: "*V;"
  parameter {
    name: "hProv"
    type: "UI"
  }
  parameter {
    name: "szSubSystemProtocol"
    type: "*cC;"
  }
}
function {
  name: "CertOpenSystemStoreW"
  return_type: "*V;"
  parameter {
    name: "hProv"
    type: "UI"
  }
  parameter {
    name: "szSubSystemProtocol"
    type: "*cUS;"
  }
}
function {
  name: "CertEnumCertificatesInStore"
  return_type: "*cR_CERT_CONTEXT;;"
  parameter {
    name: "hCertStore"
    type: "*V;"
  }
  parameter {
    name: "pPrev"
    type: "*cR_CERT_CONTEXT;;"
  }
}
function {
  name: "CertEnumCRLsInStore"
  return_type: "*cR_CRL_CONTEXT;;"
  parameter {
    name: "hCertStore"
    type: "*V;"
  }
  parameter {
    name: "pPrev"
    type: "*cR_CRL_CONTEXT;;"
  }
}
function {
  name: "CertEnumCTLsInStore"
  return_type: "*cR_CTL_CONTEXT;;"
  parameter {
    name: "hCertStore"
    type: "*V;"
  }
  parameter {
    name: "pPrev"
    type: "*cR_CTL_CONTEXT;;"
  }
}
function {
  name: "CertEnumSystemStoreLocation"
  return_type: "I"
  parameter {
    name: "dwFlags"
    type: "UI"
  }
  parameter {
    name: "pvArg"
    type: "*V;"
  }
  parameter {
    name: "pfnEnum"
    type: "*(*cUS;UI*V;*V;)I;"
  }
}
function {
  name: "CertEnumSystemStore"
  return_type: "I"
  parameter {
    name: "dwFlags"
    type: "UI"
  }
  parameter {
    name: "pvSystemStoreLocationPara"
    type: "*V;"
  }
  parameter {
    name: "pvArg"
    type: "*V;"
  }
  parameter {
    name: "pfnEnum"
    type: "*(*cV;UI*R_CERT_SYSTEM_STORE_INFO;;*V;*V;)I;"
  }
}
function {
  name: "CertEnumPhysicalStore"
  return_type: "I"
  parameter {
    name: "pvSystemStore"
    type: "*cV;"
  }
  parameter {
    name: "dwFlags"
    type: "UI"
  }
  parameter {
    name: "pvArg"
    type: "*V;"
  }
  parameter {
    name: "pfnEnum"
    type: "*(*cV;UI*cUS;*R_CERT_PHYSICAL_STORE_INFO;;*V;*V;)I;"
  }
}
function {
  name: "CertRegisterPhysicalStore"
  return_type: "I"
  parameter {
    name: "pvSystemStore"
    type: "*cV;"
  }
  parameter {
    name: "dwFlags"
    type: "UI"
  }
  parameter {
    name: "pwszStoreName"
    type: "*cUS;"
  }
  parameter {
    name: "pStoreInfo"
    type: "*R_CERT_PHYSICAL_STORE_INFO;;"
  }
  parameter {
    name: "pvReserved"
    type: "*V;"
  }
}
function {
  name: "CertSaveStore"
  return_type: "I"
  parameter {
    name: "hCertStore"
    type: "*V;"
  }
  parameter {
    name: "dwMsgAndCertEncodingType"
    type: "UI"
  }
  parameter {
    name: "dwSaveAs"
    type: "UI"
  }
  parameter {
    name: "dwSaveTo"
    type: "UI"
  }
  parameter {
    name: "pvSaveToPara"
    type: "*V;"
  }
  parameter {
    name: "dwFlags"
    type: "UI"
  }
}
function {
  name: "CertAddStoreToCollection"
  return_type: "I"
  parameter {
    name: "hCollectionStore"
    type: "*V;"
  }
  parameter {
    name: "hSiblingStore"
    type: "*V;"
  }
  parameter {
    name: "dwUpdateFlags"
    type: "UI"
  }
  parameter {
    name: "dwPriority"
    type: "UI"
  }
}
function {
  name: "CertRemoveStoreFromCollection"
  return_type: "V"
  parameter {
    name: "hCollectionStore"
    type: "*V;"
  }
  parameter {
    name: "hSiblingStore"
    type: "*V;"
  }
}
function {
  name: "CertCreateCertificateChainEngine"
  return_type: "I"
  parameter {
    name: "pConfig"
    type: "*R_CERT_CHAIN_ENGINE_CONFIG;;"
  }
  parameter {
    name: "phChainEngine"
    type: "**V;;"
  }
}
function {
  name: "CertResyncCertificateChainEngine"
  return_type: "I"
  parameter {
    name: "hChainEngine"
    type: "*V;"
  }
}
function {
  name: "CertFreeCertificateChainEngine"
  return_type: "V"
  parameter {
    name: "hChainEngine"
    type: "*V;"
  }
}
function {
  name: "CertGetCertificateChain"
  return_type: "I"
  parameter {
    name: "hChainEngine"
    type: "*V;"
  }
  parameter {
    name: "pCertContext"
    type: "*cR_CERT_CONTEXT;;"
  }
  parameter {
    name: "pTime"
    type: "*R_FILETIME;;"
  }
  parameter {
    name: "hAdditionalStore"
    type: "*V;"
  }
  parameter {
    name: "pChainPara"
    type: "*R_CERT_CHAIN_PARA;;"
  }
  parameter {
    name: "dwFlags"
    type: "UI"
  }
  parameter {
    name: "pvReserved"
    type: "*V;"
  }
  parameter {
    name: "ppChainContext"
    type: "**cR_CERT_CHAIN_CONTEXT;;;"
  }
}
function {
  name: "CertDuplicateCertificateChain"
  return_type: "*cR_CERT_CHAIN_CONTEXT;;"
  parameter {
    name: "pChainContext"
    type: "*cR_CERT_CHAIN_CONTEXT;;"
  }
}
function {
  name: "CertFreeCertificateChain"
  return_type: "V"
  parameter {
    name: "pChainContext"
    type: "*cR_CERT_CHAIN_CONTEXT;;"
  }
}
function {
  name: "CertFindChainInStore"
  return_type: "*cR_CERT_CHAIN_CONTEXT;;"
  parameter {
    name: "hCertStore"
    type: "*V;"
  }
  parameter {
    name: "dwCertEncodingType"
    type: "UI"
  }
  parameter {
    name: "dwFindFlags"
    type: "UI"
  }
  parameter {
    name: "dwFindType"
    type: "UI"
  }
  parameter {
    name: "pvFindPara"
    type: "*cV;"
  }
  parameter {
    name: "pPrevChainContext"
    type: "*cR_CERT_CHAIN_CONTEXT;;"
  }
}
function {
  name: "CertVerifyCertificateChainPolicy"
  return_type: "I"
  parameter {
    name: "szPolicyOID"
    type: "*cC;"
  }
  parameter {
    name: "pChainContext"
    type: "*cR_CERT_CHAIN_CONTEXT;;"
  }
  parameter {
    name: "pPolicyPara"
    type: "*R_CERT_CHAIN_POLICY_PARA;;"
  }
  parameter {
    name: "pPolicyStatus"
    type: "*R_CERT_CHAIN_POLICY_STATUS;;"
  }
}
function {
  name: "CertEnumCertificateContextProperties"
  return_type: "UI"
  parameter {
    name: "pCertContext"
    type: "*cR_CERT_CONTEXT;;"
  }
  parameter {
    name: "dwPropId"
    type: "UI"
  }
}
function {
  name: "CertGetCertificateContextProperty"
  return_type: "I"
  parameter {
    name: "pCertContext"
    type: "*cR_CERT_CONTEXT;;"
  }
  parameter {
    name: "dwPropId"
    type: "UI"
  }
  parameter {
    name: "pvData"
    type: "*V;"
  }
  parameter {
    name: "pcbData"
    type: "*UI;"
  }
}
function {
  name: "CertSetCertificateContextProperty"
  return_type: "I"
  parameter {
    name: "pCertContext"
    type: "*cR_CERT_CONTEXT;;"
  }
  parameter {
    name: "dwPropId"
    type: "UI"
  }
  parameter {
    name: "dwFlags"
    type: "UI"
  }
  parameter {
    name: "pvData"
    type: "*cV;"
  }
}
function {
  name: "CertEnumCRLContextProperties"
  return_type: "UI"
  parameter {
    name: "pCRLContext"
    type: "*cR_CRL_CONTEXT;;"
  }
  parameter {
    name: "dwPropId"
    type: "UI"
  }
}
function {
  name: "CertGetCRLContextProperty"
  return_type: "I"
  parameter {
    name: "pCRLContext"
    type: "*cR_CRL_CONTEXT;;"
  }
  parameter {
    name: "dwPropId"
    type: "UI"
  }
  parameter {
    name: "pvData"
    type: "*V;"
  }
  parameter {
    name: "pcbData"
    type: "*UI;"
  }
}
function {
  name: "CertSetCRLContextProperty"
  return_type: "I"
  parameter {
    name: "pCRLContext"
    type: "*cR_CRL_CONTEXT;;"
  }
  parameter {
    name: "dwPropId"
    type: "UI"
  }
  parameter {
    name: "dwFlags"
    type: "UI"
  }
  parameter {
    name: "pvData"
    type: "*cV;"
  }
}
function {
  name: "CertEnumCTLContextProperties"
  return_type: "UI"
  parameter {
    name: "pCTLContext"
    type: "*cR_CTL_CONTEXT;;"
  }
  parameter {
    name: "dwPropId"
    type: "UI"
  }
}
function {
  name: "CertEnumSubjectInSortedCTL"
  return_type: "I"
  parameter {
    name: "pCTLContext"
    type: "*cR_CTL_CONTEXT;;"
  }
  parameter {
    name: "ppvNextSubject"
    type: "**V;;"
  }
  parameter {
    name: "pSubjectIdentifier"
    type: "*R_CRYPTOAPI_BLOB;;"
  }
  parameter {
    name: "pEncodedAttributes"
    type: "*R_CRYPTOAPI_BLOB;;"
  }
}
function {
  name: "CertGetCTLContextProperty"
  return_type: "I"
  parameter {
    name: "pCTLContext"
    type: "*cR_CTL_CONTEXT;;"
  }
  parameter {
    name: "dwPropId"
    type: "UI"
  }
  parameter {
    name: "pvData"
    type: "*V;"
  }
  parameter {
    name: "pcbData"
    type: "*UI;"
  }
}
function {
  name: "CertSetCTLContextProperty"
  return_type: "I"
  parameter {
    name: "pCTLContext"
    type: "*cR_CTL_CONTEXT;;"
  }
  parameter {
    name: "dwPropId"
    type: "UI"
  }
  parameter {
    name: "dwFlags"
    type: "UI"
  }
  parameter {
    name: "pvData"
    type: "*cV;"
  }
}
function {
  name: "CertGetStoreProperty"
  return_type: "I"
  parameter {
    name: "hCertStore"
    type: "*V;"
  }
  parameter {
    name: "dwPropId"
    type: "UI"
  }
  parameter {
    name: "pvData"
    type: "*V;"
  }
  parameter {
    name: "pcbData"
    type: "*UI;"
  }
}
function {
  name: "CertSetStoreProperty"
  return_type: "I"
  parameter {
    name: "hCertStore"
    type: "*V;"
  }
  parameter {
    name: "dwPropId"
    type: "UI"
  }
  parameter {
    name: "dwFlags"
    type: "UI"
  }
  parameter {
    name: "pvData"
    type: "*cV;"
  }
}
function {
  name: "CertControlStore"
  return_type: "I"
  parameter {
    name: "hCertStore"
    type: "*V;"
  }
  parameter {
    name: "dwFlags"
    type: "UI"
  }
  parameter {
    name: "dwCtrlType"
    type: "UI"
  }
  parameter {
    name: "pvCtrlPara"
    type: "*cV;"
  }
}
function {
  name: "CertDuplicateStore"
  return_type: "*V;"
  parameter {
    name: "hCertStore"
    type: "*V;"
  }
}
function {
  name: "CertCloseStore"
  return_type: "I"
  parameter {
    name: "hCertStore"
    type: "*V;"
  }
  parameter {
    name: "dwFlags"
    type: "UI"
  }
}
function {
  name: "CertFreeCertificateContext"
  return_type: "I"
  parameter {
    name: "pCertContext"
    type: "*cR_CERT_CONTEXT;;"
  }
}
function {
  name: "CertFreeCRLContext"
  return_type: "I"
  parameter {
    name: "pCrlContext"
    type: "*cR_CRL_CONTEXT;;"
  }
}
function {
  name: "CertFreeCTLContext"
  return_type: "I"
  parameter {
    name: "pCtlContext"
    type: "*cR_CTL_CONTEXT;;"
  }
}
function {
  name: "CertAddCertificateContextToStore"
  return_type: "I"
  parameter {
    name: "hCertStore"
    type: "*V;"
  }
  parameter {
    name: "pCertContext"
    type: "*cR_CERT_CONTEXT;;"
  }
  parameter {
    name: "dwAddDisposition"
    type: "UI"
  }
  parameter {
    name: "ppStoreContext"
    type: "**cR_CERT_CONTEXT;;;"
  }
}
function {
  name: "CertAddCRLContextToStore"
  return_type: "I"
  parameter {
    name: "hCertStore"
    type: "*V;"
  }
  parameter {
    name: "pCrlContext"
    type: "*cR_CRL_CONTEXT;;"
  }
  parameter {
    name: "dwAddDisposition"
    type: "UI"
  }
  parameter {
    name: "ppStoreContext"
    type: "**cR_CRL_CONTEXT;;;"
  }
}
function {
  name: "CertAddCTLContextToStore"
  return_type: "I"
  parameter {
    name: "hCertStore"
    type: "*V;"
  }
  parameter {
    name: "pCtlContext"
    type: "*cR_CTL_CONTEXT;;"
  }
  parameter {
    name: "dwAddDisposition"
    type: "UI"
  }
  parameter {
    name: "ppStoreContext"
    type: "**cR_CTL_CONTEXT;;;"
  }
}
function {
  name: "CertAddCertificateLinkToStore"
  return_type: "I"
  parameter {
    name: "hCertStore"
    type: "*V;"
  }
  parameter {
    name: "pCertContext"
    type: "*cR_CERT_CONTEXT;;"
  }
  parameter {
    name: "dwAddDisposition"
    type: "UI"
  }
  parameter {
    name: "ppStoreContext"
    type: "**cR_CERT_CONTEXT;;;"
  }
}
function {
  name: "CertAddCRLLinkToStore"
  return_type: "I"
  parameter {
    name: "hCertStore"
    type: "*V;"
  }
  parameter {
    name: "pCrlContext"
    type: "*cR_CRL_CONTEXT;;"
  }
  parameter {
    name: "dwAddDisposition"
    type: "UI"
  }
  parameter {
    name: "ppStoreContext"
    type: "**cR_CRL_CONTEXT;;;"
  }
}
function {
  name: "CertAddCTLLinkToStore"
  return_type: "I"
  parameter {
    name: "hCertStore"
    type: "*V;"
  }
  parameter {
    name: "pCtlContext"
    type: "*cR_CTL_CONTEXT;;"
  }
  parameter {
    name: "dwAddDisposition"
    type: "UI"
  }
  parameter {
    name: "ppStoreContext"
    type: "**cR_CTL_CONTEXT;;;"
  }
}
function {
  name: "CertAddEncodedCertificateToStore"
  return_type: "I"
  parameter {
    name: "hCertStore"
    type: "*V;"
  }
  parameter {
    name: "dwCertEncodingType"
    type: "UI"
  }
  parameter {
    name: "pbCertEncoded"
    type: "*cUB;"
  }
  parameter {
    name: "cbCertEncoded"
    type: "UI"
  }
  parameter {
    name: "dwAddDisposition"
    type: "UI"
  }
  parameter {
    name: "ppCertContext"
    type: "**cR_CERT_CONTEXT;;;"
  }
}
function {
  name: "CertAddEncodedCertificateToSystemStoreA"
  return_type: "I"
  parameter {
    name: "pszCertStoreName"
    type: "*cC;"
  }
  parameter {
    name: "pbCertEncoded"
    type: "*cUB;"
  }
  parameter {
    name: "cbCertEncoded"
    type: "UI"
  }
}
function {
  name: "CertAddEncodedCertificateToSystemStoreW"
  return_type: "I"
  parameter {
    name: "pszCertStoreName"
    type: "*cUS;"
  }
  parameter {
    name: "pbCertEncoded"
    type: "*cUB;"
  }
  parameter {
    name: "cbCertEncoded"
    type: "UI"
  }
}
function {
  name: "CertAddEncodedCRLToStore"
  return_type: "I"
  parameter {
    name: "hCertStore"
    type: "*V;"
  }
  parameter {
    name: "dwCertEncodingType"
    type: "UI"
  }
  parameter {
    name: "pbCrlEncoded"
    type: "*cUB;"
  }
  parameter {
    name: "cbCrlEncoded"
    type: "UI"
  }
  parameter {
    name: "dwAddDisposition"
    type: "UI"
  }
  parameter {
    name: "ppCrlContext"
    type: "**cR_CRL_CONTEXT;;;"
  }
}
function {
  name: "CertAddEncodedCTLToStore"
  return_type: "I"
  parameter {
    name: "hCertStore"
    type: "*V;"
  }
  parameter {
    name: "dwMsgAndCertEncodingType"
    type: "UI"
  }
  parameter {
    name: "pbCtlEncoded"
    type: "*cUB;"
  }
  parameter {
    name: "cbCtlEncoded"
    type: "UI"
  }
  parameter {
    name: "dwAddDisposition"
    type: "UI"
  }
  parameter {
    name: "ppCtlContext"
    type: "**cR_CTL_CONTEXT;;;"
  }
}
function {
  name: "CertAddSerializedElementToStore"
  return_type: "I"
  parameter {
    name: "hCertStore"
    type: "*V;"
  }
  parameter {
    name: "pbElement"
    type: "*cUB;"
  }
  parameter {
    name: "cbElement"
    type: "UI"
  }
  parameter {
    name: "dwAddDisposition"
    type: "UI"
  }
  parameter {
    name: "dwFlags"
    type: "UI"
  }
  parameter {
    name: "dwContextTypeFlags"
    type: "UI"
  }
  parameter {
    name: "pdwContentType"
    type: "*UI;"
  }
  parameter {
    name: "ppvContext"
    type: "**cV;;"
  }
}
function {
  name: "CertCompareCertificate"
  return_type: "I"
  parameter {
    name: "dwCertEncodingType"
    type: "UI"
  }
  parameter {
    name: "pCertId1"
    type: "*R_CERT_INFO;;"
  }
  parameter {
    name: "pCertId2"
    type: "*R_CERT_INFO;;"
  }
}
function {
  name: "CertCompareCertificateName"
  return_type: "I"
  parameter {
    name: "dwCertEncodingType"
    type: "UI"
  }
  parameter {
    name: "pCertName1"
    type: "*R_CRYPTOAPI_BLOB;;"
  }
  parameter {
    name: "pCertName2"
    type: "*R_CRYPTOAPI_BLOB;;"
  }
}
function {
  name: "CertCompareIntegerBlob"
  return_type: "I"
  parameter {
    name: "pInt1"
    type: "*R_CRYPTOAPI_BLOB;;"
  }
  parameter {
    name: "pInt2"
    type: "*R_CRYPTOAPI_BLOB;;"
  }
}
function {
  name: "CertComparePublicKeyInfo"
  return_type: "I"
  parameter {
    name: "dwCertEncodingType"
    type: "UI"
  }
  parameter {
    name: "pPublicKey1"
    type: "*R_CERT_PUBLIC_KEY_INFO;;"
  }
  parameter {
    name: "pPublicKey2"
    type: "*R_CERT_PUBLIC_KEY_INFO;;"
  }
}
function {
  name: "CertGetPublicKeyLength"
  return_type: "UI"
  parameter {
    name: "dwCertEncodingType"
    type: "UI"
  }
  parameter {
    name: "pPublicKey"
    type: "*R_CERT_PUBLIC_KEY_INFO;;"
  }
}
function {
  name: "CertCreateContext"
  return_type: "*cV;"
  parameter {
    name: "dwContextType"
    type: "UI"
  }
  parameter {
    name: "dwEncodingType"
    type: "UI"
  }
  parameter {
    name: "pbEncoded"
    type: "*cUB;"
  }
  parameter {
    name: "cbEncoded"
    type: "UI"
  }
  parameter {
    name: "dwFlags"
    type: "UI"
  }
  parameter {
    name: "pCreatePara"
    type: "*R_CERT_CREATE_CONTEXT_PARA;;"
  }
}
function {
  name: "CertCreateCertificateContext"
  return_type: "*cR_CERT_CONTEXT;;"
  parameter {
    name: "dwCertEncodingType"
    type: "UI"
  }
  parameter {
    name: "pbCertEncoded"
    type: "*cUB;"
  }
  parameter {
    name: "cbCertEncoded"
    type: "UI"
  }
}
function {
  name: "CertCreateCRLContext"
  return_type: "*cR_CRL_CONTEXT;;"
  parameter {
    name: "dwCertEncodingType"
    type: "UI"
  }
  parameter {
    name: "pbCrlEncoded"
    type: "*cUB;"
  }
  parameter {
    name: "cbCrlEncoded"
    type: "UI"
  }
}
function {
  name: "CertCreateCTLContext"
  return_type: "*cR_CTL_CONTEXT;;"
  parameter {
    name: "dwMsgAndCertEncodingType"
    type: "UI"
  }
  parameter {
    name: "pbCtlEncoded"
    type: "*cUB;"
  }
  parameter {
    name: "cbCtlEncoded"
    type: "UI"
  }
}
function {
  name: "CertCreateSelfSignCertificate"
  return_type: "*cR_CERT_CONTEXT;;"
  parameter {
    name: "hProv"
    type: "UI"
  }
  parameter {
    name: "pSubjectIssuerBlob"
    type: "*R_CRYPTOAPI_BLOB;;"
  }
  parameter {
    name: "dwFlags"
    type: "UI"
  }
  parameter {
    name: "pKeyProvInfo"
    type: "*R_CRYPT_KEY_PROV_INFO;;"
  }
  parameter {
    name: "pSignatureAlgorithm"
    type: "*R_CRYPT_ALGORITHM_IDENTIFIER;;"
  }
  parameter {
    name: "pStartTime"
    type: "*R_SYSTEMTIME;;"
  }
  parameter {
    name: "pEndTime"
    type: "*R_SYSTEMTIME;;"
  }
  parameter {
    name: "pExtensions"
    type: "*R_CERT_EXTENSIONS;;"
  }
}
function {
  name: "CertDeleteCertificateFromStore"
  return_type: "I"
  parameter {
    name: "pCertContext"
    type: "*cR_CERT_CONTEXT;;"
  }
}
function {
  name: "CertDeleteCRLFromStore"
  return_type: "I"
  parameter {
    name: "pCrlContext"
    type: "*cR_CRL_CONTEXT;;"
  }
}
function {
  name: "CertDeleteCTLFromStore"
  return_type: "I"
  parameter {
    name: "pCtlContext"
    type: "*cR_CTL_CONTEXT;;"
  }
}
function {
  name: "CertDuplicateCertificateContext"
  return_type: "*cR_CERT_CONTEXT;;"
  parameter {
    name: "pCertContext"
    type: "*cR_CERT_CONTEXT;;"
  }
}
function {
  name: "CertDuplicateCRLContext"
  return_type: "*cR_CRL_CONTEXT;;"
  parameter {
    name: "pCrlContext"
    type: "*cR_CRL_CONTEXT;;"
  }
}
function {
  name: "CertDuplicateCTLContext"
  return_type: "*cR_CTL_CONTEXT;;"
  parameter {
    name: "pCtlContext"
    type: "*cR_CTL_CONTEXT;;"
  }
}
function {
  name: "CertFindCertificateInStore"
  return_type: "*cR_CERT_CONTEXT;;"
  parameter {
    name: "hCertStore"
    type: "*V;"
  }
  parameter {
    name: "dwCertEncodingType"
    type: "UI"
  }
  parameter {
    name: "dwFindFlags"
    type: "UI"
  }
  parameter {
    name: "dwFindType"
    type: "UI"
  }
  parameter {
    name: "pvFindPara"
    type: "*cV;"
  }
  parameter {
    name: "pPrevCertContext"
    type: "*cR_CERT_CONTEXT;;"
  }
}
function {
  name: "CertFindCRLInStore"
  return_type: "*cR_CRL_CONTEXT;;"
  parameter {
    name: "hCertStore"
    type: "*V;"
  }
  parameter {
    name: "dwCertEncodingType"
    type: "UI"
  }
  parameter {
    name: "dwFindFlags"
    type: "UI"
  }
  parameter {
    name: "dwFindType"
    type: "UI"
  }
  parameter {
    name: "pvFindPara"
    type: "*cV;"
  }
  parameter {
    name: "pPrevCrlContext"
    type: "*cR_CRL_CONTEXT;;"
  }
}
function {
  name: "CertFindCTLInStore"
  return_type: "*cR_CTL_CONTEXT;;"
  parameter {
    name: "hCertStore"
    type: "*V;"
  }
  parameter {
    name: "dwCertEncodingType"
    type: "UI"
  }
  parameter {
    name: "dwFindFlags"
    type: "UI"
  }
  parameter {
    name: "dwFindType"
    type: "UI"
  }
  parameter {
    name: "pvFindPara"
    type: "*cV;"
  }
  parameter {
    name: "pPrevCtlContext"
    type: "*cR_CTL_CONTEXT;;"
  }
}
function {
  name: "CertGetIssuerCertificateFromStore"
  return_type: "*cR_CERT_CONTEXT;;"
  parameter {
    name: "hCertStore"
    type: "*V;"
  }
  parameter {
    name: "pSubjectContext"
    type: "*cR_CERT_CONTEXT;;"
  }
  parameter {
    name: "pPrevIssuerContext"
    type: "*cR_CERT_CONTEXT;;"
  }
  parameter {
    name: "pdwFlags"
    type: "*UI;"
  }
}
function {
  name: "CertGetSubjectCertificateFromStore"
  return_type: "*cR_CERT_CONTEXT;;"
  parameter {
    name: "hCertStore"
    type: "*V;"
  }
  parameter {
    name: "dwCertEncodingType"
    type: "UI"
  }
  parameter {
    name: "pCertId"
    type: "*R_CERT_INFO;;"
  }
}
function {
  name: "CertGetCRLFromStore"
  return_type: "*cR_CRL_CONTEXT;;"
  parameter {
    name: "hCertStore"
    type: "*V;"
  }
  parameter {
    name: "pIssuerContext"
    type: "*cR_CERT_CONTEXT;;"
  }
  parameter {
    name: "pPrevCrlContext"
    type: "*cR_CRL_CONTEXT;;"
  }
  parameter {
    name: "pdwFlags"
    type: "*UI;"
  }
}
function {
  name: "CertSerializeCertificateStoreElement"
  return_type: "I"
  parameter {
    name: "pCertContext"
    type: "*cR_CERT_CONTEXT;;"
  }
  parameter {
    name: "dwFlags"
    type: "UI"
  }
  parameter {
    name: "pbElement"
    type: "*UB;"
  }
  parameter {
    name: "pcbElement"
    type: "*UI;"
  }
}
function {
  name: "CertSerializeCRLStoreElement"
  return_type: "I"
  parameter {
    name: "pCrlContext"
    type: "*cR_CRL_CONTEXT;;"
  }
  parameter {
    name: "dwFlags"
    type: "UI"
  }
  parameter {
    name: "pbElement"
    type: "*UB;"
  }
  parameter {
    name: "pcbElement"
    type: "*UI;"
  }
}
function {
  name: "CertSerializeCTLStoreElement"
  return_type: "I"
  parameter {
    name: "pCtlContext"
    type: "*cR_CTL_CONTEXT;;"
  }
  parameter {
    name: "dwFlags"
    type: "UI"
  }
  parameter {
    name: "pbElement"
    type: "*UB;"
  }
  parameter {
    name: "pcbElement"
    type: "*UI;"
  }
}
function {
  name: "CertGetIntendedKeyUsage"
  return_type: "I"
  parameter {
    name: "dwCertEncodingType"
    type: "UI"
  }
  parameter {
    name: "pCertInfo"
    type: "*R_CERT_INFO;;"
  }
  parameter {
    name: "pbKeyUsage"
    type: "*UB;"
  }
  parameter {
    name: "cbKeyUsage"
    type: "UI"
  }
}
function {
  name: "CertGetEnhancedKeyUsage"
  return_type: "I"
  parameter {
    name: "pCertContext"
    type: "*cR_CERT_CONTEXT;;"
  }
  parameter {
    name: "dwFlags"
    type: "UI"
  }
  parameter {
    name: "pUsage"
    type: "*R_CTL_USAGE;;"
  }
  parameter {
    name: "pcbUsage"
    type: "*UI;"
  }
}
function {
  name: "CertSetEnhancedKeyUsage"
  return_type: "I"
  parameter {
    name: "pCertContext"
    type: "*cR_CERT_CONTEXT;;"
  }
  parameter {
    name: "pUsage"
    type: "*R_CTL_USAGE;;"
  }
}
function {
  name: "CertAddEnhancedKeyUsageIdentifier"
  return_type: "I"
  parameter {
    name: "pCertContext"
    type: "*cR_CERT_CONTEXT;;"
  }
  parameter {
    name: "pszUsageIdentifier"
    type: "*cC;"
  }
}
function {
  name: "CertRemoveEnhancedKeyUsageIdentifier"
  return_type: "I"
  parameter {
    name: "pCertContext"
    type: "*cR_CERT_CONTEXT;;"
  }
  parameter {
    name: "pszUsageIdentifier"
    type: "*cC;"
  }
}
function {
  name: "CertGetValidUsages"
  return_type: "I"
  parameter {
    name: "cCerts"
    type: "UI"
  }
  parameter {
    name: "rghCerts"
    type: "**cR_CERT_CONTEXT;;;"
  }
  parameter {
    name: "cNumOIDs"
    type: "*I;"
  }
  parameter {
    name: "rghOIDs"
    type: "**C;;"
  }
  parameter {
    name: "pcbOIDs"
    type: "*UI;"
  }
}
function {
  name: "CryptEncodeObject"
  return_type: "I"
  parameter {
    name: "dwCertEncodingType"
    type: "UI"
  }
  parameter {
    name: "lpszStructType"
    type: "*cC;"
  }
  parameter {
    name: "pvStructInfo"
    type: "*cV;"
  }
  parameter {
    name: "pbEncoded"
    type: "*UB;"
  }
  parameter {
    name: "pcbEncoded"
    type: "*UI;"
  }
}
function {
  name: "CryptEncodeObjectEx"
  return_type: "I"
  parameter {
    name: "dwCertEncodingType"
    type: "UI"
  }
  parameter {
    name: "lpszStructType"
    type: "*cC;"
  }
  parameter {
    name: "pvStructInfo"
    type: "*cV;"
  }
  parameter {
    name: "dwFlags"
    type: "UI"
  }
  parameter {
    name: "pEncodePara"
    type: "*R_CRYPT_ENCODE_PARA;;"
  }
  parameter {
    name: "pvEncoded"
    type: "*V;"
  }
  parameter {
    name: "pcbEncoded"
    type: "*UI;"
  }
}
function {
  name: "CryptDecodeObject"
  return_type: "I"
  parameter {
    name: "dwCertEncodingType"
    type: "UI"
  }
  parameter {
    name: "lpszStructType"
    type: "*cC;"
  }
  parameter {
    name: "pbEncoded"
    type: "*cUB;"
  }
  parameter {
    name: "cbEncoded"
    type: "UI"
  }
  parameter {
    name: "dwFlags"
    type: "UI"
  }
  parameter {
    name: "pvStructInfo"
    type: "*V;"
  }
  parameter {
    name: "pcbStructInfo"
    type: "*UI;"
  }
}
function {
  name: "CryptDecodeObjectEx"
  return_type: "I"
  parameter {
    name: "dwCertEncodingType"
    type: "UI"
  }
  parameter {
    name: "lpszStructType"
    type: "*cC;"
  }
  parameter {
    name: "pbEncoded"
    type: "*cUB;"
  }
  parameter {
    name: "cbEncoded"
    type: "UI"
  }
  parameter {
    name: "dwFlags"
    type: "UI"
  }
  parameter {
    name: "pDecodePara"
    type: "*R_CRYPT_DECODE_PARA;;"
  }
  parameter {
    name: "pvStructInfo"
    type: "*V;"
  }
  parameter {
    name: "pcbStructInfo"
    type: "*UI;"
  }
}
function {
  name: "CryptFormatObject"
  return_type: "I"
  parameter {
    name: "dwCertEncodingType"
    type: "UI"
  }
  parameter {
    name: "dwFormatType"
    type: "UI"
  }
  parameter {
    name: "dwFormatStrType"
    type: "UI"
  }
  parameter {
    name: "pFormatStruct"
    type: "*V;"
  }
  parameter {
    name: "lpszStructType"
    type: "*cC;"
  }
  parameter {
    name: "pbEncoded"
    type: "*cUB;"
  }
  parameter {
    name: "cbEncoded"
    type: "UI"
  }
  parameter {
    name: "pbFormat"
    type: "*V;"
  }
  parameter {
    name: "pcbFormat"
    type: "*UI;"
  }
}
function {
  name: "CryptHashCertificate"
  return_type: "I"
  parameter {
    name: "hCryptProv"
    type: "UI"
  }
  parameter {
    name: "Algid"
    type: "UI"
  }
  parameter {
    name: "dwFlags"
    type: "UI"
  }
  parameter {
    name: "pbEncoded"
    type: "*cUB;"
  }
  parameter {
    name: "cbEncoded"
    type: "UI"
  }
  parameter {
    name: "pbComputedHash"
    type: "*UB;"
  }
  parameter {
    name: "pcbComputedHash"
    type: "*UI;"
  }
}
function {
  name: "CryptHashPublicKeyInfo"
  return_type: "I"
  parameter {
    name: "hCryptProv"
    type: "UI"
  }
  parameter {
    name: "Algid"
    type: "UI"
  }
  parameter {
    name: "dwFlags"
    type: "UI"
  }
  parameter {
    name: "dwCertEncodingType"
    type: "UI"
  }
  parameter {
    name: "pInfo"
    type: "*R_CERT_PUBLIC_KEY_INFO;;"
  }
  parameter {
    name: "pbComputedHash"
    type: "*UB;"
  }
  parameter {
    name: "pcbComputedHash"
    type: "*UI;"
  }
}
function {
  name: "CryptHashToBeSigned"
  return_type: "I"
  parameter {
    name: "hCryptProv"
    type: "UI"
  }
  parameter {
    name: "dwCertEncodingType"
    type: "UI"
  }
  parameter {
    name: "pbEncoded"
    type: "*cUB;"
  }
  parameter {
    name: "cbEncoded"
    type: "UI"
  }
  parameter {
    name: "pbComputedHash"
    type: "*UB;"
  }
  parameter {
    name: "pcbComputedHash"
    type: "*UI;"
  }
}
function {
  name: "CryptQueryObject"
  return_type: "I"
  parameter {
    name: "dwObjectType"
    type: "UI"
  }
  parameter {
    name: "pvObject"
    type: "*cV;"
  }
  parameter {
    name: "dwExpectedContentTypeFlags"
    type: "UI"
  }
  parameter {
    name: "dwExpectedFormatTypeFlags"
    type: "UI"
  }
  parameter {
    name: "dwFlags"
    type: "UI"
  }
  parameter {
    name: "pdwMsgAndCertEncodingType"
    type: "*UI;"
  }
  parameter {
    name: "pdwContentType"
    type: "*UI;"
  }
  parameter {
    name: "pdwFormatType"
    type: "*UI;"
  }
  parameter {
    name: "phCertStore"
    type: "**V;;"
  }
  parameter {
    name: "phMsg"
    type: "**V;;"
  }
  parameter {
    name: "ppvContext"
    type: "**cV;;"
  }
}
function {
  name: "CryptSignCertificate"
  return_type: "I"
  parameter {
    name: "hCryptProv"
    type: "UI"
  }
  parameter {
    name: "dwKeySpec"
    type: "UI"
  }
  parameter {
    name: "dwCertEncodingType"
    type: "UI"
  }
  parameter {
    name: "pbEncodedToBeSigned"
    type: "*cUB;"
  }
  parameter {
    name: "cbEncodedToBeSigned"
    type: "UI"
  }
  parameter {
    name: "pSignatureAlgorithm"
    type: "*R_CRYPT_ALGORITHM_IDENTIFIER;;"
  }
  parameter {
    name: "pvHashAuxInfo"
    type: "*cV;"
  }
  parameter {
    name: "pbSignature"
    type: "*UB;"
  }
  parameter {
    name: "pcbSignature"
    type: "*UI;"
  }
}
function {
  name: "CryptSignAndEncodeCertificate"
  return_type: "I"
  parameter {
    name: "hCryptProv"
    type: "UI"
  }
  parameter {
    name: "dwKeySpec"
    type: "UI"
  }
  parameter {
    name: "dwCertEncodingType"
    type: "UI"
  }
  parameter {
    name: "lpszStructType"
    type: "*cC;"
  }
  parameter {
    name: "pvStructInfo"
    type: "*cV;"
  }
  parameter {
    name: "pSignatureAlgorithm"
    type: "*R_CRYPT_ALGORITHM_IDENTIFIER;;"
  }
  parameter {
    name: "pvHashAuxInfo"
    type: "*cV;"
  }
  parameter {
    name: "pbEncoded"
    type: "*UB;"
  }
  parameter {
    name: "pcbEncoded"
    type: "*UI;"
  }
}
function {
  name: "CryptVerifyCertificateSignature"
  return_type: "I"
  parameter {
    name: "hCryptProv"
    type: "UI"
  }
  parameter {
    name: "dwCertEncodingType"
    type: "UI"
  }
  parameter {
    name: "pbEncoded"
    type: "*cUB;"
  }
  parameter {
    name: "cbEncoded"
    type: "UI"
  }
  parameter {
    name: "pPublicKey"
    type: "*R_CERT_PUBLIC_KEY_INFO;;"
  }
}
function {
  name: "CryptVerifyCertificateSignatureEx"
  return_type: "I"
  parameter {
    name: "hCryptProv"
    type: "UI"
  }
  parameter {
    name: "dwCertEncodingType"
    type: "UI"
  }
  parameter {
    name: "dwSubjectType"
    type: "UI"
  }
  parameter {
    name: "pvSubject"
    type: "*V;"
  }
  parameter {
    name: "dwIssuerType"
    type: "UI"
  }
  parameter {
    name: "pvIssuer"
    type: "*V;"
  }
  parameter {
    name: "dwFlags"
    type: "UI"
  }
  parameter {
    name: "pvReserved"
    type: "*V;"
  }
}
function {
  name: "CertFindAttribute"
  return_type: "*R_CRYPT_ATTRIBUTE;;"
  parameter {
    name: "pszObjId"
    type: "*cC;"
  }
  parameter {
    name: "cAttr"
    type: "UI"
  }
  parameter {
    name: "rgAttr"
    type: "X(IncompleteArray.CRYPT_ATTRIBUTE [])"
  }
}
function {
  name: "CertFindExtension"
  return_type: "*R_CERT_EXTENSION;;"
  parameter {
    name: "pszObjId"
    type: "*cC;"
  }
  parameter {
    name: "cExtensions"
    type: "UI"
  }
  parameter {
    name: "rgExtensions"
    type: "X(IncompleteArray.CERT_EXTENSION [])"
  }
}
function {
  name: "CertFindRDNAttr"
  return_type: "*R_CERT_RDN_ATTR;;"
  parameter {
    name: "pszObjId"
    type: "*cC;"
  }
  parameter {
    name: "pName"
    type: "*R_CERT_NAME_INFO;;"
  }
}
function {
  name: "CertFindSubjectInSortedCTL"
  return_type: "I"
  parameter {
    name: "pSubjectIdentifier"
    type: "*R_CRYPTOAPI_BLOB;;"
  }
  parameter {
    name: "pCtlContext"
    type: "*cR_CTL_CONTEXT;;"
  }
  parameter {
    name: "dwFlags"
    type: "UI"
  }
  parameter {
    name: "pvReserved"
    type: "*V;"
  }
  parameter {
    name: "pEncodedAttributes"
    type: "*R_CRYPTOAPI_BLOB;;"
  }
}
function {
  name: "CertIsRDNAttrsInCertificateName"
  return_type: "I"
  parameter {
    name: "dwCertEncodingType"
    type: "UI"
  }
  parameter {
    name: "dwFlags"
    type: "UI"
  }
  parameter {
    name: "pCertName"
    type: "*R_CRYPTOAPI_BLOB;;"
  }
  parameter {
    name: "pRDN"
    type: "*R_CERT_RDN;;"
  }
}
function {
  name: "CertIsValidCRLForCertificate"
  return_type: "I"
  parameter {
    name: "pCert"
    type: "*cR_CERT_CONTEXT;;"
  }
  parameter {
    name: "pCrl"
    type: "*cR_CRL_CONTEXT;;"
  }
  parameter {
    name: "dwFlags"
    type: "UI"
  }
  parameter {
    name: "pvReserved"
    type: "*V;"
  }
}
function {
  name: "CertFindCertificateInCRL"
  return_type: "I"
  parameter {
    name: "pCert"
    type: "*cR_CERT_CONTEXT;;"
  }
  parameter {
    name: "pCrlContext"
    type: "*cR_CRL_CONTEXT;;"
  }
  parameter {
    name: "dwFlags"
    type: "UI"
  }
  parameter {
    name: "pvReserved"
    type: "*V;"
  }
  parameter {
    name: "ppCrlEntry"
    type: "**R_CRL_ENTRY;;;"
  }
}
function {
  name: "CertVerifyCRLRevocation"
  return_type: "I"
  parameter {
    name: "dwCertEncodingType"
    type: "UI"
  }
  parameter {
    name: "pCertId"
    type: "*R_CERT_INFO;;"
  }
  parameter {
    name: "cCrlInfo"
    type: "UI"
  }
  parameter {
    name: "rgpCrlInfo"
    type: "X(IncompleteArray.PCRL_INFO [])"
  }
}
function {
  name: "CertVerifySubjectCertificateContext"
  return_type: "I"
  parameter {
    name: "pSubject"
    type: "*cR_CERT_CONTEXT;;"
  }
  parameter {
    name: "pIssuer"
    type: "*cR_CERT_CONTEXT;;"
  }
  parameter {
    name: "pdwFlags"
    type: "*UI;"
  }
}
function {
  name: "CertVerifyCRLTimeValidity"
  return_type: "I"
  parameter {
    name: "pTimeToVerify"
    type: "*R_FILETIME;;"
  }
  parameter {
    name: "pCrlInfo"
    type: "*R_CRL_INFO;;"
  }
}
function {
  name: "CertVerifyTimeValidity"
  return_type: "I"
  parameter {
    name: "pTimeToVerify"
    type: "*R_FILETIME;;"
  }
  parameter {
    name: "pCertInfo"
    type: "*R_CERT_INFO;;"
  }
}
function {
  name: "CertVerifyValidityNesting"
  return_type: "I"
  parameter {
    name: "pSubjectInfo"
    type: "*R_CERT_INFO;;"
  }
  parameter {
    name: "pIssuerInfo"
    type: "*R_CERT_INFO;;"
  }
}
function {
  name: "CertVerifyCTLUsage"
  return_type: "I"
  parameter {
    name: "dwEncodingType"
    type: "UI"
  }
  parameter {
    name: "dwSubjectType"
    type: "UI"
  }
  parameter {
    name: "pvSubject"
    type: "*V;"
  }
  parameter {
    name: "pSubjectUsage"
    type: "*R_CTL_USAGE;;"
  }
  parameter {
    name: "dwFlags"
    type: "UI"
  }
  parameter {
    name: "pVerifyUsagePara"
    type: "*R_CTL_VERIFY_USAGE_PARA;;"
  }
  parameter {
    name: "pVerifyUsageStatus"
    type: "*R_CTL_VERIFY_USAGE_STATUS;;"
  }
}
function {
  name: "CertVerifyRevocation"
  return_type: "I"
  parameter {
    name: "dwEncodingType"
    type: "UI"
  }
  parameter {
    name: "dwRevType"
    type: "UI"
  }
  parameter {
    name: "cContext"
    type: "UI"
  }
  parameter {
    name: "rgpvContext"
    type: "X(IncompleteArray.PVOID [])"
  }
  parameter {
    name: "dwFlags"
    type: "UI"
  }
  parameter {
    name: "pRevPara"
    type: "*R_CERT_REVOCATION_PARA;;"
  }
  parameter {
    name: "pRevStatus"
    type: "*R_CERT_REVOCATION_STATUS;;"
  }
}
function {
  name: "CryptExportPublicKeyInfo"
  return_type: "I"
  parameter {
    name: "hCryptProv"
    type: "UI"
  }
  parameter {
    name: "dwKeySpec"
    type: "UI"
  }
  parameter {
    name: "dwCertEncodingType"
    type: "UI"
  }
  parameter {
    name: "pInfo"
    type: "*R_CERT_PUBLIC_KEY_INFO;;"
  }
  parameter {
    name: "pcbInfo"
    type: "*UI;"
  }
}
function {
  name: "CryptExportPublicKeyInfoEx"
  return_type: "I"
  parameter {
    name: "hCryptProv"
    type: "UI"
  }
  parameter {
    name: "dwKeySpec"
    type: "UI"
  }
  parameter {
    name: "dwCertEncodingType"
    type: "UI"
  }
  parameter {
    name: "pszPublicKeyObjId"
    type: "*C;"
  }
  parameter {
    name: "dwFlags"
    type: "UI"
  }
  parameter {
    name: "pvAuxInfo"
    type: "*V;"
  }
  parameter {
    name: "pInfo"
    type: "*R_CERT_PUBLIC_KEY_INFO;;"
  }
  parameter {
    name: "pcbInfo"
    type: "*UI;"
  }
}
function {
  name: "CryptImportPublicKeyInfo"
  return_type: "I"
  parameter {
    name: "hCryptProv"
    type: "UI"
  }
  parameter {
    name: "dwCertEncodingType"
    type: "UI"
  }
  parameter {
    name: "pInfo"
    type: "*R_CERT_PUBLIC_KEY_INFO;;"
  }
  parameter {
    name: "phKey"
    type: "*UI;"
  }
}
function {
  name: "CryptImportPublicKeyInfoEx"
  return_type: "I"
  parameter {
    name: "hCryptProv"
    type: "UI"
  }
  parameter {
    name: "dwCertEncodingType"
    type: "UI"
  }
  parameter {
    name: "pInfo"
    type: "*R_CERT_PUBLIC_KEY_INFO;;"
  }
  parameter {
    name: "aiKeyAlg"
    type: "UI"
  }
  parameter {
    name: "dwFlags"
    type: "UI"
  }
  parameter {
    name: "pvAuxInfo"
    type: "*V;"
  }
  parameter {
    name: "phKey"
    type: "*UI;"
  }
}
function {
  name: "CryptAcquireCertificatePrivateKey"
  return_type: "I"
  parameter {
    name: "pCert"
    type: "*cR_CERT_CONTEXT;;"
  }
  parameter {
    name: "dwFlags"
    type: "UI"
  }
  parameter {
    name: "pvReserved"
    type: "*V;"
  }
  parameter {
    name: "phCryptProv"
    type: "*UI;"
  }
  parameter {
    name: "pdwKeySpec"
    type: "*UI;"
  }
  parameter {
    name: "pfCallerFreeProv"
    type: "*I;"
  }
}
function {
  name: "CryptFindCertificateKeyProvInfo"
  return_type: "I"
  parameter {
    name: "pCert"
    type: "*cR_CERT_CONTEXT;;"
  }
  parameter {
    name: "dwFlags"
    type: "UI"
  }
  parameter {
    name: "pvReserved"
    type: "*V;"
  }
}
function {
  name: "CryptProtectData"
  return_type: "I"
  parameter {
    name: "pDataIn"
    type: "*R_CRYPTOAPI_BLOB;;"
  }
  parameter {
    name: "szDataDescr"
    type: "*cUS;"
  }
  parameter {
    name: "pOptionalEntropy"
    type: "*R_CRYPTOAPI_BLOB;;"
  }
  parameter {
    name: "pvReserved"
    type: "*V;"
  }
  parameter {
    name: "pPromptStruct"
    type: "*R_CRYPTPROTECT_PROMPTSTRUCT;;"
  }
  parameter {
    name: "dwFlags"
    type: "UI"
  }
  parameter {
    name: "pDataOut"
    type: "*R_CRYPTOAPI_BLOB;;"
  }
}
function {
  name: "CryptUnprotectData"
  return_type: "I"
  parameter {
    name: "pDataIn"
    type: "*R_CRYPTOAPI_BLOB;;"
  }
  parameter {
    name: "ppszDataDescr"
    type: "**US;;"
  }
  parameter {
    name: "pOptionalEntropy"
    type: "*R_CRYPTOAPI_BLOB;;"
  }
  parameter {
    name: "pvReserved"
    type: "*V;"
  }
  parameter {
    name: "pPromptStruct"
    type: "*R_CRYPTPROTECT_PROMPTSTRUCT;;"
  }
  parameter {
    name: "dwFlags"
    type: "UI"
  }
  parameter {
    name: "pDataOut"
    type: "*R_CRYPTOAPI_BLOB;;"
  }
}
function {
  name: "CertGetNameStringA"
  return_type: "UI"
  parameter {
    name: "pCertContext"
    type: "*cR_CERT_CONTEXT;;"
  }
  parameter {
    name: "dwType"
    type: "UI"
  }
  parameter {
    name: "dwFlags"
    type: "UI"
  }
  parameter {
    name: "pvTypePara"
    type: "*V;"
  }
  parameter {
    name: "pszNameString"
    type: "*C;"
  }
  parameter {
    name: "cchNameString"
    type: "UI"
  }
}
function {
  name: "CertGetNameStringW"
  return_type: "UI"
  parameter {
    name: "pCertContext"
    type: "*cR_CERT_CONTEXT;;"
  }
  parameter {
    name: "dwType"
    type: "UI"
  }
  parameter {
    name: "dwFlags"
    type: "UI"
  }
  parameter {
    name: "pvTypePara"
    type: "*V;"
  }
  parameter {
    name: "pszNameString"
    type: "*US;"
  }
  parameter {
    name: "cchNameString"
    type: "UI"
  }
}
function {
  name: "CertRDNValueToStrA"
  return_type: "UI"
  parameter {
    name: "dwValueType"
    type: "UI"
  }
  parameter {
    name: "pValue"
    type: "*R_CRYPTOAPI_BLOB;;"
  }
  parameter {
    name: "psz"
    type: "*C;"
  }
  parameter {
    name: "csz"
    type: "UI"
  }
}
function {
  name: "CertRDNValueToStrW"
  return_type: "UI"
  parameter {
    name: "dwValueType"
    type: "UI"
  }
  parameter {
    name: "pValue"
    type: "*R_CRYPTOAPI_BLOB;;"
  }
  parameter {
    name: "psz"
    type: "*US;"
  }
  parameter {
    name: "csz"
    type: "UI"
  }
}
function {
  name: "CertNameToStrA"
  return_type: "UI"
  parameter {
    name: "dwCertEncodingType"
    type: "UI"
  }
  parameter {
    name: "pName"
    type: "*R_CRYPTOAPI_BLOB;;"
  }
  parameter {
    name: "dwStrType"
    type: "UI"
  }
  parameter {
    name: "psz"
    type: "*C;"
  }
  parameter {
    name: "csz"
    type: "UI"
  }
}
function {
  name: "CertNameToStrW"
  return_type: "UI"
  parameter {
    name: "dwCertEncodingType"
    type: "UI"
  }
  parameter {
    name: "pName"
    type: "*R_CRYPTOAPI_BLOB;;"
  }
  parameter {
    name: "dwStrType"
    type: "UI"
  }
  parameter {
    name: "psz"
    type: "*US;"
  }
  parameter {
    name: "csz"
    type: "UI"
  }
}
function {
  name: "CertStrToNameA"
  return_type: "I"
  parameter {
    name: "dwCertEncodingType"
    type: "UI"
  }
  parameter {
    name: "pszX500"
    type: "*cC;"
  }
  parameter {
    name: "dwStrType"
    type: "UI"
  }
  parameter {
    name: "pvReserved"
    type: "*V;"
  }
  parameter {
    name: "pbEncoded"
    type: "*UB;"
  }
  parameter {
    name: "pcbEncoded"
    type: "*UI;"
  }
  parameter {
    name: "ppszError"
    type: "**cC;;"
  }
}
function {
  name: "CertStrToNameW"
  return_type: "I"
  parameter {
    name: "dwCertEncodingType"
    type: "UI"
  }
  parameter {
    name: "pszX500"
    type: "*cUS;"
  }
  parameter {
    name: "dwStrType"
    type: "UI"
  }
  parameter {
    name: "pvReserved"
    type: "*V;"
  }
  parameter {
    name: "pbEncoded"
    type: "*UB;"
  }
  parameter {
    name: "pcbEncoded"
    type: "*UI;"
  }
  parameter {
    name: "ppszError"
    type: "**cUS;;"
  }
}
function {
  name: "CryptMsgCalculateEncodedLength"
  return_type: "UI"
  parameter {
    name: "dwMsgEncodingType"
    type: "UI"
  }
  parameter {
    name: "dwFlags"
    type: "UI"
  }
  parameter {
    name: "dwMsgType"
    type: "UI"
  }
  parameter {
    name: "pvMsgEncodeInfo"
    type: "*cV;"
  }
  parameter {
    name: "pszInnerContentObjID"
    type: "*C;"
  }
  parameter {
    name: "cbData"
    type: "UI"
  }
}
function {
  name: "CryptMsgClose"
  return_type: "I"
  parameter {
    name: "hCryptMsg"
    type: "*V;"
  }
}
function {
  name: "CryptMsgControl"
  return_type: "I"
  parameter {
    name: "hCryptMsg"
    type: "*V;"
  }
  parameter {
    name: "dwFlags"
    type: "UI"
  }
  parameter {
    name: "dwCtrlType"
    type: "UI"
  }
  parameter {
    name: "pvCtrlPara"
    type: "*cV;"
  }
}
function {
  name: "CryptMsgCountersign"
  return_type: "I"
  parameter {
    name: "hCryptMsg"
    type: "*V;"
  }
  parameter {
    name: "dwIndex"
    type: "UI"
  }
  parameter {
    name: "dwCountersigners"
    type: "UI"
  }
  parameter {
    name: "rgCountersigners"
    type: "*R_CMSG_SIGNER_ENCODE_INFO;;"
  }
}
function {
  name: "CryptMsgCountersignEncoded"
  return_type: "I"
  parameter {
    name: "dwEncodingType"
    type: "UI"
  }
  parameter {
    name: "pbSignerInfo"
    type: "*UB;"
  }
  parameter {
    name: "cbSignerInfo"
    type: "UI"
  }
  parameter {
    name: "cCountersigners"
    type: "UI"
  }
  parameter {
    name: "rgCountersigners"
    type: "*R_CMSG_SIGNER_ENCODE_INFO;;"
  }
  parameter {
    name: "pbCountersignature"
    type: "*UB;"
  }
  parameter {
    name: "pcbCountersignature"
    type: "*UI;"
  }
}
function {
  name: "CryptMsgDuplicate"
  return_type: "*V;"
  parameter {
    name: "hCryptMsg"
    type: "*V;"
  }
}
function {
  name: "CryptMsgEncodeAndSignCTL"
  return_type: "I"
  parameter {
    name: "dwMsgEncodingType"
    type: "UI"
  }
  parameter {
    name: "pCtlInfo"
    type: "*R_CTL_INFO;;"
  }
  parameter {
    name: "pSignInfo"
    type: "*R_CMSG_SIGNED_ENCODE_INFO;;"
  }
  parameter {
    name: "dwFlags"
    type: "UI"
  }
  parameter {
    name: "pbEncoded"
    type: "*UB;"
  }
  parameter {
    name: "pcbEncoded"
    type: "*UI;"
  }
}
function {
  name: "CryptMsgGetAndVerifySigner"
  return_type: "I"
  parameter {
    name: "hCryptMsg"
    type: "*V;"
  }
  parameter {
    name: "cSignerStore"
    type: "UI"
  }
  parameter {
    name: "rghSignerStore"
    type: "**V;;"
  }
  parameter {
    name: "dwFlags"
    type: "UI"
  }
  parameter {
    name: "ppSigner"
    type: "**cR_CERT_CONTEXT;;;"
  }
  parameter {
    name: "pdwSignerIndex"
    type: "*UI;"
  }
}
function {
  name: "CryptMsgGetParam"
  return_type: "I"
  parameter {
    name: "hCryptMsg"
    type: "*V;"
  }
  parameter {
    name: "dwParamType"
    type: "UI"
  }
  parameter {
    name: "dwIndex"
    type: "UI"
  }
  parameter {
    name: "pvData"
    type: "*V;"
  }
  parameter {
    name: "pcbData"
    type: "*UI;"
  }
}
function {
  name: "CryptMsgOpenToDecode"
  return_type: "*V;"
  parameter {
    name: "dwMsgEncodingType"
    type: "UI"
  }
  parameter {
    name: "dwFlags"
    type: "UI"
  }
  parameter {
    name: "dwMsgType"
    type: "UI"
  }
  parameter {
    name: "hCryptProv"
    type: "UI"
  }
  parameter {
    name: "pRecipientInfo"
    type: "*R_CERT_INFO;;"
  }
  parameter {
    name: "pStreamInfo"
    type: "*R_CMSG_STREAM_INFO;;"
  }
}
function {
  name: "CryptMsgOpenToEncode"
  return_type: "*V;"
  parameter {
    name: "dwMsgEncodingType"
    type: "UI"
  }
  parameter {
    name: "dwFlags"
    type: "UI"
  }
  parameter {
    name: "dwMsgType"
    type: "UI"
  }
  parameter {
    name: "pvMsgEncodeInfo"
    type: "*cV;"
  }
  parameter {
    name: "pszInnerContentObjID"
    type: "*C;"
  }
  parameter {
    name: "pStreamInfo"
    type: "*R_CMSG_STREAM_INFO;;"
  }
}
function {
  name: "CryptMsgSignCTL"
  return_type: "I"
  parameter {
    name: "dwMsgEncodingType"
    type: "UI"
  }
  parameter {
    name: "pbCtlContent"
    type: "*UB;"
  }
  parameter {
    name: "cbCtlContent"
    type: "UI"
  }
  parameter {
    name: "pSignInfo"
    type: "*R_CMSG_SIGNED_ENCODE_INFO;;"
  }
  parameter {
    name: "dwFlags"
    type: "UI"
  }
  parameter {
    name: "pbEncoded"
    type: "*UB;"
  }
  parameter {
    name: "pcbEncoded"
    type: "*UI;"
  }
}
function {
  name: "CryptMsgUpdate"
  return_type: "I"
  parameter {
    name: "hCryptMsg"
    type: "*V;"
  }
  parameter {
    name: "pbData"
    type: "*cUB;"
  }
  parameter {
    name: "cbData"
    type: "UI"
  }
  parameter {
    name: "fFinal"
    type: "I"
  }
}
function {
  name: "CryptMsgVerifyCountersignatureEncoded"
  return_type: "I"
  parameter {
    name: "hCryptProv"
    type: "UI"
  }
  parameter {
    name: "dwEncodingType"
    type: "UI"
  }
  parameter {
    name: "pbSignerInfo"
    type: "*UB;"
  }
  parameter {
    name: "cbSignerInfo"
    type: "UI"
  }
  parameter {
    name: "pbSignerInfoCountersignature"
    type: "*UB;"
  }
  parameter {
    name: "cbSignerInfoCountersignature"
    type: "UI"
  }
  parameter {
    name: "pciCountersigner"
    type: "*R_CERT_INFO;;"
  }
}
function {
  name: "CryptMsgVerifyCountersignatureEncodedEx"
  return_type: "I"
  parameter {
    name: "hCryptProv"
    type: "UI"
  }
  parameter {
    name: "dwEncodingType"
    type: "UI"
  }
  parameter {
    name: "pbSignerInfo"
    type: "*UB;"
  }
  parameter {
    name: "cbSignerInfo"
    type: "UI"
  }
  parameter {
    name: "pbSignerInfoCountersignature"
    type: "*UB;"
  }
  parameter {
    name: "cbSignerInfoCountersignature"
    type: "UI"
  }
  parameter {
    name: "dwSignerType"
    type: "UI"
  }
  parameter {
    name: "pvSigner"
    type: "*V;"
  }
  parameter {
    name: "dwFlags"
    type: "UI"
  }
  parameter {
    name: "pvReserved"
    type: "*V;"
  }
}
function {
  name: "CryptSignMessage"
  return_type: "I"
  parameter {
    name: "pSignPara"
    type: "*R_CRYPT_SIGN_MESSAGE_PARA;;"
  }
  parameter {
    name: "fDetachedSignature"
    type: "I"
  }
  parameter {
    name: "cToBeSigned"
    type: "UI"
  }
  parameter {
    name: "rgpbToBeSigned"
    type: "X(IncompleteArray.const BYTE *[])"
  }
  parameter {
    name: "rgcbToBeSigned"
    type: "X(IncompleteArray.DWORD [])"
  }
  parameter {
    name: "pbSignedBlob"
    type: "*UB;"
  }
  parameter {
    name: "pcbSignedBlob"
    type: "*UI;"
  }
}
function {
  name: "CryptSignMessageWithKey"
  return_type: "I"
  parameter {
    name: "pSignPara"
    type: "*R_CRYPT_KEY_SIGN_MESSAGE_PARA;;"
  }
  parameter {
    name: "pbToBeSigned"
    type: "*cUB;"
  }
  parameter {
    name: "cbToBeSigned"
    type: "UI"
  }
  parameter {
    name: "pbSignedBlob"
    type: "*UB;"
  }
  parameter {
    name: "pcbSignedBlob"
    type: "*UI;"
  }
}
function {
  name: "CryptVerifyMessageSignature"
  return_type: "I"
  parameter {
    name: "pVerifyPara"
    type: "*R_CRYPT_VERIFY_MESSAGE_PARA;;"
  }
  parameter {
    name: "dwSignerIndex"
    type: "UI"
  }
  parameter {
    name: "pbSignedBlob"
    type: "*cUB;"
  }
  parameter {
    name: "cbSignedBlob"
    type: "UI"
  }
  parameter {
    name: "pbDecoded"
    type: "*UB;"
  }
  parameter {
    name: "pcbDecoded"
    type: "*UI;"
  }
  parameter {
    name: "ppSignerCert"
    type: "**cR_CERT_CONTEXT;;;"
  }
}
function {
  name: "CryptVerifyMessageSignatureWithKey"
  return_type: "I"
  parameter {
    name: "pVerifyPara"
    type: "*R_CRYPT_KEY_VERIFY_MESSAGE_PARA;;"
  }
  parameter {
    name: "pPublicKeyInfo"
    type: "*R_CERT_PUBLIC_KEY_INFO;;"
  }
  parameter {
    name: "pbSignedBlob"
    type: "*cUB;"
  }
  parameter {
    name: "cbSignedBlob"
    type: "UI"
  }
  parameter {
    name: "pbDecoded"
    type: "*UB;"
  }
  parameter {
    name: "pcbDecoded"
    type: "*UI;"
  }
}
function {
  name: "CryptVerifyDetachedMessageSignature"
  return_type: "I"
  parameter {
    name: "pVerifyPara"
    type: "*R_CRYPT_VERIFY_MESSAGE_PARA;;"
  }
  parameter {
    name: "dwSignerIndex"
    type: "UI"
  }
  parameter {
    name: "pbDetachedSignBlob"
    type: "*cUB;"
  }
  parameter {
    name: "cbDetachedSignBlob"
    type: "UI"
  }
  parameter {
    name: "cToBeSigned"
    type: "UI"
  }
  parameter {
    name: "rgpbToBeSigned"
    type: "X(IncompleteArray.const BYTE *[])"
  }
  parameter {
    name: "rgcbToBeSigned"
    type: "X(IncompleteArray.DWORD [])"
  }
  parameter {
    name: "ppSignerCert"
    type: "**cR_CERT_CONTEXT;;;"
  }
}
function {
  name: "CryptGetMessageSignerCount"
  return_type: "I"
  parameter {
    name: "dwMsgEncodingType"
    type: "UI"
  }
  parameter {
    name: "pbSignedBlob"
    type: "*cUB;"
  }
  parameter {
    name: "cbSignedBlob"
    type: "UI"
  }
}
function {
  name: "CryptEncryptMessage"
  return_type: "I"
  parameter {
    name: "pEncryptPara"
    type: "*R_CRYPT_ENCRYPT_MESSAGE_PARA;;"
  }
  parameter {
    name: "cRecipientCert"
    type: "UI"
  }
  parameter {
    name: "rgpRecipientCert"
    type: "X(IncompleteArray.PCCERT_CONTEXT [])"
  }
  parameter {
    name: "pbToBeEncrypted"
    type: "*cUB;"
  }
  parameter {
    name: "cbToBeEncrypted"
    type: "UI"
  }
  parameter {
    name: "pbEncryptedBlob"
    type: "*UB;"
  }
  parameter {
    name: "pcbEncryptedBlob"
    type: "*UI;"
  }
}
function {
  name: "CryptDecryptMessage"
  return_type: "I"
  parameter {
    name: "pDecryptPara"
    type: "*R_CRYPT_DECRYPT_MESSAGE_PARA;;"
  }
  parameter {
    name: "pbEncryptedBlob"
    type: "*cUB;"
  }
  parameter {
    name: "cbEncryptedBlob"
    type: "UI"
  }
  parameter {
    name: "pbDecrypted"
    type: "*UB;"
  }
  parameter {
    name: "pcbDecrypted"
    type: "*UI;"
  }
  parameter {
    name: "ppXchgCert"
    type: "**cR_CERT_CONTEXT;;;"
  }
}
function {
  name: "CryptSignAndEncryptMessage"
  return_type: "I"
  parameter {
    name: "pSignPara"
    type: "*R_CRYPT_SIGN_MESSAGE_PARA;;"
  }
  parameter {
    name: "pEncryptPara"
    type: "*R_CRYPT_ENCRYPT_MESSAGE_PARA;;"
  }
  parameter {
    name: "cRecipientCert"
    type: "UI"
  }
  parameter {
    name: "rgpRecipientCert"
    type: "X(IncompleteArray.PCCERT_CONTEXT [])"
  }
  parameter {
    name: "pbToBeSignedAndEncrypted"
    type: "*cUB;"
  }
  parameter {
    name: "cbToBeSignedAndEncrypted"
    type: "UI"
  }
  parameter {
    name: "pbSignedAndEncryptedBlob"
    type: "*UB;"
  }
  parameter {
    name: "pcbSignedAndEncryptedBlob"
    type: "*UI;"
  }
}
function {
  name: "CryptDecryptAndVerifyMessageSignature"
  return_type: "I"
  parameter {
    name: "pDecryptPara"
    type: "*R_CRYPT_DECRYPT_MESSAGE_PARA;;"
  }
  parameter {
    name: "pVerifyPara"
    type: "*R_CRYPT_VERIFY_MESSAGE_PARA;;"
  }
  parameter {
    name: "dwSignerIndex"
    type: "UI"
  }
  parameter {
    name: "pbEncryptedBlob"
    type: "*cUB;"
  }
  parameter {
    name: "cbEncryptedBlob"
    type: "UI"
  }
  parameter {
    name: "pbDecrypted"
    type: "*UB;"
  }
  parameter {
    name: "pcbDecrypted"
    type: "*UI;"
  }
  parameter {
    name: "ppXchgCert"
    type: "**cR_CERT_CONTEXT;;;"
  }
  parameter {
    name: "ppSignerCert"
    type: "**cR_CERT_CONTEXT;;;"
  }
}
function {
  name: "CryptGetMessageCertificates"
  return_type: "*V;"
  parameter {
    name: "dwMsgAndCertEncodingType"
    type: "UI"
  }
  parameter {
    name: "hCryptProv"
    type: "UI"
  }
  parameter {
    name: "dwFlags"
    type: "UI"
  }
  parameter {
    name: "pbSignedBlob"
    type: "*cUB;"
  }
  parameter {
    name: "cbSignedBlob"
    type: "UI"
  }
}
function {
  name: "CryptDecodeMessage"
  return_type: "I"
  parameter {
    name: "dwMsgTypeFlags"
    type: "UI"
  }
  parameter {
    name: "pDecryptPara"
    type: "*R_CRYPT_DECRYPT_MESSAGE_PARA;;"
  }
  parameter {
    name: "pVerifyPara"
    type: "*R_CRYPT_VERIFY_MESSAGE_PARA;;"
  }
  parameter {
    name: "dwSignerIndex"
    type: "UI"
  }
  parameter {
    name: "pbEncodedBlob"
    type: "*cUB;"
  }
  parameter {
    name: "cbEncodedBlob"
    type: "UI"
  }
  parameter {
    name: "dwPrevInnerContentType"
    type: "UI"
  }
  parameter {
    name: "pdwMsgType"
    type: "*UI;"
  }
  parameter {
    name: "pdwInnerContentType"
    type: "*UI;"
  }
  parameter {
    name: "pbDecoded"
    type: "*UB;"
  }
  parameter {
    name: "pcbDecoded"
    type: "*UI;"
  }
  parameter {
    name: "ppXchgCert"
    type: "**cR_CERT_CONTEXT;;;"
  }
  parameter {
    name: "ppSignerCert"
    type: "**cR_CERT_CONTEXT;;;"
  }
}
function {
  name: "CryptHashMessage"
  return_type: "I"
  parameter {
    name: "pHashPara"
    type: "*R_CRYPT_HASH_MESSAGE_PARA;;"
  }
  parameter {
    name: "fDetachedHash"
    type: "I"
  }
  parameter {
    name: "cToBeHashed"
    type: "UI"
  }
  parameter {
    name: "rgpbToBeHashed"
    type: "X(IncompleteArray.const BYTE *[])"
  }
  parameter {
    name: "rgcbToBeHashed"
    type: "X(IncompleteArray.DWORD [])"
  }
  parameter {
    name: "pbHashedBlob"
    type: "*UB;"
  }
  parameter {
    name: "pcbHashedBlob"
    type: "*UI;"
  }
  parameter {
    name: "pbComputedHash"
    type: "*UB;"
  }
  parameter {
    name: "pcbComputedHash"
    type: "*UI;"
  }
}
function {
  name: "CryptVerifyMessageHash"
  return_type: "I"
  parameter {
    name: "pHashPara"
    type: "*R_CRYPT_HASH_MESSAGE_PARA;;"
  }
  parameter {
    name: "pbHashedBlob"
    type: "*UB;"
  }
  parameter {
    name: "cbHashedBlob"
    type: "UI"
  }
  parameter {
    name: "pbToBeHashed"
    type: "*UB;"
  }
  parameter {
    name: "pcbToBeHashed"
    type: "*UI;"
  }
  parameter {
    name: "pbComputedHash"
    type: "*UB;"
  }
  parameter {
    name: "pcbComputedHash"
    type: "*UI;"
  }
}
function {
  name: "CryptVerifyDetachedMessageHash"
  return_type: "I"
  parameter {
    name: "pHashPara"
    type: "*R_CRYPT_HASH_MESSAGE_PARA;;"
  }
  parameter {
    name: "pbDetachedHashBlob"
    type: "*UB;"
  }
  parameter {
    name: "cbDetachedHashBlob"
    type: "UI"
  }
  parameter {
    name: "cToBeHashed"
    type: "UI"
  }
  parameter {
    name: "rgpbToBeHashed"
    type: "X(IncompleteArray.const BYTE *[])"
  }
  parameter {
    name: "rgcbToBeHashed"
    type: "X(IncompleteArray.DWORD [])"
  }
  parameter {
    name: "pbComputedHash"
    type: "*UB;"
  }
  parameter {
    name: "pcbComputedHash"
    type: "*UI;"
  }
}
function {
  name: "PFXImportCertStore"
  return_type: "*V;"
  parameter {
    name: "pPFX"
    type: "*R_CRYPTOAPI_BLOB;;"
  }
  parameter {
    name: "szPassword"
    type: "*cUS;"
  }
  parameter {
    name: "dwFlags"
    type: "UI"
  }
}
function {
  name: "PFXIsPFXBlob"
  return_type: "I"
  parameter {
    name: "pPFX"
    type: "*R_CRYPTOAPI_BLOB;;"
  }
}
function {
  name: "PFXVerifyPassword"
  return_type: "I"
  parameter {
    name: "pPFX"
    type: "*R_CRYPTOAPI_BLOB;;"
  }
  parameter {
    name: "szPassword"
    type: "*cUS;"
  }
  parameter {
    name: "dwFlags"
    type: "UI"
  }
}
function {
  name: "PFXExportCertStoreEx"
  return_type: "I"
  parameter {
    name: "hStore"
    type: "*V;"
  }
  parameter {
    name: "pPFX"
    type: "*R_CRYPTOAPI_BLOB;;"
  }
  parameter {
    name: "szPassword"
    type: "*cUS;"
  }
  parameter {
    name: "pvReserved"
    type: "*V;"
  }
  parameter {
    name: "dwFlags"
    type: "UI"
  }
}
function {
  name: "PFXExportCertStore"
  return_type: "I"
  parameter {
    name: "hStore"
    type: "*V;"
  }
  parameter {
    name: "pPFX"
    type: "*R_CRYPTOAPI_BLOB;;"
  }
  parameter {
    name: "szPassword"
    type: "*cUS;"
  }
  parameter {
    name: "dwFlags"
    type: "UI"
  }
}
function {
  name: "PFXVerifyPassword"
  return_type: "I"
  parameter {
    name: "pPFX"
    type: "*R_CRYPTOAPI_BLOB;;"
  }
  parameter {
    name: "szPassword"
    type: "*cUS;"
  }
  parameter {
    name: "dwFlags"
    type: "UI"
  }
}
function {
  name: "CryptCancelAsyncRetrieval"
  return_type: "I"
  parameter {
    name: "hAsyncRetrieval"
    type: "*V;"
  }
}
function {
  name: "CryptGetObjectUrl"
  return_type: "I"
  parameter {
    name: "pszUrlOid"
    type: "*cC;"
  }
  parameter {
    name: "pvPara"
    type: "*V;"
  }
  parameter {
    name: "dwFlags"
    type: "UI"
  }
  parameter {
    name: "pUrlArray"
    type: "*R_CRYPT_URL_ARRAY;;"
  }
  parameter {
    name: "pcbUrlArray"
    type: "*UI;"
  }
  parameter {
    name: "pUrlInfo"
    type: "*R_CRYPT_URL_INFO;;"
  }
  parameter {
    name: "pcbUrlInfo"
    type: "*UI;"
  }
  parameter {
    name: "pvReserved"
    type: "*V;"
  }
}
function {
  name: "CryptGetTimeValidObject"
  return_type: "I"
  parameter {
    name: "pszTimeValidOid"
    type: "*cC;"
  }
  parameter {
    name: "pvPara"
    type: "*V;"
  }
  parameter {
    name: "pIssuer"
    type: "*cR_CERT_CONTEXT;;"
  }
  parameter {
    name: "pftValidFor"
    type: "*R_FILETIME;;"
  }
  parameter {
    name: "dwFlags"
    type: "UI"
  }
  parameter {
    name: "dwTimeout"
    type: "UI"
  }
  parameter {
    name: "ppvObject"
    type: "**V;;"
  }
  parameter {
    name: "pCredentials"
    type: "*R_CRYPT_CREDENTIALS;;"
  }
  parameter {
    name: "pvReserved"
    type: "*V;"
  }
}
function {
  name: "CryptFlushTimeValidObject"
  return_type: "I"
  parameter {
    name: "pszFlushTimeValidOid"
    type: "*cC;"
  }
  parameter {
    name: "pvPara"
    type: "*V;"
  }
  parameter {
    name: "pIssuer"
    type: "*cR_CERT_CONTEXT;;"
  }
  parameter {
    name: "dwFlags"
    type: "UI"
  }
  parameter {
    name: "pvReserved"
    type: "*V;"
  }
}
function {
  name: "CryptInstallCancelRetrieval"
  return_type: "I"
  parameter {
    name: "pfnCancel"
    type: "*(UI*V;)I;"
  }
  parameter {
    name: "pvArg"
    type: "*cV;"
  }
  parameter {
    name: "dwFlags"
    type: "UI"
  }
  parameter {
    name: "pvReserved"
    type: "*V;"
  }
}
function {
  name: "CryptUninstallCancelRetrieval"
  return_type: "I"
  parameter {
    name: "dwFlags"
    type: "UI"
  }
  parameter {
    name: "pvReserved"
    type: "*V;"
  }
}
function {
  name: "CryptRetrieveObjectByUrlA"
  return_type: "I"
  parameter {
    name: "pszURL"
    type: "*cC;"
  }
  parameter {
    name: "pszObjectOid"
    type: "*cC;"
  }
  parameter {
    name: "dwRetrievalFlags"
    type: "UI"
  }
  parameter {
    name: "dwTimeout"
    type: "UI"
  }
  parameter {
    name: "ppvObject"
    type: "**V;;"
  }
  parameter {
    name: "hAsyncRetrieve"
    type: "*V;"
  }
  parameter {
    name: "pCredentials"
    type: "*R_CRYPT_CREDENTIALS;;"
  }
  parameter {
    name: "pvVerify"
    type: "*V;"
  }
  parameter {
    name: "pAuxInfo"
    type: "*R_CRYPT_RETRIEVE_AUX_INFO;;"
  }
}
function {
  name: "CryptRetrieveObjectByUrlW"
  return_type: "I"
  parameter {
    name: "pszURL"
    type: "*cUS;"
  }
  parameter {
    name: "pszObjectOid"
    type: "*cC;"
  }
  parameter {
    name: "dwRetrievalFlags"
    type: "UI"
  }
  parameter {
    name: "dwTimeout"
    type: "UI"
  }
  parameter {
    name: "ppvObject"
    type: "**V;;"
  }
  parameter {
    name: "hAsyncRetrieve"
    type: "*V;"
  }
  parameter {
    name: "pCredentials"
    type: "*R_CRYPT_CREDENTIALS;;"
  }
  parameter {
    name: "pvVerify"
    type: "*V;"
  }
  parameter {
    name: "pAuxInfo"
    type: "*R_CRYPT_RETRIEVE_AUX_INFO;;"
  }
}
function {
  name: "FindCertsByIssuer"
  return_type: "I"
  parameter {
    name: "pCertChains"
    type: "*R_CERT_CHAIN;;"
  }
  parameter {
    name: "pcbCertChains"
    type: "*UI;"
  }
  parameter {
    name: "pcCertChains"
    type: "*UI;"
  }
  parameter {
    name: "pbEncodedIssuerName"
    type: "*UB;"
  }
  parameter {
    name: "cbEncodedIssuerName"
    type: "UI"
  }
  parameter {
    name: "pwszPurpose"
    type: "*cUS;"
  }
  parameter {
    name: "dwKeySpec"
    type: "UI"
  }
}
function {
  name: "MIDL_user_allocate"
  return_type: "*V;"
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "MIDL_user_free"
  return_type: "V"
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "NDRCContextBinding"
  return_type: "*V;"
  parameter {
    name: "CContext"
    type: "*V;"
  }
}
function {
  name: "NDRCContextMarshall"
  return_type: "V"
  parameter {
    name: "CContext"
    type: "*V;"
  }
  parameter {
    name: "pBuff"
    type: "*V;"
  }
}
function {
  name: "NDRCContextUnmarshall"
  return_type: "V"
  parameter {
    name: "pCContext"
    type: "**V;;"
  }
  parameter {
    name: "hBinding"
    type: "*V;"
  }
  parameter {
    name: "pBuff"
    type: "*V;"
  }
  parameter {
    name: "DataRepresentation"
    type: "UI"
  }
}
function {
  name: "NDRSContextMarshall"
  return_type: "V"
  parameter {
    name: "CContext"
    type: "*R(anonymous at /usr/local/include/wine/windows/rpcndr.h:127:9);;"
  }
  parameter {
    name: "pBuff"
    type: "*V;"
  }
  parameter {
    name: "userRunDownIn"
    type: "*(*V;)V;"
  }
}
function {
  name: "NDRSContextUnmarshall"
  return_type: "*R(anonymous at /usr/local/include/wine/windows/rpcndr.h:127:9);;"
  parameter {
    name: "pBuff"
    type: "*V;"
  }
  parameter {
    name: "DataRepresentation"
    type: "UI"
  }
}
function {
  name: "NDRSContextMarshallEx"
  return_type: "V"
  parameter {
    name: "BindingHandle"
    type: "*V;"
  }
  parameter {
    name: "CContext"
    type: "*R(anonymous at /usr/local/include/wine/windows/rpcndr.h:127:9);;"
  }
  parameter {
    name: "pBuff"
    type: "*V;"
  }
  parameter {
    name: "userRunDownIn"
    type: "*(*V;)V;"
  }
}
function {
  name: "NDRSContextMarshall2"
  return_type: "V"
  parameter {
    name: "BindingHandle"
    type: "*V;"
  }
  parameter {
    name: "CContext"
    type: "*R(anonymous at /usr/local/include/wine/windows/rpcndr.h:127:9);;"
  }
  parameter {
    name: "pBuff"
    type: "*V;"
  }
  parameter {
    name: "userRunDownIn"
    type: "*(*V;)V;"
  }
  parameter {
    name: "CtxGuard"
    type: "*V;"
  }
  parameter {
    name: "Flags"
    type: "UI"
  }
}
function {
  name: "NDRSContextUnmarshallEx"
  return_type: "*R(anonymous at /usr/local/include/wine/windows/rpcndr.h:127:9);;"
  parameter {
    name: "BindingHandle"
    type: "*V;"
  }
  parameter {
    name: "pBuff"
    type: "*V;"
  }
  parameter {
    name: "DataRepresentation"
    type: "UI"
  }
}
function {
  name: "NDRSContextUnmarshall2"
  return_type: "*R(anonymous at /usr/local/include/wine/windows/rpcndr.h:127:9);;"
  parameter {
    name: "BindingHandle"
    type: "*V;"
  }
  parameter {
    name: "pBuff"
    type: "*V;"
  }
  parameter {
    name: "DataRepresentation"
    type: "UI"
  }
  parameter {
    name: "CtxGuard"
    type: "*V;"
  }
  parameter {
    name: "Flags"
    type: "UI"
  }
}
function {
  name: "NdrClientContextMarshall"
  return_type: "V"
  parameter {
    name: "pStubMsg"
    type: "*R_MIDL_STUB_MESSAGE;;"
  }
  parameter {
    name: "ContextHandle"
    type: "*V;"
  }
  parameter {
    name: "fCheck"
    type: "I"
  }
}
function {
  name: "NdrClientContextUnmarshall"
  return_type: "V"
  parameter {
    name: "pStubMsg"
    type: "*R_MIDL_STUB_MESSAGE;;"
  }
  parameter {
    name: "pContextHandle"
    type: "**V;;"
  }
  parameter {
    name: "BindHandle"
    type: "*V;"
  }
}
function {
  name: "NdrServerContextMarshall"
  return_type: "V"
  parameter {
    name: "pStubMsg"
    type: "*R_MIDL_STUB_MESSAGE;;"
  }
  parameter {
    name: "ContextHandle"
    type: "*R(anonymous at /usr/local/include/wine/windows/rpcndr.h:127:9);;"
  }
  parameter {
    name: "RundownRoutine"
    type: "*(*V;)V;"
  }
}
function {
  name: "NdrServerContextUnmarshall"
  return_type: "*R(anonymous at /usr/local/include/wine/windows/rpcndr.h:127:9);;"
  parameter {
    name: "pStubMsg"
    type: "*R_MIDL_STUB_MESSAGE;;"
  }
}
function {
  name: "NdrContextHandleSize"
  return_type: "V"
  parameter {
    name: "pStubMsg"
    type: "*R_MIDL_STUB_MESSAGE;;"
  }
  parameter {
    name: "pMemory"
    type: "*UB;"
  }
  parameter {
    name: "pFormat"
    type: "*cUB;"
  }
}
function {
  name: "NdrContextHandleInitialize"
  return_type: "*R(anonymous at /usr/local/include/wine/windows/rpcndr.h:127:9);;"
  parameter {
    name: "pStubMsg"
    type: "*R_MIDL_STUB_MESSAGE;;"
  }
  parameter {
    name: "pFormat"
    type: "*cUB;"
  }
}
function {
  name: "NdrServerContextNewMarshall"
  return_type: "V"
  parameter {
    name: "pStubMsg"
    type: "*R_MIDL_STUB_MESSAGE;;"
  }
  parameter {
    name: "ContextHandle"
    type: "*R(anonymous at /usr/local/include/wine/windows/rpcndr.h:127:9);;"
  }
  parameter {
    name: "RundownRoutine"
    type: "*(*V;)V;"
  }
  parameter {
    name: "pFormat"
    type: "*cUB;"
  }
}
function {
  name: "NdrServerContextNewUnmarshall"
  return_type: "*R(anonymous at /usr/local/include/wine/windows/rpcndr.h:127:9);;"
  parameter {
    name: "pStubMsg"
    type: "*R_MIDL_STUB_MESSAGE;;"
  }
  parameter {
    name: "pFormat"
    type: "*cUB;"
  }
}
function {
  name: "RpcSmDestroyClientContext"
  return_type: "I"
  parameter {
    name: "ContextHandle"
    type: "**V;;"
  }
}
function {
  name: "RpcSsDestroyClientContext"
  return_type: "V"
  parameter {
    name: "ContextHandle"
    type: "**V;;"
  }
}
function {
  name: "NdrSimpleTypeMarshall"
  return_type: "V"
  parameter {
    name: "pStubMsg"
    type: "*R_MIDL_STUB_MESSAGE;;"
  }
  parameter {
    name: "pMemory"
    type: "*UB;"
  }
  parameter {
    name: "FormatChar"
    type: "UB"
  }
}
function {
  name: "NdrSimpleTypeUnmarshall"
  return_type: "V"
  parameter {
    name: "pStubMsg"
    type: "*R_MIDL_STUB_MESSAGE;;"
  }
  parameter {
    name: "pMemory"
    type: "*UB;"
  }
  parameter {
    name: "FormatChar"
    type: "UB"
  }
}
function {
  name: "NdrByteCountPointerMarshall"
  return_type: "*UB;"
  parameter {
    name: "pStubMsg"
    type: "*R_MIDL_STUB_MESSAGE;;"
  }
  parameter {
    name: "pMemory"
    type: "*UB;"
  }
  parameter {
    name: "pFormat"
    type: "*cUB;"
  }
}
function {
  name: "NdrByteCountPointerUnmarshall"
  return_type: "*UB;"
  parameter {
    name: "pStubMsg"
    type: "*R_MIDL_STUB_MESSAGE;;"
  }
  parameter {
    name: "ppMemory"
    type: "**UB;;"
  }
  parameter {
    name: "pFormat"
    type: "*cUB;"
  }
  parameter {
    name: "fMustAlloc"
    type: "UB"
  }
}
function {
  name: "NdrByteCountPointerBufferSize"
  return_type: "V"
  parameter {
    name: "pStubMsg"
    type: "*R_MIDL_STUB_MESSAGE;;"
  }
  parameter {
    name: "pMemory"
    type: "*UB;"
  }
  parameter {
    name: "pFormat"
    type: "*cUB;"
  }
}
function {
  name: "NdrByteCountPointerFree"
  return_type: "V"
  parameter {
    name: "pStubMsg"
    type: "*R_MIDL_STUB_MESSAGE;;"
  }
  parameter {
    name: "pMemory"
    type: "*UB;"
  }
  parameter {
    name: "pFormat"
    type: "*cUB;"
  }
}
function {
  name: "NdrRangeUnmarshall"
  return_type: "*UB;"
  parameter {
    name: "pStubMsg"
    type: "*R_MIDL_STUB_MESSAGE;;"
  }
  parameter {
    name: "ppMemory"
    type: "**UB;;"
  }
  parameter {
    name: "pFormat"
    type: "*cUB;"
  }
  parameter {
    name: "fMustAlloc"
    type: "UB"
  }
}
function {
  name: "NdrPointerMarshall"
  return_type: "*UB;"
  parameter {
    name: "pStubMsg"
    type: "*R_MIDL_STUB_MESSAGE;;"
  }
  parameter {
    name: "pMemory"
    type: "*UB;"
  }
  parameter {
    name: "pFormat"
    type: "*cUB;"
  }
}
function {
  name: "NdrPointerUnmarshall"
  return_type: "*UB;"
  parameter {
    name: "pStubMsg"
    type: "*R_MIDL_STUB_MESSAGE;;"
  }
  parameter {
    name: "ppMemory"
    type: "**UB;;"
  }
  parameter {
    name: "pFormat"
    type: "*cUB;"
  }
  parameter {
    name: "fMustAlloc"
    type: "UB"
  }
}
function {
  name: "NdrPointerBufferSize"
  return_type: "V"
  parameter {
    name: "pStubMsg"
    type: "*R_MIDL_STUB_MESSAGE;;"
  }
  parameter {
    name: "pMemory"
    type: "*UB;"
  }
  parameter {
    name: "pFormat"
    type: "*cUB;"
  }
}
function {
  name: "NdrPointerMemorySize"
  return_type: "UI"
  parameter {
    name: "pStubMsg"
    type: "*R_MIDL_STUB_MESSAGE;;"
  }
  parameter {
    name: "pFormat"
    type: "*cUB;"
  }
}
function {
  name: "NdrPointerFree"
  return_type: "V"
  parameter {
    name: "pStubMsg"
    type: "*R_MIDL_STUB_MESSAGE;;"
  }
  parameter {
    name: "pMemory"
    type: "*UB;"
  }
  parameter {
    name: "pFormat"
    type: "*cUB;"
  }
}
function {
  name: "NdrSimpleStructMarshall"
  return_type: "*UB;"
  parameter {
    name: "pStubMsg"
    type: "*R_MIDL_STUB_MESSAGE;;"
  }
  parameter {
    name: "pMemory"
    type: "*UB;"
  }
  parameter {
    name: "pFormat"
    type: "*cUB;"
  }
}
function {
  name: "NdrSimpleStructUnmarshall"
  return_type: "*UB;"
  parameter {
    name: "pStubMsg"
    type: "*R_MIDL_STUB_MESSAGE;;"
  }
  parameter {
    name: "ppMemory"
    type: "**UB;;"
  }
  parameter {
    name: "pFormat"
    type: "*cUB;"
  }
  parameter {
    name: "fMustAlloc"
    type: "UB"
  }
}
function {
  name: "NdrSimpleStructBufferSize"
  return_type: "V"
  parameter {
    name: "pStubMsg"
    type: "*R_MIDL_STUB_MESSAGE;;"
  }
  parameter {
    name: "pMemory"
    type: "*UB;"
  }
  parameter {
    name: "pFormat"
    type: "*cUB;"
  }
}
function {
  name: "NdrSimpleStructMemorySize"
  return_type: "UI"
  parameter {
    name: "pStubMsg"
    type: "*R_MIDL_STUB_MESSAGE;;"
  }
  parameter {
    name: "pFormat"
    type: "*cUB;"
  }
}
function {
  name: "NdrSimpleStructFree"
  return_type: "V"
  parameter {
    name: "pStubMsg"
    type: "*R_MIDL_STUB_MESSAGE;;"
  }
  parameter {
    name: "pMemory"
    type: "*UB;"
  }
  parameter {
    name: "pFormat"
    type: "*cUB;"
  }
}
function {
  name: "NdrConformantStructMarshall"
  return_type: "*UB;"
  parameter {
    name: "pStubMsg"
    type: "*R_MIDL_STUB_MESSAGE;;"
  }
  parameter {
    name: "pMemory"
    type: "*UB;"
  }
  parameter {
    name: "pFormat"
    type: "*cUB;"
  }
}
function {
  name: "NdrConformantStructUnmarshall"
  return_type: "*UB;"
  parameter {
    name: "pStubMsg"
    type: "*R_MIDL_STUB_MESSAGE;;"
  }
  parameter {
    name: "ppMemory"
    type: "**UB;;"
  }
  parameter {
    name: "pFormat"
    type: "*cUB;"
  }
  parameter {
    name: "fMustAlloc"
    type: "UB"
  }
}
function {
  name: "NdrConformantStructBufferSize"
  return_type: "V"
  parameter {
    name: "pStubMsg"
    type: "*R_MIDL_STUB_MESSAGE;;"
  }
  parameter {
    name: "pMemory"
    type: "*UB;"
  }
  parameter {
    name: "pFormat"
    type: "*cUB;"
  }
}
function {
  name: "NdrConformantStructMemorySize"
  return_type: "UI"
  parameter {
    name: "pStubMsg"
    type: "*R_MIDL_STUB_MESSAGE;;"
  }
  parameter {
    name: "pFormat"
    type: "*cUB;"
  }
}
function {
  name: "NdrConformantStructFree"
  return_type: "V"
  parameter {
    name: "pStubMsg"
    type: "*R_MIDL_STUB_MESSAGE;;"
  }
  parameter {
    name: "pMemory"
    type: "*UB;"
  }
  parameter {
    name: "pFormat"
    type: "*cUB;"
  }
}
function {
  name: "NdrConformantVaryingStructMarshall"
  return_type: "*UB;"
  parameter {
    name: "pStubMsg"
    type: "*R_MIDL_STUB_MESSAGE;;"
  }
  parameter {
    name: "pMemory"
    type: "*UB;"
  }
  parameter {
    name: "pFormat"
    type: "*cUB;"
  }
}
function {
  name: "NdrConformantVaryingStructUnmarshall"
  return_type: "*UB;"
  parameter {
    name: "pStubMsg"
    type: "*R_MIDL_STUB_MESSAGE;;"
  }
  parameter {
    name: "ppMemory"
    type: "**UB;;"
  }
  parameter {
    name: "pFormat"
    type: "*cUB;"
  }
  parameter {
    name: "fMustAlloc"
    type: "UB"
  }
}
function {
  name: "NdrConformantVaryingStructBufferSize"
  return_type: "V"
  parameter {
    name: "pStubMsg"
    type: "*R_MIDL_STUB_MESSAGE;;"
  }
  parameter {
    name: "pMemory"
    type: "*UB;"
  }
  parameter {
    name: "pFormat"
    type: "*cUB;"
  }
}
function {
  name: "NdrConformantVaryingStructMemorySize"
  return_type: "UI"
  parameter {
    name: "pStubMsg"
    type: "*R_MIDL_STUB_MESSAGE;;"
  }
  parameter {
    name: "pFormat"
    type: "*cUB;"
  }
}
function {
  name: "NdrConformantVaryingStructFree"
  return_type: "V"
  parameter {
    name: "pStubMsg"
    type: "*R_MIDL_STUB_MESSAGE;;"
  }
  parameter {
    name: "pMemory"
    type: "*UB;"
  }
  parameter {
    name: "pFormat"
    type: "*cUB;"
  }
}
function {
  name: "NdrComplexStructMarshall"
  return_type: "*UB;"
  parameter {
    name: "pStubMsg"
    type: "*R_MIDL_STUB_MESSAGE;;"
  }
  parameter {
    name: "pMemory"
    type: "*UB;"
  }
  parameter {
    name: "pFormat"
    type: "*cUB;"
  }
}
function {
  name: "NdrComplexStructUnmarshall"
  return_type: "*UB;"
  parameter {
    name: "pStubMsg"
    type: "*R_MIDL_STUB_MESSAGE;;"
  }
  parameter {
    name: "ppMemory"
    type: "**UB;;"
  }
  parameter {
    name: "pFormat"
    type: "*cUB;"
  }
  parameter {
    name: "fMustAlloc"
    type: "UB"
  }
}
function {
  name: "NdrComplexStructBufferSize"
  return_type: "V"
  parameter {
    name: "pStubMsg"
    type: "*R_MIDL_STUB_MESSAGE;;"
  }
  parameter {
    name: "pMemory"
    type: "*UB;"
  }
  parameter {
    name: "pFormat"
    type: "*cUB;"
  }
}
function {
  name: "NdrComplexStructMemorySize"
  return_type: "UI"
  parameter {
    name: "pStubMsg"
    type: "*R_MIDL_STUB_MESSAGE;;"
  }
  parameter {
    name: "pFormat"
    type: "*cUB;"
  }
}
function {
  name: "NdrComplexStructFree"
  return_type: "V"
  parameter {
    name: "pStubMsg"
    type: "*R_MIDL_STUB_MESSAGE;;"
  }
  parameter {
    name: "pMemory"
    type: "*UB;"
  }
  parameter {
    name: "pFormat"
    type: "*cUB;"
  }
}
function {
  name: "NdrFixedArrayMarshall"
  return_type: "*UB;"
  parameter {
    name: "pStubMsg"
    type: "*R_MIDL_STUB_MESSAGE;;"
  }
  parameter {
    name: "pMemory"
    type: "*UB;"
  }
  parameter {
    name: "pFormat"
    type: "*cUB;"
  }
}
function {
  name: "NdrFixedArrayUnmarshall"
  return_type: "*UB;"
  parameter {
    name: "pStubMsg"
    type: "*R_MIDL_STUB_MESSAGE;;"
  }
  parameter {
    name: "ppMemory"
    type: "**UB;;"
  }
  parameter {
    name: "pFormat"
    type: "*cUB;"
  }
  parameter {
    name: "fMustAlloc"
    type: "UB"
  }
}
function {
  name: "NdrFixedArrayBufferSize"
  return_type: "V"
  parameter {
    name: "pStubMsg"
    type: "*R_MIDL_STUB_MESSAGE;;"
  }
  parameter {
    name: "pMemory"
    type: "*UB;"
  }
  parameter {
    name: "pFormat"
    type: "*cUB;"
  }
}
function {
  name: "NdrFixedArrayMemorySize"
  return_type: "UI"
  parameter {
    name: "pStubMsg"
    type: "*R_MIDL_STUB_MESSAGE;;"
  }
  parameter {
    name: "pFormat"
    type: "*cUB;"
  }
}
function {
  name: "NdrFixedArrayFree"
  return_type: "V"
  parameter {
    name: "pStubMsg"
    type: "*R_MIDL_STUB_MESSAGE;;"
  }
  parameter {
    name: "pMemory"
    type: "*UB;"
  }
  parameter {
    name: "pFormat"
    type: "*cUB;"
  }
}
function {
  name: "NdrConformantArrayMarshall"
  return_type: "*UB;"
  parameter {
    name: "pStubMsg"
    type: "*R_MIDL_STUB_MESSAGE;;"
  }
  parameter {
    name: "pMemory"
    type: "*UB;"
  }
  parameter {
    name: "pFormat"
    type: "*cUB;"
  }
}
function {
  name: "NdrConformantArrayUnmarshall"
  return_type: "*UB;"
  parameter {
    name: "pStubMsg"
    type: "*R_MIDL_STUB_MESSAGE;;"
  }
  parameter {
    name: "ppMemory"
    type: "**UB;;"
  }
  parameter {
    name: "pFormat"
    type: "*cUB;"
  }
  parameter {
    name: "fMustAlloc"
    type: "UB"
  }
}
function {
  name: "NdrConformantArrayBufferSize"
  return_type: "V"
  parameter {
    name: "pStubMsg"
    type: "*R_MIDL_STUB_MESSAGE;;"
  }
  parameter {
    name: "pMemory"
    type: "*UB;"
  }
  parameter {
    name: "pFormat"
    type: "*cUB;"
  }
}
function {
  name: "NdrConformantArrayMemorySize"
  return_type: "UI"
  parameter {
    name: "pStubMsg"
    type: "*R_MIDL_STUB_MESSAGE;;"
  }
  parameter {
    name: "pFormat"
    type: "*cUB;"
  }
}
function {
  name: "NdrConformantArrayFree"
  return_type: "V"
  parameter {
    name: "pStubMsg"
    type: "*R_MIDL_STUB_MESSAGE;;"
  }
  parameter {
    name: "pMemory"
    type: "*UB;"
  }
  parameter {
    name: "pFormat"
    type: "*cUB;"
  }
}
function {
  name: "NdrConformantVaryingArrayMarshall"
  return_type: "*UB;"
  parameter {
    name: "pStubMsg"
    type: "*R_MIDL_STUB_MESSAGE;;"
  }
  parameter {
    name: "pMemory"
    type: "*UB;"
  }
  parameter {
    name: "pFormat"
    type: "*cUB;"
  }
}
function {
  name: "NdrConformantVaryingArrayUnmarshall"
  return_type: "*UB;"
  parameter {
    name: "pStubMsg"
    type: "*R_MIDL_STUB_MESSAGE;;"
  }
  parameter {
    name: "ppMemory"
    type: "**UB;;"
  }
  parameter {
    name: "pFormat"
    type: "*cUB;"
  }
  parameter {
    name: "fMustAlloc"
    type: "UB"
  }
}
function {
  name: "NdrConformantVaryingArrayBufferSize"
  return_type: "V"
  parameter {
    name: "pStubMsg"
    type: "*R_MIDL_STUB_MESSAGE;;"
  }
  parameter {
    name: "pMemory"
    type: "*UB;"
  }
  parameter {
    name: "pFormat"
    type: "*cUB;"
  }
}
function {
  name: "NdrConformantVaryingArrayMemorySize"
  return_type: "UI"
  parameter {
    name: "pStubMsg"
    type: "*R_MIDL_STUB_MESSAGE;;"
  }
  parameter {
    name: "pFormat"
    type: "*cUB;"
  }
}
function {
  name: "NdrConformantVaryingArrayFree"
  return_type: "V"
  parameter {
    name: "pStubMsg"
    type: "*R_MIDL_STUB_MESSAGE;;"
  }
  parameter {
    name: "pMemory"
    type: "*UB;"
  }
  parameter {
    name: "pFormat"
    type: "*cUB;"
  }
}
function {
  name: "NdrVaryingArrayMarshall"
  return_type: "*UB;"
  parameter {
    name: "pStubMsg"
    type: "*R_MIDL_STUB_MESSAGE;;"
  }
  parameter {
    name: "pMemory"
    type: "*UB;"
  }
  parameter {
    name: "pFormat"
    type: "*cUB;"
  }
}
function {
  name: "NdrVaryingArrayUnmarshall"
  return_type: "*UB;"
  parameter {
    name: "pStubMsg"
    type: "*R_MIDL_STUB_MESSAGE;;"
  }
  parameter {
    name: "ppMemory"
    type: "**UB;;"
  }
  parameter {
    name: "pFormat"
    type: "*cUB;"
  }
  parameter {
    name: "fMustAlloc"
    type: "UB"
  }
}
function {
  name: "NdrVaryingArrayBufferSize"
  return_type: "V"
  parameter {
    name: "pStubMsg"
    type: "*R_MIDL_STUB_MESSAGE;;"
  }
  parameter {
    name: "pMemory"
    type: "*UB;"
  }
  parameter {
    name: "pFormat"
    type: "*cUB;"
  }
}
function {
  name: "NdrVaryingArrayMemorySize"
  return_type: "UI"
  parameter {
    name: "pStubMsg"
    type: "*R_MIDL_STUB_MESSAGE;;"
  }
  parameter {
    name: "pFormat"
    type: "*cUB;"
  }
}
function {
  name: "NdrVaryingArrayFree"
  return_type: "V"
  parameter {
    name: "pStubMsg"
    type: "*R_MIDL_STUB_MESSAGE;;"
  }
  parameter {
    name: "pMemory"
    type: "*UB;"
  }
  parameter {
    name: "pFormat"
    type: "*cUB;"
  }
}
function {
  name: "NdrComplexArrayMarshall"
  return_type: "*UB;"
  parameter {
    name: "pStubMsg"
    type: "*R_MIDL_STUB_MESSAGE;;"
  }
  parameter {
    name: "pMemory"
    type: "*UB;"
  }
  parameter {
    name: "pFormat"
    type: "*cUB;"
  }
}
function {
  name: "NdrComplexArrayUnmarshall"
  return_type: "*UB;"
  parameter {
    name: "pStubMsg"
    type: "*R_MIDL_STUB_MESSAGE;;"
  }
  parameter {
    name: "ppMemory"
    type: "**UB;;"
  }
  parameter {
    name: "pFormat"
    type: "*cUB;"
  }
  parameter {
    name: "fMustAlloc"
    type: "UB"
  }
}
function {
  name: "NdrComplexArrayBufferSize"
  return_type: "V"
  parameter {
    name: "pStubMsg"
    type: "*R_MIDL_STUB_MESSAGE;;"
  }
  parameter {
    name: "pMemory"
    type: "*UB;"
  }
  parameter {
    name: "pFormat"
    type: "*cUB;"
  }
}
function {
  name: "NdrComplexArrayMemorySize"
  return_type: "UI"
  parameter {
    name: "pStubMsg"
    type: "*R_MIDL_STUB_MESSAGE;;"
  }
  parameter {
    name: "pFormat"
    type: "*cUB;"
  }
}
function {
  name: "NdrComplexArrayFree"
  return_type: "V"
  parameter {
    name: "pStubMsg"
    type: "*R_MIDL_STUB_MESSAGE;;"
  }
  parameter {
    name: "pMemory"
    type: "*UB;"
  }
  parameter {
    name: "pFormat"
    type: "*cUB;"
  }
}
function {
  name: "NdrEncapsulatedUnionMarshall"
  return_type: "*UB;"
  parameter {
    name: "pStubMsg"
    type: "*R_MIDL_STUB_MESSAGE;;"
  }
  parameter {
    name: "pMemory"
    type: "*UB;"
  }
  parameter {
    name: "pFormat"
    type: "*cUB;"
  }
}
function {
  name: "NdrEncapsulatedUnionUnmarshall"
  return_type: "*UB;"
  parameter {
    name: "pStubMsg"
    type: "*R_MIDL_STUB_MESSAGE;;"
  }
  parameter {
    name: "ppMemory"
    type: "**UB;;"
  }
  parameter {
    name: "pFormat"
    type: "*cUB;"
  }
  parameter {
    name: "fMustAlloc"
    type: "UB"
  }
}
function {
  name: "NdrEncapsulatedUnionBufferSize"
  return_type: "V"
  parameter {
    name: "pStubMsg"
    type: "*R_MIDL_STUB_MESSAGE;;"
  }
  parameter {
    name: "pMemory"
    type: "*UB;"
  }
  parameter {
    name: "pFormat"
    type: "*cUB;"
  }
}
function {
  name: "NdrEncapsulatedUnionMemorySize"
  return_type: "UI"
  parameter {
    name: "pStubMsg"
    type: "*R_MIDL_STUB_MESSAGE;;"
  }
  parameter {
    name: "pFormat"
    type: "*cUB;"
  }
}
function {
  name: "NdrEncapsulatedUnionFree"
  return_type: "V"
  parameter {
    name: "pStubMsg"
    type: "*R_MIDL_STUB_MESSAGE;;"
  }
  parameter {
    name: "pMemory"
    type: "*UB;"
  }
  parameter {
    name: "pFormat"
    type: "*cUB;"
  }
}
function {
  name: "NdrNonEncapsulatedUnionMarshall"
  return_type: "*UB;"
  parameter {
    name: "pStubMsg"
    type: "*R_MIDL_STUB_MESSAGE;;"
  }
  parameter {
    name: "pMemory"
    type: "*UB;"
  }
  parameter {
    name: "pFormat"
    type: "*cUB;"
  }
}
function {
  name: "NdrNonEncapsulatedUnionUnmarshall"
  return_type: "*UB;"
  parameter {
    name: "pStubMsg"
    type: "*R_MIDL_STUB_MESSAGE;;"
  }
  parameter {
    name: "ppMemory"
    type: "**UB;;"
  }
  parameter {
    name: "pFormat"
    type: "*cUB;"
  }
  parameter {
    name: "fMustAlloc"
    type: "UB"
  }
}
function {
  name: "NdrNonEncapsulatedUnionBufferSize"
  return_type: "V"
  parameter {
    name: "pStubMsg"
    type: "*R_MIDL_STUB_MESSAGE;;"
  }
  parameter {
    name: "pMemory"
    type: "*UB;"
  }
  parameter {
    name: "pFormat"
    type: "*cUB;"
  }
}
function {
  name: "NdrNonEncapsulatedUnionMemorySize"
  return_type: "UI"
  parameter {
    name: "pStubMsg"
    type: "*R_MIDL_STUB_MESSAGE;;"
  }
  parameter {
    name: "pFormat"
    type: "*cUB;"
  }
}
function {
  name: "NdrNonEncapsulatedUnionFree"
  return_type: "V"
  parameter {
    name: "pStubMsg"
    type: "*R_MIDL_STUB_MESSAGE;;"
  }
  parameter {
    name: "pMemory"
    type: "*UB;"
  }
  parameter {
    name: "pFormat"
    type: "*cUB;"
  }
}
function {
  name: "NdrXmitOrRepAsMarshall"
  return_type: "*UB;"
  parameter {
    name: "pStubMsg"
    type: "*R_MIDL_STUB_MESSAGE;;"
  }
  parameter {
    name: "pMemory"
    type: "*UB;"
  }
  parameter {
    name: "pFormat"
    type: "*cUB;"
  }
}
function {
  name: "NdrXmitOrRepAsUnmarshall"
  return_type: "*UB;"
  parameter {
    name: "pStubMsg"
    type: "*R_MIDL_STUB_MESSAGE;;"
  }
  parameter {
    name: "ppMemory"
    type: "**UB;;"
  }
  parameter {
    name: "pFormat"
    type: "*cUB;"
  }
  parameter {
    name: "fMustAlloc"
    type: "UB"
  }
}
function {
  name: "NdrXmitOrRepAsBufferSize"
  return_type: "V"
  parameter {
    name: "pStubMsg"
    type: "*R_MIDL_STUB_MESSAGE;;"
  }
  parameter {
    name: "pMemory"
    type: "*UB;"
  }
  parameter {
    name: "pFormat"
    type: "*cUB;"
  }
}
function {
  name: "NdrXmitOrRepAsMemorySize"
  return_type: "UI"
  parameter {
    name: "pStubMsg"
    type: "*R_MIDL_STUB_MESSAGE;;"
  }
  parameter {
    name: "pFormat"
    type: "*cUB;"
  }
}
function {
  name: "NdrXmitOrRepAsFree"
  return_type: "V"
  parameter {
    name: "pStubMsg"
    type: "*R_MIDL_STUB_MESSAGE;;"
  }
  parameter {
    name: "pMemory"
    type: "*UB;"
  }
  parameter {
    name: "pFormat"
    type: "*cUB;"
  }
}
function {
  name: "NdrUserMarshalMarshall"
  return_type: "*UB;"
  parameter {
    name: "pStubMsg"
    type: "*R_MIDL_STUB_MESSAGE;;"
  }
  parameter {
    name: "pMemory"
    type: "*UB;"
  }
  parameter {
    name: "pFormat"
    type: "*cUB;"
  }
}
function {
  name: "NdrUserMarshalUnmarshall"
  return_type: "*UB;"
  parameter {
    name: "pStubMsg"
    type: "*R_MIDL_STUB_MESSAGE;;"
  }
  parameter {
    name: "ppMemory"
    type: "**UB;;"
  }
  parameter {
    name: "pFormat"
    type: "*cUB;"
  }
  parameter {
    name: "fMustAlloc"
    type: "UB"
  }
}
function {
  name: "NdrUserMarshalBufferSize"
  return_type: "V"
  parameter {
    name: "pStubMsg"
    type: "*R_MIDL_STUB_MESSAGE;;"
  }
  parameter {
    name: "pMemory"
    type: "*UB;"
  }
  parameter {
    name: "pFormat"
    type: "*cUB;"
  }
}
function {
  name: "NdrUserMarshalMemorySize"
  return_type: "UI"
  parameter {
    name: "pStubMsg"
    type: "*R_MIDL_STUB_MESSAGE;;"
  }
  parameter {
    name: "pFormat"
    type: "*cUB;"
  }
}
function {
  name: "NdrUserMarshalFree"
  return_type: "V"
  parameter {
    name: "pStubMsg"
    type: "*R_MIDL_STUB_MESSAGE;;"
  }
  parameter {
    name: "pMemory"
    type: "*UB;"
  }
  parameter {
    name: "pFormat"
    type: "*cUB;"
  }
}
function {
  name: "NdrInterfacePointerMarshall"
  return_type: "*UB;"
  parameter {
    name: "pStubMsg"
    type: "*R_MIDL_STUB_MESSAGE;;"
  }
  parameter {
    name: "pMemory"
    type: "*UB;"
  }
  parameter {
    name: "pFormat"
    type: "*cUB;"
  }
}
function {
  name: "NdrInterfacePointerUnmarshall"
  return_type: "*UB;"
  parameter {
    name: "pStubMsg"
    type: "*R_MIDL_STUB_MESSAGE;;"
  }
  parameter {
    name: "ppMemory"
    type: "**UB;;"
  }
  parameter {
    name: "pFormat"
    type: "*cUB;"
  }
  parameter {
    name: "fMustAlloc"
    type: "UB"
  }
}
function {
  name: "NdrInterfacePointerBufferSize"
  return_type: "V"
  parameter {
    name: "pStubMsg"
    type: "*R_MIDL_STUB_MESSAGE;;"
  }
  parameter {
    name: "pMemory"
    type: "*UB;"
  }
  parameter {
    name: "pFormat"
    type: "*cUB;"
  }
}
function {
  name: "NdrInterfacePointerMemorySize"
  return_type: "UI"
  parameter {
    name: "pStubMsg"
    type: "*R_MIDL_STUB_MESSAGE;;"
  }
  parameter {
    name: "pFormat"
    type: "*cUB;"
  }
}
function {
  name: "NdrInterfacePointerFree"
  return_type: "V"
  parameter {
    name: "pStubMsg"
    type: "*R_MIDL_STUB_MESSAGE;;"
  }
  parameter {
    name: "pMemory"
    type: "*UB;"
  }
  parameter {
    name: "pFormat"
    type: "*cUB;"
  }
}
function {
  name: "NdrConformantStringMarshall"
  return_type: "*UB;"
  parameter {
    name: "pStubMsg"
    type: "*R_MIDL_STUB_MESSAGE;;"
  }
  parameter {
    name: "pMemory"
    type: "*UB;"
  }
  parameter {
    name: "pFormat"
    type: "*cUB;"
  }
}
function {
  name: "NdrConformantStringUnmarshall"
  return_type: "*UB;"
  parameter {
    name: "pStubMsg"
    type: "*R_MIDL_STUB_MESSAGE;;"
  }
  parameter {
    name: "ppMemory"
    type: "**UB;;"
  }
  parameter {
    name: "pFormat"
    type: "*cUB;"
  }
  parameter {
    name: "fMustAlloc"
    type: "UB"
  }
}
function {
  name: "NdrConformantStringBufferSize"
  return_type: "V"
  parameter {
    name: "pStubMsg"
    type: "*R_MIDL_STUB_MESSAGE;;"
  }
  parameter {
    name: "pMemory"
    type: "*UB;"
  }
  parameter {
    name: "pFormat"
    type: "*cUB;"
  }
}
function {
  name: "NdrConformantStringMemorySize"
  return_type: "UI"
  parameter {
    name: "pStubMsg"
    type: "*R_MIDL_STUB_MESSAGE;;"
  }
  parameter {
    name: "pFormat"
    type: "*cUB;"
  }
}
function {
  name: "NdrNonConformantStringMarshall"
  return_type: "*UB;"
  parameter {
    name: "pStubMsg"
    type: "*R_MIDL_STUB_MESSAGE;;"
  }
  parameter {
    name: "pMemory"
    type: "*UB;"
  }
  parameter {
    name: "pFormat"
    type: "*cUB;"
  }
}
function {
  name: "NdrNonConformantStringUnmarshall"
  return_type: "*UB;"
  parameter {
    name: "pStubMsg"
    type: "*R_MIDL_STUB_MESSAGE;;"
  }
  parameter {
    name: "ppMemory"
    type: "**UB;;"
  }
  parameter {
    name: "pFormat"
    type: "*cUB;"
  }
  parameter {
    name: "fMustAlloc"
    type: "UB"
  }
}
function {
  name: "NdrNonConformantStringBufferSize"
  return_type: "V"
  parameter {
    name: "pStubMsg"
    type: "*R_MIDL_STUB_MESSAGE;;"
  }
  parameter {
    name: "pMemory"
    type: "*UB;"
  }
  parameter {
    name: "pFormat"
    type: "*cUB;"
  }
}
function {
  name: "NdrNonConformantStringMemorySize"
  return_type: "UI"
  parameter {
    name: "pStubMsg"
    type: "*R_MIDL_STUB_MESSAGE;;"
  }
  parameter {
    name: "pFormat"
    type: "*cUB;"
  }
}
function {
  name: "NdrCorrelationInitialize"
  return_type: "V"
  parameter {
    name: "pStubMsg"
    type: "*R_MIDL_STUB_MESSAGE;;"
  }
  parameter {
    name: "pMemory"
    type: "*V;"
  }
  parameter {
    name: "CacheSize"
    type: "UI"
  }
  parameter {
    name: "flags"
    type: "UI"
  }
}
function {
  name: "NdrCorrelationPass"
  return_type: "V"
  parameter {
    name: "pStubMsg"
    type: "*R_MIDL_STUB_MESSAGE;;"
  }
}
function {
  name: "NdrCorrelationFree"
  return_type: "V"
  parameter {
    name: "pStubMsg"
    type: "*R_MIDL_STUB_MESSAGE;;"
  }
}
function {
  name: "NdrConvert2"
  return_type: "V"
  parameter {
    name: "pStubMsg"
    type: "*R_MIDL_STUB_MESSAGE;;"
  }
  parameter {
    name: "pFormat"
    type: "*cUB;"
  }
  parameter {
    name: "NumberParams"
    type: "I"
  }
}
function {
  name: "NdrConvert"
  return_type: "V"
  parameter {
    name: "pStubMsg"
    type: "*R_MIDL_STUB_MESSAGE;;"
  }
  parameter {
    name: "pFormat"
    type: "*cUB;"
  }
}
function {
  name: "NdrUserMarshalSimpleTypeConvert"
  return_type: "*UB;"
  parameter {
    name: "pFlags"
    type: "*UI;"
  }
  parameter {
    name: "pBuffer"
    type: "*UB;"
  }
  parameter {
    name: "FormatChar"
    type: "UB"
  }
}
function {
  name: "NdrClientCall2"
  return_type: "Runion _CLIENT_CALL_RETURN;"
  parameter {
    name: "pStubDescriptor"
    type: "*cR_MIDL_STUB_DESC;;"
  }
  parameter {
    name: "pFormat"
    type: "*cUB;"
  }
}
function {
  name: "NdrClientCall"
  return_type: "Runion _CLIENT_CALL_RETURN;"
  parameter {
    name: "pStubDescriptor"
    type: "*cR_MIDL_STUB_DESC;;"
  }
  parameter {
    name: "pFormat"
    type: "*cUB;"
  }
}
function {
  name: "NdrAsyncClientCall"
  return_type: "Runion _CLIENT_CALL_RETURN;"
  parameter {
    name: "pStubDescriptor"
    type: "*cR_MIDL_STUB_DESC;;"
  }
  parameter {
    name: "pFormat"
    type: "*cUB;"
  }
}
function {
  name: "NdrDcomAsyncClientCall"
  return_type: "Runion _CLIENT_CALL_RETURN;"
  parameter {
    name: "pStubDescriptor"
    type: "*cR_MIDL_STUB_DESC;;"
  }
  parameter {
    name: "pFormat"
    type: "*cUB;"
  }
}
function {
  name: "NdrServerCall2"
  return_type: "V"
  parameter {
    name: "pRpcMsg"
    type: "*R_RPC_MESSAGE;;"
  }
}
function {
  name: "NdrServerCall"
  return_type: "V"
  parameter {
    name: "pRpcMsg"
    type: "*R_RPC_MESSAGE;;"
  }
}
function {
  name: "NdrAsyncServerCall"
  return_type: "V"
  parameter {
    name: "pRpcMsg"
    type: "*R_RPC_MESSAGE;;"
  }
}
function {
  name: "NdrStubCall2"
  return_type: "I"
  parameter {
    name: "pThis"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pChannel"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMsg"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "NdrStubCall"
  return_type: "I"
  parameter {
    name: "pThis"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pChannel"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMsg"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "NdrAsyncStubCall"
  return_type: "I"
  parameter {
    name: "pThis"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pChannel"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMsg"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "NdrDcomAsyncStubCall"
  return_type: "I"
  parameter {
    name: "pThis"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pChannel"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMsg"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "NdrAllocate"
  return_type: "*V;"
  parameter {
    name: "pStubMsg"
    type: "*R_MIDL_STUB_MESSAGE;;"
  }
  parameter {
    name: "Len"
    type: "UI"
  }
}
function {
  name: "NdrClearOutParameters"
  return_type: "V"
  parameter {
    name: "pStubMsg"
    type: "*R_MIDL_STUB_MESSAGE;;"
  }
  parameter {
    name: "pFormat"
    type: "*cUB;"
  }
  parameter {
    name: "ArgAddr"
    type: "*V;"
  }
}
function {
  name: "NdrMapCommAndFaultStatus"
  return_type: "I"
  parameter {
    name: "pStubMsg"
    type: "*R_MIDL_STUB_MESSAGE;;"
  }
  parameter {
    name: "pCommStatus"
    type: "*UI;"
  }
  parameter {
    name: "pFaultStatus"
    type: "*UI;"
  }
  parameter {
    name: "Status_"
    type: "I"
  }
}
function {
  name: "NdrOleAllocate"
  return_type: "*V;"
  parameter {
    name: "Size"
    type: "UI"
  }
}
function {
  name: "NdrOleFree"
  return_type: "V"
  parameter {
    name: "NodeToFree"
    type: "*V;"
  }
}
function {
  name: "NdrClientInitialize"
  return_type: "V"
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pStubMsg"
    type: "*R_MIDL_STUB_MESSAGE;;"
  }
  parameter {
    name: "pStubDesc"
    type: "*cR_MIDL_STUB_DESC;;"
  }
  parameter {
    name: "ProcNum"
    type: "UI"
  }
}
function {
  name: "NdrClientInitializeNew"
  return_type: "V"
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pStubMsg"
    type: "*R_MIDL_STUB_MESSAGE;;"
  }
  parameter {
    name: "pStubDesc"
    type: "*cR_MIDL_STUB_DESC;;"
  }
  parameter {
    name: "ProcNum"
    type: "UI"
  }
}
function {
  name: "NdrServerInitialize"
  return_type: "*UB;"
  parameter {
    name: "pRpcMsg"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pStubMsg"
    type: "*R_MIDL_STUB_MESSAGE;;"
  }
  parameter {
    name: "pStubDesc"
    type: "*cR_MIDL_STUB_DESC;;"
  }
}
function {
  name: "NdrServerInitializeNew"
  return_type: "*UB;"
  parameter {
    name: "pRpcMsg"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pStubMsg"
    type: "*R_MIDL_STUB_MESSAGE;;"
  }
  parameter {
    name: "pStubDesc"
    type: "*cR_MIDL_STUB_DESC;;"
  }
}
function {
  name: "NdrServerInitializeUnmarshall"
  return_type: "*UB;"
  parameter {
    name: "pStubMsg"
    type: "*R_MIDL_STUB_MESSAGE;;"
  }
  parameter {
    name: "pStubDesc"
    type: "*cR_MIDL_STUB_DESC;;"
  }
  parameter {
    name: "pRpcMsg"
    type: "*R_RPC_MESSAGE;;"
  }
}
function {
  name: "NdrServerInitializeMarshall"
  return_type: "V"
  parameter {
    name: "pRpcMsg"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pStubMsg"
    type: "*R_MIDL_STUB_MESSAGE;;"
  }
}
function {
  name: "NdrServerMarshall"
  return_type: "V"
  parameter {
    name: "pThis"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pChannel"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pStubMsg"
    type: "*R_MIDL_STUB_MESSAGE;;"
  }
  parameter {
    name: "pFormat"
    type: "*cUB;"
  }
}
function {
  name: "NdrServerUnmarshall"
  return_type: "V"
  parameter {
    name: "pChannel"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMsg"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pStubMsg"
    type: "*R_MIDL_STUB_MESSAGE;;"
  }
  parameter {
    name: "pStubDesc"
    type: "*cR_MIDL_STUB_DESC;;"
  }
  parameter {
    name: "pFormat"
    type: "*cUB;"
  }
  parameter {
    name: "pParamList"
    type: "*V;"
  }
}
function {
  name: "NdrGetBuffer"
  return_type: "*UB;"
  parameter {
    name: "stubmsg"
    type: "*R_MIDL_STUB_MESSAGE;;"
  }
  parameter {
    name: "buflen"
    type: "UI"
  }
  parameter {
    name: "handle"
    type: "*V;"
  }
}
function {
  name: "NdrFreeBuffer"
  return_type: "V"
  parameter {
    name: "pStubMsg"
    type: "*R_MIDL_STUB_MESSAGE;;"
  }
}
function {
  name: "NdrSendReceive"
  return_type: "*UB;"
  parameter {
    name: "stubmsg"
    type: "*R_MIDL_STUB_MESSAGE;;"
  }
  parameter {
    name: "buffer"
    type: "*UB;"
  }
}
function {
  name: "NdrNsGetBuffer"
  return_type: "*UB;"
  parameter {
    name: "pStubMsg"
    type: "*R_MIDL_STUB_MESSAGE;;"
  }
  parameter {
    name: "BufferLength"
    type: "UI"
  }
  parameter {
    name: "Handle"
    type: "*V;"
  }
}
function {
  name: "NdrNsSendReceive"
  return_type: "*UB;"
  parameter {
    name: "pStubMsg"
    type: "*R_MIDL_STUB_MESSAGE;;"
  }
  parameter {
    name: "pBufferEnd"
    type: "*UB;"
  }
  parameter {
    name: "pAutoHandle"
    type: "**V;;"
  }
}
function {
  name: "NdrGetDcomProtocolVersion"
  return_type: "I"
  parameter {
    name: "pStubMsg"
    type: "*R_MIDL_STUB_MESSAGE;;"
  }
  parameter {
    name: "pVersion"
    type: "*R_RPC_VERSION;;"
  }
}
function {
  name: "NdrFullPointerXlatInit"
  return_type: "*R_FULL_PTR_XLAT_TABLES;;"
  parameter {
    name: "NumberOfPointers"
    type: "UI"
  }
  parameter {
    name: "XlatSide"
    type: "X(Enum.XLAT_SIDE)"
  }
}
function {
  name: "NdrFullPointerXlatFree"
  return_type: "V"
  parameter {
    name: "pXlatTables"
    type: "*R_FULL_PTR_XLAT_TABLES;;"
  }
}
function {
  name: "NdrFullPointerQueryPointer"
  return_type: "I"
  parameter {
    name: "pXlatTables"
    type: "*R_FULL_PTR_XLAT_TABLES;;"
  }
  parameter {
    name: "pPointer"
    type: "*V;"
  }
  parameter {
    name: "QueryType"
    type: "UB"
  }
  parameter {
    name: "pRefId"
    type: "*UI;"
  }
}
function {
  name: "NdrFullPointerQueryRefId"
  return_type: "I"
  parameter {
    name: "pXlatTables"
    type: "*R_FULL_PTR_XLAT_TABLES;;"
  }
  parameter {
    name: "RefId"
    type: "UI"
  }
  parameter {
    name: "QueryType"
    type: "UB"
  }
  parameter {
    name: "ppPointer"
    type: "**V;;"
  }
}
function {
  name: "NdrFullPointerInsertRefId"
  return_type: "V"
  parameter {
    name: "pXlatTables"
    type: "*R_FULL_PTR_XLAT_TABLES;;"
  }
  parameter {
    name: "RefId"
    type: "UI"
  }
  parameter {
    name: "pPointer"
    type: "*V;"
  }
}
function {
  name: "NdrFullPointerFree"
  return_type: "I"
  parameter {
    name: "pXlatTables"
    type: "*R_FULL_PTR_XLAT_TABLES;;"
  }
  parameter {
    name: "Pointer"
    type: "*V;"
  }
}
function {
  name: "NdrRpcSsEnableAllocate"
  return_type: "V"
  parameter {
    name: "pMessage"
    type: "*R_MIDL_STUB_MESSAGE;;"
  }
}
function {
  name: "NdrRpcSsDisableAllocate"
  return_type: "V"
  parameter {
    name: "pMessage"
    type: "*R_MIDL_STUB_MESSAGE;;"
  }
}
function {
  name: "NdrRpcSmSetClientToOsf"
  return_type: "V"
  parameter {
    name: "pMessage"
    type: "*R_MIDL_STUB_MESSAGE;;"
  }
}
function {
  name: "NdrRpcSmClientAllocate"
  return_type: "*V;"
  parameter {
    name: "Size"
    type: "UI"
  }
}
function {
  name: "NdrRpcSmClientFree"
  return_type: "V"
  parameter {
    name: "NodeToFree"
    type: "*V;"
  }
}
function {
  name: "NdrRpcSsDefaultAllocate"
  return_type: "*V;"
  parameter {
    name: "Size"
    type: "UI"
  }
}
function {
  name: "NdrRpcSsDefaultFree"
  return_type: "V"
  parameter {
    name: "NodeToFree"
    type: "*V;"
  }
}
function {
  name: "NdrGetUserMarshalInfo"
  return_type: "I"
  parameter {
    name: "pFlags"
    type: "*UI;"
  }
  parameter {
    name: "InformationLevel"
    type: "UI"
  }
  parameter {
    name: "pMarshalInfo"
    type: "*R_NDR_USER_MARSHAL_INFO;;"
  }
}
function {
  name: "IUnknown_QueryInterface_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIUnknown;;"
  }
  parameter {
    name: "riid"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "ppvObject"
    type: "**V;;"
  }
}
function {
  name: "IUnknown_QueryInterface_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IUnknown_AddRef_Proxy"
  return_type: "UI"
  parameter {
    name: "This"
    type: "*RIUnknown;;"
  }
}
function {
  name: "IUnknown_AddRef_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IUnknown_Release_Proxy"
  return_type: "UI"
  parameter {
    name: "This"
    type: "*RIUnknown;;"
  }
}
function {
  name: "IUnknown_Release_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IClassFactory_RemoteCreateInstance_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIClassFactory;;"
  }
  parameter {
    name: "riid"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "ppvObject"
    type: "**RIUnknown;;;"
  }
}
function {
  name: "IClassFactory_RemoteCreateInstance_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IClassFactory_RemoteLockServer_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIClassFactory;;"
  }
  parameter {
    name: "fLock"
    type: "I"
  }
}
function {
  name: "IClassFactory_RemoteLockServer_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IClassFactory_CreateInstance_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIClassFactory;;"
  }
  parameter {
    name: "pUnkOuter"
    type: "*RIUnknown;;"
  }
  parameter {
    name: "riid"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "ppvObject"
    type: "**V;;"
  }
}
function {
  name: "IClassFactory_CreateInstance_Stub"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIClassFactory;;"
  }
  parameter {
    name: "riid"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "ppvObject"
    type: "**RIUnknown;;;"
  }
}
function {
  name: "IClassFactory_LockServer_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIClassFactory;;"
  }
  parameter {
    name: "fLock"
    type: "I"
  }
}
function {
  name: "IClassFactory_LockServer_Stub"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIClassFactory;;"
  }
  parameter {
    name: "fLock"
    type: "I"
  }
}
function {
  name: "IMarshal_GetUnmarshalClass_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIMarshal;;"
  }
  parameter {
    name: "riid"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "pv"
    type: "*V;"
  }
  parameter {
    name: "dwDestContext"
    type: "UI"
  }
  parameter {
    name: "pvDestContext"
    type: "*V;"
  }
  parameter {
    name: "mshlflags"
    type: "UI"
  }
  parameter {
    name: "pCid"
    type: "*R_GUID;;"
  }
}
function {
  name: "IMarshal_GetUnmarshalClass_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IMarshal_GetMarshalSizeMax_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIMarshal;;"
  }
  parameter {
    name: "riid"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "pv"
    type: "*V;"
  }
  parameter {
    name: "dwDestContext"
    type: "UI"
  }
  parameter {
    name: "pvDestContext"
    type: "*V;"
  }
  parameter {
    name: "mshlflags"
    type: "UI"
  }
  parameter {
    name: "pSize"
    type: "*UI;"
  }
}
function {
  name: "IMarshal_GetMarshalSizeMax_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IMarshal_MarshalInterface_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIMarshal;;"
  }
  parameter {
    name: "pStm"
    type: "*RIStream;;"
  }
  parameter {
    name: "riid"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "pv"
    type: "*V;"
  }
  parameter {
    name: "dwDestContext"
    type: "UI"
  }
  parameter {
    name: "pvDestContext"
    type: "*V;"
  }
  parameter {
    name: "mshlflags"
    type: "UI"
  }
}
function {
  name: "IMarshal_MarshalInterface_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IMarshal_UnmarshalInterface_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIMarshal;;"
  }
  parameter {
    name: "pStm"
    type: "*RIStream;;"
  }
  parameter {
    name: "riid"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "ppv"
    type: "**V;;"
  }
}
function {
  name: "IMarshal_UnmarshalInterface_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IMarshal_ReleaseMarshalData_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIMarshal;;"
  }
  parameter {
    name: "pStm"
    type: "*RIStream;;"
  }
}
function {
  name: "IMarshal_ReleaseMarshalData_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IMarshal_DisconnectObject_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIMarshal;;"
  }
  parameter {
    name: "dwReserved"
    type: "UI"
  }
}
function {
  name: "IMarshal_DisconnectObject_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IStdMarshalInfo_GetClassForHandler_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIStdMarshalInfo;;"
  }
  parameter {
    name: "dwDestContext"
    type: "UI"
  }
  parameter {
    name: "pvDestContext"
    type: "*V;"
  }
  parameter {
    name: "pClsid"
    type: "*R_GUID;;"
  }
}
function {
  name: "IStdMarshalInfo_GetClassForHandler_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IExternalConnection_AddConnection_Proxy"
  return_type: "UI"
  parameter {
    name: "This"
    type: "*RIExternalConnection;;"
  }
  parameter {
    name: "extconn"
    type: "UI"
  }
  parameter {
    name: "reserved"
    type: "UI"
  }
}
function {
  name: "IExternalConnection_AddConnection_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IExternalConnection_ReleaseConnection_Proxy"
  return_type: "UI"
  parameter {
    name: "This"
    type: "*RIExternalConnection;;"
  }
  parameter {
    name: "extconn"
    type: "UI"
  }
  parameter {
    name: "reserved"
    type: "UI"
  }
  parameter {
    name: "fLastReleaseCloses"
    type: "I"
  }
}
function {
  name: "IExternalConnection_ReleaseConnection_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IMultiQI_QueryMultipleInterfaces_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIMultiQI;;"
  }
  parameter {
    name: "cMQIs"
    type: "UI"
  }
  parameter {
    name: "pMQIs"
    type: "*RtagMULTI_QI;;"
  }
}
function {
  name: "IMultiQI_QueryMultipleInterfaces_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IMalloc_Alloc_Proxy"
  return_type: "*V;"
  parameter {
    name: "This"
    type: "*RIMalloc;;"
  }
  parameter {
    name: "cb"
    type: "UI"
  }
}
function {
  name: "IMalloc_Alloc_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IMalloc_Realloc_Proxy"
  return_type: "*V;"
  parameter {
    name: "This"
    type: "*RIMalloc;;"
  }
  parameter {
    name: "pv"
    type: "*V;"
  }
  parameter {
    name: "cb"
    type: "UI"
  }
}
function {
  name: "IMalloc_Realloc_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IMalloc_Free_Proxy"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIMalloc;;"
  }
  parameter {
    name: "pv"
    type: "*V;"
  }
}
function {
  name: "IMalloc_Free_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IMalloc_GetSize_Proxy"
  return_type: "UI"
  parameter {
    name: "This"
    type: "*RIMalloc;;"
  }
  parameter {
    name: "pv"
    type: "*V;"
  }
}
function {
  name: "IMalloc_GetSize_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IMalloc_DidAlloc_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIMalloc;;"
  }
  parameter {
    name: "pv"
    type: "*V;"
  }
}
function {
  name: "IMalloc_DidAlloc_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IMalloc_HeapMinimize_Proxy"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIMalloc;;"
  }
}
function {
  name: "IMalloc_HeapMinimize_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IMallocSpy_PreAlloc_Proxy"
  return_type: "UI"
  parameter {
    name: "This"
    type: "*RIMallocSpy;;"
  }
  parameter {
    name: "cbRequest"
    type: "UI"
  }
}
function {
  name: "IMallocSpy_PreAlloc_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IMallocSpy_PostAlloc_Proxy"
  return_type: "*V;"
  parameter {
    name: "This"
    type: "*RIMallocSpy;;"
  }
  parameter {
    name: "pActual"
    type: "*V;"
  }
}
function {
  name: "IMallocSpy_PostAlloc_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IMallocSpy_PreFree_Proxy"
  return_type: "*V;"
  parameter {
    name: "This"
    type: "*RIMallocSpy;;"
  }
  parameter {
    name: "pRequest"
    type: "*V;"
  }
  parameter {
    name: "fSpyed"
    type: "I"
  }
}
function {
  name: "IMallocSpy_PreFree_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IMallocSpy_PostFree_Proxy"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIMallocSpy;;"
  }
  parameter {
    name: "fSpyed"
    type: "I"
  }
}
function {
  name: "IMallocSpy_PostFree_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IMallocSpy_PreRealloc_Proxy"
  return_type: "UI"
  parameter {
    name: "This"
    type: "*RIMallocSpy;;"
  }
  parameter {
    name: "pRequest"
    type: "*V;"
  }
  parameter {
    name: "cbRequest"
    type: "UI"
  }
  parameter {
    name: "ppNewRequest"
    type: "**V;;"
  }
  parameter {
    name: "fSpyed"
    type: "I"
  }
}
function {
  name: "IMallocSpy_PreRealloc_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IMallocSpy_PostRealloc_Proxy"
  return_type: "*V;"
  parameter {
    name: "This"
    type: "*RIMallocSpy;;"
  }
  parameter {
    name: "pActual"
    type: "*V;"
  }
  parameter {
    name: "fSpyed"
    type: "I"
  }
}
function {
  name: "IMallocSpy_PostRealloc_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IMallocSpy_PreGetSize_Proxy"
  return_type: "*V;"
  parameter {
    name: "This"
    type: "*RIMallocSpy;;"
  }
  parameter {
    name: "pRequest"
    type: "*V;"
  }
  parameter {
    name: "fSpyed"
    type: "I"
  }
}
function {
  name: "IMallocSpy_PreGetSize_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IMallocSpy_PostGetSize_Proxy"
  return_type: "UI"
  parameter {
    name: "This"
    type: "*RIMallocSpy;;"
  }
  parameter {
    name: "cbActual"
    type: "UI"
  }
  parameter {
    name: "fSpyed"
    type: "I"
  }
}
function {
  name: "IMallocSpy_PostGetSize_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IMallocSpy_PreDidAlloc_Proxy"
  return_type: "*V;"
  parameter {
    name: "This"
    type: "*RIMallocSpy;;"
  }
  parameter {
    name: "pRequest"
    type: "*V;"
  }
  parameter {
    name: "fSpyed"
    type: "I"
  }
}
function {
  name: "IMallocSpy_PreDidAlloc_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IMallocSpy_PostDidAlloc_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIMallocSpy;;"
  }
  parameter {
    name: "pRequest"
    type: "*V;"
  }
  parameter {
    name: "fSpyed"
    type: "I"
  }
  parameter {
    name: "fActual"
    type: "I"
  }
}
function {
  name: "IMallocSpy_PostDidAlloc_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IMallocSpy_PreHeapMinimize_Proxy"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIMallocSpy;;"
  }
}
function {
  name: "IMallocSpy_PreHeapMinimize_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IMallocSpy_PostHeapMinimize_Proxy"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIMallocSpy;;"
  }
}
function {
  name: "IMallocSpy_PostHeapMinimize_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IInternalUnknown_QueryInternalInterface_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIInternalUnknown;;"
  }
  parameter {
    name: "riid"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "ppv"
    type: "**V;;"
  }
}
function {
  name: "IInternalUnknown_QueryInternalInterface_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IEnumUnknown_RemoteNext_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIEnumUnknown;;"
  }
  parameter {
    name: "celt"
    type: "UI"
  }
  parameter {
    name: "rgelt"
    type: "**RIUnknown;;;"
  }
  parameter {
    name: "pceltFetched"
    type: "*UI;"
  }
}
function {
  name: "IEnumUnknown_RemoteNext_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IEnumUnknown_Skip_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIEnumUnknown;;"
  }
  parameter {
    name: "celt"
    type: "UI"
  }
}
function {
  name: "IEnumUnknown_Skip_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IEnumUnknown_Reset_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIEnumUnknown;;"
  }
}
function {
  name: "IEnumUnknown_Reset_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IEnumUnknown_Clone_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIEnumUnknown;;"
  }
  parameter {
    name: "ppenum"
    type: "**RIEnumUnknown;;;"
  }
}
function {
  name: "IEnumUnknown_Clone_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IEnumUnknown_Next_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIEnumUnknown;;"
  }
  parameter {
    name: "celt"
    type: "UI"
  }
  parameter {
    name: "rgelt"
    type: "**RIUnknown;;;"
  }
  parameter {
    name: "pceltFetched"
    type: "*UI;"
  }
}
function {
  name: "IEnumUnknown_Next_Stub"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIEnumUnknown;;"
  }
  parameter {
    name: "celt"
    type: "UI"
  }
  parameter {
    name: "rgelt"
    type: "**RIUnknown;;;"
  }
  parameter {
    name: "pceltFetched"
    type: "*UI;"
  }
}
function {
  name: "ISurrogate_LoadDllServer_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RISurrogate;;"
  }
  parameter {
    name: "Clsid"
    type: "c*cR_GUID;;"
  }
}
function {
  name: "ISurrogate_LoadDllServer_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ISurrogate_FreeSurrogate_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RISurrogate;;"
  }
}
function {
  name: "ISurrogate_FreeSurrogate_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IGlobalInterfaceTable_RegisterInterfaceInGlobal_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIGlobalInterfaceTable;;"
  }
  parameter {
    name: "pUnk"
    type: "*RIUnknown;;"
  }
  parameter {
    name: "riid"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "pdwCookie"
    type: "*UI;"
  }
}
function {
  name: "IGlobalInterfaceTable_RegisterInterfaceInGlobal_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IGlobalInterfaceTable_RevokeInterfaceFromGlobal_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIGlobalInterfaceTable;;"
  }
  parameter {
    name: "dwCookie"
    type: "UI"
  }
}
function {
  name: "IGlobalInterfaceTable_RevokeInterfaceFromGlobal_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IGlobalInterfaceTable_GetInterfaceFromGlobal_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIGlobalInterfaceTable;;"
  }
  parameter {
    name: "dwCookie"
    type: "UI"
  }
  parameter {
    name: "riid"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "ppv"
    type: "**V;;"
  }
}
function {
  name: "IGlobalInterfaceTable_GetInterfaceFromGlobal_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IBindCtx_RegisterObjectBound_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIBindCtx;;"
  }
  parameter {
    name: "punk"
    type: "*RIUnknown;;"
  }
}
function {
  name: "IBindCtx_RegisterObjectBound_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IBindCtx_RevokeObjectBound_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIBindCtx;;"
  }
  parameter {
    name: "punk"
    type: "*RIUnknown;;"
  }
}
function {
  name: "IBindCtx_RevokeObjectBound_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IBindCtx_ReleaseBoundObjects_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIBindCtx;;"
  }
}
function {
  name: "IBindCtx_ReleaseBoundObjects_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IBindCtx_RemoteSetBindOptions_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIBindCtx;;"
  }
  parameter {
    name: "pbindopts"
    type: "*RtagBIND_OPTS2;;"
  }
}
function {
  name: "IBindCtx_RemoteSetBindOptions_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IBindCtx_RemoteGetBindOptions_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIBindCtx;;"
  }
  parameter {
    name: "pbindopts"
    type: "*RtagBIND_OPTS2;;"
  }
}
function {
  name: "IBindCtx_RemoteGetBindOptions_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IBindCtx_GetRunningObjectTable_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIBindCtx;;"
  }
  parameter {
    name: "pprot"
    type: "**RIRunningObjectTable;;;"
  }
}
function {
  name: "IBindCtx_GetRunningObjectTable_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IBindCtx_RegisterObjectParam_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIBindCtx;;"
  }
  parameter {
    name: "pszKey"
    type: "*US;"
  }
  parameter {
    name: "punk"
    type: "*RIUnknown;;"
  }
}
function {
  name: "IBindCtx_RegisterObjectParam_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IBindCtx_GetObjectParam_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIBindCtx;;"
  }
  parameter {
    name: "pszKey"
    type: "*US;"
  }
  parameter {
    name: "ppunk"
    type: "**RIUnknown;;;"
  }
}
function {
  name: "IBindCtx_GetObjectParam_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IBindCtx_EnumObjectParam_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIBindCtx;;"
  }
  parameter {
    name: "ppenum"
    type: "**RIEnumString;;;"
  }
}
function {
  name: "IBindCtx_EnumObjectParam_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IBindCtx_RevokeObjectParam_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIBindCtx;;"
  }
  parameter {
    name: "pszKey"
    type: "*US;"
  }
}
function {
  name: "IBindCtx_RevokeObjectParam_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IBindCtx_SetBindOptions_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIBindCtx;;"
  }
  parameter {
    name: "pbindopts"
    type: "*RtagBIND_OPTS;;"
  }
}
function {
  name: "IBindCtx_SetBindOptions_Stub"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIBindCtx;;"
  }
  parameter {
    name: "pbindopts"
    type: "*RtagBIND_OPTS2;;"
  }
}
function {
  name: "IBindCtx_GetBindOptions_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIBindCtx;;"
  }
  parameter {
    name: "pbindopts"
    type: "*RtagBIND_OPTS;;"
  }
}
function {
  name: "IBindCtx_GetBindOptions_Stub"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIBindCtx;;"
  }
  parameter {
    name: "pbindopts"
    type: "*RtagBIND_OPTS2;;"
  }
}
function {
  name: "IEnumMoniker_RemoteNext_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIEnumMoniker;;"
  }
  parameter {
    name: "celt"
    type: "UI"
  }
  parameter {
    name: "rgelt"
    type: "**RIMoniker;;;"
  }
  parameter {
    name: "pceltFetched"
    type: "*UI;"
  }
}
function {
  name: "IEnumMoniker_RemoteNext_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IEnumMoniker_Skip_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIEnumMoniker;;"
  }
  parameter {
    name: "celt"
    type: "UI"
  }
}
function {
  name: "IEnumMoniker_Skip_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IEnumMoniker_Reset_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIEnumMoniker;;"
  }
}
function {
  name: "IEnumMoniker_Reset_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IEnumMoniker_Clone_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIEnumMoniker;;"
  }
  parameter {
    name: "ppenum"
    type: "**RIEnumMoniker;;;"
  }
}
function {
  name: "IEnumMoniker_Clone_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IEnumMoniker_Next_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIEnumMoniker;;"
  }
  parameter {
    name: "celt"
    type: "UI"
  }
  parameter {
    name: "rgelt"
    type: "**RIMoniker;;;"
  }
  parameter {
    name: "pceltFetched"
    type: "*UI;"
  }
}
function {
  name: "IEnumMoniker_Next_Stub"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIEnumMoniker;;"
  }
  parameter {
    name: "celt"
    type: "UI"
  }
  parameter {
    name: "rgelt"
    type: "**RIMoniker;;;"
  }
  parameter {
    name: "pceltFetched"
    type: "*UI;"
  }
}
function {
  name: "IRunnableObject_GetRunningClass_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIRunnableObject;;"
  }
  parameter {
    name: "lpClsid"
    type: "*R_GUID;;"
  }
}
function {
  name: "IRunnableObject_GetRunningClass_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IRunnableObject_Run_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIRunnableObject;;"
  }
  parameter {
    name: "pbc"
    type: "*RIBindCtx;;"
  }
}
function {
  name: "IRunnableObject_Run_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IRunnableObject_RemoteIsRunning_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIRunnableObject;;"
  }
}
function {
  name: "IRunnableObject_RemoteIsRunning_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IRunnableObject_LockRunning_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIRunnableObject;;"
  }
  parameter {
    name: "fLock"
    type: "I"
  }
  parameter {
    name: "fLastUnlockCloses"
    type: "I"
  }
}
function {
  name: "IRunnableObject_LockRunning_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IRunnableObject_SetContainedObject_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIRunnableObject;;"
  }
  parameter {
    name: "fContained"
    type: "I"
  }
}
function {
  name: "IRunnableObject_SetContainedObject_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IRunnableObject_IsRunning_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIRunnableObject;;"
  }
}
function {
  name: "IRunnableObject_IsRunning_Stub"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIRunnableObject;;"
  }
}
function {
  name: "IRunningObjectTable_Register_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIRunningObjectTable;;"
  }
  parameter {
    name: "grfFlags"
    type: "UI"
  }
  parameter {
    name: "punkObject"
    type: "*RIUnknown;;"
  }
  parameter {
    name: "pmkObjectName"
    type: "*RIMoniker;;"
  }
  parameter {
    name: "pdwRegister"
    type: "*UI;"
  }
}
function {
  name: "IRunningObjectTable_Register_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IRunningObjectTable_Revoke_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIRunningObjectTable;;"
  }
  parameter {
    name: "dwRegister"
    type: "UI"
  }
}
function {
  name: "IRunningObjectTable_Revoke_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IRunningObjectTable_IsRunning_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIRunningObjectTable;;"
  }
  parameter {
    name: "pmkObjectName"
    type: "*RIMoniker;;"
  }
}
function {
  name: "IRunningObjectTable_IsRunning_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IRunningObjectTable_GetObject_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIRunningObjectTable;;"
  }
  parameter {
    name: "pmkObjectName"
    type: "*RIMoniker;;"
  }
  parameter {
    name: "ppunkObject"
    type: "**RIUnknown;;;"
  }
}
function {
  name: "IRunningObjectTable_GetObject_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IRunningObjectTable_NoteChangeTime_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIRunningObjectTable;;"
  }
  parameter {
    name: "dwRegister"
    type: "UI"
  }
  parameter {
    name: "pfiletime"
    type: "*R_FILETIME;;"
  }
}
function {
  name: "IRunningObjectTable_NoteChangeTime_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IRunningObjectTable_GetTimeOfLastChange_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIRunningObjectTable;;"
  }
  parameter {
    name: "pmkObjectName"
    type: "*RIMoniker;;"
  }
  parameter {
    name: "pfiletime"
    type: "*R_FILETIME;;"
  }
}
function {
  name: "IRunningObjectTable_GetTimeOfLastChange_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IRunningObjectTable_EnumRunning_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIRunningObjectTable;;"
  }
  parameter {
    name: "ppenumMoniker"
    type: "**RIEnumMoniker;;;"
  }
}
function {
  name: "IRunningObjectTable_EnumRunning_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IPersist_GetClassID_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIPersist;;"
  }
  parameter {
    name: "pClassID"
    type: "*R_GUID;;"
  }
}
function {
  name: "IPersist_GetClassID_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IPersistStream_IsDirty_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIPersistStream;;"
  }
}
function {
  name: "IPersistStream_IsDirty_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IPersistStream_Load_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIPersistStream;;"
  }
  parameter {
    name: "pStm"
    type: "*RIStream;;"
  }
}
function {
  name: "IPersistStream_Load_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IPersistStream_Save_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIPersistStream;;"
  }
  parameter {
    name: "pStm"
    type: "*RIStream;;"
  }
  parameter {
    name: "fClearDirty"
    type: "I"
  }
}
function {
  name: "IPersistStream_Save_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IPersistStream_GetSizeMax_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIPersistStream;;"
  }
  parameter {
    name: "pcbSize"
    type: "*Runion _ULARGE_INTEGER;;"
  }
}
function {
  name: "IPersistStream_GetSizeMax_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IMoniker_RemoteBindToObject_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIMoniker;;"
  }
  parameter {
    name: "pbc"
    type: "*RIBindCtx;;"
  }
  parameter {
    name: "pmkToLeft"
    type: "*RIMoniker;;"
  }
  parameter {
    name: "riidResult"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "ppvResult"
    type: "**RIUnknown;;;"
  }
}
function {
  name: "IMoniker_RemoteBindToObject_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IMoniker_RemoteBindToStorage_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIMoniker;;"
  }
  parameter {
    name: "pbc"
    type: "*RIBindCtx;;"
  }
  parameter {
    name: "pmkToLeft"
    type: "*RIMoniker;;"
  }
  parameter {
    name: "riid"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "ppvObj"
    type: "**RIUnknown;;;"
  }
}
function {
  name: "IMoniker_RemoteBindToStorage_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IMoniker_Reduce_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIMoniker;;"
  }
  parameter {
    name: "pbc"
    type: "*RIBindCtx;;"
  }
  parameter {
    name: "dwReduceHowFar"
    type: "UI"
  }
  parameter {
    name: "ppmkToLeft"
    type: "**RIMoniker;;;"
  }
  parameter {
    name: "ppmkReduced"
    type: "**RIMoniker;;;"
  }
}
function {
  name: "IMoniker_Reduce_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IMoniker_ComposeWith_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIMoniker;;"
  }
  parameter {
    name: "pmkRight"
    type: "*RIMoniker;;"
  }
  parameter {
    name: "fOnlyIfNotGeneric"
    type: "I"
  }
  parameter {
    name: "ppmkComposite"
    type: "**RIMoniker;;;"
  }
}
function {
  name: "IMoniker_ComposeWith_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IMoniker_Enum_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIMoniker;;"
  }
  parameter {
    name: "fForward"
    type: "I"
  }
  parameter {
    name: "ppenumMoniker"
    type: "**RIEnumMoniker;;;"
  }
}
function {
  name: "IMoniker_Enum_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IMoniker_IsEqual_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIMoniker;;"
  }
  parameter {
    name: "pmkOtherMoniker"
    type: "*RIMoniker;;"
  }
}
function {
  name: "IMoniker_IsEqual_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IMoniker_Hash_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIMoniker;;"
  }
  parameter {
    name: "pdwHash"
    type: "*UI;"
  }
}
function {
  name: "IMoniker_Hash_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IMoniker_IsRunning_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIMoniker;;"
  }
  parameter {
    name: "pbc"
    type: "*RIBindCtx;;"
  }
  parameter {
    name: "pmkToLeft"
    type: "*RIMoniker;;"
  }
  parameter {
    name: "pmkNewlyRunning"
    type: "*RIMoniker;;"
  }
}
function {
  name: "IMoniker_IsRunning_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IMoniker_GetTimeOfLastChange_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIMoniker;;"
  }
  parameter {
    name: "pbc"
    type: "*RIBindCtx;;"
  }
  parameter {
    name: "pmkToLeft"
    type: "*RIMoniker;;"
  }
  parameter {
    name: "pFileTime"
    type: "*R_FILETIME;;"
  }
}
function {
  name: "IMoniker_GetTimeOfLastChange_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IMoniker_Inverse_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIMoniker;;"
  }
  parameter {
    name: "ppmk"
    type: "**RIMoniker;;;"
  }
}
function {
  name: "IMoniker_Inverse_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IMoniker_CommonPrefixWith_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIMoniker;;"
  }
  parameter {
    name: "pmkOther"
    type: "*RIMoniker;;"
  }
  parameter {
    name: "ppmkPrefix"
    type: "**RIMoniker;;;"
  }
}
function {
  name: "IMoniker_CommonPrefixWith_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IMoniker_RelativePathTo_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIMoniker;;"
  }
  parameter {
    name: "pmkOther"
    type: "*RIMoniker;;"
  }
  parameter {
    name: "ppmkRelPath"
    type: "**RIMoniker;;;"
  }
}
function {
  name: "IMoniker_RelativePathTo_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IMoniker_GetDisplayName_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIMoniker;;"
  }
  parameter {
    name: "pbc"
    type: "*RIBindCtx;;"
  }
  parameter {
    name: "pmkToLeft"
    type: "*RIMoniker;;"
  }
  parameter {
    name: "ppszDisplayName"
    type: "**US;;"
  }
}
function {
  name: "IMoniker_GetDisplayName_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IMoniker_ParseDisplayName_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIMoniker;;"
  }
  parameter {
    name: "pbc"
    type: "*RIBindCtx;;"
  }
  parameter {
    name: "pmkToLeft"
    type: "*RIMoniker;;"
  }
  parameter {
    name: "pszDisplayName"
    type: "*US;"
  }
  parameter {
    name: "pchEaten"
    type: "*UI;"
  }
  parameter {
    name: "ppmkOut"
    type: "**RIMoniker;;;"
  }
}
function {
  name: "IMoniker_ParseDisplayName_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IMoniker_IsSystemMoniker_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIMoniker;;"
  }
  parameter {
    name: "pdwMksys"
    type: "*UI;"
  }
}
function {
  name: "IMoniker_IsSystemMoniker_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IMoniker_BindToObject_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIMoniker;;"
  }
  parameter {
    name: "pbc"
    type: "*RIBindCtx;;"
  }
  parameter {
    name: "pmkToLeft"
    type: "*RIMoniker;;"
  }
  parameter {
    name: "riidResult"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "ppvResult"
    type: "**V;;"
  }
}
function {
  name: "IMoniker_BindToObject_Stub"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIMoniker;;"
  }
  parameter {
    name: "pbc"
    type: "*RIBindCtx;;"
  }
  parameter {
    name: "pmkToLeft"
    type: "*RIMoniker;;"
  }
  parameter {
    name: "riidResult"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "ppvResult"
    type: "**RIUnknown;;;"
  }
}
function {
  name: "IMoniker_BindToStorage_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIMoniker;;"
  }
  parameter {
    name: "pbc"
    type: "*RIBindCtx;;"
  }
  parameter {
    name: "pmkToLeft"
    type: "*RIMoniker;;"
  }
  parameter {
    name: "riid"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "ppvObj"
    type: "**V;;"
  }
}
function {
  name: "IMoniker_BindToStorage_Stub"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIMoniker;;"
  }
  parameter {
    name: "pbc"
    type: "*RIBindCtx;;"
  }
  parameter {
    name: "pmkToLeft"
    type: "*RIMoniker;;"
  }
  parameter {
    name: "riid"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "ppvObj"
    type: "**RIUnknown;;;"
  }
}
function {
  name: "IROTData_GetComparisonData_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIROTData;;"
  }
  parameter {
    name: "pbData"
    type: "*UB;"
  }
  parameter {
    name: "cbMax"
    type: "UI"
  }
  parameter {
    name: "pcbData"
    type: "*UI;"
  }
}
function {
  name: "IROTData_GetComparisonData_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IEnumString_RemoteNext_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIEnumString;;"
  }
  parameter {
    name: "celt"
    type: "UI"
  }
  parameter {
    name: "rgelt"
    type: "**US;;"
  }
  parameter {
    name: "pceltFetched"
    type: "*UI;"
  }
}
function {
  name: "IEnumString_RemoteNext_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IEnumString_Skip_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIEnumString;;"
  }
  parameter {
    name: "celt"
    type: "UI"
  }
}
function {
  name: "IEnumString_Skip_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IEnumString_Reset_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIEnumString;;"
  }
}
function {
  name: "IEnumString_Reset_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IEnumString_Clone_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIEnumString;;"
  }
  parameter {
    name: "ppenum"
    type: "**RIEnumString;;;"
  }
}
function {
  name: "IEnumString_Clone_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IEnumString_Next_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIEnumString;;"
  }
  parameter {
    name: "celt"
    type: "UI"
  }
  parameter {
    name: "rgelt"
    type: "**US;;"
  }
  parameter {
    name: "pceltFetched"
    type: "*UI;"
  }
}
function {
  name: "IEnumString_Next_Stub"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIEnumString;;"
  }
  parameter {
    name: "celt"
    type: "UI"
  }
  parameter {
    name: "rgelt"
    type: "**US;;"
  }
  parameter {
    name: "pceltFetched"
    type: "*UI;"
  }
}
function {
  name: "IClassActivator_GetClassObject_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIClassActivator;;"
  }
  parameter {
    name: "rclsid"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "dwClassContext"
    type: "UI"
  }
  parameter {
    name: "locale"
    type: "UI"
  }
  parameter {
    name: "riid"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "ppv"
    type: "**V;;"
  }
}
function {
  name: "IClassActivator_GetClassObject_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ISequentialStream_RemoteRead_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RISequentialStream;;"
  }
  parameter {
    name: "pv"
    type: "*UB;"
  }
  parameter {
    name: "cb"
    type: "UI"
  }
  parameter {
    name: "pcbRead"
    type: "*UI;"
  }
}
function {
  name: "ISequentialStream_RemoteRead_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ISequentialStream_RemoteWrite_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RISequentialStream;;"
  }
  parameter {
    name: "pv"
    type: "*cUB;"
  }
  parameter {
    name: "cb"
    type: "UI"
  }
  parameter {
    name: "pcbWritten"
    type: "*UI;"
  }
}
function {
  name: "ISequentialStream_RemoteWrite_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ISequentialStream_Read_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RISequentialStream;;"
  }
  parameter {
    name: "pv"
    type: "*V;"
  }
  parameter {
    name: "cb"
    type: "UI"
  }
  parameter {
    name: "pcbRead"
    type: "*UI;"
  }
}
function {
  name: "ISequentialStream_Read_Stub"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RISequentialStream;;"
  }
  parameter {
    name: "pv"
    type: "*UB;"
  }
  parameter {
    name: "cb"
    type: "UI"
  }
  parameter {
    name: "pcbRead"
    type: "*UI;"
  }
}
function {
  name: "ISequentialStream_Write_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RISequentialStream;;"
  }
  parameter {
    name: "pv"
    type: "*cV;"
  }
  parameter {
    name: "cb"
    type: "UI"
  }
  parameter {
    name: "pcbWritten"
    type: "*UI;"
  }
}
function {
  name: "ISequentialStream_Write_Stub"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RISequentialStream;;"
  }
  parameter {
    name: "pv"
    type: "*cUB;"
  }
  parameter {
    name: "cb"
    type: "UI"
  }
  parameter {
    name: "pcbWritten"
    type: "*UI;"
  }
}
function {
  name: "IStream_RemoteSeek_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIStream;;"
  }
  parameter {
    name: "dlibMove"
    type: "Runion _LARGE_INTEGER;"
  }
  parameter {
    name: "dwOrigin"
    type: "UI"
  }
  parameter {
    name: "plibNewPosition"
    type: "*Runion _ULARGE_INTEGER;;"
  }
}
function {
  name: "IStream_RemoteSeek_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IStream_SetSize_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIStream;;"
  }
  parameter {
    name: "libNewSize"
    type: "Runion _ULARGE_INTEGER;"
  }
}
function {
  name: "IStream_SetSize_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IStream_RemoteCopyTo_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIStream;;"
  }
  parameter {
    name: "pstm"
    type: "*RIStream;;"
  }
  parameter {
    name: "cb"
    type: "Runion _ULARGE_INTEGER;"
  }
  parameter {
    name: "pcbRead"
    type: "*Runion _ULARGE_INTEGER;;"
  }
  parameter {
    name: "pcbWritten"
    type: "*Runion _ULARGE_INTEGER;;"
  }
}
function {
  name: "IStream_RemoteCopyTo_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IStream_Commit_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIStream;;"
  }
  parameter {
    name: "grfCommitFlags"
    type: "UI"
  }
}
function {
  name: "IStream_Commit_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IStream_Revert_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIStream;;"
  }
}
function {
  name: "IStream_Revert_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IStream_LockRegion_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIStream;;"
  }
  parameter {
    name: "libOffset"
    type: "Runion _ULARGE_INTEGER;"
  }
  parameter {
    name: "cb"
    type: "Runion _ULARGE_INTEGER;"
  }
  parameter {
    name: "dwLockType"
    type: "UI"
  }
}
function {
  name: "IStream_LockRegion_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IStream_UnlockRegion_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIStream;;"
  }
  parameter {
    name: "libOffset"
    type: "Runion _ULARGE_INTEGER;"
  }
  parameter {
    name: "cb"
    type: "Runion _ULARGE_INTEGER;"
  }
  parameter {
    name: "dwLockType"
    type: "UI"
  }
}
function {
  name: "IStream_UnlockRegion_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IStream_Stat_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIStream;;"
  }
  parameter {
    name: "pstatstg"
    type: "*RtagSTATSTG;;"
  }
  parameter {
    name: "grfStatFlag"
    type: "UI"
  }
}
function {
  name: "IStream_Stat_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IStream_Clone_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIStream;;"
  }
  parameter {
    name: "ppstm"
    type: "**RIStream;;;"
  }
}
function {
  name: "IStream_Clone_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IStream_Seek_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIStream;;"
  }
  parameter {
    name: "dlibMove"
    type: "Runion _LARGE_INTEGER;"
  }
  parameter {
    name: "dwOrigin"
    type: "UI"
  }
  parameter {
    name: "plibNewPosition"
    type: "*Runion _ULARGE_INTEGER;;"
  }
}
function {
  name: "IStream_Seek_Stub"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIStream;;"
  }
  parameter {
    name: "dlibMove"
    type: "Runion _LARGE_INTEGER;"
  }
  parameter {
    name: "dwOrigin"
    type: "UI"
  }
  parameter {
    name: "plibNewPosition"
    type: "*Runion _ULARGE_INTEGER;;"
  }
}
function {
  name: "IStream_CopyTo_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIStream;;"
  }
  parameter {
    name: "pstm"
    type: "*RIStream;;"
  }
  parameter {
    name: "cb"
    type: "Runion _ULARGE_INTEGER;"
  }
  parameter {
    name: "pcbRead"
    type: "*Runion _ULARGE_INTEGER;;"
  }
  parameter {
    name: "pcbWritten"
    type: "*Runion _ULARGE_INTEGER;;"
  }
}
function {
  name: "IStream_CopyTo_Stub"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIStream;;"
  }
  parameter {
    name: "pstm"
    type: "*RIStream;;"
  }
  parameter {
    name: "cb"
    type: "Runion _ULARGE_INTEGER;"
  }
  parameter {
    name: "pcbRead"
    type: "*Runion _ULARGE_INTEGER;;"
  }
  parameter {
    name: "pcbWritten"
    type: "*Runion _ULARGE_INTEGER;;"
  }
}
function {
  name: "IEnumSTATSTG_RemoteNext_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIEnumSTATSTG;;"
  }
  parameter {
    name: "celt"
    type: "UI"
  }
  parameter {
    name: "rgelt"
    type: "*RtagSTATSTG;;"
  }
  parameter {
    name: "pceltFetched"
    type: "*UI;"
  }
}
function {
  name: "IEnumSTATSTG_RemoteNext_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IEnumSTATSTG_Skip_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIEnumSTATSTG;;"
  }
  parameter {
    name: "celt"
    type: "UI"
  }
}
function {
  name: "IEnumSTATSTG_Skip_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IEnumSTATSTG_Reset_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIEnumSTATSTG;;"
  }
}
function {
  name: "IEnumSTATSTG_Reset_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IEnumSTATSTG_Clone_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIEnumSTATSTG;;"
  }
  parameter {
    name: "ppenum"
    type: "**RIEnumSTATSTG;;;"
  }
}
function {
  name: "IEnumSTATSTG_Clone_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IEnumSTATSTG_Next_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIEnumSTATSTG;;"
  }
  parameter {
    name: "celt"
    type: "UI"
  }
  parameter {
    name: "rgelt"
    type: "*RtagSTATSTG;;"
  }
  parameter {
    name: "pceltFetched"
    type: "*UI;"
  }
}
function {
  name: "IEnumSTATSTG_Next_Stub"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIEnumSTATSTG;;"
  }
  parameter {
    name: "celt"
    type: "UI"
  }
  parameter {
    name: "rgelt"
    type: "*RtagSTATSTG;;"
  }
  parameter {
    name: "pceltFetched"
    type: "*UI;"
  }
}
function {
  name: "IStorage_CreateStream_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIStorage;;"
  }
  parameter {
    name: "pwcsName"
    type: "*cUS;"
  }
  parameter {
    name: "grfMode"
    type: "UI"
  }
  parameter {
    name: "reserved1"
    type: "UI"
  }
  parameter {
    name: "reserved2"
    type: "UI"
  }
  parameter {
    name: "ppstm"
    type: "**RIStream;;;"
  }
}
function {
  name: "IStorage_CreateStream_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IStorage_RemoteOpenStream_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIStorage;;"
  }
  parameter {
    name: "pwcsName"
    type: "*cUS;"
  }
  parameter {
    name: "cbReserved1"
    type: "UI"
  }
  parameter {
    name: "reserved1"
    type: "*UB;"
  }
  parameter {
    name: "grfMode"
    type: "UI"
  }
  parameter {
    name: "reserved2"
    type: "UI"
  }
  parameter {
    name: "ppstm"
    type: "**RIStream;;;"
  }
}
function {
  name: "IStorage_RemoteOpenStream_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IStorage_CreateStorage_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIStorage;;"
  }
  parameter {
    name: "pwcsName"
    type: "*cUS;"
  }
  parameter {
    name: "grfMode"
    type: "UI"
  }
  parameter {
    name: "dwStgFmt"
    type: "UI"
  }
  parameter {
    name: "reserved2"
    type: "UI"
  }
  parameter {
    name: "ppstg"
    type: "**RIStorage;;;"
  }
}
function {
  name: "IStorage_CreateStorage_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IStorage_OpenStorage_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIStorage;;"
  }
  parameter {
    name: "pwcsName"
    type: "*cUS;"
  }
  parameter {
    name: "pstgPriority"
    type: "*RIStorage;;"
  }
  parameter {
    name: "grfMode"
    type: "UI"
  }
  parameter {
    name: "snbExclude"
    type: "**US;;"
  }
  parameter {
    name: "reserved"
    type: "UI"
  }
  parameter {
    name: "ppstg"
    type: "**RIStorage;;;"
  }
}
function {
  name: "IStorage_OpenStorage_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IStorage_CopyTo_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIStorage;;"
  }
  parameter {
    name: "ciidExclude"
    type: "UI"
  }
  parameter {
    name: "rgiidExclude"
    type: "*cR_GUID;;"
  }
  parameter {
    name: "snbExclude"
    type: "**US;;"
  }
  parameter {
    name: "pstgDest"
    type: "*RIStorage;;"
  }
}
function {
  name: "IStorage_CopyTo_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IStorage_MoveElementTo_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIStorage;;"
  }
  parameter {
    name: "pwcsName"
    type: "*cUS;"
  }
  parameter {
    name: "pstgDest"
    type: "*RIStorage;;"
  }
  parameter {
    name: "pwcsNewName"
    type: "*cUS;"
  }
  parameter {
    name: "grfFlags"
    type: "UI"
  }
}
function {
  name: "IStorage_MoveElementTo_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IStorage_Commit_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIStorage;;"
  }
  parameter {
    name: "grfCommitFlags"
    type: "UI"
  }
}
function {
  name: "IStorage_Commit_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IStorage_Revert_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIStorage;;"
  }
}
function {
  name: "IStorage_Revert_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IStorage_RemoteEnumElements_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIStorage;;"
  }
  parameter {
    name: "reserved1"
    type: "UI"
  }
  parameter {
    name: "cbReserved2"
    type: "UI"
  }
  parameter {
    name: "reserved2"
    type: "*UB;"
  }
  parameter {
    name: "reserved3"
    type: "UI"
  }
  parameter {
    name: "ppenum"
    type: "**RIEnumSTATSTG;;;"
  }
}
function {
  name: "IStorage_RemoteEnumElements_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IStorage_DestroyElement_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIStorage;;"
  }
  parameter {
    name: "pwcsName"
    type: "*cUS;"
  }
}
function {
  name: "IStorage_DestroyElement_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IStorage_RenameElement_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIStorage;;"
  }
  parameter {
    name: "pwcsOldName"
    type: "*cUS;"
  }
  parameter {
    name: "pwcsNewName"
    type: "*cUS;"
  }
}
function {
  name: "IStorage_RenameElement_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IStorage_SetElementTimes_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIStorage;;"
  }
  parameter {
    name: "pwcsName"
    type: "*cUS;"
  }
  parameter {
    name: "pctime"
    type: "*cR_FILETIME;;"
  }
  parameter {
    name: "patime"
    type: "*cR_FILETIME;;"
  }
  parameter {
    name: "pmtime"
    type: "*cR_FILETIME;;"
  }
}
function {
  name: "IStorage_SetElementTimes_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IStorage_SetClass_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIStorage;;"
  }
  parameter {
    name: "clsid"
    type: "c*cR_GUID;;"
  }
}
function {
  name: "IStorage_SetClass_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IStorage_SetStateBits_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIStorage;;"
  }
  parameter {
    name: "grfStateBits"
    type: "UI"
  }
  parameter {
    name: "grfMask"
    type: "UI"
  }
}
function {
  name: "IStorage_SetStateBits_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IStorage_Stat_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIStorage;;"
  }
  parameter {
    name: "pstatstg"
    type: "*RtagSTATSTG;;"
  }
  parameter {
    name: "grfStatFlag"
    type: "UI"
  }
}
function {
  name: "IStorage_Stat_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IStorage_OpenStream_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIStorage;;"
  }
  parameter {
    name: "pwcsName"
    type: "*cUS;"
  }
  parameter {
    name: "reserved1"
    type: "*V;"
  }
  parameter {
    name: "grfMode"
    type: "UI"
  }
  parameter {
    name: "reserved2"
    type: "UI"
  }
  parameter {
    name: "ppstm"
    type: "**RIStream;;;"
  }
}
function {
  name: "IStorage_OpenStream_Stub"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIStorage;;"
  }
  parameter {
    name: "pwcsName"
    type: "*cUS;"
  }
  parameter {
    name: "cbReserved1"
    type: "UI"
  }
  parameter {
    name: "reserved1"
    type: "*UB;"
  }
  parameter {
    name: "grfMode"
    type: "UI"
  }
  parameter {
    name: "reserved2"
    type: "UI"
  }
  parameter {
    name: "ppstm"
    type: "**RIStream;;;"
  }
}
function {
  name: "IStorage_EnumElements_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIStorage;;"
  }
  parameter {
    name: "reserved1"
    type: "UI"
  }
  parameter {
    name: "reserved2"
    type: "*V;"
  }
  parameter {
    name: "reserved3"
    type: "UI"
  }
  parameter {
    name: "ppenum"
    type: "**RIEnumSTATSTG;;;"
  }
}
function {
  name: "IStorage_EnumElements_Stub"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIStorage;;"
  }
  parameter {
    name: "reserved1"
    type: "UI"
  }
  parameter {
    name: "cbReserved2"
    type: "UI"
  }
  parameter {
    name: "reserved2"
    type: "*UB;"
  }
  parameter {
    name: "reserved3"
    type: "UI"
  }
  parameter {
    name: "ppenum"
    type: "**RIEnumSTATSTG;;;"
  }
}
function {
  name: "IPersistFile_IsDirty_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIPersistFile;;"
  }
}
function {
  name: "IPersistFile_IsDirty_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IPersistFile_Load_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIPersistFile;;"
  }
  parameter {
    name: "pszFileName"
    type: "*cUS;"
  }
  parameter {
    name: "dwMode"
    type: "UI"
  }
}
function {
  name: "IPersistFile_Load_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IPersistFile_Save_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIPersistFile;;"
  }
  parameter {
    name: "pszFileName"
    type: "*cUS;"
  }
  parameter {
    name: "fRemember"
    type: "I"
  }
}
function {
  name: "IPersistFile_Save_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IPersistFile_SaveCompleted_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIPersistFile;;"
  }
  parameter {
    name: "pszFileName"
    type: "*cUS;"
  }
}
function {
  name: "IPersistFile_SaveCompleted_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IPersistFile_GetCurFile_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIPersistFile;;"
  }
  parameter {
    name: "ppszFileName"
    type: "**US;;"
  }
}
function {
  name: "IPersistFile_GetCurFile_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IPersistStorage_IsDirty_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIPersistStorage;;"
  }
}
function {
  name: "IPersistStorage_IsDirty_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IPersistStorage_InitNew_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIPersistStorage;;"
  }
  parameter {
    name: "pStg"
    type: "*RIStorage;;"
  }
}
function {
  name: "IPersistStorage_InitNew_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IPersistStorage_Load_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIPersistStorage;;"
  }
  parameter {
    name: "pStg"
    type: "*RIStorage;;"
  }
}
function {
  name: "IPersistStorage_Load_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IPersistStorage_Save_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIPersistStorage;;"
  }
  parameter {
    name: "pStgSave"
    type: "*RIStorage;;"
  }
  parameter {
    name: "fSameAsLoad"
    type: "I"
  }
}
function {
  name: "IPersistStorage_Save_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IPersistStorage_SaveCompleted_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIPersistStorage;;"
  }
  parameter {
    name: "pStgNew"
    type: "*RIStorage;;"
  }
}
function {
  name: "IPersistStorage_SaveCompleted_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IPersistStorage_HandsOffStorage_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIPersistStorage;;"
  }
}
function {
  name: "IPersistStorage_HandsOffStorage_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IRootStorage_SwitchToFile_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIRootStorage;;"
  }
  parameter {
    name: "pszFile"
    type: "*US;"
  }
}
function {
  name: "IRootStorage_SwitchToFile_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ILockBytes_RemoteReadAt_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RILockBytes;;"
  }
  parameter {
    name: "ulOffset"
    type: "Runion _ULARGE_INTEGER;"
  }
  parameter {
    name: "pv"
    type: "*UB;"
  }
  parameter {
    name: "cb"
    type: "UI"
  }
  parameter {
    name: "pcbRead"
    type: "*UI;"
  }
}
function {
  name: "ILockBytes_RemoteReadAt_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ILockBytes_RemoteWriteAt_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RILockBytes;;"
  }
  parameter {
    name: "ulOffset"
    type: "Runion _ULARGE_INTEGER;"
  }
  parameter {
    name: "pv"
    type: "*cUB;"
  }
  parameter {
    name: "cb"
    type: "UI"
  }
  parameter {
    name: "pcbWritten"
    type: "*UI;"
  }
}
function {
  name: "ILockBytes_RemoteWriteAt_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ILockBytes_Flush_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RILockBytes;;"
  }
}
function {
  name: "ILockBytes_Flush_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ILockBytes_SetSize_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RILockBytes;;"
  }
  parameter {
    name: "cb"
    type: "Runion _ULARGE_INTEGER;"
  }
}
function {
  name: "ILockBytes_SetSize_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ILockBytes_LockRegion_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RILockBytes;;"
  }
  parameter {
    name: "libOffset"
    type: "Runion _ULARGE_INTEGER;"
  }
  parameter {
    name: "cb"
    type: "Runion _ULARGE_INTEGER;"
  }
  parameter {
    name: "dwLockType"
    type: "UI"
  }
}
function {
  name: "ILockBytes_LockRegion_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ILockBytes_UnlockRegion_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RILockBytes;;"
  }
  parameter {
    name: "libOffset"
    type: "Runion _ULARGE_INTEGER;"
  }
  parameter {
    name: "cb"
    type: "Runion _ULARGE_INTEGER;"
  }
  parameter {
    name: "dwLockType"
    type: "UI"
  }
}
function {
  name: "ILockBytes_UnlockRegion_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ILockBytes_Stat_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RILockBytes;;"
  }
  parameter {
    name: "pstatstg"
    type: "*RtagSTATSTG;;"
  }
  parameter {
    name: "grfStatFlag"
    type: "UI"
  }
}
function {
  name: "ILockBytes_Stat_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ILockBytes_ReadAt_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RILockBytes;;"
  }
  parameter {
    name: "ulOffset"
    type: "Runion _ULARGE_INTEGER;"
  }
  parameter {
    name: "pv"
    type: "*V;"
  }
  parameter {
    name: "cb"
    type: "UI"
  }
  parameter {
    name: "pcbRead"
    type: "*UI;"
  }
}
function {
  name: "ILockBytes_ReadAt_Stub"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RILockBytes;;"
  }
  parameter {
    name: "ulOffset"
    type: "Runion _ULARGE_INTEGER;"
  }
  parameter {
    name: "pv"
    type: "*UB;"
  }
  parameter {
    name: "cb"
    type: "UI"
  }
  parameter {
    name: "pcbRead"
    type: "*UI;"
  }
}
function {
  name: "ILockBytes_WriteAt_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RILockBytes;;"
  }
  parameter {
    name: "ulOffset"
    type: "Runion _ULARGE_INTEGER;"
  }
  parameter {
    name: "pv"
    type: "*cV;"
  }
  parameter {
    name: "cb"
    type: "UI"
  }
  parameter {
    name: "pcbWritten"
    type: "*UI;"
  }
}
function {
  name: "ILockBytes_WriteAt_Stub"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RILockBytes;;"
  }
  parameter {
    name: "ulOffset"
    type: "Runion _ULARGE_INTEGER;"
  }
  parameter {
    name: "pv"
    type: "*cUB;"
  }
  parameter {
    name: "cb"
    type: "UI"
  }
  parameter {
    name: "pcbWritten"
    type: "*UI;"
  }
}
function {
  name: "IFillLockBytes_RemoteFillAppend_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIFillLockBytes;;"
  }
  parameter {
    name: "pv"
    type: "*cUB;"
  }
  parameter {
    name: "cb"
    type: "UI"
  }
  parameter {
    name: "pcbWritten"
    type: "*UI;"
  }
}
function {
  name: "IFillLockBytes_RemoteFillAppend_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IFillLockBytes_RemoteFillAt_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIFillLockBytes;;"
  }
  parameter {
    name: "ulOffset"
    type: "Runion _ULARGE_INTEGER;"
  }
  parameter {
    name: "pv"
    type: "*cUB;"
  }
  parameter {
    name: "cb"
    type: "UI"
  }
  parameter {
    name: "pcbWritten"
    type: "*UI;"
  }
}
function {
  name: "IFillLockBytes_RemoteFillAt_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IFillLockBytes_SetFillSize_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIFillLockBytes;;"
  }
  parameter {
    name: "ulSize"
    type: "Runion _ULARGE_INTEGER;"
  }
}
function {
  name: "IFillLockBytes_SetFillSize_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IFillLockBytes_Terminate_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIFillLockBytes;;"
  }
  parameter {
    name: "bCanceled"
    type: "I"
  }
}
function {
  name: "IFillLockBytes_Terminate_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IFillLockBytes_FillAppend_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIFillLockBytes;;"
  }
  parameter {
    name: "pv"
    type: "*cV;"
  }
  parameter {
    name: "cb"
    type: "UI"
  }
  parameter {
    name: "pcbWritten"
    type: "*UI;"
  }
}
function {
  name: "IFillLockBytes_FillAppend_Stub"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIFillLockBytes;;"
  }
  parameter {
    name: "pv"
    type: "*cUB;"
  }
  parameter {
    name: "cb"
    type: "UI"
  }
  parameter {
    name: "pcbWritten"
    type: "*UI;"
  }
}
function {
  name: "IFillLockBytes_FillAt_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIFillLockBytes;;"
  }
  parameter {
    name: "ulOffset"
    type: "Runion _ULARGE_INTEGER;"
  }
  parameter {
    name: "pv"
    type: "*cV;"
  }
  parameter {
    name: "cb"
    type: "UI"
  }
  parameter {
    name: "pcbWritten"
    type: "*UI;"
  }
}
function {
  name: "IFillLockBytes_FillAt_Stub"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIFillLockBytes;;"
  }
  parameter {
    name: "ulOffset"
    type: "Runion _ULARGE_INTEGER;"
  }
  parameter {
    name: "pv"
    type: "*cUB;"
  }
  parameter {
    name: "cb"
    type: "UI"
  }
  parameter {
    name: "pcbWritten"
    type: "*UI;"
  }
}
function {
  name: "IProgressNotify_OnProgress_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIProgressNotify;;"
  }
  parameter {
    name: "dwProgressCurrent"
    type: "UI"
  }
  parameter {
    name: "dwProgressMaximum"
    type: "UI"
  }
  parameter {
    name: "fAccurate"
    type: "I"
  }
  parameter {
    name: "fOwner"
    type: "I"
  }
}
function {
  name: "IProgressNotify_OnProgress_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ILayoutStorage_LayoutScript_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RILayoutStorage;;"
  }
  parameter {
    name: "pStorageLayout"
    type: "*RtagStorageLayout;;"
  }
  parameter {
    name: "nEntries"
    type: "UI"
  }
  parameter {
    name: "glfInterleavedFlag"
    type: "UI"
  }
}
function {
  name: "ILayoutStorage_LayoutScript_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ILayoutStorage_BeginMonitor_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RILayoutStorage;;"
  }
}
function {
  name: "ILayoutStorage_BeginMonitor_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ILayoutStorage_EndMonitor_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RILayoutStorage;;"
  }
}
function {
  name: "ILayoutStorage_EndMonitor_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ILayoutStorage_ReLayoutDocfile_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RILayoutStorage;;"
  }
  parameter {
    name: "pwcsNewDfName"
    type: "*US;"
  }
}
function {
  name: "ILayoutStorage_ReLayoutDocfile_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ILayoutStorage_ReLayoutDocfileOnILockBytes_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RILayoutStorage;;"
  }
  parameter {
    name: "pILockBytes"
    type: "*RILockBytes;;"
  }
}
function {
  name: "ILayoutStorage_ReLayoutDocfileOnILockBytes_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IBlockingLock_Lock_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIBlockingLock;;"
  }
  parameter {
    name: "dwTimeout"
    type: "UI"
  }
}
function {
  name: "IBlockingLock_Lock_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IBlockingLock_Unlock_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIBlockingLock;;"
  }
}
function {
  name: "IBlockingLock_Unlock_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ITimeAndNoticeControl_SuppressChanges_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RITimeAndNoticeControl;;"
  }
  parameter {
    name: "res1"
    type: "UI"
  }
  parameter {
    name: "res2"
    type: "UI"
  }
}
function {
  name: "ITimeAndNoticeControl_SuppressChanges_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IOplockStorage_CreateStorageEx_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIOplockStorage;;"
  }
  parameter {
    name: "pwcsName"
    type: "*cUS;"
  }
  parameter {
    name: "grfMode"
    type: "UI"
  }
  parameter {
    name: "stgfmt"
    type: "UI"
  }
  parameter {
    name: "grfAttrs"
    type: "UI"
  }
  parameter {
    name: "riid"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "ppstgOpen"
    type: "**V;;"
  }
}
function {
  name: "IOplockStorage_CreateStorageEx_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IOplockStorage_OpenStorageEx_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIOplockStorage;;"
  }
  parameter {
    name: "pwcsName"
    type: "*cUS;"
  }
  parameter {
    name: "grfMode"
    type: "UI"
  }
  parameter {
    name: "stgfmt"
    type: "UI"
  }
  parameter {
    name: "grfAttrs"
    type: "UI"
  }
  parameter {
    name: "riid"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "ppstgOpen"
    type: "**V;;"
  }
}
function {
  name: "IOplockStorage_OpenStorageEx_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IEnumFORMATETC_RemoteNext_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIEnumFORMATETC;;"
  }
  parameter {
    name: "celt"
    type: "UI"
  }
  parameter {
    name: "rgelt"
    type: "*RtagFORMATETC;;"
  }
  parameter {
    name: "pceltFetched"
    type: "*UI;"
  }
}
function {
  name: "IEnumFORMATETC_RemoteNext_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IEnumFORMATETC_Skip_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIEnumFORMATETC;;"
  }
  parameter {
    name: "celt"
    type: "UI"
  }
}
function {
  name: "IEnumFORMATETC_Skip_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IEnumFORMATETC_Reset_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIEnumFORMATETC;;"
  }
}
function {
  name: "IEnumFORMATETC_Reset_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IEnumFORMATETC_Clone_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIEnumFORMATETC;;"
  }
  parameter {
    name: "ppenum"
    type: "**RIEnumFORMATETC;;;"
  }
}
function {
  name: "IEnumFORMATETC_Clone_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IEnumFORMATETC_Next_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIEnumFORMATETC;;"
  }
  parameter {
    name: "celt"
    type: "UI"
  }
  parameter {
    name: "rgelt"
    type: "*RtagFORMATETC;;"
  }
  parameter {
    name: "pceltFetched"
    type: "*UI;"
  }
}
function {
  name: "IEnumFORMATETC_Next_Stub"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIEnumFORMATETC;;"
  }
  parameter {
    name: "celt"
    type: "UI"
  }
  parameter {
    name: "rgelt"
    type: "*RtagFORMATETC;;"
  }
  parameter {
    name: "pceltFetched"
    type: "*UI;"
  }
}
function {
  name: "IEnumSTATDATA_RemoteNext_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIEnumSTATDATA;;"
  }
  parameter {
    name: "celt"
    type: "UI"
  }
  parameter {
    name: "rgelt"
    type: "*RtagSTATDATA;;"
  }
  parameter {
    name: "pceltFetched"
    type: "*UI;"
  }
}
function {
  name: "IEnumSTATDATA_RemoteNext_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IEnumSTATDATA_Skip_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIEnumSTATDATA;;"
  }
  parameter {
    name: "celt"
    type: "UI"
  }
}
function {
  name: "IEnumSTATDATA_Skip_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IEnumSTATDATA_Reset_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIEnumSTATDATA;;"
  }
}
function {
  name: "IEnumSTATDATA_Reset_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IEnumSTATDATA_Clone_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIEnumSTATDATA;;"
  }
  parameter {
    name: "ppenum"
    type: "**RIEnumSTATDATA;;;"
  }
}
function {
  name: "IEnumSTATDATA_Clone_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IEnumSTATDATA_Next_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIEnumSTATDATA;;"
  }
  parameter {
    name: "celt"
    type: "UI"
  }
  parameter {
    name: "rgelt"
    type: "*RtagSTATDATA;;"
  }
  parameter {
    name: "pceltFetched"
    type: "*UI;"
  }
}
function {
  name: "IEnumSTATDATA_Next_Stub"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIEnumSTATDATA;;"
  }
  parameter {
    name: "celt"
    type: "UI"
  }
  parameter {
    name: "rgelt"
    type: "*RtagSTATDATA;;"
  }
  parameter {
    name: "pceltFetched"
    type: "*UI;"
  }
}
function {
  name: "IAdviseSink_RemoteOnDataChange_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIAdviseSink;;"
  }
  parameter {
    name: "pFormatetc"
    type: "*RtagFORMATETC;;"
  }
  parameter {
    name: "pStgmed"
    type: "*RtagSTGMEDIUM;;"
  }
}
function {
  name: "IAdviseSink_RemoteOnDataChange_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IAdviseSink_RemoteOnViewChange_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIAdviseSink;;"
  }
  parameter {
    name: "dwAspect"
    type: "UI"
  }
  parameter {
    name: "lindex"
    type: "I"
  }
}
function {
  name: "IAdviseSink_RemoteOnViewChange_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IAdviseSink_RemoteOnRename_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIAdviseSink;;"
  }
  parameter {
    name: "pmk"
    type: "*RIMoniker;;"
  }
}
function {
  name: "IAdviseSink_RemoteOnRename_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IAdviseSink_RemoteOnSave_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIAdviseSink;;"
  }
}
function {
  name: "IAdviseSink_RemoteOnSave_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IAdviseSink_RemoteOnClose_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIAdviseSink;;"
  }
}
function {
  name: "IAdviseSink_RemoteOnClose_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IAdviseSink_OnDataChange_Proxy"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIAdviseSink;;"
  }
  parameter {
    name: "pFormatetc"
    type: "*RtagFORMATETC;;"
  }
  parameter {
    name: "pStgmed"
    type: "*RtagSTGMEDIUM;;"
  }
}
function {
  name: "IAdviseSink_OnDataChange_Stub"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIAdviseSink;;"
  }
  parameter {
    name: "pFormatetc"
    type: "*RtagFORMATETC;;"
  }
  parameter {
    name: "pStgmed"
    type: "*RtagSTGMEDIUM;;"
  }
}
function {
  name: "IAdviseSink_OnViewChange_Proxy"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIAdviseSink;;"
  }
  parameter {
    name: "dwAspect"
    type: "UI"
  }
  parameter {
    name: "lindex"
    type: "I"
  }
}
function {
  name: "IAdviseSink_OnViewChange_Stub"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIAdviseSink;;"
  }
  parameter {
    name: "dwAspect"
    type: "UI"
  }
  parameter {
    name: "lindex"
    type: "I"
  }
}
function {
  name: "IAdviseSink_OnRename_Proxy"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIAdviseSink;;"
  }
  parameter {
    name: "pmk"
    type: "*RIMoniker;;"
  }
}
function {
  name: "IAdviseSink_OnRename_Stub"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIAdviseSink;;"
  }
  parameter {
    name: "pmk"
    type: "*RIMoniker;;"
  }
}
function {
  name: "IAdviseSink_OnSave_Proxy"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIAdviseSink;;"
  }
}
function {
  name: "IAdviseSink_OnSave_Stub"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIAdviseSink;;"
  }
}
function {
  name: "IAdviseSink_OnClose_Proxy"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIAdviseSink;;"
  }
}
function {
  name: "IAdviseSink_OnClose_Stub"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIAdviseSink;;"
  }
}
function {
  name: "IAdviseSink2_RemoteOnLinkSrcChange_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIAdviseSink2;;"
  }
  parameter {
    name: "pmk"
    type: "*RIMoniker;;"
  }
}
function {
  name: "IAdviseSink2_RemoteOnLinkSrcChange_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IAdviseSink2_OnLinkSrcChange_Proxy"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIAdviseSink2;;"
  }
  parameter {
    name: "pmk"
    type: "*RIMoniker;;"
  }
}
function {
  name: "IAdviseSink2_OnLinkSrcChange_Stub"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIAdviseSink2;;"
  }
  parameter {
    name: "pmk"
    type: "*RIMoniker;;"
  }
}
function {
  name: "IDataObject_RemoteGetData_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIDataObject;;"
  }
  parameter {
    name: "pformatetcIn"
    type: "*RtagFORMATETC;;"
  }
  parameter {
    name: "pRemoteMedium"
    type: "*RtagSTGMEDIUM;;"
  }
}
function {
  name: "IDataObject_RemoteGetData_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IDataObject_RemoteGetDataHere_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIDataObject;;"
  }
  parameter {
    name: "pformatetc"
    type: "*RtagFORMATETC;;"
  }
  parameter {
    name: "pRemoteMedium"
    type: "*RtagSTGMEDIUM;;"
  }
}
function {
  name: "IDataObject_RemoteGetDataHere_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IDataObject_QueryGetData_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIDataObject;;"
  }
  parameter {
    name: "pformatetc"
    type: "*RtagFORMATETC;;"
  }
}
function {
  name: "IDataObject_QueryGetData_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IDataObject_GetCanonicalFormatEtc_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIDataObject;;"
  }
  parameter {
    name: "pformatectIn"
    type: "*RtagFORMATETC;;"
  }
  parameter {
    name: "pformatetcOut"
    type: "*RtagFORMATETC;;"
  }
}
function {
  name: "IDataObject_GetCanonicalFormatEtc_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IDataObject_RemoteSetData_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIDataObject;;"
  }
  parameter {
    name: "pformatetc"
    type: "*RtagFORMATETC;;"
  }
  parameter {
    name: "pmedium"
    type: "*R_FLAG_STGMEDIUM;;"
  }
  parameter {
    name: "fRelease"
    type: "I"
  }
}
function {
  name: "IDataObject_RemoteSetData_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IDataObject_EnumFormatEtc_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIDataObject;;"
  }
  parameter {
    name: "dwDirection"
    type: "UI"
  }
  parameter {
    name: "ppenumFormatEtc"
    type: "**RIEnumFORMATETC;;;"
  }
}
function {
  name: "IDataObject_EnumFormatEtc_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IDataObject_DAdvise_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIDataObject;;"
  }
  parameter {
    name: "pformatetc"
    type: "*RtagFORMATETC;;"
  }
  parameter {
    name: "advf"
    type: "UI"
  }
  parameter {
    name: "pAdvSink"
    type: "*RIAdviseSink;;"
  }
  parameter {
    name: "pdwConnection"
    type: "*UI;"
  }
}
function {
  name: "IDataObject_DAdvise_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IDataObject_DUnadvise_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIDataObject;;"
  }
  parameter {
    name: "dwConnection"
    type: "UI"
  }
}
function {
  name: "IDataObject_DUnadvise_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IDataObject_EnumDAdvise_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIDataObject;;"
  }
  parameter {
    name: "ppenumAdvise"
    type: "**RIEnumSTATDATA;;;"
  }
}
function {
  name: "IDataObject_EnumDAdvise_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IDataObject_GetData_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIDataObject;;"
  }
  parameter {
    name: "pformatetcIn"
    type: "*RtagFORMATETC;;"
  }
  parameter {
    name: "pmedium"
    type: "*RtagSTGMEDIUM;;"
  }
}
function {
  name: "IDataObject_GetData_Stub"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIDataObject;;"
  }
  parameter {
    name: "pformatetcIn"
    type: "*RtagFORMATETC;;"
  }
  parameter {
    name: "pRemoteMedium"
    type: "*RtagSTGMEDIUM;;"
  }
}
function {
  name: "IDataObject_GetDataHere_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIDataObject;;"
  }
  parameter {
    name: "pformatetc"
    type: "*RtagFORMATETC;;"
  }
  parameter {
    name: "pmedium"
    type: "*RtagSTGMEDIUM;;"
  }
}
function {
  name: "IDataObject_GetDataHere_Stub"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIDataObject;;"
  }
  parameter {
    name: "pformatetc"
    type: "*RtagFORMATETC;;"
  }
  parameter {
    name: "pRemoteMedium"
    type: "*RtagSTGMEDIUM;;"
  }
}
function {
  name: "IDataObject_SetData_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIDataObject;;"
  }
  parameter {
    name: "pformatetc"
    type: "*RtagFORMATETC;;"
  }
  parameter {
    name: "pmedium"
    type: "*RtagSTGMEDIUM;;"
  }
  parameter {
    name: "fRelease"
    type: "I"
  }
}
function {
  name: "IDataObject_SetData_Stub"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIDataObject;;"
  }
  parameter {
    name: "pformatetc"
    type: "*RtagFORMATETC;;"
  }
  parameter {
    name: "pmedium"
    type: "*R_FLAG_STGMEDIUM;;"
  }
  parameter {
    name: "fRelease"
    type: "I"
  }
}
function {
  name: "IDataAdviseHolder_Advise_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIDataAdviseHolder;;"
  }
  parameter {
    name: "pDataObject"
    type: "*RIDataObject;;"
  }
  parameter {
    name: "pFetc"
    type: "*RtagFORMATETC;;"
  }
  parameter {
    name: "advf"
    type: "UI"
  }
  parameter {
    name: "pAdvise"
    type: "*RIAdviseSink;;"
  }
  parameter {
    name: "pdwConnection"
    type: "*UI;"
  }
}
function {
  name: "IDataAdviseHolder_Advise_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IDataAdviseHolder_Unadvise_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIDataAdviseHolder;;"
  }
  parameter {
    name: "dwConnection"
    type: "UI"
  }
}
function {
  name: "IDataAdviseHolder_Unadvise_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IDataAdviseHolder_EnumAdvise_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIDataAdviseHolder;;"
  }
  parameter {
    name: "ppenumAdvise"
    type: "**RIEnumSTATDATA;;;"
  }
}
function {
  name: "IDataAdviseHolder_EnumAdvise_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IDataAdviseHolder_SendOnDataChange_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIDataAdviseHolder;;"
  }
  parameter {
    name: "pDataObject"
    type: "*RIDataObject;;"
  }
  parameter {
    name: "dwReserved"
    type: "UI"
  }
  parameter {
    name: "advf"
    type: "UI"
  }
}
function {
  name: "IDataAdviseHolder_SendOnDataChange_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IMessageFilter_HandleInComingCall_Proxy"
  return_type: "UI"
  parameter {
    name: "This"
    type: "*RIMessageFilter;;"
  }
  parameter {
    name: "dwCallType"
    type: "UI"
  }
  parameter {
    name: "htaskCaller"
    type: "*RHTASK__;;"
  }
  parameter {
    name: "dwTickCount"
    type: "UI"
  }
  parameter {
    name: "lpInterfaceInfo"
    type: "*RtagINTERFACEINFO;;"
  }
}
function {
  name: "IMessageFilter_HandleInComingCall_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IMessageFilter_RetryRejectedCall_Proxy"
  return_type: "UI"
  parameter {
    name: "This"
    type: "*RIMessageFilter;;"
  }
  parameter {
    name: "htaskCallee"
    type: "*RHTASK__;;"
  }
  parameter {
    name: "dwTickCount"
    type: "UI"
  }
  parameter {
    name: "dwRejectType"
    type: "UI"
  }
}
function {
  name: "IMessageFilter_RetryRejectedCall_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IMessageFilter_MessagePending_Proxy"
  return_type: "UI"
  parameter {
    name: "This"
    type: "*RIMessageFilter;;"
  }
  parameter {
    name: "htaskCallee"
    type: "*RHTASK__;;"
  }
  parameter {
    name: "dwTickCount"
    type: "UI"
  }
  parameter {
    name: "dwPendingType"
    type: "UI"
  }
}
function {
  name: "IMessageFilter_MessagePending_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IRpcChannelBuffer_GetBuffer_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pMessage"
    type: "*RtagRPCOLEMESSAGE;;"
  }
  parameter {
    name: "riid"
    type: "c*cR_GUID;;"
  }
}
function {
  name: "IRpcChannelBuffer_GetBuffer_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IRpcChannelBuffer_SendReceive_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pMessage"
    type: "*RtagRPCOLEMESSAGE;;"
  }
  parameter {
    name: "pStatus"
    type: "*UI;"
  }
}
function {
  name: "IRpcChannelBuffer_SendReceive_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IRpcChannelBuffer_FreeBuffer_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pMessage"
    type: "*RtagRPCOLEMESSAGE;;"
  }
}
function {
  name: "IRpcChannelBuffer_FreeBuffer_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IRpcChannelBuffer_GetDestCtx_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pdwDestContext"
    type: "*UI;"
  }
  parameter {
    name: "ppvDestContext"
    type: "**V;;"
  }
}
function {
  name: "IRpcChannelBuffer_GetDestCtx_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IRpcChannelBuffer_IsConnected_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIRpcChannelBuffer;;"
  }
}
function {
  name: "IRpcChannelBuffer_IsConnected_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IRpcChannelBuffer2_GetProtocolVersion_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIRpcChannelBuffer2;;"
  }
  parameter {
    name: "pdwVersion"
    type: "*UI;"
  }
}
function {
  name: "IRpcChannelBuffer2_GetProtocolVersion_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IRpcChannelBuffer3_Send_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIRpcChannelBuffer3;;"
  }
  parameter {
    name: "pMsg"
    type: "*RtagRPCOLEMESSAGE;;"
  }
  parameter {
    name: "pulStatus"
    type: "*UI;"
  }
}
function {
  name: "IRpcChannelBuffer3_Send_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IRpcChannelBuffer3_Receive_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIRpcChannelBuffer3;;"
  }
  parameter {
    name: "pMsg"
    type: "*RtagRPCOLEMESSAGE;;"
  }
  parameter {
    name: "ulSize"
    type: "UI"
  }
  parameter {
    name: "pulStatus"
    type: "*UI;"
  }
}
function {
  name: "IRpcChannelBuffer3_Receive_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IRpcChannelBuffer3_Cancel_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIRpcChannelBuffer3;;"
  }
  parameter {
    name: "pMsg"
    type: "*RtagRPCOLEMESSAGE;;"
  }
}
function {
  name: "IRpcChannelBuffer3_Cancel_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IRpcChannelBuffer3_GetCallContext_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIRpcChannelBuffer3;;"
  }
  parameter {
    name: "pMsg"
    type: "*RtagRPCOLEMESSAGE;;"
  }
  parameter {
    name: "riid"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "pInterface"
    type: "**V;;"
  }
}
function {
  name: "IRpcChannelBuffer3_GetCallContext_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IRpcChannelBuffer3_GetDestCtxEx_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIRpcChannelBuffer3;;"
  }
  parameter {
    name: "pMsg"
    type: "*RtagRPCOLEMESSAGE;;"
  }
  parameter {
    name: "pdwDestContext"
    type: "*UI;"
  }
  parameter {
    name: "ppvDestContext"
    type: "**V;;"
  }
}
function {
  name: "IRpcChannelBuffer3_GetDestCtxEx_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IRpcChannelBuffer3_GetState_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIRpcChannelBuffer3;;"
  }
  parameter {
    name: "pMsg"
    type: "*RtagRPCOLEMESSAGE;;"
  }
  parameter {
    name: "pState"
    type: "*UI;"
  }
}
function {
  name: "IRpcChannelBuffer3_GetState_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IRpcChannelBuffer3_RegisterAsync_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIRpcChannelBuffer3;;"
  }
  parameter {
    name: "pMsg"
    type: "*RtagRPCOLEMESSAGE;;"
  }
  parameter {
    name: "pAsyncMgr"
    type: "*RIAsyncManager;;"
  }
}
function {
  name: "IRpcChannelBuffer3_RegisterAsync_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IAsyncRpcChannelBuffer_Send_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIAsyncRpcChannelBuffer;;"
  }
  parameter {
    name: "pMsg"
    type: "*RtagRPCOLEMESSAGE;;"
  }
  parameter {
    name: "pSync"
    type: "*RISynchronize;;"
  }
  parameter {
    name: "pulStatus"
    type: "*UI;"
  }
}
function {
  name: "IAsyncRpcChannelBuffer_Send_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IAsyncRpcChannelBuffer_Receive_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIAsyncRpcChannelBuffer;;"
  }
  parameter {
    name: "pMsg"
    type: "*RtagRPCOLEMESSAGE;;"
  }
  parameter {
    name: "pulStatus"
    type: "*UI;"
  }
}
function {
  name: "IAsyncRpcChannelBuffer_Receive_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IAsyncRpcChannelBuffer_GetDestCtxEx_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIAsyncRpcChannelBuffer;;"
  }
  parameter {
    name: "pMsg"
    type: "*RtagRPCOLEMESSAGE;;"
  }
  parameter {
    name: "pdwDestContext"
    type: "*UI;"
  }
  parameter {
    name: "ppvDestContext"
    type: "**V;;"
  }
}
function {
  name: "IAsyncRpcChannelBuffer_GetDestCtxEx_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IRpcSyntaxNegotiate_NegotiateSyntax_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIRpcSyntaxNegotiate;;"
  }
  parameter {
    name: "pMsg"
    type: "*RtagRPCOLEMESSAGE;;"
  }
}
function {
  name: "IRpcSyntaxNegotiate_NegotiateSyntax_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IRpcProxyBuffer_Connect_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIRpcProxyBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
}
function {
  name: "IRpcProxyBuffer_Connect_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IRpcProxyBuffer_Disconnect_Proxy"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcProxyBuffer;;"
  }
}
function {
  name: "IRpcProxyBuffer_Disconnect_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IRpcStubBuffer_Connect_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pUnkServer"
    type: "*RIUnknown;;"
  }
}
function {
  name: "IRpcStubBuffer_Connect_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IRpcStubBuffer_Disconnect_Proxy"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
}
function {
  name: "IRpcStubBuffer_Disconnect_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IRpcStubBuffer_Invoke_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "_prpcmsg"
    type: "*RtagRPCOLEMESSAGE;;"
  }
  parameter {
    name: "_pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
}
function {
  name: "IRpcStubBuffer_Invoke_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IRpcStubBuffer_IsIIDSupported_Proxy"
  return_type: "*RIRpcStubBuffer;;"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "riid"
    type: "c*cR_GUID;;"
  }
}
function {
  name: "IRpcStubBuffer_IsIIDSupported_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IRpcStubBuffer_CountRefs_Proxy"
  return_type: "UI"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
}
function {
  name: "IRpcStubBuffer_CountRefs_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IRpcStubBuffer_DebugServerQueryInterface_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "ppv"
    type: "**V;;"
  }
}
function {
  name: "IRpcStubBuffer_DebugServerQueryInterface_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IRpcStubBuffer_DebugServerRelease_Proxy"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pv"
    type: "*V;"
  }
}
function {
  name: "IRpcStubBuffer_DebugServerRelease_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IPSFactoryBuffer_CreateProxy_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIPSFactoryBuffer;;"
  }
  parameter {
    name: "pUnkOuter"
    type: "*RIUnknown;;"
  }
  parameter {
    name: "riid"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "ppProxy"
    type: "**RIRpcProxyBuffer;;;"
  }
  parameter {
    name: "ppv"
    type: "**V;;"
  }
}
function {
  name: "IPSFactoryBuffer_CreateProxy_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IPSFactoryBuffer_CreateStub_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIPSFactoryBuffer;;"
  }
  parameter {
    name: "riid"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "pUnkServer"
    type: "*RIUnknown;;"
  }
  parameter {
    name: "ppStub"
    type: "**RIRpcStubBuffer;;;"
  }
}
function {
  name: "IPSFactoryBuffer_CreateStub_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IChannelHook_ClientGetSize_Proxy"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIChannelHook;;"
  }
  parameter {
    name: "uExtent"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "riid"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "pDataSize"
    type: "*UI;"
  }
}
function {
  name: "IChannelHook_ClientGetSize_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IChannelHook_ClientFillBuffer_Proxy"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIChannelHook;;"
  }
  parameter {
    name: "uExtent"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "riid"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "pDataSize"
    type: "*UI;"
  }
  parameter {
    name: "pDataBuffer"
    type: "*V;"
  }
}
function {
  name: "IChannelHook_ClientFillBuffer_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IChannelHook_ClientNotify_Proxy"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIChannelHook;;"
  }
  parameter {
    name: "uExtent"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "riid"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "cbDataSize"
    type: "UI"
  }
  parameter {
    name: "pDataBuffer"
    type: "*V;"
  }
  parameter {
    name: "lDataRep"
    type: "UI"
  }
  parameter {
    name: "hrFault"
    type: "I"
  }
}
function {
  name: "IChannelHook_ClientNotify_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IChannelHook_ServerNotify_Proxy"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIChannelHook;;"
  }
  parameter {
    name: "uExtent"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "riid"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "cbDataSize"
    type: "UI"
  }
  parameter {
    name: "pDataBuffer"
    type: "*V;"
  }
  parameter {
    name: "lDataRep"
    type: "UI"
  }
}
function {
  name: "IChannelHook_ServerNotify_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IChannelHook_ServerGetSize_Proxy"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIChannelHook;;"
  }
  parameter {
    name: "uExtent"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "riid"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "hrFault"
    type: "I"
  }
  parameter {
    name: "pDataSize"
    type: "*UI;"
  }
}
function {
  name: "IChannelHook_ServerGetSize_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IChannelHook_ServerFillBuffer_Proxy"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIChannelHook;;"
  }
  parameter {
    name: "uExtent"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "riid"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "pDataSize"
    type: "*UI;"
  }
  parameter {
    name: "pDataBuffer"
    type: "*V;"
  }
  parameter {
    name: "hrFault"
    type: "I"
  }
}
function {
  name: "IChannelHook_ServerFillBuffer_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IClientSecurity_QueryBlanket_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIClientSecurity;;"
  }
  parameter {
    name: "pProxy"
    type: "*RIUnknown;;"
  }
  parameter {
    name: "pAuthnSvc"
    type: "*UI;"
  }
  parameter {
    name: "pAuthzSvc"
    type: "*UI;"
  }
  parameter {
    name: "pServerPrincName"
    type: "**US;;"
  }
  parameter {
    name: "pAuthnLevel"
    type: "*UI;"
  }
  parameter {
    name: "pImpLevel"
    type: "*UI;"
  }
  parameter {
    name: "pAuthInfo"
    type: "**V;;"
  }
  parameter {
    name: "pCapabilities"
    type: "*UI;"
  }
}
function {
  name: "IClientSecurity_QueryBlanket_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IClientSecurity_SetBlanket_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIClientSecurity;;"
  }
  parameter {
    name: "pProxy"
    type: "*RIUnknown;;"
  }
  parameter {
    name: "AuthnSvc"
    type: "UI"
  }
  parameter {
    name: "AuthzSvc"
    type: "UI"
  }
  parameter {
    name: "pServerPrincName"
    type: "*US;"
  }
  parameter {
    name: "AuthnLevel"
    type: "UI"
  }
  parameter {
    name: "ImpLevel"
    type: "UI"
  }
  parameter {
    name: "pAuthInfo"
    type: "*V;"
  }
  parameter {
    name: "Capabilities"
    type: "UI"
  }
}
function {
  name: "IClientSecurity_SetBlanket_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IClientSecurity_CopyProxy_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIClientSecurity;;"
  }
  parameter {
    name: "pProxy"
    type: "*RIUnknown;;"
  }
  parameter {
    name: "ppCopy"
    type: "**RIUnknown;;;"
  }
}
function {
  name: "IClientSecurity_CopyProxy_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IServerSecurity_QueryBlanket_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIServerSecurity;;"
  }
  parameter {
    name: "pAuthnSvc"
    type: "*UI;"
  }
  parameter {
    name: "pAuthzSvc"
    type: "*UI;"
  }
  parameter {
    name: "pServerPrincName"
    type: "**US;;"
  }
  parameter {
    name: "pAuthnLevel"
    type: "*UI;"
  }
  parameter {
    name: "pImpLevel"
    type: "*UI;"
  }
  parameter {
    name: "pPrivs"
    type: "**V;;"
  }
  parameter {
    name: "pCapabilities"
    type: "*UI;"
  }
}
function {
  name: "IServerSecurity_QueryBlanket_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IServerSecurity_ImpersonateClient_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIServerSecurity;;"
  }
}
function {
  name: "IServerSecurity_ImpersonateClient_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IServerSecurity_RevertToSelf_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIServerSecurity;;"
  }
}
function {
  name: "IServerSecurity_RevertToSelf_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IServerSecurity_IsImpersonating_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIServerSecurity;;"
  }
}
function {
  name: "IServerSecurity_IsImpersonating_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IAsyncSetup_GetAsyncManager_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIAsyncSetup;;"
  }
  parameter {
    name: "riid"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "pOuter"
    type: "*RIUnknown;;"
  }
  parameter {
    name: "dwFlags"
    type: "UI"
  }
  parameter {
    name: "ppInner"
    type: "**RIUnknown;;;"
  }
  parameter {
    name: "ppAsyncMgr"
    type: "**RIAsyncManager;;;"
  }
}
function {
  name: "IAsyncSetup_GetAsyncManager_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IDirectWriterLock_WaitForWriteAccess_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIDirectWriterLock;;"
  }
  parameter {
    name: "dwTimeout"
    type: "UI"
  }
}
function {
  name: "IDirectWriterLock_WaitForWriteAccess_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IDirectWriterLock_ReleaseWriteAccess_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIDirectWriterLock;;"
  }
}
function {
  name: "IDirectWriterLock_ReleaseWriteAccess_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IDirectWriterLock_HaveWriteAccess_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIDirectWriterLock;;"
  }
}
function {
  name: "IDirectWriterLock_HaveWriteAccess_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ISynchronize_Wait_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RISynchronize;;"
  }
  parameter {
    name: "dwFlags"
    type: "UI"
  }
  parameter {
    name: "dwMilliseconds"
    type: "UI"
  }
}
function {
  name: "ISynchronize_Wait_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ISynchronize_Signal_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RISynchronize;;"
  }
}
function {
  name: "ISynchronize_Signal_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ISynchronize_Reset_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RISynchronize;;"
  }
}
function {
  name: "ISynchronize_Reset_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ISynchronizeHandle_GetHandle_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RISynchronizeHandle;;"
  }
  parameter {
    name: "ph"
    type: "**V;;"
  }
}
function {
  name: "ISynchronizeHandle_GetHandle_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ISynchronizeEvent_SetEventHandle_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RISynchronizeEvent;;"
  }
  parameter {
    name: "ph"
    type: "**V;;"
  }
}
function {
  name: "ISynchronizeEvent_SetEventHandle_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ISynchronizeContainer_AddSynchronize_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RISynchronizeContainer;;"
  }
  parameter {
    name: "pSync"
    type: "*RISynchronize;;"
  }
}
function {
  name: "ISynchronizeContainer_AddSynchronize_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ISynchronizeContainer_WaitMultiple_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RISynchronizeContainer;;"
  }
  parameter {
    name: "dwFlags"
    type: "UI"
  }
  parameter {
    name: "dwTimeOut"
    type: "UI"
  }
  parameter {
    name: "ppSync"
    type: "**RISynchronize;;;"
  }
}
function {
  name: "ISynchronizeContainer_WaitMultiple_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ISynchronizeMutex_ReleaseMutex_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RISynchronizeMutex;;"
  }
}
function {
  name: "ISynchronizeMutex_ReleaseMutex_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ICancelMethodCalls_Cancel_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RICancelMethodCalls;;"
  }
  parameter {
    name: "ulSeconds"
    type: "UI"
  }
}
function {
  name: "ICancelMethodCalls_Cancel_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ICancelMethodCalls_TestCancel_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RICancelMethodCalls;;"
  }
}
function {
  name: "ICancelMethodCalls_TestCancel_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IAsyncManager_CompleteCall_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIAsyncManager;;"
  }
  parameter {
    name: "Result"
    type: "I"
  }
}
function {
  name: "IAsyncManager_CompleteCall_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IAsyncManager_GetCallContext_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIAsyncManager;;"
  }
  parameter {
    name: "riid"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "pInterface"
    type: "**V;;"
  }
}
function {
  name: "IAsyncManager_GetCallContext_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IAsyncManager_GetState_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIAsyncManager;;"
  }
  parameter {
    name: "pulStateFlags"
    type: "*UI;"
  }
}
function {
  name: "IAsyncManager_GetState_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ICallFactory_CreateCall_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RICallFactory;;"
  }
  parameter {
    name: "riid"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "pCtrlUnk"
    type: "*RIUnknown;;"
  }
  parameter {
    name: "riid2"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "ppv"
    type: "**RIUnknown;;;"
  }
}
function {
  name: "ICallFactory_CreateCall_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IRpcOptions_Set_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIRpcOptions;;"
  }
  parameter {
    name: "pPrx"
    type: "*RIUnknown;;"
  }
  parameter {
    name: "dwProperty"
    type: "UI"
  }
  parameter {
    name: "dwValue"
    type: "UI"
  }
}
function {
  name: "IRpcOptions_Set_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IRpcOptions_Query_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIRpcOptions;;"
  }
  parameter {
    name: "pPrx"
    type: "*RIUnknown;;"
  }
  parameter {
    name: "dwProperty"
    type: "UI"
  }
  parameter {
    name: "pdwValue"
    type: "*UI;"
  }
}
function {
  name: "IRpcOptions_Query_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IRpcHelper_GetDCOMProtocolVersion_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIRpcHelper;;"
  }
  parameter {
    name: "pComVersion"
    type: "*UI;"
  }
}
function {
  name: "IRpcHelper_GetDCOMProtocolVersion_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IRpcHelper_GetIIDFromOBJREF_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIRpcHelper;;"
  }
  parameter {
    name: "pObjRef"
    type: "*V;"
  }
  parameter {
    name: "piid"
    type: "**R_GUID;;;"
  }
}
function {
  name: "IRpcHelper_GetIIDFromOBJREF_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IReleaseMarshalBuffers_ReleaseMarshalBuffer_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIReleaseMarshalBuffers;;"
  }
  parameter {
    name: "pMsg"
    type: "*RtagRPCOLEMESSAGE;;"
  }
  parameter {
    name: "dwFlags"
    type: "UI"
  }
  parameter {
    name: "pChnl"
    type: "*RIUnknown;;"
  }
}
function {
  name: "IReleaseMarshalBuffers_ReleaseMarshalBuffer_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IWaitMultiple_WaitMultiple_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIWaitMultiple;;"
  }
  parameter {
    name: "timeout"
    type: "UI"
  }
  parameter {
    name: "pSync"
    type: "**RISynchronize;;;"
  }
}
function {
  name: "IWaitMultiple_WaitMultiple_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IWaitMultiple_AddSynchronize_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIWaitMultiple;;"
  }
  parameter {
    name: "pSync"
    type: "*RISynchronize;;"
  }
}
function {
  name: "IWaitMultiple_AddSynchronize_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IUrlMon_AsyncGetClassBits_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIUrlMon;;"
  }
  parameter {
    name: "rclsid"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "pszTYPE"
    type: "*cUS;"
  }
  parameter {
    name: "pszExt"
    type: "*cUS;"
  }
  parameter {
    name: "dwFileVersionMS"
    type: "UI"
  }
  parameter {
    name: "dwFileVersionLS"
    type: "UI"
  }
  parameter {
    name: "pszCodeBase"
    type: "*cUS;"
  }
  parameter {
    name: "pbc"
    type: "*RIBindCtx;;"
  }
  parameter {
    name: "dwClassContext"
    type: "UI"
  }
  parameter {
    name: "riid"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "flags"
    type: "UI"
  }
}
function {
  name: "IUrlMon_AsyncGetClassBits_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IForegroundTransfer_AllowForegroundTransfer_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIForegroundTransfer;;"
  }
  parameter {
    name: "lpvReserved"
    type: "*V;"
  }
}
function {
  name: "IForegroundTransfer_AllowForegroundTransfer_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IAddrTrackingControl_EnableCOMDynamicAddrTracking_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIAddrTrackingControl;;"
  }
}
function {
  name: "IAddrTrackingControl_EnableCOMDynamicAddrTracking_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IAddrTrackingControl_DisableCOMDynamicAddrTracking_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIAddrTrackingControl;;"
  }
}
function {
  name: "IAddrTrackingControl_DisableCOMDynamicAddrTracking_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IAddrExclusionControl_GetCurrentAddrExclusionList_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIAddrExclusionControl;;"
  }
  parameter {
    name: "riid"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "ppEnumerator"
    type: "**V;;"
  }
}
function {
  name: "IAddrExclusionControl_GetCurrentAddrExclusionList_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IAddrExclusionControl_UpdateAddrExclusionList_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIAddrExclusionControl;;"
  }
  parameter {
    name: "pEnumerator"
    type: "*RIUnknown;;"
  }
}
function {
  name: "IAddrExclusionControl_UpdateAddrExclusionList_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IComThreadingInfo_GetCurrentApartmentType_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIComThreadingInfo;;"
  }
  parameter {
    name: "pAptType"
    type: "*X(Enum.enum _APTTYPE);"
  }
}
function {
  name: "IComThreadingInfo_GetCurrentApartmentType_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IComThreadingInfo_GetCurrentThreadType_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIComThreadingInfo;;"
  }
  parameter {
    name: "pThreadType"
    type: "*X(Enum.enum _THDTYPE);"
  }
}
function {
  name: "IComThreadingInfo_GetCurrentThreadType_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IComThreadingInfo_GetCurrentLogicalThreadId_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIComThreadingInfo;;"
  }
  parameter {
    name: "pguidLogicalThreadId"
    type: "*R_GUID;;"
  }
}
function {
  name: "IComThreadingInfo_GetCurrentLogicalThreadId_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IComThreadingInfo_SetCurrentLogicalThreadId_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIComThreadingInfo;;"
  }
  parameter {
    name: "rguid"
    type: "c*cR_GUID;;"
  }
}
function {
  name: "IComThreadingInfo_SetCurrentLogicalThreadId_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IProcessInitControl_ResetInitializerTimeout_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIProcessInitControl;;"
  }
  parameter {
    name: "dwSecondsRemaining"
    type: "UI"
  }
}
function {
  name: "IProcessInitControl_ResetInitializerTimeout_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IInitializeSpy_PreInitialize_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIInitializeSpy;;"
  }
  parameter {
    name: "dwCoInit"
    type: "UI"
  }
  parameter {
    name: "dwCurThreadAptRefs"
    type: "UI"
  }
}
function {
  name: "IInitializeSpy_PreInitialize_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IInitializeSpy_PostInitialize_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIInitializeSpy;;"
  }
  parameter {
    name: "hrCoInit"
    type: "I"
  }
  parameter {
    name: "dwCoInit"
    type: "UI"
  }
  parameter {
    name: "dwNewThreadAptRefs"
    type: "UI"
  }
}
function {
  name: "IInitializeSpy_PostInitialize_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IInitializeSpy_PreUninitialize_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIInitializeSpy;;"
  }
  parameter {
    name: "dwCurThreadAptRefs"
    type: "UI"
  }
}
function {
  name: "IInitializeSpy_PreUninitialize_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IInitializeSpy_PostUninitialize_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIInitializeSpy;;"
  }
  parameter {
    name: "dwNewThreadAptRefs"
    type: "UI"
  }
}
function {
  name: "IInitializeSpy_PostUninitialize_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IThumbnailExtractor_ExtractThumbnail_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIThumbnailExtractor;;"
  }
  parameter {
    name: "pStg"
    type: "*RIStorage;;"
  }
  parameter {
    name: "ulLength"
    type: "UI"
  }
  parameter {
    name: "ulHeight"
    type: "UI"
  }
  parameter {
    name: "pulOutputLength"
    type: "*UI;"
  }
  parameter {
    name: "pulOutputHeight"
    type: "*UI;"
  }
  parameter {
    name: "phOutputBitmap"
    type: "**RHBITMAP__;;;"
  }
}
function {
  name: "IThumbnailExtractor_ExtractThumbnail_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IThumbnailExtractor_OnFileUpdated_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIThumbnailExtractor;;"
  }
  parameter {
    name: "pStg"
    type: "*RIStorage;;"
  }
}
function {
  name: "IThumbnailExtractor_OnFileUpdated_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IGlobalOptions_Set_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIGlobalOptions;;"
  }
  parameter {
    name: "property"
    type: "X(Enum.enum tagGLOBALOPT_PROPERTIES)"
  }
  parameter {
    name: "value"
    type: "UI"
  }
}
function {
  name: "IGlobalOptions_Set_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IGlobalOptions_Query_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIGlobalOptions;;"
  }
  parameter {
    name: "property"
    type: "X(Enum.enum tagGLOBALOPT_PROPERTIES)"
  }
  parameter {
    name: "value"
    type: "*UI;"
  }
}
function {
  name: "IGlobalOptions_Query_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "SNB_UserSize"
  return_type: "UI"
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "***US;;;"
  }
}
function {
  name: "SNB_UserMarshal"
  return_type: "*UB;"
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UB;"
  }
  parameter {
    name: ""
    type: "***US;;;"
  }
}
function {
  name: "SNB_UserUnmarshal"
  return_type: "*UB;"
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UB;"
  }
  parameter {
    name: ""
    type: "***US;;;"
  }
}
function {
  name: "SNB_UserFree"
  return_type: "V"
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "***US;;;"
  }
}
function {
  name: "CLIPFORMAT_UserSize"
  return_type: "UI"
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*US;"
  }
}
function {
  name: "CLIPFORMAT_UserMarshal"
  return_type: "*UB;"
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UB;"
  }
  parameter {
    name: ""
    type: "*US;"
  }
}
function {
  name: "CLIPFORMAT_UserUnmarshal"
  return_type: "*UB;"
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UB;"
  }
  parameter {
    name: ""
    type: "*US;"
  }
}
function {
  name: "CLIPFORMAT_UserFree"
  return_type: "V"
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*US;"
  }
}
function {
  name: "STGMEDIUM_UserSize"
  return_type: "UI"
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*RtagSTGMEDIUM;;"
  }
}
function {
  name: "STGMEDIUM_UserMarshal"
  return_type: "*UB;"
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UB;"
  }
  parameter {
    name: ""
    type: "*RtagSTGMEDIUM;;"
  }
}
function {
  name: "STGMEDIUM_UserUnmarshal"
  return_type: "*UB;"
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UB;"
  }
  parameter {
    name: ""
    type: "*RtagSTGMEDIUM;;"
  }
}
function {
  name: "STGMEDIUM_UserFree"
  return_type: "V"
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*RtagSTGMEDIUM;;"
  }
}
function {
  name: "ASYNC_STGMEDIUM_UserSize"
  return_type: "UI"
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*RtagSTGMEDIUM;;"
  }
}
function {
  name: "ASYNC_STGMEDIUM_UserMarshal"
  return_type: "*UB;"
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UB;"
  }
  parameter {
    name: ""
    type: "*RtagSTGMEDIUM;;"
  }
}
function {
  name: "ASYNC_STGMEDIUM_UserUnmarshal"
  return_type: "*UB;"
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UB;"
  }
  parameter {
    name: ""
    type: "*RtagSTGMEDIUM;;"
  }
}
function {
  name: "ASYNC_STGMEDIUM_UserFree"
  return_type: "V"
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*RtagSTGMEDIUM;;"
  }
}
function {
  name: "FLAG_STGMEDIUM_UserSize"
  return_type: "UI"
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*R_FLAG_STGMEDIUM;;"
  }
}
function {
  name: "FLAG_STGMEDIUM_UserMarshal"
  return_type: "*UB;"
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UB;"
  }
  parameter {
    name: ""
    type: "*R_FLAG_STGMEDIUM;;"
  }
}
function {
  name: "FLAG_STGMEDIUM_UserUnmarshal"
  return_type: "*UB;"
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UB;"
  }
  parameter {
    name: ""
    type: "*R_FLAG_STGMEDIUM;;"
  }
}
function {
  name: "FLAG_STGMEDIUM_UserFree"
  return_type: "V"
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*R_FLAG_STGMEDIUM;;"
  }
}
function {
  name: "HBITMAP_UserSize"
  return_type: "UI"
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "**RHBITMAP__;;;"
  }
}
function {
  name: "HBITMAP_UserMarshal"
  return_type: "*UB;"
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UB;"
  }
  parameter {
    name: ""
    type: "**RHBITMAP__;;;"
  }
}
function {
  name: "HBITMAP_UserUnmarshal"
  return_type: "*UB;"
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UB;"
  }
  parameter {
    name: ""
    type: "**RHBITMAP__;;;"
  }
}
function {
  name: "HBITMAP_UserFree"
  return_type: "V"
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "**RHBITMAP__;;;"
  }
}
function {
  name: "CoBuildVersion"
  return_type: "UI"
}
function {
  name: "CoInitialize"
  return_type: "I"
  parameter {
    name: "lpReserved"
    type: "*V;"
  }
}
function {
  name: "CoInitializeEx"
  return_type: "I"
  parameter {
    name: "lpReserved"
    type: "*V;"
  }
  parameter {
    name: "dwCoInit"
    type: "UI"
  }
}
function {
  name: "CoUninitialize"
  return_type: "V"
}
function {
  name: "CoGetCurrentProcess"
  return_type: "UI"
}
function {
  name: "CoLoadLibrary"
  return_type: "*RHINSTANCE__;;"
  parameter {
    name: "lpszLibName"
    type: "*US;"
  }
  parameter {
    name: "bAutoFree"
    type: "I"
  }
}
function {
  name: "CoFreeAllLibraries"
  return_type: "V"
}
function {
  name: "CoFreeLibrary"
  return_type: "V"
  parameter {
    name: "hLibrary"
    type: "*RHINSTANCE__;;"
  }
}
function {
  name: "CoFreeUnusedLibraries"
  return_type: "V"
}
function {
  name: "CoFreeUnusedLibrariesEx"
  return_type: "V"
  parameter {
    name: "dwUnloadDelay"
    type: "UI"
  }
  parameter {
    name: "dwReserved"
    type: "UI"
  }
}
function {
  name: "CoCreateInstance"
  return_type: "I"
  parameter {
    name: "rclsid"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "pUnkOuter"
    type: "*RIUnknown;;"
  }
  parameter {
    name: "dwClsContext"
    type: "UI"
  }
  parameter {
    name: "iid"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "ppv"
    type: "**V;;"
  }
}
function {
  name: "CoCreateInstanceEx"
  return_type: "I"
  parameter {
    name: "rclsid"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "pUnkOuter"
    type: "*RIUnknown;;"
  }
  parameter {
    name: "dwClsContext"
    type: "UI"
  }
  parameter {
    name: "pServerInfo"
    type: "*R_COSERVERINFO;;"
  }
  parameter {
    name: "cmq"
    type: "UI"
  }
  parameter {
    name: "pResults"
    type: "*RtagMULTI_QI;;"
  }
}
function {
  name: "CoGetInstanceFromFile"
  return_type: "I"
  parameter {
    name: "pServerInfo"
    type: "*R_COSERVERINFO;;"
  }
  parameter {
    name: "pClsid"
    type: "*R_GUID;;"
  }
  parameter {
    name: "punkOuter"
    type: "*RIUnknown;;"
  }
  parameter {
    name: "dwClsCtx"
    type: "UI"
  }
  parameter {
    name: "grfMode"
    type: "UI"
  }
  parameter {
    name: "pwszName"
    type: "*US;"
  }
  parameter {
    name: "dwCount"
    type: "UI"
  }
  parameter {
    name: "pResults"
    type: "*RtagMULTI_QI;;"
  }
}
function {
  name: "CoGetInstanceFromIStorage"
  return_type: "I"
  parameter {
    name: "pServerInfo"
    type: "*R_COSERVERINFO;;"
  }
  parameter {
    name: "pClsid"
    type: "*R_GUID;;"
  }
  parameter {
    name: "punkOuter"
    type: "*RIUnknown;;"
  }
  parameter {
    name: "dwClsCtx"
    type: "UI"
  }
  parameter {
    name: "pstg"
    type: "*RIStorage;;"
  }
  parameter {
    name: "dwCount"
    type: "UI"
  }
  parameter {
    name: "pResults"
    type: "*RtagMULTI_QI;;"
  }
}
function {
  name: "CoGetMalloc"
  return_type: "I"
  parameter {
    name: "dwMemContext"
    type: "UI"
  }
  parameter {
    name: "lpMalloc"
    type: "**RIMalloc;;;"
  }
}
function {
  name: "CoTaskMemAlloc"
  return_type: "*V;"
  parameter {
    name: "size"
    type: "UI"
  }
}
function {
  name: "CoTaskMemFree"
  return_type: "V"
  parameter {
    name: "ptr"
    type: "*V;"
  }
}
function {
  name: "CoTaskMemRealloc"
  return_type: "*V;"
  parameter {
    name: "ptr"
    type: "*V;"
  }
  parameter {
    name: "size"
    type: "UI"
  }
}
function {
  name: "CoRegisterMallocSpy"
  return_type: "I"
  parameter {
    name: "pMallocSpy"
    type: "*RIMallocSpy;;"
  }
}
function {
  name: "CoRevokeMallocSpy"
  return_type: "I"
}
function {
  name: "CoGetContextToken"
  return_type: "I"
  parameter {
    name: "token"
    type: "*UI;"
  }
}
function {
  name: "CoGetClassObject"
  return_type: "I"
  parameter {
    name: "rclsid"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "dwClsContext"
    type: "UI"
  }
  parameter {
    name: "pServerInfo"
    type: "*R_COSERVERINFO;;"
  }
  parameter {
    name: "iid"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "ppv"
    type: "**V;;"
  }
}
function {
  name: "CoRegisterClassObject"
  return_type: "I"
  parameter {
    name: "rclsid"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "pUnk"
    type: "*RIUnknown;;"
  }
  parameter {
    name: "dwClsContext"
    type: "UI"
  }
  parameter {
    name: "flags"
    type: "UI"
  }
  parameter {
    name: "lpdwRegister"
    type: "*UI;"
  }
}
function {
  name: "CoRevokeClassObject"
  return_type: "I"
  parameter {
    name: "dwRegister"
    type: "UI"
  }
}
function {
  name: "CoGetPSClsid"
  return_type: "I"
  parameter {
    name: "riid"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "pclsid"
    type: "*R_GUID;;"
  }
}
function {
  name: "CoRegisterPSClsid"
  return_type: "I"
  parameter {
    name: "riid"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "rclsid"
    type: "c*cR_GUID;;"
  }
}
function {
  name: "CoRegisterSurrogate"
  return_type: "I"
  parameter {
    name: "pSurrogate"
    type: "*RISurrogate;;"
  }
}
function {
  name: "CoSuspendClassObjects"
  return_type: "I"
}
function {
  name: "CoResumeClassObjects"
  return_type: "I"
}
function {
  name: "CoAddRefServerProcess"
  return_type: "UI"
}
function {
  name: "CoReleaseServerProcess"
  return_type: "UI"
}
function {
  name: "CoCreateFreeThreadedMarshaler"
  return_type: "I"
  parameter {
    name: "punkOuter"
    type: "*RIUnknown;;"
  }
  parameter {
    name: "ppunkMarshal"
    type: "**RIUnknown;;;"
  }
}
function {
  name: "CoGetInterfaceAndReleaseStream"
  return_type: "I"
  parameter {
    name: "pStm"
    type: "*RIStream;;"
  }
  parameter {
    name: "iid"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "ppv"
    type: "**V;;"
  }
}
function {
  name: "CoGetMarshalSizeMax"
  return_type: "I"
  parameter {
    name: "pulSize"
    type: "*UI;"
  }
  parameter {
    name: "riid"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "pUnk"
    type: "*RIUnknown;;"
  }
  parameter {
    name: "dwDestContext"
    type: "UI"
  }
  parameter {
    name: "pvDestContext"
    type: "*V;"
  }
  parameter {
    name: "mshlflags"
    type: "UI"
  }
}
function {
  name: "CoGetStandardMarshal"
  return_type: "I"
  parameter {
    name: "riid"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "pUnk"
    type: "*RIUnknown;;"
  }
  parameter {
    name: "dwDestContext"
    type: "UI"
  }
  parameter {
    name: "pvDestContext"
    type: "*V;"
  }
  parameter {
    name: "mshlflags"
    type: "UI"
  }
  parameter {
    name: "ppMarshal"
    type: "**RIMarshal;;;"
  }
}
function {
  name: "CoMarshalHresult"
  return_type: "I"
  parameter {
    name: "pstm"
    type: "*RIStream;;"
  }
  parameter {
    name: "hresult"
    type: "I"
  }
}
function {
  name: "CoMarshalInterface"
  return_type: "I"
  parameter {
    name: "pStm"
    type: "*RIStream;;"
  }
  parameter {
    name: "riid"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "pUnk"
    type: "*RIUnknown;;"
  }
  parameter {
    name: "dwDestContext"
    type: "UI"
  }
  parameter {
    name: "pvDestContext"
    type: "*V;"
  }
  parameter {
    name: "mshlflags"
    type: "UI"
  }
}
function {
  name: "CoMarshalInterThreadInterfaceInStream"
  return_type: "I"
  parameter {
    name: "riid"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "pUnk"
    type: "*RIUnknown;;"
  }
  parameter {
    name: "ppStm"
    type: "**RIStream;;;"
  }
}
function {
  name: "CoReleaseMarshalData"
  return_type: "I"
  parameter {
    name: "pStm"
    type: "*RIStream;;"
  }
}
function {
  name: "CoDisconnectObject"
  return_type: "I"
  parameter {
    name: "lpUnk"
    type: "*RIUnknown;;"
  }
  parameter {
    name: "reserved"
    type: "UI"
  }
}
function {
  name: "CoUnmarshalHresult"
  return_type: "I"
  parameter {
    name: "pstm"
    type: "*RIStream;;"
  }
  parameter {
    name: "phresult"
    type: "*I;"
  }
}
function {
  name: "CoUnmarshalInterface"
  return_type: "I"
  parameter {
    name: "pStm"
    type: "*RIStream;;"
  }
  parameter {
    name: "riid"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "ppv"
    type: "**V;;"
  }
}
function {
  name: "CoLockObjectExternal"
  return_type: "I"
  parameter {
    name: "pUnk"
    type: "*RIUnknown;;"
  }
  parameter {
    name: "fLock"
    type: "I"
  }
  parameter {
    name: "fLastUnlockReleases"
    type: "I"
  }
}
function {
  name: "CoIsHandlerConnected"
  return_type: "I"
  parameter {
    name: "pUnk"
    type: "*RIUnknown;;"
  }
}
function {
  name: "CoInitializeSecurity"
  return_type: "I"
  parameter {
    name: "pSecDesc"
    type: "*V;"
  }
  parameter {
    name: "cAuthSvc"
    type: "I"
  }
  parameter {
    name: "asAuthSvc"
    type: "*RtagSOLE_AUTHENTICATION_SERVICE;;"
  }
  parameter {
    name: "pReserved1"
    type: "*V;"
  }
  parameter {
    name: "dwAuthnLevel"
    type: "UI"
  }
  parameter {
    name: "dwImpLevel"
    type: "UI"
  }
  parameter {
    name: "pReserved2"
    type: "*V;"
  }
  parameter {
    name: "dwCapabilities"
    type: "UI"
  }
  parameter {
    name: "pReserved3"
    type: "*V;"
  }
}
function {
  name: "CoGetCallContext"
  return_type: "I"
  parameter {
    name: "riid"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "ppInterface"
    type: "**V;;"
  }
}
function {
  name: "CoSwitchCallContext"
  return_type: "I"
  parameter {
    name: "pContext"
    type: "*RIUnknown;;"
  }
  parameter {
    name: "ppOldContext"
    type: "**RIUnknown;;;"
  }
}
function {
  name: "CoQueryAuthenticationServices"
  return_type: "I"
  parameter {
    name: "pcAuthSvc"
    type: "*UI;"
  }
  parameter {
    name: "asAuthSvc"
    type: "**RtagSOLE_AUTHENTICATION_SERVICE;;;"
  }
}
function {
  name: "CoQueryProxyBlanket"
  return_type: "I"
  parameter {
    name: "pProxy"
    type: "*RIUnknown;;"
  }
  parameter {
    name: "pwAuthnSvc"
    type: "*UI;"
  }
  parameter {
    name: "pAuthzSvc"
    type: "*UI;"
  }
  parameter {
    name: "pServerPrincName"
    type: "**US;;"
  }
  parameter {
    name: "pAuthnLevel"
    type: "*UI;"
  }
  parameter {
    name: "pImpLevel"
    type: "*UI;"
  }
  parameter {
    name: "pAuthInfo"
    type: "**V;;"
  }
  parameter {
    name: "pCapabilities"
    type: "*UI;"
  }
}
function {
  name: "CoSetProxyBlanket"
  return_type: "I"
  parameter {
    name: "pProxy"
    type: "*RIUnknown;;"
  }
  parameter {
    name: "dwAuthnSvc"
    type: "UI"
  }
  parameter {
    name: "dwAuthzSvc"
    type: "UI"
  }
  parameter {
    name: "pServerPrincName"
    type: "*US;"
  }
  parameter {
    name: "dwAuthnLevel"
    type: "UI"
  }
  parameter {
    name: "dwImpLevel"
    type: "UI"
  }
  parameter {
    name: "pAuthInfo"
    type: "*V;"
  }
  parameter {
    name: "dwCapabilities"
    type: "UI"
  }
}
function {
  name: "CoCopyProxy"
  return_type: "I"
  parameter {
    name: "pProxy"
    type: "*RIUnknown;;"
  }
  parameter {
    name: "ppCopy"
    type: "**RIUnknown;;;"
  }
}
function {
  name: "CoImpersonateClient"
  return_type: "I"
}
function {
  name: "CoQueryClientBlanket"
  return_type: "I"
  parameter {
    name: "pAuthnSvc"
    type: "*UI;"
  }
  parameter {
    name: "pAuthzSvc"
    type: "*UI;"
  }
  parameter {
    name: "pServerPrincName"
    type: "**US;;"
  }
  parameter {
    name: "pAuthnLevel"
    type: "*UI;"
  }
  parameter {
    name: "pImpLevel"
    type: "*UI;"
  }
  parameter {
    name: "pPrivs"
    type: "**V;;"
  }
  parameter {
    name: "pCapabilities"
    type: "*UI;"
  }
}
function {
  name: "CoRevertToSelf"
  return_type: "I"
}
function {
  name: "CoGetTreatAsClass"
  return_type: "I"
  parameter {
    name: "clsidOld"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "pClsidNew"
    type: "*R_GUID;;"
  }
}
function {
  name: "CoTreatAsClass"
  return_type: "I"
  parameter {
    name: "clsidOld"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "clsidNew"
    type: "c*cR_GUID;;"
  }
}
function {
  name: "CoAllowSetForegroundWindow"
  return_type: "I"
  parameter {
    name: "pUnk"
    type: "*RIUnknown;;"
  }
  parameter {
    name: "lpvReserved"
    type: "*V;"
  }
}
function {
  name: "CoGetObjectContext"
  return_type: "I"
  parameter {
    name: "riid"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "ppv"
    type: "**V;;"
  }
}
function {
  name: "CoCreateGuid"
  return_type: "I"
  parameter {
    name: "pguid"
    type: "*R_GUID;;"
  }
}
function {
  name: "CoIsOle1Class"
  return_type: "I"
  parameter {
    name: "rclsid"
    type: "c*cR_GUID;;"
  }
}
function {
  name: "CoDosDateTimeToFileTime"
  return_type: "I"
  parameter {
    name: "nDosDate"
    type: "US"
  }
  parameter {
    name: "nDosTime"
    type: "US"
  }
  parameter {
    name: "lpFileTime"
    type: "*R_FILETIME;;"
  }
}
function {
  name: "CoFileTimeToDosDateTime"
  return_type: "I"
  parameter {
    name: "lpFileTime"
    type: "*R_FILETIME;;"
  }
  parameter {
    name: "lpDosDate"
    type: "*US;"
  }
  parameter {
    name: "lpDosTime"
    type: "*US;"
  }
}
function {
  name: "CoFileTimeNow"
  return_type: "I"
  parameter {
    name: "lpFileTime"
    type: "*R_FILETIME;;"
  }
}
function {
  name: "CoRegisterMessageFilter"
  return_type: "I"
  parameter {
    name: "lpMessageFilter"
    type: "*RIMessageFilter;;"
  }
  parameter {
    name: "lplpMessageFilter"
    type: "**RIMessageFilter;;;"
  }
}
function {
  name: "CoRegisterChannelHook"
  return_type: "I"
  parameter {
    name: "ExtensionGuid"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "pChannelHook"
    type: "*RIChannelHook;;"
  }
}
function {
  name: "CoWaitForMultipleHandles"
  return_type: "I"
  parameter {
    name: "dwFlags"
    type: "UI"
  }
  parameter {
    name: "dwTimeout"
    type: "UI"
  }
  parameter {
    name: "cHandles"
    type: "UI"
  }
  parameter {
    name: "pHandles"
    type: "**V;;"
  }
  parameter {
    name: "lpdwindex"
    type: "*UI;"
  }
}
function {
  name: "StringFromCLSID"
  return_type: "I"
  parameter {
    name: "id"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: ""
    type: "**US;;"
  }
}
function {
  name: "CLSIDFromString"
  return_type: "I"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*R_GUID;;"
  }
}
function {
  name: "CLSIDFromProgID"
  return_type: "I"
  parameter {
    name: "progid"
    type: "*cUS;"
  }
  parameter {
    name: "riid"
    type: "*R_GUID;;"
  }
}
function {
  name: "ProgIDFromCLSID"
  return_type: "I"
  parameter {
    name: "clsid"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "lplpszProgID"
    type: "**US;;"
  }
}
function {
  name: "StringFromGUID2"
  return_type: "I"
  parameter {
    name: "id"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "str"
    type: "*US;"
  }
  parameter {
    name: "cmax"
    type: "I"
  }
}
function {
  name: "DllGetClassObject"
  return_type: "I"
  parameter {
    name: "rclsid"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "riid"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "ppv"
    type: "**V;;"
  }
}
function {
  name: "DllCanUnloadNow"
  return_type: "I"
}
function {
  name: "CreateDataAdviseHolder"
  return_type: "I"
  parameter {
    name: "ppDAHolder"
    type: "**RIDataAdviseHolder;;;"
  }
}
function {
  name: "CreateDataCache"
  return_type: "I"
  parameter {
    name: "pUnkOuter"
    type: "*RIUnknown;;"
  }
  parameter {
    name: "rclsid"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "iid"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "ppv"
    type: "**V;;"
  }
}
function {
  name: "BindMoniker"
  return_type: "I"
  parameter {
    name: "pmk"
    type: "*RIMoniker;;"
  }
  parameter {
    name: "grfOpt"
    type: "UI"
  }
  parameter {
    name: "iidResult"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "ppvResult"
    type: "**V;;"
  }
}
function {
  name: "CoGetObject"
  return_type: "I"
  parameter {
    name: "pszName"
    type: "*cUS;"
  }
  parameter {
    name: "pBindOptions"
    type: "*RtagBIND_OPTS;;"
  }
  parameter {
    name: "riid"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "ppv"
    type: "**V;;"
  }
}
function {
  name: "CreateAntiMoniker"
  return_type: "I"
  parameter {
    name: "ppmk"
    type: "**RIMoniker;;;"
  }
}
function {
  name: "CreateBindCtx"
  return_type: "I"
  parameter {
    name: "reserved"
    type: "UI"
  }
  parameter {
    name: "ppbc"
    type: "**RIBindCtx;;;"
  }
}
function {
  name: "CreateClassMoniker"
  return_type: "I"
  parameter {
    name: "rclsid"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "ppmk"
    type: "**RIMoniker;;;"
  }
}
function {
  name: "CreateFileMoniker"
  return_type: "I"
  parameter {
    name: "lpszPathName"
    type: "*cUS;"
  }
  parameter {
    name: "ppmk"
    type: "**RIMoniker;;;"
  }
}
function {
  name: "CreateGenericComposite"
  return_type: "I"
  parameter {
    name: "pmkFirst"
    type: "*RIMoniker;;"
  }
  parameter {
    name: "pmkRest"
    type: "*RIMoniker;;"
  }
  parameter {
    name: "ppmkComposite"
    type: "**RIMoniker;;;"
  }
}
function {
  name: "CreateItemMoniker"
  return_type: "I"
  parameter {
    name: "lpszDelim"
    type: "*cUS;"
  }
  parameter {
    name: "lpszItem"
    type: "*cUS;"
  }
  parameter {
    name: "ppmk"
    type: "**RIMoniker;;;"
  }
}
function {
  name: "CreateObjrefMoniker"
  return_type: "I"
  parameter {
    name: "punk"
    type: "*RIUnknown;;"
  }
  parameter {
    name: "ppmk"
    type: "**RIMoniker;;;"
  }
}
function {
  name: "CreatePointerMoniker"
  return_type: "I"
  parameter {
    name: "punk"
    type: "*RIUnknown;;"
  }
  parameter {
    name: "ppmk"
    type: "**RIMoniker;;;"
  }
}
function {
  name: "GetClassFile"
  return_type: "I"
  parameter {
    name: "filePathName"
    type: "*cUS;"
  }
  parameter {
    name: "pclsid"
    type: "*R_GUID;;"
  }
}
function {
  name: "GetRunningObjectTable"
  return_type: "I"
  parameter {
    name: "reserved"
    type: "UI"
  }
  parameter {
    name: "pprot"
    type: "**RIRunningObjectTable;;;"
  }
}
function {
  name: "MkParseDisplayName"
  return_type: "I"
  parameter {
    name: "pbc"
    type: "*RIBindCtx;;"
  }
  parameter {
    name: "szUserName"
    type: "*cUS;"
  }
  parameter {
    name: "pchEaten"
    type: "*UI;"
  }
  parameter {
    name: "ppmk"
    type: "**RIMoniker;;;"
  }
}
function {
  name: "MonikerCommonPrefixWith"
  return_type: "I"
  parameter {
    name: "pmkThis"
    type: "*RIMoniker;;"
  }
  parameter {
    name: "pmkOther"
    type: "*RIMoniker;;"
  }
  parameter {
    name: "ppmkCommon"
    type: "**RIMoniker;;;"
  }
}
function {
  name: "MonikerRelativePathTo"
  return_type: "I"
  parameter {
    name: "pmkSrc"
    type: "*RIMoniker;;"
  }
  parameter {
    name: "pmkDest"
    type: "*RIMoniker;;"
  }
  parameter {
    name: "ppmkRelPath"
    type: "**RIMoniker;;;"
  }
  parameter {
    name: "dwReserved"
    type: "I"
  }
}
function {
  name: "StgCreateDocfile"
  return_type: "I"
  parameter {
    name: "pwcsName"
    type: "*cUS;"
  }
  parameter {
    name: "grfMode"
    type: "UI"
  }
  parameter {
    name: "reserved"
    type: "UI"
  }
  parameter {
    name: "ppstgOpen"
    type: "**RIStorage;;;"
  }
}
function {
  name: "StgCreateStorageEx"
  return_type: "I"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*RtagSTGOPTIONS;;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "c*cR_GUID;;"
  }
  parameter {
    name: ""
    type: "**V;;"
  }
}
function {
  name: "StgIsStorageFile"
  return_type: "I"
  parameter {
    name: "fn"
    type: "*cUS;"
  }
}
function {
  name: "StgIsStorageILockBytes"
  return_type: "I"
  parameter {
    name: "plkbyt"
    type: "*RILockBytes;;"
  }
}
function {
  name: "StgOpenStorage"
  return_type: "I"
  parameter {
    name: "pwcsName"
    type: "*cUS;"
  }
  parameter {
    name: "pstgPriority"
    type: "*RIStorage;;"
  }
  parameter {
    name: "grfMode"
    type: "UI"
  }
  parameter {
    name: "snbExclude"
    type: "**US;;"
  }
  parameter {
    name: "reserved"
    type: "UI"
  }
  parameter {
    name: "ppstgOpen"
    type: "**RIStorage;;;"
  }
}
function {
  name: "StgOpenStorageEx"
  return_type: "I"
  parameter {
    name: "pwcwName"
    type: "*cUS;"
  }
  parameter {
    name: "grfMode"
    type: "UI"
  }
  parameter {
    name: "stgfmt"
    type: "UI"
  }
  parameter {
    name: "grfAttrs"
    type: "UI"
  }
  parameter {
    name: "pStgOptions"
    type: "*RtagSTGOPTIONS;;"
  }
  parameter {
    name: "reserved"
    type: "*V;"
  }
  parameter {
    name: "riid"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "ppObjectOpen"
    type: "**V;;"
  }
}
function {
  name: "StgCreateDocfileOnILockBytes"
  return_type: "I"
  parameter {
    name: "plkbyt"
    type: "*RILockBytes;;"
  }
  parameter {
    name: "grfMode"
    type: "UI"
  }
  parameter {
    name: "reserved"
    type: "UI"
  }
  parameter {
    name: "ppstgOpen"
    type: "**RIStorage;;;"
  }
}
function {
  name: "StgOpenStorageOnILockBytes"
  return_type: "I"
  parameter {
    name: "plkbyt"
    type: "*RILockBytes;;"
  }
  parameter {
    name: "pstgPriority"
    type: "*RIStorage;;"
  }
  parameter {
    name: "grfMode"
    type: "UI"
  }
  parameter {
    name: "snbExclude"
    type: "**US;;"
  }
  parameter {
    name: "reserved"
    type: "UI"
  }
  parameter {
    name: "ppstgOpen"
    type: "**RIStorage;;;"
  }
}
function {
  name: "StgSetTimes"
  return_type: "I"
  parameter {
    name: "lpszName"
    type: "*cUS;"
  }
  parameter {
    name: "pctime"
    type: "*cR_FILETIME;;"
  }
  parameter {
    name: "patime"
    type: "*cR_FILETIME;;"
  }
  parameter {
    name: "pmtime"
    type: "*cR_FILETIME;;"
  }
}
function {
  name: "IOleWindow_GetWindow_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIOleWindow;;"
  }
  parameter {
    name: "phwnd"
    type: "**RHWND__;;;"
  }
}
function {
  name: "IOleWindow_GetWindow_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IOleWindow_ContextSensitiveHelp_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIOleWindow;;"
  }
  parameter {
    name: "fEnterMode"
    type: "I"
  }
}
function {
  name: "IOleWindow_ContextSensitiveHelp_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IOleInPlaceObject_InPlaceDeactivate_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIOleInPlaceObject;;"
  }
}
function {
  name: "IOleInPlaceObject_InPlaceDeactivate_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IOleInPlaceObject_UIDeactivate_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIOleInPlaceObject;;"
  }
}
function {
  name: "IOleInPlaceObject_UIDeactivate_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IOleInPlaceObject_SetObjectRects_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIOleInPlaceObject;;"
  }
  parameter {
    name: "lprcPosRect"
    type: "*cRtagRECT;;"
  }
  parameter {
    name: "lprcClipRect"
    type: "*cRtagRECT;;"
  }
}
function {
  name: "IOleInPlaceObject_SetObjectRects_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IOleInPlaceObject_ReactivateAndUndo_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIOleInPlaceObject;;"
  }
}
function {
  name: "IOleInPlaceObject_ReactivateAndUndo_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IOleInPlaceUIWindow_GetBorder_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIOleInPlaceUIWindow;;"
  }
  parameter {
    name: "lprectBorder"
    type: "*RtagRECT;;"
  }
}
function {
  name: "IOleInPlaceUIWindow_GetBorder_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IOleInPlaceUIWindow_RequestBorderSpace_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIOleInPlaceUIWindow;;"
  }
  parameter {
    name: "pborderwidths"
    type: "*cRtagRECT;;"
  }
}
function {
  name: "IOleInPlaceUIWindow_RequestBorderSpace_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IOleInPlaceUIWindow_SetBorderSpace_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIOleInPlaceUIWindow;;"
  }
  parameter {
    name: "pborderwidths"
    type: "*cRtagRECT;;"
  }
}
function {
  name: "IOleInPlaceUIWindow_SetBorderSpace_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IOleInPlaceUIWindow_SetActiveObject_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIOleInPlaceUIWindow;;"
  }
  parameter {
    name: "pActiveObject"
    type: "*RIOleInPlaceActiveObject;;"
  }
  parameter {
    name: "pszObjName"
    type: "*cUS;"
  }
}
function {
  name: "IOleInPlaceUIWindow_SetActiveObject_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IOleInPlaceFrame_InsertMenus_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIOleInPlaceFrame;;"
  }
  parameter {
    name: "hmenuShared"
    type: "*RHMENU__;;"
  }
  parameter {
    name: "lpMenuWidths"
    type: "*RtagOleMenuGroupWidths;;"
  }
}
function {
  name: "IOleInPlaceFrame_InsertMenus_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IOleInPlaceFrame_SetMenu_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIOleInPlaceFrame;;"
  }
  parameter {
    name: "hmenuShared"
    type: "*RHMENU__;;"
  }
  parameter {
    name: "holemenu"
    type: "*V;"
  }
  parameter {
    name: "hwndActiveObject"
    type: "*RHWND__;;"
  }
}
function {
  name: "IOleInPlaceFrame_SetMenu_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IOleInPlaceFrame_RemoveMenus_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIOleInPlaceFrame;;"
  }
  parameter {
    name: "hmenuShared"
    type: "*RHMENU__;;"
  }
}
function {
  name: "IOleInPlaceFrame_RemoveMenus_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IOleInPlaceFrame_SetStatusText_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIOleInPlaceFrame;;"
  }
  parameter {
    name: "pszStatusText"
    type: "*cUS;"
  }
}
function {
  name: "IOleInPlaceFrame_SetStatusText_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IOleInPlaceFrame_EnableModeless_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIOleInPlaceFrame;;"
  }
  parameter {
    name: "fEnable"
    type: "I"
  }
}
function {
  name: "IOleInPlaceFrame_EnableModeless_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IOleInPlaceFrame_TranslateAccelerator_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIOleInPlaceFrame;;"
  }
  parameter {
    name: "lpmsg"
    type: "*RtagMSG;;"
  }
  parameter {
    name: "wID"
    type: "US"
  }
}
function {
  name: "IOleInPlaceFrame_TranslateAccelerator_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IOleInPlaceActiveObject_RemoteTranslateAccelerator_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIOleInPlaceActiveObject;;"
  }
}
function {
  name: "IOleInPlaceActiveObject_RemoteTranslateAccelerator_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IOleInPlaceActiveObject_OnFrameWindowActivate_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIOleInPlaceActiveObject;;"
  }
  parameter {
    name: "fActivate"
    type: "I"
  }
}
function {
  name: "IOleInPlaceActiveObject_OnFrameWindowActivate_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IOleInPlaceActiveObject_OnDocWindowActivate_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIOleInPlaceActiveObject;;"
  }
  parameter {
    name: "fActivate"
    type: "I"
  }
}
function {
  name: "IOleInPlaceActiveObject_OnDocWindowActivate_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IOleInPlaceActiveObject_RemoteResizeBorder_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIOleInPlaceActiveObject;;"
  }
  parameter {
    name: "prcBorder"
    type: "*cRtagRECT;;"
  }
  parameter {
    name: "riid"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "pUIWindow"
    type: "*RIOleInPlaceUIWindow;;"
  }
  parameter {
    name: "fFrameWindow"
    type: "I"
  }
}
function {
  name: "IOleInPlaceActiveObject_RemoteResizeBorder_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IOleInPlaceActiveObject_EnableModeless_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIOleInPlaceActiveObject;;"
  }
  parameter {
    name: "fEnable"
    type: "I"
  }
}
function {
  name: "IOleInPlaceActiveObject_EnableModeless_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IOleInPlaceActiveObject_TranslateAccelerator_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIOleInPlaceActiveObject;;"
  }
  parameter {
    name: "lpmsg"
    type: "*RtagMSG;;"
  }
}
function {
  name: "IOleInPlaceActiveObject_TranslateAccelerator_Stub"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIOleInPlaceActiveObject;;"
  }
}
function {
  name: "IOleInPlaceActiveObject_ResizeBorder_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIOleInPlaceActiveObject;;"
  }
  parameter {
    name: "prcBorder"
    type: "*cRtagRECT;;"
  }
  parameter {
    name: "pUIWindow"
    type: "*RIOleInPlaceUIWindow;;"
  }
  parameter {
    name: "fFrameWindow"
    type: "I"
  }
}
function {
  name: "IOleInPlaceActiveObject_ResizeBorder_Stub"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIOleInPlaceActiveObject;;"
  }
  parameter {
    name: "prcBorder"
    type: "*cRtagRECT;;"
  }
  parameter {
    name: "riid"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "pUIWindow"
    type: "*RIOleInPlaceUIWindow;;"
  }
  parameter {
    name: "fFrameWindow"
    type: "I"
  }
}
function {
  name: "IOleInPlaceSite_CanInPlaceActivate_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIOleInPlaceSite;;"
  }
}
function {
  name: "IOleInPlaceSite_CanInPlaceActivate_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IOleInPlaceSite_OnInPlaceActivate_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIOleInPlaceSite;;"
  }
}
function {
  name: "IOleInPlaceSite_OnInPlaceActivate_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IOleInPlaceSite_OnUIActivate_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIOleInPlaceSite;;"
  }
}
function {
  name: "IOleInPlaceSite_OnUIActivate_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IOleInPlaceSite_GetWindowContext_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIOleInPlaceSite;;"
  }
  parameter {
    name: "ppFrame"
    type: "**RIOleInPlaceFrame;;;"
  }
  parameter {
    name: "ppDoc"
    type: "**RIOleInPlaceUIWindow;;;"
  }
  parameter {
    name: "lprcPosRect"
    type: "*RtagRECT;;"
  }
  parameter {
    name: "lprcClipRect"
    type: "*RtagRECT;;"
  }
  parameter {
    name: "lpFrameInfo"
    type: "*RtagOleInPlaceFrameInfo;;"
  }
}
function {
  name: "IOleInPlaceSite_GetWindowContext_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IOleInPlaceSite_Scroll_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIOleInPlaceSite;;"
  }
  parameter {
    name: "scrollExtent"
    type: "RtagSIZE;"
  }
}
function {
  name: "IOleInPlaceSite_Scroll_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IOleInPlaceSite_OnUIDeactivate_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIOleInPlaceSite;;"
  }
  parameter {
    name: "fUndoable"
    type: "I"
  }
}
function {
  name: "IOleInPlaceSite_OnUIDeactivate_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IOleInPlaceSite_OnInPlaceDeactivate_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIOleInPlaceSite;;"
  }
}
function {
  name: "IOleInPlaceSite_OnInPlaceDeactivate_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IOleInPlaceSite_DiscardUndoState_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIOleInPlaceSite;;"
  }
}
function {
  name: "IOleInPlaceSite_DiscardUndoState_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IOleInPlaceSite_DeactivateAndUndo_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIOleInPlaceSite;;"
  }
}
function {
  name: "IOleInPlaceSite_DeactivateAndUndo_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IOleInPlaceSite_OnPosRectChange_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIOleInPlaceSite;;"
  }
  parameter {
    name: "lprcPosRect"
    type: "*cRtagRECT;;"
  }
}
function {
  name: "IOleInPlaceSite_OnPosRectChange_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IParseDisplayName_ParseDisplayName_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIParseDisplayName;;"
  }
  parameter {
    name: "pbc"
    type: "*RIBindCtx;;"
  }
  parameter {
    name: "pszDisplayName"
    type: "*US;"
  }
  parameter {
    name: "pchEaten"
    type: "*UI;"
  }
  parameter {
    name: "ppmkOut"
    type: "**RIMoniker;;;"
  }
}
function {
  name: "IParseDisplayName_ParseDisplayName_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IOleContainer_EnumObjects_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIOleContainer;;"
  }
  parameter {
    name: "grfFlags"
    type: "UI"
  }
  parameter {
    name: "ppenum"
    type: "**RIEnumUnknown;;;"
  }
}
function {
  name: "IOleContainer_EnumObjects_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IOleContainer_LockContainer_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIOleContainer;;"
  }
  parameter {
    name: "fLock"
    type: "I"
  }
}
function {
  name: "IOleContainer_LockContainer_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IOleItemContainer_GetObject_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIOleItemContainer;;"
  }
  parameter {
    name: "pszItem"
    type: "*US;"
  }
  parameter {
    name: "dwSpeedNeeded"
    type: "UI"
  }
  parameter {
    name: "pbc"
    type: "*RIBindCtx;;"
  }
  parameter {
    name: "riid"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "ppvObject"
    type: "**V;;"
  }
}
function {
  name: "IOleItemContainer_GetObject_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IOleItemContainer_GetObjectStorage_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIOleItemContainer;;"
  }
  parameter {
    name: "pszItem"
    type: "*US;"
  }
  parameter {
    name: "pbc"
    type: "*RIBindCtx;;"
  }
  parameter {
    name: "riid"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "ppvStorage"
    type: "**V;;"
  }
}
function {
  name: "IOleItemContainer_GetObjectStorage_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IOleItemContainer_IsRunning_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIOleItemContainer;;"
  }
  parameter {
    name: "pszItem"
    type: "*US;"
  }
}
function {
  name: "IOleItemContainer_IsRunning_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IOleLink_SetUpdateOptions_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIOleLink;;"
  }
  parameter {
    name: "dwUpdateOpt"
    type: "UI"
  }
}
function {
  name: "IOleLink_SetUpdateOptions_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IOleLink_GetUpdateOptions_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIOleLink;;"
  }
  parameter {
    name: "pdwUpdateOpt"
    type: "*UI;"
  }
}
function {
  name: "IOleLink_GetUpdateOptions_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IOleLink_SetSourceMoniker_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIOleLink;;"
  }
  parameter {
    name: "pmk"
    type: "*RIMoniker;;"
  }
  parameter {
    name: "rclsid"
    type: "c*cR_GUID;;"
  }
}
function {
  name: "IOleLink_SetSourceMoniker_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IOleLink_GetSourceMoniker_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIOleLink;;"
  }
  parameter {
    name: "ppmk"
    type: "**RIMoniker;;;"
  }
}
function {
  name: "IOleLink_GetSourceMoniker_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IOleLink_SetSourceDisplayName_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIOleLink;;"
  }
  parameter {
    name: "pszStatusText"
    type: "*cUS;"
  }
}
function {
  name: "IOleLink_SetSourceDisplayName_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IOleLink_GetSourceDisplayName_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIOleLink;;"
  }
  parameter {
    name: "ppszDisplayName"
    type: "**US;;"
  }
}
function {
  name: "IOleLink_GetSourceDisplayName_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IOleLink_BindToSource_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIOleLink;;"
  }
  parameter {
    name: "bindflags"
    type: "UI"
  }
  parameter {
    name: "pbc"
    type: "*RIBindCtx;;"
  }
}
function {
  name: "IOleLink_BindToSource_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IOleLink_BindIfRunning_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIOleLink;;"
  }
}
function {
  name: "IOleLink_BindIfRunning_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IOleLink_GetBoundSource_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIOleLink;;"
  }
  parameter {
    name: "ppunk"
    type: "**RIUnknown;;;"
  }
}
function {
  name: "IOleLink_GetBoundSource_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IOleLink_UnbindSource_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIOleLink;;"
  }
}
function {
  name: "IOleLink_UnbindSource_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IOleLink_Update_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIOleLink;;"
  }
  parameter {
    name: "pbc"
    type: "*RIBindCtx;;"
  }
}
function {
  name: "IOleLink_Update_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IOleClientSite_SaveObject_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIOleClientSite;;"
  }
}
function {
  name: "IOleClientSite_SaveObject_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IOleClientSite_GetMoniker_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIOleClientSite;;"
  }
  parameter {
    name: "dwAssign"
    type: "UI"
  }
  parameter {
    name: "dwWhichMoniker"
    type: "UI"
  }
  parameter {
    name: "ppmk"
    type: "**RIMoniker;;;"
  }
}
function {
  name: "IOleClientSite_GetMoniker_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IOleClientSite_GetContainer_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIOleClientSite;;"
  }
  parameter {
    name: "ppContainer"
    type: "**RIOleContainer;;;"
  }
}
function {
  name: "IOleClientSite_GetContainer_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IOleClientSite_ShowObject_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIOleClientSite;;"
  }
}
function {
  name: "IOleClientSite_ShowObject_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IOleClientSite_OnShowWindow_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIOleClientSite;;"
  }
  parameter {
    name: "fShow"
    type: "I"
  }
}
function {
  name: "IOleClientSite_OnShowWindow_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IOleClientSite_RequestNewObjectLayout_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIOleClientSite;;"
  }
}
function {
  name: "IOleClientSite_RequestNewObjectLayout_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IOleCache_Cache_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIOleCache;;"
  }
  parameter {
    name: "pformatetc"
    type: "*RtagFORMATETC;;"
  }
  parameter {
    name: "advf"
    type: "UI"
  }
  parameter {
    name: "pdwConnection"
    type: "*UI;"
  }
}
function {
  name: "IOleCache_Cache_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IOleCache_Uncache_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIOleCache;;"
  }
  parameter {
    name: "dwConnection"
    type: "UI"
  }
}
function {
  name: "IOleCache_Uncache_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IOleCache_EnumCache_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIOleCache;;"
  }
  parameter {
    name: "ppenumSTATDATA"
    type: "**RIEnumSTATDATA;;;"
  }
}
function {
  name: "IOleCache_EnumCache_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IOleCache_InitCache_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIOleCache;;"
  }
  parameter {
    name: "pDataObject"
    type: "*RIDataObject;;"
  }
}
function {
  name: "IOleCache_InitCache_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IOleCache_SetData_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIOleCache;;"
  }
  parameter {
    name: "pformatetc"
    type: "*RtagFORMATETC;;"
  }
  parameter {
    name: "pmedium"
    type: "*RtagSTGMEDIUM;;"
  }
  parameter {
    name: "fRelease"
    type: "I"
  }
}
function {
  name: "IOleCache_SetData_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IOleCache2_RemoteUpdateCache_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIOleCache2;;"
  }
  parameter {
    name: "pDataObject"
    type: "*RIDataObject;;"
  }
  parameter {
    name: "grfUpdf"
    type: "UI"
  }
  parameter {
    name: "pReserved"
    type: "I"
  }
}
function {
  name: "IOleCache2_RemoteUpdateCache_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IOleCache2_DiscardCache_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIOleCache2;;"
  }
  parameter {
    name: "dwDiscardOptions"
    type: "UI"
  }
}
function {
  name: "IOleCache2_DiscardCache_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IOleCache2_UpdateCache_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIOleCache2;;"
  }
  parameter {
    name: "pDataObject"
    type: "*RIDataObject;;"
  }
  parameter {
    name: "grfUpdf"
    type: "UI"
  }
  parameter {
    name: "pReserved"
    type: "*V;"
  }
}
function {
  name: "IOleCache2_UpdateCache_Stub"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIOleCache2;;"
  }
  parameter {
    name: "pDataObject"
    type: "*RIDataObject;;"
  }
  parameter {
    name: "grfUpdf"
    type: "UI"
  }
  parameter {
    name: "pReserved"
    type: "I"
  }
}
function {
  name: "IOleCacheControl_OnRun_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIOleCacheControl;;"
  }
  parameter {
    name: "pDataObject"
    type: "*RIDataObject;;"
  }
}
function {
  name: "IOleCacheControl_OnRun_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IOleCacheControl_OnStop_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIOleCacheControl;;"
  }
}
function {
  name: "IOleCacheControl_OnStop_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IEnumOLEVERB_RemoteNext_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIEnumOLEVERB;;"
  }
  parameter {
    name: "celt"
    type: "UI"
  }
  parameter {
    name: "rgelt"
    type: "*RtagOLEVERB;;"
  }
  parameter {
    name: "pceltFetched"
    type: "*UI;"
  }
}
function {
  name: "IEnumOLEVERB_RemoteNext_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IEnumOLEVERB_Skip_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIEnumOLEVERB;;"
  }
  parameter {
    name: "celt"
    type: "UI"
  }
}
function {
  name: "IEnumOLEVERB_Skip_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IEnumOLEVERB_Reset_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIEnumOLEVERB;;"
  }
}
function {
  name: "IEnumOLEVERB_Reset_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IEnumOLEVERB_Clone_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIEnumOLEVERB;;"
  }
  parameter {
    name: "ppenum"
    type: "**RIEnumOLEVERB;;;"
  }
}
function {
  name: "IEnumOLEVERB_Clone_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IEnumOLEVERB_Next_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIEnumOLEVERB;;"
  }
  parameter {
    name: "celt"
    type: "UI"
  }
  parameter {
    name: "rgelt"
    type: "*RtagOLEVERB;;"
  }
  parameter {
    name: "pceltFetched"
    type: "*UI;"
  }
}
function {
  name: "IEnumOLEVERB_Next_Stub"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIEnumOLEVERB;;"
  }
  parameter {
    name: "celt"
    type: "UI"
  }
  parameter {
    name: "rgelt"
    type: "*RtagOLEVERB;;"
  }
  parameter {
    name: "pceltFetched"
    type: "*UI;"
  }
}
function {
  name: "IOleObject_SetClientSite_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIOleObject;;"
  }
  parameter {
    name: "pClientSite"
    type: "*RIOleClientSite;;"
  }
}
function {
  name: "IOleObject_SetClientSite_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IOleObject_GetClientSite_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIOleObject;;"
  }
  parameter {
    name: "ppClientSite"
    type: "**RIOleClientSite;;;"
  }
}
function {
  name: "IOleObject_GetClientSite_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IOleObject_SetHostNames_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIOleObject;;"
  }
  parameter {
    name: "szContainerApp"
    type: "*cUS;"
  }
  parameter {
    name: "szContainerObj"
    type: "*cUS;"
  }
}
function {
  name: "IOleObject_SetHostNames_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IOleObject_Close_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIOleObject;;"
  }
  parameter {
    name: "dwSaveOption"
    type: "UI"
  }
}
function {
  name: "IOleObject_Close_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IOleObject_SetMoniker_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIOleObject;;"
  }
  parameter {
    name: "dwWhichMoniker"
    type: "UI"
  }
  parameter {
    name: "pmk"
    type: "*RIMoniker;;"
  }
}
function {
  name: "IOleObject_SetMoniker_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IOleObject_GetMoniker_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIOleObject;;"
  }
  parameter {
    name: "dwAssign"
    type: "UI"
  }
  parameter {
    name: "dwWhichMoniker"
    type: "UI"
  }
  parameter {
    name: "ppmk"
    type: "**RIMoniker;;;"
  }
}
function {
  name: "IOleObject_GetMoniker_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IOleObject_InitFromData_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIOleObject;;"
  }
  parameter {
    name: "pDataObject"
    type: "*RIDataObject;;"
  }
  parameter {
    name: "fCreation"
    type: "I"
  }
  parameter {
    name: "dwReserved"
    type: "UI"
  }
}
function {
  name: "IOleObject_InitFromData_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IOleObject_GetClipboardData_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIOleObject;;"
  }
  parameter {
    name: "dwReserved"
    type: "UI"
  }
  parameter {
    name: "ppDataObject"
    type: "**RIDataObject;;;"
  }
}
function {
  name: "IOleObject_GetClipboardData_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IOleObject_DoVerb_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIOleObject;;"
  }
  parameter {
    name: "iVerb"
    type: "I"
  }
  parameter {
    name: "lpmsg"
    type: "*RtagMSG;;"
  }
  parameter {
    name: "pActiveSite"
    type: "*RIOleClientSite;;"
  }
  parameter {
    name: "lindex"
    type: "I"
  }
  parameter {
    name: "hwndParent"
    type: "*RHWND__;;"
  }
  parameter {
    name: "lprcPosRect"
    type: "*cRtagRECT;;"
  }
}
function {
  name: "IOleObject_DoVerb_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IOleObject_EnumVerbs_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIOleObject;;"
  }
  parameter {
    name: "ppEnumOleVerb"
    type: "**RIEnumOLEVERB;;;"
  }
}
function {
  name: "IOleObject_EnumVerbs_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IOleObject_Update_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIOleObject;;"
  }
}
function {
  name: "IOleObject_Update_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IOleObject_IsUpToDate_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIOleObject;;"
  }
}
function {
  name: "IOleObject_IsUpToDate_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IOleObject_GetUserClassID_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIOleObject;;"
  }
  parameter {
    name: "pClsid"
    type: "*R_GUID;;"
  }
}
function {
  name: "IOleObject_GetUserClassID_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IOleObject_GetUserType_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIOleObject;;"
  }
  parameter {
    name: "dwFormOfType"
    type: "UI"
  }
  parameter {
    name: "pszUserType"
    type: "**US;;"
  }
}
function {
  name: "IOleObject_GetUserType_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IOleObject_SetExtent_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIOleObject;;"
  }
  parameter {
    name: "dwDrawAspect"
    type: "UI"
  }
  parameter {
    name: "psizel"
    type: "*RtagSIZE;;"
  }
}
function {
  name: "IOleObject_SetExtent_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IOleObject_GetExtent_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIOleObject;;"
  }
  parameter {
    name: "dwDrawAspect"
    type: "UI"
  }
  parameter {
    name: "psizel"
    type: "*RtagSIZE;;"
  }
}
function {
  name: "IOleObject_GetExtent_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IOleObject_Advise_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIOleObject;;"
  }
  parameter {
    name: "pAdvSink"
    type: "*RIAdviseSink;;"
  }
  parameter {
    name: "pdwConnection"
    type: "*UI;"
  }
}
function {
  name: "IOleObject_Advise_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IOleObject_Unadvise_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIOleObject;;"
  }
  parameter {
    name: "dwConnection"
    type: "UI"
  }
}
function {
  name: "IOleObject_Unadvise_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IOleObject_EnumAdvise_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIOleObject;;"
  }
  parameter {
    name: "ppenumAdvise"
    type: "**RIEnumSTATDATA;;;"
  }
}
function {
  name: "IOleObject_EnumAdvise_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IOleObject_GetMiscStatus_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIOleObject;;"
  }
  parameter {
    name: "dwAspect"
    type: "UI"
  }
  parameter {
    name: "pdwStatus"
    type: "*UI;"
  }
}
function {
  name: "IOleObject_GetMiscStatus_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IOleObject_SetColorScheme_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIOleObject;;"
  }
  parameter {
    name: "pLogpal"
    type: "*RtagLOGPALETTE;;"
  }
}
function {
  name: "IOleObject_SetColorScheme_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IOleAdviseHolder_Advise_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIOleAdviseHolder;;"
  }
  parameter {
    name: "pAdvise"
    type: "*RIAdviseSink;;"
  }
  parameter {
    name: "pdwConnection"
    type: "*UI;"
  }
}
function {
  name: "IOleAdviseHolder_Advise_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IOleAdviseHolder_Unadvise_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIOleAdviseHolder;;"
  }
  parameter {
    name: "dwConnection"
    type: "UI"
  }
}
function {
  name: "IOleAdviseHolder_Unadvise_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IOleAdviseHolder_EnumAdvise_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIOleAdviseHolder;;"
  }
  parameter {
    name: "ppenumAdvise"
    type: "**RIEnumSTATDATA;;;"
  }
}
function {
  name: "IOleAdviseHolder_EnumAdvise_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IOleAdviseHolder_SendOnRename_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIOleAdviseHolder;;"
  }
  parameter {
    name: "pmk"
    type: "*RIMoniker;;"
  }
}
function {
  name: "IOleAdviseHolder_SendOnRename_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IOleAdviseHolder_SendOnSave_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIOleAdviseHolder;;"
  }
}
function {
  name: "IOleAdviseHolder_SendOnSave_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IOleAdviseHolder_SendOnClose_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIOleAdviseHolder;;"
  }
}
function {
  name: "IOleAdviseHolder_SendOnClose_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IContinue_FContinue_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIContinue;;"
  }
}
function {
  name: "IContinue_FContinue_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IViewObject_RemoteDraw_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIViewObject;;"
  }
  parameter {
    name: "dwDrawAspect"
    type: "UI"
  }
  parameter {
    name: "lindex"
    type: "I"
  }
  parameter {
    name: "pvAspect"
    type: "UI"
  }
  parameter {
    name: "ptd"
    type: "*RtagDVTARGETDEVICE;;"
  }
  parameter {
    name: "hdcTargetDev"
    type: "UI"
  }
  parameter {
    name: "hdcDraw"
    type: "UI"
  }
  parameter {
    name: "lprcBounds"
    type: "*cR_RECTL;;"
  }
  parameter {
    name: "lprcWBounds"
    type: "*cR_RECTL;;"
  }
  parameter {
    name: "pContinue"
    type: "*RIContinue;;"
  }
}
function {
  name: "IViewObject_RemoteDraw_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IViewObject_RemoteGetColorSet_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIViewObject;;"
  }
  parameter {
    name: "dwDrawAspect"
    type: "UI"
  }
  parameter {
    name: "lindex"
    type: "I"
  }
  parameter {
    name: "pvAspect"
    type: "UI"
  }
  parameter {
    name: "ptd"
    type: "*RtagDVTARGETDEVICE;;"
  }
  parameter {
    name: "hicTargetDev"
    type: "UI"
  }
  parameter {
    name: "ppColorSet"
    type: "**RtagLOGPALETTE;;;"
  }
}
function {
  name: "IViewObject_RemoteGetColorSet_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IViewObject_RemoteFreeze_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIViewObject;;"
  }
  parameter {
    name: "dwDrawAspect"
    type: "UI"
  }
  parameter {
    name: "lindex"
    type: "I"
  }
  parameter {
    name: "pvAspect"
    type: "UI"
  }
  parameter {
    name: "pdwFreeze"
    type: "*UI;"
  }
}
function {
  name: "IViewObject_RemoteFreeze_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IViewObject_Unfreeze_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIViewObject;;"
  }
  parameter {
    name: "dwFreeze"
    type: "UI"
  }
}
function {
  name: "IViewObject_Unfreeze_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IViewObject_SetAdvise_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIViewObject;;"
  }
  parameter {
    name: "aspects"
    type: "UI"
  }
  parameter {
    name: "advf"
    type: "UI"
  }
  parameter {
    name: "pAdvSink"
    type: "*RIAdviseSink;;"
  }
}
function {
  name: "IViewObject_SetAdvise_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IViewObject_RemoteGetAdvise_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIViewObject;;"
  }
  parameter {
    name: "pAspects"
    type: "*UI;"
  }
  parameter {
    name: "pAdvf"
    type: "*UI;"
  }
  parameter {
    name: "ppAdvSink"
    type: "**RIAdviseSink;;;"
  }
}
function {
  name: "IViewObject_RemoteGetAdvise_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IViewObject_Draw_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIViewObject;;"
  }
  parameter {
    name: "dwDrawAspect"
    type: "UI"
  }
  parameter {
    name: "lindex"
    type: "I"
  }
  parameter {
    name: "pvAspect"
    type: "*V;"
  }
  parameter {
    name: "ptd"
    type: "*RtagDVTARGETDEVICE;;"
  }
  parameter {
    name: "hdcTargetDev"
    type: "*RHDC__;;"
  }
  parameter {
    name: "hdcDraw"
    type: "*RHDC__;;"
  }
  parameter {
    name: "lprcBounds"
    type: "*cR_RECTL;;"
  }
  parameter {
    name: "lprcWBounds"
    type: "*cR_RECTL;;"
  }
  parameter {
    name: "pfnContinue"
    type: "*(UI)I;"
  }
  parameter {
    name: "dwContinue"
    type: "UI"
  }
}
function {
  name: "IViewObject_Draw_Stub"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIViewObject;;"
  }
  parameter {
    name: "dwDrawAspect"
    type: "UI"
  }
  parameter {
    name: "lindex"
    type: "I"
  }
  parameter {
    name: "pvAspect"
    type: "UI"
  }
  parameter {
    name: "ptd"
    type: "*RtagDVTARGETDEVICE;;"
  }
  parameter {
    name: "hdcTargetDev"
    type: "UI"
  }
  parameter {
    name: "hdcDraw"
    type: "UI"
  }
  parameter {
    name: "lprcBounds"
    type: "*cR_RECTL;;"
  }
  parameter {
    name: "lprcWBounds"
    type: "*cR_RECTL;;"
  }
  parameter {
    name: "pContinue"
    type: "*RIContinue;;"
  }
}
function {
  name: "IViewObject_GetColorSet_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIViewObject;;"
  }
  parameter {
    name: "dwDrawAspect"
    type: "UI"
  }
  parameter {
    name: "lindex"
    type: "I"
  }
  parameter {
    name: "pvAspect"
    type: "*V;"
  }
  parameter {
    name: "ptd"
    type: "*RtagDVTARGETDEVICE;;"
  }
  parameter {
    name: "hicTargetDev"
    type: "*RHDC__;;"
  }
  parameter {
    name: "ppColorSet"
    type: "**RtagLOGPALETTE;;;"
  }
}
function {
  name: "IViewObject_GetColorSet_Stub"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIViewObject;;"
  }
  parameter {
    name: "dwDrawAspect"
    type: "UI"
  }
  parameter {
    name: "lindex"
    type: "I"
  }
  parameter {
    name: "pvAspect"
    type: "UI"
  }
  parameter {
    name: "ptd"
    type: "*RtagDVTARGETDEVICE;;"
  }
  parameter {
    name: "hicTargetDev"
    type: "UI"
  }
  parameter {
    name: "ppColorSet"
    type: "**RtagLOGPALETTE;;;"
  }
}
function {
  name: "IViewObject_Freeze_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIViewObject;;"
  }
  parameter {
    name: "dwDrawAspect"
    type: "UI"
  }
  parameter {
    name: "lindex"
    type: "I"
  }
  parameter {
    name: "pvAspect"
    type: "*V;"
  }
  parameter {
    name: "pdwFreeze"
    type: "*UI;"
  }
}
function {
  name: "IViewObject_Freeze_Stub"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIViewObject;;"
  }
  parameter {
    name: "dwDrawAspect"
    type: "UI"
  }
  parameter {
    name: "lindex"
    type: "I"
  }
  parameter {
    name: "pvAspect"
    type: "UI"
  }
  parameter {
    name: "pdwFreeze"
    type: "*UI;"
  }
}
function {
  name: "IViewObject_GetAdvise_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIViewObject;;"
  }
  parameter {
    name: "pAspects"
    type: "*UI;"
  }
  parameter {
    name: "pAdvf"
    type: "*UI;"
  }
  parameter {
    name: "ppAdvSink"
    type: "**RIAdviseSink;;;"
  }
}
function {
  name: "IViewObject_GetAdvise_Stub"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIViewObject;;"
  }
  parameter {
    name: "pAspects"
    type: "*UI;"
  }
  parameter {
    name: "pAdvf"
    type: "*UI;"
  }
  parameter {
    name: "ppAdvSink"
    type: "**RIAdviseSink;;;"
  }
}
function {
  name: "IViewObject2_GetExtent_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIViewObject2;;"
  }
  parameter {
    name: "dwDrawAspect"
    type: "UI"
  }
  parameter {
    name: "lindex"
    type: "I"
  }
  parameter {
    name: "ptd"
    type: "*RtagDVTARGETDEVICE;;"
  }
  parameter {
    name: "lpsizel"
    type: "*RtagSIZE;;"
  }
}
function {
  name: "IViewObject2_GetExtent_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IDropSource_QueryContinueDrag_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIDropSource;;"
  }
  parameter {
    name: "fEscapePressed"
    type: "I"
  }
  parameter {
    name: "grfKeyState"
    type: "UI"
  }
}
function {
  name: "IDropSource_QueryContinueDrag_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IDropSource_GiveFeedback_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIDropSource;;"
  }
  parameter {
    name: "dwEffect"
    type: "UI"
  }
}
function {
  name: "IDropSource_GiveFeedback_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IDropTarget_DragEnter_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIDropTarget;;"
  }
  parameter {
    name: "pDataObj"
    type: "*RIDataObject;;"
  }
  parameter {
    name: "grfKeyState"
    type: "UI"
  }
  parameter {
    name: "pt"
    type: "R_POINTL;"
  }
  parameter {
    name: "pdwEffect"
    type: "*UI;"
  }
}
function {
  name: "IDropTarget_DragEnter_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IDropTarget_DragOver_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIDropTarget;;"
  }
  parameter {
    name: "grfKeyState"
    type: "UI"
  }
  parameter {
    name: "pt"
    type: "R_POINTL;"
  }
  parameter {
    name: "pdwEffect"
    type: "*UI;"
  }
}
function {
  name: "IDropTarget_DragOver_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IDropTarget_DragLeave_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIDropTarget;;"
  }
}
function {
  name: "IDropTarget_DragLeave_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IDropTarget_Drop_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIDropTarget;;"
  }
  parameter {
    name: "pDataObj"
    type: "*RIDataObject;;"
  }
  parameter {
    name: "grfKeyState"
    type: "UI"
  }
  parameter {
    name: "pt"
    type: "R_POINTL;"
  }
  parameter {
    name: "pdwEffect"
    type: "*UI;"
  }
}
function {
  name: "IDropTarget_Drop_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "HWND_UserSize"
  return_type: "UI"
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "**RHWND__;;;"
  }
}
function {
  name: "HWND_UserMarshal"
  return_type: "*UB;"
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UB;"
  }
  parameter {
    name: ""
    type: "**RHWND__;;;"
  }
}
function {
  name: "HWND_UserUnmarshal"
  return_type: "*UB;"
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UB;"
  }
  parameter {
    name: ""
    type: "**RHWND__;;;"
  }
}
function {
  name: "HWND_UserFree"
  return_type: "V"
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "**RHWND__;;;"
  }
}
function {
  name: "HMENU_UserSize"
  return_type: "UI"
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "**RHMENU__;;;"
  }
}
function {
  name: "HMENU_UserMarshal"
  return_type: "*UB;"
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UB;"
  }
  parameter {
    name: ""
    type: "**RHMENU__;;;"
  }
}
function {
  name: "HMENU_UserUnmarshal"
  return_type: "*UB;"
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UB;"
  }
  parameter {
    name: ""
    type: "**RHMENU__;;;"
  }
}
function {
  name: "HMENU_UserFree"
  return_type: "V"
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "**RHMENU__;;;"
  }
}
function {
  name: "HGLOBAL_UserSize"
  return_type: "UI"
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "**V;;"
  }
}
function {
  name: "HGLOBAL_UserMarshal"
  return_type: "*UB;"
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UB;"
  }
  parameter {
    name: ""
    type: "**V;;"
  }
}
function {
  name: "HGLOBAL_UserUnmarshal"
  return_type: "*UB;"
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UB;"
  }
  parameter {
    name: ""
    type: "**V;;"
  }
}
function {
  name: "HGLOBAL_UserFree"
  return_type: "V"
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "**V;;"
  }
}
function {
  name: "HACCEL_UserSize"
  return_type: "UI"
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "**RHACCEL__;;;"
  }
}
function {
  name: "HACCEL_UserMarshal"
  return_type: "*UB;"
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UB;"
  }
  parameter {
    name: ""
    type: "**RHACCEL__;;;"
  }
}
function {
  name: "HACCEL_UserUnmarshal"
  return_type: "*UB;"
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UB;"
  }
  parameter {
    name: ""
    type: "**RHACCEL__;;;"
  }
}
function {
  name: "HACCEL_UserFree"
  return_type: "V"
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "**RHACCEL__;;;"
  }
}
function {
  name: "CLIPFORMAT_UserSize"
  return_type: "UI"
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*US;"
  }
}
function {
  name: "CLIPFORMAT_UserMarshal"
  return_type: "*UB;"
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UB;"
  }
  parameter {
    name: ""
    type: "*US;"
  }
}
function {
  name: "CLIPFORMAT_UserUnmarshal"
  return_type: "*UB;"
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UB;"
  }
  parameter {
    name: ""
    type: "*US;"
  }
}
function {
  name: "CLIPFORMAT_UserFree"
  return_type: "V"
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*US;"
  }
}
function {
  name: "STGMEDIUM_UserSize"
  return_type: "UI"
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*RtagSTGMEDIUM;;"
  }
}
function {
  name: "STGMEDIUM_UserMarshal"
  return_type: "*UB;"
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UB;"
  }
  parameter {
    name: ""
    type: "*RtagSTGMEDIUM;;"
  }
}
function {
  name: "STGMEDIUM_UserUnmarshal"
  return_type: "*UB;"
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UB;"
  }
  parameter {
    name: ""
    type: "*RtagSTGMEDIUM;;"
  }
}
function {
  name: "STGMEDIUM_UserFree"
  return_type: "V"
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*RtagSTGMEDIUM;;"
  }
}
function {
  name: "HDC_UserSize"
  return_type: "UI"
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "**RHDC__;;;"
  }
}
function {
  name: "HDC_UserMarshal"
  return_type: "*UB;"
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UB;"
  }
  parameter {
    name: ""
    type: "**RHDC__;;;"
  }
}
function {
  name: "HDC_UserUnmarshal"
  return_type: "*UB;"
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UB;"
  }
  parameter {
    name: ""
    type: "**RHDC__;;;"
  }
}
function {
  name: "HDC_UserFree"
  return_type: "V"
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "**RHDC__;;;"
  }
}
function {
  name: "IServiceProvider_RemoteQueryService_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIServiceProvider;;"
  }
  parameter {
    name: "guidService"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "riid"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "ppvObject"
    type: "**RIUnknown;;;"
  }
}
function {
  name: "IServiceProvider_RemoteQueryService_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IServiceProvider_QueryService_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIServiceProvider;;"
  }
  parameter {
    name: "guidService"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "riid"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "ppvObject"
    type: "**V;;"
  }
}
function {
  name: "IServiceProvider_QueryService_Stub"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIServiceProvider;;"
  }
  parameter {
    name: "guidService"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "riid"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "ppvObject"
    type: "**RIUnknown;;;"
  }
}
function {
  name: "IDispatch_GetTypeInfoCount_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIDispatch;;"
  }
  parameter {
    name: "pctinfo"
    type: "*UI;"
  }
}
function {
  name: "IDispatch_GetTypeInfoCount_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IDispatch_GetTypeInfo_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIDispatch;;"
  }
  parameter {
    name: "iTInfo"
    type: "UI"
  }
  parameter {
    name: "lcid"
    type: "UI"
  }
  parameter {
    name: "ppTInfo"
    type: "**RITypeInfo;;;"
  }
}
function {
  name: "IDispatch_GetTypeInfo_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IDispatch_GetIDsOfNames_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIDispatch;;"
  }
  parameter {
    name: "riid"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "rgszNames"
    type: "**US;;"
  }
  parameter {
    name: "cNames"
    type: "UI"
  }
  parameter {
    name: "lcid"
    type: "UI"
  }
  parameter {
    name: "rgDispId"
    type: "*I;"
  }
}
function {
  name: "IDispatch_GetIDsOfNames_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IDispatch_RemoteInvoke_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIDispatch;;"
  }
  parameter {
    name: "dispIdMember"
    type: "I"
  }
  parameter {
    name: "riid"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "lcid"
    type: "UI"
  }
  parameter {
    name: "dwFlags"
    type: "UI"
  }
  parameter {
    name: "pDispParams"
    type: "*RtagDISPPARAMS;;"
  }
  parameter {
    name: "pVarResult"
    type: "*RtagVARIANT;;"
  }
  parameter {
    name: "pExcepInfo"
    type: "*RtagEXCEPINFO;;"
  }
  parameter {
    name: "pArgErr"
    type: "*UI;"
  }
  parameter {
    name: "cVarRef"
    type: "UI"
  }
  parameter {
    name: "rgVarRefIdx"
    type: "*UI;"
  }
  parameter {
    name: "rgVarRef"
    type: "*RtagVARIANT;;"
  }
}
function {
  name: "IDispatch_RemoteInvoke_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IDispatch_Invoke_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIDispatch;;"
  }
  parameter {
    name: "dispIdMember"
    type: "I"
  }
  parameter {
    name: "riid"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "lcid"
    type: "UI"
  }
  parameter {
    name: "wFlags"
    type: "US"
  }
  parameter {
    name: "pDispParams"
    type: "*RtagDISPPARAMS;;"
  }
  parameter {
    name: "pVarResult"
    type: "*RtagVARIANT;;"
  }
  parameter {
    name: "pExcepInfo"
    type: "*RtagEXCEPINFO;;"
  }
  parameter {
    name: "puArgErr"
    type: "*UI;"
  }
}
function {
  name: "IDispatch_Invoke_Stub"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIDispatch;;"
  }
  parameter {
    name: "dispIdMember"
    type: "I"
  }
  parameter {
    name: "riid"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "lcid"
    type: "UI"
  }
  parameter {
    name: "dwFlags"
    type: "UI"
  }
  parameter {
    name: "pDispParams"
    type: "*RtagDISPPARAMS;;"
  }
  parameter {
    name: "pVarResult"
    type: "*RtagVARIANT;;"
  }
  parameter {
    name: "pExcepInfo"
    type: "*RtagEXCEPINFO;;"
  }
  parameter {
    name: "pArgErr"
    type: "*UI;"
  }
  parameter {
    name: "cVarRef"
    type: "UI"
  }
  parameter {
    name: "rgVarRefIdx"
    type: "*UI;"
  }
  parameter {
    name: "rgVarRef"
    type: "*RtagVARIANT;;"
  }
}
function {
  name: "IEnumVARIANT_RemoteNext_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIEnumVARIANT;;"
  }
  parameter {
    name: "celt"
    type: "UI"
  }
  parameter {
    name: "rgVar"
    type: "*RtagVARIANT;;"
  }
  parameter {
    name: "pCeltFetched"
    type: "*UI;"
  }
}
function {
  name: "IEnumVARIANT_RemoteNext_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IEnumVARIANT_Skip_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIEnumVARIANT;;"
  }
  parameter {
    name: "celt"
    type: "UI"
  }
}
function {
  name: "IEnumVARIANT_Skip_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IEnumVARIANT_Reset_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIEnumVARIANT;;"
  }
}
function {
  name: "IEnumVARIANT_Reset_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IEnumVARIANT_Clone_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIEnumVARIANT;;"
  }
  parameter {
    name: "ppEnum"
    type: "**RIEnumVARIANT;;;"
  }
}
function {
  name: "IEnumVARIANT_Clone_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IEnumVARIANT_Next_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIEnumVARIANT;;"
  }
  parameter {
    name: "celt"
    type: "UI"
  }
  parameter {
    name: "rgVar"
    type: "*RtagVARIANT;;"
  }
  parameter {
    name: "pCeltFetched"
    type: "*UI;"
  }
}
function {
  name: "IEnumVARIANT_Next_Stub"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIEnumVARIANT;;"
  }
  parameter {
    name: "celt"
    type: "UI"
  }
  parameter {
    name: "rgVar"
    type: "*RtagVARIANT;;"
  }
  parameter {
    name: "pCeltFetched"
    type: "*UI;"
  }
}
function {
  name: "ITypeComp_RemoteBind_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RITypeComp;;"
  }
  parameter {
    name: "szName"
    type: "*US;"
  }
  parameter {
    name: "lHashVal"
    type: "UI"
  }
  parameter {
    name: "wFlags"
    type: "US"
  }
  parameter {
    name: "ppTInfo"
    type: "**RITypeInfo;;;"
  }
  parameter {
    name: "pDescKind"
    type: "*X(Enum.enum tagDESCKIND);"
  }
  parameter {
    name: "ppFuncDesc"
    type: "**RtagFUNCDESC;;;"
  }
  parameter {
    name: "ppVarDesc"
    type: "**RtagVARDESC;;;"
  }
  parameter {
    name: "ppTypeComp"
    type: "**RITypeComp;;;"
  }
  parameter {
    name: "pDummy"
    type: "*RtagCLEANLOCALSTORAGE;;"
  }
}
function {
  name: "ITypeComp_RemoteBind_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ITypeComp_RemoteBindType_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RITypeComp;;"
  }
  parameter {
    name: "szName"
    type: "*US;"
  }
  parameter {
    name: "lHashVal"
    type: "UI"
  }
  parameter {
    name: "ppTInfo"
    type: "**RITypeInfo;;;"
  }
}
function {
  name: "ITypeComp_RemoteBindType_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ITypeComp_Bind_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RITypeComp;;"
  }
  parameter {
    name: "szName"
    type: "*US;"
  }
  parameter {
    name: "lHashVal"
    type: "UI"
  }
  parameter {
    name: "wFlags"
    type: "US"
  }
  parameter {
    name: "ppTInfo"
    type: "**RITypeInfo;;;"
  }
  parameter {
    name: "pDescKind"
    type: "*X(Enum.enum tagDESCKIND);"
  }
  parameter {
    name: "pBindPtr"
    type: "*Runion tagBINDPTR;;"
  }
}
function {
  name: "ITypeComp_Bind_Stub"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RITypeComp;;"
  }
  parameter {
    name: "szName"
    type: "*US;"
  }
  parameter {
    name: "lHashVal"
    type: "UI"
  }
  parameter {
    name: "wFlags"
    type: "US"
  }
  parameter {
    name: "ppTInfo"
    type: "**RITypeInfo;;;"
  }
  parameter {
    name: "pDescKind"
    type: "*X(Enum.enum tagDESCKIND);"
  }
  parameter {
    name: "ppFuncDesc"
    type: "**RtagFUNCDESC;;;"
  }
  parameter {
    name: "ppVarDesc"
    type: "**RtagVARDESC;;;"
  }
  parameter {
    name: "ppTypeComp"
    type: "**RITypeComp;;;"
  }
  parameter {
    name: "pDummy"
    type: "*RtagCLEANLOCALSTORAGE;;"
  }
}
function {
  name: "ITypeComp_BindType_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RITypeComp;;"
  }
  parameter {
    name: "szName"
    type: "*US;"
  }
  parameter {
    name: "lHashVal"
    type: "UI"
  }
  parameter {
    name: "ppTInfo"
    type: "**RITypeInfo;;;"
  }
  parameter {
    name: "ppTComp"
    type: "**RITypeComp;;;"
  }
}
function {
  name: "ITypeComp_BindType_Stub"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RITypeComp;;"
  }
  parameter {
    name: "szName"
    type: "*US;"
  }
  parameter {
    name: "lHashVal"
    type: "UI"
  }
  parameter {
    name: "ppTInfo"
    type: "**RITypeInfo;;;"
  }
}
function {
  name: "ITypeInfo_RemoteGetTypeAttr_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RITypeInfo;;"
  }
  parameter {
    name: "ppTypeAttr"
    type: "**RtagTYPEATTR;;;"
  }
  parameter {
    name: "pDummy"
    type: "*RtagCLEANLOCALSTORAGE;;"
  }
}
function {
  name: "ITypeInfo_RemoteGetTypeAttr_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ITypeInfo_GetTypeComp_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RITypeInfo;;"
  }
  parameter {
    name: "ppTComp"
    type: "**RITypeComp;;;"
  }
}
function {
  name: "ITypeInfo_GetTypeComp_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ITypeInfo_RemoteGetFuncDesc_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RITypeInfo;;"
  }
  parameter {
    name: "index"
    type: "UI"
  }
  parameter {
    name: "ppFuncDesc"
    type: "**RtagFUNCDESC;;;"
  }
  parameter {
    name: "pDummy"
    type: "*RtagCLEANLOCALSTORAGE;;"
  }
}
function {
  name: "ITypeInfo_RemoteGetFuncDesc_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ITypeInfo_RemoteGetVarDesc_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RITypeInfo;;"
  }
  parameter {
    name: "index"
    type: "UI"
  }
  parameter {
    name: "ppVarDesc"
    type: "**RtagVARDESC;;;"
  }
  parameter {
    name: "pDummy"
    type: "*RtagCLEANLOCALSTORAGE;;"
  }
}
function {
  name: "ITypeInfo_RemoteGetVarDesc_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ITypeInfo_RemoteGetNames_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RITypeInfo;;"
  }
  parameter {
    name: "memid"
    type: "I"
  }
  parameter {
    name: "rgBstrNames"
    type: "**US;;"
  }
  parameter {
    name: "cMaxNames"
    type: "UI"
  }
  parameter {
    name: "pcNames"
    type: "*UI;"
  }
}
function {
  name: "ITypeInfo_RemoteGetNames_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ITypeInfo_GetRefTypeOfImplType_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RITypeInfo;;"
  }
  parameter {
    name: "index"
    type: "UI"
  }
  parameter {
    name: "pRefType"
    type: "*UI;"
  }
}
function {
  name: "ITypeInfo_GetRefTypeOfImplType_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ITypeInfo_GetImplTypeFlags_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RITypeInfo;;"
  }
  parameter {
    name: "index"
    type: "UI"
  }
  parameter {
    name: "pImplTypeFlags"
    type: "*I;"
  }
}
function {
  name: "ITypeInfo_GetImplTypeFlags_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ITypeInfo_LocalGetIDsOfNames_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RITypeInfo;;"
  }
}
function {
  name: "ITypeInfo_LocalGetIDsOfNames_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ITypeInfo_LocalInvoke_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RITypeInfo;;"
  }
}
function {
  name: "ITypeInfo_LocalInvoke_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ITypeInfo_RemoteGetDocumentation_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RITypeInfo;;"
  }
  parameter {
    name: "memid"
    type: "I"
  }
  parameter {
    name: "refPtrFlags"
    type: "UI"
  }
  parameter {
    name: "pBstrName"
    type: "**US;;"
  }
  parameter {
    name: "pBstrDocString"
    type: "**US;;"
  }
  parameter {
    name: "pdwHelpContext"
    type: "*UI;"
  }
  parameter {
    name: "pBstrHelpFile"
    type: "**US;;"
  }
}
function {
  name: "ITypeInfo_RemoteGetDocumentation_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ITypeInfo_RemoteGetDllEntry_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RITypeInfo;;"
  }
  parameter {
    name: "memid"
    type: "I"
  }
  parameter {
    name: "invKind"
    type: "X(Enum.enum tagINVOKEKIND)"
  }
  parameter {
    name: "refPtrFlags"
    type: "UI"
  }
  parameter {
    name: "pBstrDllName"
    type: "**US;;"
  }
  parameter {
    name: "pBstrName"
    type: "**US;;"
  }
  parameter {
    name: "pwOrdinal"
    type: "*US;"
  }
}
function {
  name: "ITypeInfo_RemoteGetDllEntry_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ITypeInfo_GetRefTypeInfo_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RITypeInfo;;"
  }
  parameter {
    name: "hRefType"
    type: "UI"
  }
  parameter {
    name: "ppTInfo"
    type: "**RITypeInfo;;;"
  }
}
function {
  name: "ITypeInfo_GetRefTypeInfo_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ITypeInfo_LocalAddressOfMember_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RITypeInfo;;"
  }
}
function {
  name: "ITypeInfo_LocalAddressOfMember_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ITypeInfo_RemoteCreateInstance_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RITypeInfo;;"
  }
  parameter {
    name: "riid"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "ppvObj"
    type: "**RIUnknown;;;"
  }
}
function {
  name: "ITypeInfo_RemoteCreateInstance_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ITypeInfo_GetMops_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RITypeInfo;;"
  }
  parameter {
    name: "memid"
    type: "I"
  }
  parameter {
    name: "pBstrMops"
    type: "**US;;"
  }
}
function {
  name: "ITypeInfo_GetMops_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ITypeInfo_RemoteGetContainingTypeLib_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RITypeInfo;;"
  }
  parameter {
    name: "ppTLib"
    type: "**RITypeLib;;;"
  }
  parameter {
    name: "pIndex"
    type: "*UI;"
  }
}
function {
  name: "ITypeInfo_RemoteGetContainingTypeLib_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ITypeInfo_LocalReleaseTypeAttr_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RITypeInfo;;"
  }
}
function {
  name: "ITypeInfo_LocalReleaseTypeAttr_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ITypeInfo_LocalReleaseFuncDesc_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RITypeInfo;;"
  }
}
function {
  name: "ITypeInfo_LocalReleaseFuncDesc_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ITypeInfo_LocalReleaseVarDesc_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RITypeInfo;;"
  }
}
function {
  name: "ITypeInfo_LocalReleaseVarDesc_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ITypeInfo_GetTypeAttr_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RITypeInfo;;"
  }
  parameter {
    name: "ppTypeAttr"
    type: "**RtagTYPEATTR;;;"
  }
}
function {
  name: "ITypeInfo_GetTypeAttr_Stub"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RITypeInfo;;"
  }
  parameter {
    name: "ppTypeAttr"
    type: "**RtagTYPEATTR;;;"
  }
  parameter {
    name: "pDummy"
    type: "*RtagCLEANLOCALSTORAGE;;"
  }
}
function {
  name: "ITypeInfo_GetFuncDesc_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RITypeInfo;;"
  }
  parameter {
    name: "index"
    type: "UI"
  }
  parameter {
    name: "ppFuncDesc"
    type: "**RtagFUNCDESC;;;"
  }
}
function {
  name: "ITypeInfo_GetFuncDesc_Stub"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RITypeInfo;;"
  }
  parameter {
    name: "index"
    type: "UI"
  }
  parameter {
    name: "ppFuncDesc"
    type: "**RtagFUNCDESC;;;"
  }
  parameter {
    name: "pDummy"
    type: "*RtagCLEANLOCALSTORAGE;;"
  }
}
function {
  name: "ITypeInfo_GetVarDesc_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RITypeInfo;;"
  }
  parameter {
    name: "index"
    type: "UI"
  }
  parameter {
    name: "ppVarDesc"
    type: "**RtagVARDESC;;;"
  }
}
function {
  name: "ITypeInfo_GetVarDesc_Stub"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RITypeInfo;;"
  }
  parameter {
    name: "index"
    type: "UI"
  }
  parameter {
    name: "ppVarDesc"
    type: "**RtagVARDESC;;;"
  }
  parameter {
    name: "pDummy"
    type: "*RtagCLEANLOCALSTORAGE;;"
  }
}
function {
  name: "ITypeInfo_GetNames_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RITypeInfo;;"
  }
  parameter {
    name: "memid"
    type: "I"
  }
  parameter {
    name: "rgBstrNames"
    type: "**US;;"
  }
  parameter {
    name: "cMaxNames"
    type: "UI"
  }
  parameter {
    name: "pcNames"
    type: "*UI;"
  }
}
function {
  name: "ITypeInfo_GetNames_Stub"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RITypeInfo;;"
  }
  parameter {
    name: "memid"
    type: "I"
  }
  parameter {
    name: "rgBstrNames"
    type: "**US;;"
  }
  parameter {
    name: "cMaxNames"
    type: "UI"
  }
  parameter {
    name: "pcNames"
    type: "*UI;"
  }
}
function {
  name: "ITypeInfo_GetIDsOfNames_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RITypeInfo;;"
  }
  parameter {
    name: "rgszNames"
    type: "**US;;"
  }
  parameter {
    name: "cNames"
    type: "UI"
  }
  parameter {
    name: "pMemId"
    type: "*I;"
  }
}
function {
  name: "ITypeInfo_GetIDsOfNames_Stub"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RITypeInfo;;"
  }
}
function {
  name: "ITypeInfo_Invoke_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RITypeInfo;;"
  }
  parameter {
    name: "pvInstance"
    type: "*V;"
  }
  parameter {
    name: "memid"
    type: "I"
  }
  parameter {
    name: "wFlags"
    type: "US"
  }
  parameter {
    name: "pDispParams"
    type: "*RtagDISPPARAMS;;"
  }
  parameter {
    name: "pVarResult"
    type: "*RtagVARIANT;;"
  }
  parameter {
    name: "pExcepInfo"
    type: "*RtagEXCEPINFO;;"
  }
  parameter {
    name: "puArgErr"
    type: "*UI;"
  }
}
function {
  name: "ITypeInfo_Invoke_Stub"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RITypeInfo;;"
  }
}
function {
  name: "ITypeInfo_GetDocumentation_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RITypeInfo;;"
  }
  parameter {
    name: "memid"
    type: "I"
  }
  parameter {
    name: "pBstrName"
    type: "**US;;"
  }
  parameter {
    name: "pBstrDocString"
    type: "**US;;"
  }
  parameter {
    name: "pdwHelpContext"
    type: "*UI;"
  }
  parameter {
    name: "pBstrHelpFile"
    type: "**US;;"
  }
}
function {
  name: "ITypeInfo_GetDocumentation_Stub"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RITypeInfo;;"
  }
  parameter {
    name: "memid"
    type: "I"
  }
  parameter {
    name: "refPtrFlags"
    type: "UI"
  }
  parameter {
    name: "pBstrName"
    type: "**US;;"
  }
  parameter {
    name: "pBstrDocString"
    type: "**US;;"
  }
  parameter {
    name: "pdwHelpContext"
    type: "*UI;"
  }
  parameter {
    name: "pBstrHelpFile"
    type: "**US;;"
  }
}
function {
  name: "ITypeInfo_GetDllEntry_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RITypeInfo;;"
  }
  parameter {
    name: "memid"
    type: "I"
  }
  parameter {
    name: "invKind"
    type: "X(Enum.enum tagINVOKEKIND)"
  }
  parameter {
    name: "pBstrDllName"
    type: "**US;;"
  }
  parameter {
    name: "pBstrName"
    type: "**US;;"
  }
  parameter {
    name: "pwOrdinal"
    type: "*US;"
  }
}
function {
  name: "ITypeInfo_GetDllEntry_Stub"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RITypeInfo;;"
  }
  parameter {
    name: "memid"
    type: "I"
  }
  parameter {
    name: "invKind"
    type: "X(Enum.enum tagINVOKEKIND)"
  }
  parameter {
    name: "refPtrFlags"
    type: "UI"
  }
  parameter {
    name: "pBstrDllName"
    type: "**US;;"
  }
  parameter {
    name: "pBstrName"
    type: "**US;;"
  }
  parameter {
    name: "pwOrdinal"
    type: "*US;"
  }
}
function {
  name: "ITypeInfo_AddressOfMember_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RITypeInfo;;"
  }
  parameter {
    name: "memid"
    type: "I"
  }
  parameter {
    name: "invKind"
    type: "X(Enum.enum tagINVOKEKIND)"
  }
  parameter {
    name: "ppv"
    type: "**V;;"
  }
}
function {
  name: "ITypeInfo_AddressOfMember_Stub"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RITypeInfo;;"
  }
}
function {
  name: "ITypeInfo_CreateInstance_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RITypeInfo;;"
  }
  parameter {
    name: "pUnkOuter"
    type: "*RIUnknown;;"
  }
  parameter {
    name: "riid"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "ppvObj"
    type: "**V;;"
  }
}
function {
  name: "ITypeInfo_CreateInstance_Stub"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RITypeInfo;;"
  }
  parameter {
    name: "riid"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "ppvObj"
    type: "**RIUnknown;;;"
  }
}
function {
  name: "ITypeInfo_GetContainingTypeLib_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RITypeInfo;;"
  }
  parameter {
    name: "ppTLib"
    type: "**RITypeLib;;;"
  }
  parameter {
    name: "pIndex"
    type: "*UI;"
  }
}
function {
  name: "ITypeInfo_GetContainingTypeLib_Stub"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RITypeInfo;;"
  }
  parameter {
    name: "ppTLib"
    type: "**RITypeLib;;;"
  }
  parameter {
    name: "pIndex"
    type: "*UI;"
  }
}
function {
  name: "ITypeInfo_ReleaseTypeAttr_Proxy"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RITypeInfo;;"
  }
  parameter {
    name: "pTypeAttr"
    type: "*RtagTYPEATTR;;"
  }
}
function {
  name: "ITypeInfo_ReleaseTypeAttr_Stub"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RITypeInfo;;"
  }
}
function {
  name: "ITypeInfo_ReleaseFuncDesc_Proxy"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RITypeInfo;;"
  }
  parameter {
    name: "pFuncDesc"
    type: "*RtagFUNCDESC;;"
  }
}
function {
  name: "ITypeInfo_ReleaseFuncDesc_Stub"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RITypeInfo;;"
  }
}
function {
  name: "ITypeInfo_ReleaseVarDesc_Proxy"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RITypeInfo;;"
  }
  parameter {
    name: "pVarDesc"
    type: "*RtagVARDESC;;"
  }
}
function {
  name: "ITypeInfo_ReleaseVarDesc_Stub"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RITypeInfo;;"
  }
}
function {
  name: "ITypeInfo2_GetTypeKind_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RITypeInfo2;;"
  }
  parameter {
    name: "pTypeKind"
    type: "*X(Enum.enum tagTYPEKIND);"
  }
}
function {
  name: "ITypeInfo2_GetTypeKind_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ITypeInfo2_GetTypeFlags_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RITypeInfo2;;"
  }
  parameter {
    name: "pTypeFlags"
    type: "*UI;"
  }
}
function {
  name: "ITypeInfo2_GetTypeFlags_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ITypeInfo2_GetFuncIndexOfMemId_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RITypeInfo2;;"
  }
  parameter {
    name: "memid"
    type: "I"
  }
  parameter {
    name: "invKind"
    type: "X(Enum.enum tagINVOKEKIND)"
  }
  parameter {
    name: "pFuncIndex"
    type: "*UI;"
  }
}
function {
  name: "ITypeInfo2_GetFuncIndexOfMemId_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ITypeInfo2_GetVarIndexOfMemId_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RITypeInfo2;;"
  }
  parameter {
    name: "memid"
    type: "I"
  }
  parameter {
    name: "pVarIndex"
    type: "*UI;"
  }
}
function {
  name: "ITypeInfo2_GetVarIndexOfMemId_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ITypeInfo2_GetCustData_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RITypeInfo2;;"
  }
  parameter {
    name: "guid"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "pVarVal"
    type: "*RtagVARIANT;;"
  }
}
function {
  name: "ITypeInfo2_GetCustData_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ITypeInfo2_GetFuncCustData_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RITypeInfo2;;"
  }
  parameter {
    name: "index"
    type: "UI"
  }
  parameter {
    name: "guid"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "pVarVal"
    type: "*RtagVARIANT;;"
  }
}
function {
  name: "ITypeInfo2_GetFuncCustData_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ITypeInfo2_GetParamCustData_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RITypeInfo2;;"
  }
  parameter {
    name: "indexFunc"
    type: "UI"
  }
  parameter {
    name: "indexParam"
    type: "UI"
  }
  parameter {
    name: "guid"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "pVarVal"
    type: "*RtagVARIANT;;"
  }
}
function {
  name: "ITypeInfo2_GetParamCustData_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ITypeInfo2_GetVarCustData_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RITypeInfo2;;"
  }
  parameter {
    name: "index"
    type: "UI"
  }
  parameter {
    name: "guid"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "pVarVal"
    type: "*RtagVARIANT;;"
  }
}
function {
  name: "ITypeInfo2_GetVarCustData_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ITypeInfo2_GetImplTypeCustData_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RITypeInfo2;;"
  }
  parameter {
    name: "index"
    type: "UI"
  }
  parameter {
    name: "guid"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "pVarVal"
    type: "*RtagVARIANT;;"
  }
}
function {
  name: "ITypeInfo2_GetImplTypeCustData_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ITypeInfo2_RemoteGetDocumentation2_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RITypeInfo2;;"
  }
  parameter {
    name: "memid"
    type: "I"
  }
  parameter {
    name: "lcid"
    type: "UI"
  }
  parameter {
    name: "refPtrFlags"
    type: "UI"
  }
  parameter {
    name: "pbstrHelpString"
    type: "**US;;"
  }
  parameter {
    name: "pdwHelpStringContext"
    type: "*UI;"
  }
  parameter {
    name: "pbstrHelpStringDll"
    type: "**US;;"
  }
}
function {
  name: "ITypeInfo2_RemoteGetDocumentation2_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ITypeInfo2_GetAllCustData_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RITypeInfo2;;"
  }
  parameter {
    name: "pCustData"
    type: "*RtagCUSTDATA;;"
  }
}
function {
  name: "ITypeInfo2_GetAllCustData_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ITypeInfo2_GetAllFuncCustData_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RITypeInfo2;;"
  }
  parameter {
    name: "index"
    type: "UI"
  }
  parameter {
    name: "pCustData"
    type: "*RtagCUSTDATA;;"
  }
}
function {
  name: "ITypeInfo2_GetAllFuncCustData_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ITypeInfo2_GetAllParamCustData_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RITypeInfo2;;"
  }
  parameter {
    name: "indexFunc"
    type: "UI"
  }
  parameter {
    name: "indexParam"
    type: "UI"
  }
  parameter {
    name: "pCustData"
    type: "*RtagCUSTDATA;;"
  }
}
function {
  name: "ITypeInfo2_GetAllParamCustData_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ITypeInfo2_GetAllVarCustData_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RITypeInfo2;;"
  }
  parameter {
    name: "index"
    type: "UI"
  }
  parameter {
    name: "pCustData"
    type: "*RtagCUSTDATA;;"
  }
}
function {
  name: "ITypeInfo2_GetAllVarCustData_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ITypeInfo2_GetAllImplTypeCustData_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RITypeInfo2;;"
  }
  parameter {
    name: "index"
    type: "UI"
  }
  parameter {
    name: "pCustData"
    type: "*RtagCUSTDATA;;"
  }
}
function {
  name: "ITypeInfo2_GetAllImplTypeCustData_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ITypeInfo2_GetDocumentation2_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RITypeInfo2;;"
  }
  parameter {
    name: "memid"
    type: "I"
  }
  parameter {
    name: "lcid"
    type: "UI"
  }
  parameter {
    name: "pbstrHelpString"
    type: "**US;;"
  }
  parameter {
    name: "pdwHelpStringContext"
    type: "*UI;"
  }
  parameter {
    name: "pbstrHelpStringDll"
    type: "**US;;"
  }
}
function {
  name: "ITypeInfo2_GetDocumentation2_Stub"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RITypeInfo2;;"
  }
  parameter {
    name: "memid"
    type: "I"
  }
  parameter {
    name: "lcid"
    type: "UI"
  }
  parameter {
    name: "refPtrFlags"
    type: "UI"
  }
  parameter {
    name: "pbstrHelpString"
    type: "**US;;"
  }
  parameter {
    name: "pdwHelpStringContext"
    type: "*UI;"
  }
  parameter {
    name: "pbstrHelpStringDll"
    type: "**US;;"
  }
}
function {
  name: "ITypeLib_RemoteGetTypeInfoCount_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RITypeLib;;"
  }
  parameter {
    name: "pcTInfo"
    type: "*UI;"
  }
}
function {
  name: "ITypeLib_RemoteGetTypeInfoCount_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ITypeLib_GetTypeInfo_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RITypeLib;;"
  }
  parameter {
    name: "index"
    type: "UI"
  }
  parameter {
    name: "ppTInfo"
    type: "**RITypeInfo;;;"
  }
}
function {
  name: "ITypeLib_GetTypeInfo_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ITypeLib_GetTypeInfoType_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RITypeLib;;"
  }
  parameter {
    name: "index"
    type: "UI"
  }
  parameter {
    name: "pTKind"
    type: "*X(Enum.enum tagTYPEKIND);"
  }
}
function {
  name: "ITypeLib_GetTypeInfoType_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ITypeLib_GetTypeInfoOfGuid_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RITypeLib;;"
  }
  parameter {
    name: "guid"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "ppTinfo"
    type: "**RITypeInfo;;;"
  }
}
function {
  name: "ITypeLib_GetTypeInfoOfGuid_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ITypeLib_RemoteGetLibAttr_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RITypeLib;;"
  }
  parameter {
    name: "ppTLibAttr"
    type: "**RtagTLIBATTR;;;"
  }
  parameter {
    name: "pDummy"
    type: "*RtagCLEANLOCALSTORAGE;;"
  }
}
function {
  name: "ITypeLib_RemoteGetLibAttr_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ITypeLib_GetTypeComp_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RITypeLib;;"
  }
  parameter {
    name: "ppTComp"
    type: "**RITypeComp;;;"
  }
}
function {
  name: "ITypeLib_GetTypeComp_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ITypeLib_RemoteGetDocumentation_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RITypeLib;;"
  }
  parameter {
    name: "index"
    type: "I"
  }
  parameter {
    name: "refPtrFlags"
    type: "UI"
  }
  parameter {
    name: "pBstrName"
    type: "**US;;"
  }
  parameter {
    name: "pBstrDocString"
    type: "**US;;"
  }
  parameter {
    name: "pdwHelpContext"
    type: "*UI;"
  }
  parameter {
    name: "pBstrHelpFile"
    type: "**US;;"
  }
}
function {
  name: "ITypeLib_RemoteGetDocumentation_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ITypeLib_RemoteIsName_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RITypeLib;;"
  }
  parameter {
    name: "szNameBuf"
    type: "*US;"
  }
  parameter {
    name: "lHashVal"
    type: "UI"
  }
  parameter {
    name: "pfName"
    type: "*I;"
  }
  parameter {
    name: "pBstrLibName"
    type: "**US;;"
  }
}
function {
  name: "ITypeLib_RemoteIsName_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ITypeLib_RemoteFindName_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RITypeLib;;"
  }
  parameter {
    name: "szNameBuf"
    type: "*US;"
  }
  parameter {
    name: "lHashVal"
    type: "UI"
  }
  parameter {
    name: "ppTInfo"
    type: "**RITypeInfo;;;"
  }
  parameter {
    name: "rgMemId"
    type: "*I;"
  }
  parameter {
    name: "pcFound"
    type: "*US;"
  }
  parameter {
    name: "pBstrLibName"
    type: "**US;;"
  }
}
function {
  name: "ITypeLib_RemoteFindName_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ITypeLib_LocalReleaseTLibAttr_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RITypeLib;;"
  }
}
function {
  name: "ITypeLib_LocalReleaseTLibAttr_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ITypeLib_GetTypeInfoCount_Proxy"
  return_type: "UI"
  parameter {
    name: "This"
    type: "*RITypeLib;;"
  }
}
function {
  name: "ITypeLib_GetTypeInfoCount_Stub"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RITypeLib;;"
  }
  parameter {
    name: "pcTInfo"
    type: "*UI;"
  }
}
function {
  name: "ITypeLib_GetLibAttr_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RITypeLib;;"
  }
  parameter {
    name: "ppTLibAttr"
    type: "**RtagTLIBATTR;;;"
  }
}
function {
  name: "ITypeLib_GetLibAttr_Stub"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RITypeLib;;"
  }
  parameter {
    name: "ppTLibAttr"
    type: "**RtagTLIBATTR;;;"
  }
  parameter {
    name: "pDummy"
    type: "*RtagCLEANLOCALSTORAGE;;"
  }
}
function {
  name: "ITypeLib_GetDocumentation_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RITypeLib;;"
  }
  parameter {
    name: "index"
    type: "I"
  }
  parameter {
    name: "pBstrName"
    type: "**US;;"
  }
  parameter {
    name: "pBstrDocString"
    type: "**US;;"
  }
  parameter {
    name: "pdwHelpContext"
    type: "*UI;"
  }
  parameter {
    name: "pBstrHelpFile"
    type: "**US;;"
  }
}
function {
  name: "ITypeLib_GetDocumentation_Stub"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RITypeLib;;"
  }
  parameter {
    name: "index"
    type: "I"
  }
  parameter {
    name: "refPtrFlags"
    type: "UI"
  }
  parameter {
    name: "pBstrName"
    type: "**US;;"
  }
  parameter {
    name: "pBstrDocString"
    type: "**US;;"
  }
  parameter {
    name: "pdwHelpContext"
    type: "*UI;"
  }
  parameter {
    name: "pBstrHelpFile"
    type: "**US;;"
  }
}
function {
  name: "ITypeLib_IsName_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RITypeLib;;"
  }
  parameter {
    name: "szNameBuf"
    type: "*US;"
  }
  parameter {
    name: "lHashVal"
    type: "UI"
  }
  parameter {
    name: "pfName"
    type: "*I;"
  }
}
function {
  name: "ITypeLib_IsName_Stub"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RITypeLib;;"
  }
  parameter {
    name: "szNameBuf"
    type: "*US;"
  }
  parameter {
    name: "lHashVal"
    type: "UI"
  }
  parameter {
    name: "pfName"
    type: "*I;"
  }
  parameter {
    name: "pBstrLibName"
    type: "**US;;"
  }
}
function {
  name: "ITypeLib_FindName_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RITypeLib;;"
  }
  parameter {
    name: "szNameBuf"
    type: "*US;"
  }
  parameter {
    name: "lHashVal"
    type: "UI"
  }
  parameter {
    name: "ppTInfo"
    type: "**RITypeInfo;;;"
  }
  parameter {
    name: "rgMemId"
    type: "*I;"
  }
  parameter {
    name: "pcFound"
    type: "*US;"
  }
}
function {
  name: "ITypeLib_FindName_Stub"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RITypeLib;;"
  }
  parameter {
    name: "szNameBuf"
    type: "*US;"
  }
  parameter {
    name: "lHashVal"
    type: "UI"
  }
  parameter {
    name: "ppTInfo"
    type: "**RITypeInfo;;;"
  }
  parameter {
    name: "rgMemId"
    type: "*I;"
  }
  parameter {
    name: "pcFound"
    type: "*US;"
  }
  parameter {
    name: "pBstrLibName"
    type: "**US;;"
  }
}
function {
  name: "ITypeLib_ReleaseTLibAttr_Proxy"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RITypeLib;;"
  }
  parameter {
    name: "pTLibAttr"
    type: "*RtagTLIBATTR;;"
  }
}
function {
  name: "ITypeLib_ReleaseTLibAttr_Stub"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RITypeLib;;"
  }
}
function {
  name: "ITypeLib2_GetCustData_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RITypeLib2;;"
  }
  parameter {
    name: "guid"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "pVarVal"
    type: "*RtagVARIANT;;"
  }
}
function {
  name: "ITypeLib2_GetCustData_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ITypeLib2_RemoteGetLibStatistics_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RITypeLib2;;"
  }
  parameter {
    name: "pcUniqueNames"
    type: "*UI;"
  }
  parameter {
    name: "pcchUniqueNames"
    type: "*UI;"
  }
}
function {
  name: "ITypeLib2_RemoteGetLibStatistics_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ITypeLib2_RemoteGetDocumentation2_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RITypeLib2;;"
  }
  parameter {
    name: "index"
    type: "I"
  }
  parameter {
    name: "lcid"
    type: "UI"
  }
  parameter {
    name: "refPtrFlags"
    type: "UI"
  }
  parameter {
    name: "pbstrHelpString"
    type: "**US;;"
  }
  parameter {
    name: "pdwHelpStringContext"
    type: "*UI;"
  }
  parameter {
    name: "pbstrHelpStringDll"
    type: "**US;;"
  }
}
function {
  name: "ITypeLib2_RemoteGetDocumentation2_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ITypeLib2_GetAllCustData_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RITypeLib2;;"
  }
  parameter {
    name: "pCustData"
    type: "*RtagCUSTDATA;;"
  }
}
function {
  name: "ITypeLib2_GetAllCustData_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ITypeLib2_GetLibStatistics_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RITypeLib2;;"
  }
  parameter {
    name: "pcUniqueNames"
    type: "*UI;"
  }
  parameter {
    name: "pcchUniqueNames"
    type: "*UI;"
  }
}
function {
  name: "ITypeLib2_GetLibStatistics_Stub"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RITypeLib2;;"
  }
  parameter {
    name: "pcUniqueNames"
    type: "*UI;"
  }
  parameter {
    name: "pcchUniqueNames"
    type: "*UI;"
  }
}
function {
  name: "ITypeLib2_GetDocumentation2_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RITypeLib2;;"
  }
  parameter {
    name: "index"
    type: "I"
  }
  parameter {
    name: "lcid"
    type: "UI"
  }
  parameter {
    name: "pbstrHelpString"
    type: "**US;;"
  }
  parameter {
    name: "pdwHelpStringContext"
    type: "*UI;"
  }
  parameter {
    name: "pbstrHelpStringDll"
    type: "**US;;"
  }
}
function {
  name: "ITypeLib2_GetDocumentation2_Stub"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RITypeLib2;;"
  }
  parameter {
    name: "index"
    type: "I"
  }
  parameter {
    name: "lcid"
    type: "UI"
  }
  parameter {
    name: "refPtrFlags"
    type: "UI"
  }
  parameter {
    name: "pbstrHelpString"
    type: "**US;;"
  }
  parameter {
    name: "pdwHelpStringContext"
    type: "*UI;"
  }
  parameter {
    name: "pbstrHelpStringDll"
    type: "**US;;"
  }
}
function {
  name: "ITypeChangeEvents_RequestTypeChange_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RITypeChangeEvents;;"
  }
  parameter {
    name: "changeKind"
    type: "X(Enum.enum tagCHANGEKIND)"
  }
  parameter {
    name: "pTInfoBefore"
    type: "*RITypeInfo;;"
  }
  parameter {
    name: "pStrName"
    type: "*US;"
  }
  parameter {
    name: "pfCancel"
    type: "*I;"
  }
}
function {
  name: "ITypeChangeEvents_RequestTypeChange_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ITypeChangeEvents_AfterTypeChange_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RITypeChangeEvents;;"
  }
  parameter {
    name: "changeKind"
    type: "X(Enum.enum tagCHANGEKIND)"
  }
  parameter {
    name: "pTInfoAfter"
    type: "*RITypeInfo;;"
  }
  parameter {
    name: "pStrName"
    type: "*US;"
  }
}
function {
  name: "ITypeChangeEvents_AfterTypeChange_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IErrorInfo_GetGUID_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIErrorInfo;;"
  }
  parameter {
    name: "pGUID"
    type: "*R_GUID;;"
  }
}
function {
  name: "IErrorInfo_GetGUID_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IErrorInfo_GetSource_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIErrorInfo;;"
  }
  parameter {
    name: "pBstrSource"
    type: "**US;;"
  }
}
function {
  name: "IErrorInfo_GetSource_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IErrorInfo_GetDescription_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIErrorInfo;;"
  }
  parameter {
    name: "pBstrDescription"
    type: "**US;;"
  }
}
function {
  name: "IErrorInfo_GetDescription_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IErrorInfo_GetHelpFile_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIErrorInfo;;"
  }
  parameter {
    name: "pBstrHelpFile"
    type: "**US;;"
  }
}
function {
  name: "IErrorInfo_GetHelpFile_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IErrorInfo_GetHelpContext_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIErrorInfo;;"
  }
  parameter {
    name: "pdwHelpContext"
    type: "*UI;"
  }
}
function {
  name: "IErrorInfo_GetHelpContext_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ICreateErrorInfo_SetGUID_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RICreateErrorInfo;;"
  }
  parameter {
    name: "rguid"
    type: "c*cR_GUID;;"
  }
}
function {
  name: "ICreateErrorInfo_SetGUID_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ICreateErrorInfo_SetSource_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RICreateErrorInfo;;"
  }
  parameter {
    name: "szSource"
    type: "*US;"
  }
}
function {
  name: "ICreateErrorInfo_SetSource_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ICreateErrorInfo_SetDescription_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RICreateErrorInfo;;"
  }
  parameter {
    name: "szDescription"
    type: "*US;"
  }
}
function {
  name: "ICreateErrorInfo_SetDescription_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ICreateErrorInfo_SetHelpFile_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RICreateErrorInfo;;"
  }
  parameter {
    name: "szHelpFile"
    type: "*US;"
  }
}
function {
  name: "ICreateErrorInfo_SetHelpFile_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ICreateErrorInfo_SetHelpContext_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RICreateErrorInfo;;"
  }
  parameter {
    name: "dwHelpContext"
    type: "UI"
  }
}
function {
  name: "ICreateErrorInfo_SetHelpContext_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ISupportErrorInfo_InterfaceSupportsErrorInfo_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RISupportErrorInfo;;"
  }
  parameter {
    name: "riid"
    type: "c*cR_GUID;;"
  }
}
function {
  name: "ISupportErrorInfo_InterfaceSupportsErrorInfo_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ITypeFactory_CreateFromTypeInfo_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RITypeFactory;;"
  }
  parameter {
    name: "pTypeInfo"
    type: "*RITypeInfo;;"
  }
  parameter {
    name: "riid"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "ppv"
    type: "**RIUnknown;;;"
  }
}
function {
  name: "ITypeFactory_CreateFromTypeInfo_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ITypeMarshal_Size_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RITypeMarshal;;"
  }
  parameter {
    name: "pvType"
    type: "*V;"
  }
  parameter {
    name: "dwDestContext"
    type: "UI"
  }
  parameter {
    name: "pvDestContext"
    type: "*V;"
  }
  parameter {
    name: "pSize"
    type: "*UI;"
  }
}
function {
  name: "ITypeMarshal_Size_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ITypeMarshal_Marshal_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RITypeMarshal;;"
  }
  parameter {
    name: "pvType"
    type: "*V;"
  }
  parameter {
    name: "dwDestContext"
    type: "UI"
  }
  parameter {
    name: "pvDestContext"
    type: "*V;"
  }
  parameter {
    name: "cbBufferLength"
    type: "UI"
  }
  parameter {
    name: "pBuffer"
    type: "*UB;"
  }
  parameter {
    name: "pcbWritten"
    type: "*UI;"
  }
}
function {
  name: "ITypeMarshal_Marshal_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ITypeMarshal_Unmarshal_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RITypeMarshal;;"
  }
  parameter {
    name: "pvType"
    type: "*V;"
  }
  parameter {
    name: "dwFlags"
    type: "UI"
  }
  parameter {
    name: "cbBufferLength"
    type: "UI"
  }
  parameter {
    name: "pBuffer"
    type: "*UB;"
  }
  parameter {
    name: "pcbRead"
    type: "*UI;"
  }
}
function {
  name: "ITypeMarshal_Unmarshal_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ITypeMarshal_Free_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RITypeMarshal;;"
  }
  parameter {
    name: "pvType"
    type: "*V;"
  }
}
function {
  name: "ITypeMarshal_Free_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IRecordInfo_RecordInit_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIRecordInfo;;"
  }
  parameter {
    name: "pvNew"
    type: "*V;"
  }
}
function {
  name: "IRecordInfo_RecordInit_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IRecordInfo_RecordClear_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIRecordInfo;;"
  }
  parameter {
    name: "pvExisting"
    type: "*V;"
  }
}
function {
  name: "IRecordInfo_RecordClear_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IRecordInfo_RecordCopy_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIRecordInfo;;"
  }
  parameter {
    name: "pvExisting"
    type: "*V;"
  }
  parameter {
    name: "pvNew"
    type: "*V;"
  }
}
function {
  name: "IRecordInfo_RecordCopy_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IRecordInfo_GetGuid_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIRecordInfo;;"
  }
  parameter {
    name: "pguid"
    type: "*R_GUID;;"
  }
}
function {
  name: "IRecordInfo_GetGuid_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IRecordInfo_GetName_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIRecordInfo;;"
  }
  parameter {
    name: "pbstrName"
    type: "**US;;"
  }
}
function {
  name: "IRecordInfo_GetName_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IRecordInfo_GetSize_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIRecordInfo;;"
  }
  parameter {
    name: "pcbSize"
    type: "*UI;"
  }
}
function {
  name: "IRecordInfo_GetSize_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IRecordInfo_GetTypeInfo_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIRecordInfo;;"
  }
  parameter {
    name: "ppTypeInfo"
    type: "**RITypeInfo;;;"
  }
}
function {
  name: "IRecordInfo_GetTypeInfo_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IRecordInfo_GetField_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIRecordInfo;;"
  }
  parameter {
    name: "pvData"
    type: "*V;"
  }
  parameter {
    name: "szFieldName"
    type: "*cUS;"
  }
  parameter {
    name: "pvarField"
    type: "*RtagVARIANT;;"
  }
}
function {
  name: "IRecordInfo_GetField_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IRecordInfo_GetFieldNoCopy_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIRecordInfo;;"
  }
  parameter {
    name: "pvData"
    type: "*V;"
  }
  parameter {
    name: "szFieldName"
    type: "*cUS;"
  }
  parameter {
    name: "pvarField"
    type: "*RtagVARIANT;;"
  }
  parameter {
    name: "ppvDataCArray"
    type: "**V;;"
  }
}
function {
  name: "IRecordInfo_GetFieldNoCopy_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IRecordInfo_PutField_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIRecordInfo;;"
  }
  parameter {
    name: "wFlags"
    type: "UI"
  }
  parameter {
    name: "pvData"
    type: "*V;"
  }
  parameter {
    name: "szFieldName"
    type: "*cUS;"
  }
  parameter {
    name: "pvarField"
    type: "*RtagVARIANT;;"
  }
}
function {
  name: "IRecordInfo_PutField_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IRecordInfo_PutFieldNoCopy_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIRecordInfo;;"
  }
  parameter {
    name: "wFlags"
    type: "UI"
  }
  parameter {
    name: "pvData"
    type: "*V;"
  }
  parameter {
    name: "szFieldName"
    type: "*cUS;"
  }
  parameter {
    name: "pvarField"
    type: "*RtagVARIANT;;"
  }
}
function {
  name: "IRecordInfo_PutFieldNoCopy_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IRecordInfo_GetFieldNames_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIRecordInfo;;"
  }
  parameter {
    name: "pcNames"
    type: "*UI;"
  }
  parameter {
    name: "rgBstrNames"
    type: "**US;;"
  }
}
function {
  name: "IRecordInfo_GetFieldNames_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IRecordInfo_IsMatchingType_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIRecordInfo;;"
  }
  parameter {
    name: "pRecordInfo"
    type: "*RIRecordInfo;;"
  }
}
function {
  name: "IRecordInfo_IsMatchingType_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IRecordInfo_RecordCreate_Proxy"
  return_type: "*V;"
  parameter {
    name: "This"
    type: "*RIRecordInfo;;"
  }
}
function {
  name: "IRecordInfo_RecordCreate_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IRecordInfo_RecordCreateCopy_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIRecordInfo;;"
  }
  parameter {
    name: "pvSource"
    type: "*V;"
  }
  parameter {
    name: "ppvDest"
    type: "**V;;"
  }
}
function {
  name: "IRecordInfo_RecordCreateCopy_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IRecordInfo_RecordDestroy_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIRecordInfo;;"
  }
  parameter {
    name: "pvRecord"
    type: "*V;"
  }
}
function {
  name: "IRecordInfo_RecordDestroy_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ICreateTypeInfo_SetGuid_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RICreateTypeInfo;;"
  }
  parameter {
    name: "guid"
    type: "c*cR_GUID;;"
  }
}
function {
  name: "ICreateTypeInfo_SetGuid_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ICreateTypeInfo_SetTypeFlags_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RICreateTypeInfo;;"
  }
  parameter {
    name: "uTypeFlags"
    type: "UI"
  }
}
function {
  name: "ICreateTypeInfo_SetTypeFlags_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ICreateTypeInfo_SetDocString_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RICreateTypeInfo;;"
  }
  parameter {
    name: "pStrDoc"
    type: "*US;"
  }
}
function {
  name: "ICreateTypeInfo_SetDocString_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ICreateTypeInfo_SetHelpContext_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RICreateTypeInfo;;"
  }
  parameter {
    name: "dwHelpContext"
    type: "UI"
  }
}
function {
  name: "ICreateTypeInfo_SetHelpContext_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ICreateTypeInfo_SetVersion_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RICreateTypeInfo;;"
  }
  parameter {
    name: "wMajorVerNum"
    type: "US"
  }
  parameter {
    name: "wMinorVerNum"
    type: "US"
  }
}
function {
  name: "ICreateTypeInfo_SetVersion_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ICreateTypeInfo_AddRefTypeInfo_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RICreateTypeInfo;;"
  }
  parameter {
    name: "pTInfo"
    type: "*RITypeInfo;;"
  }
  parameter {
    name: "phRefType"
    type: "*UI;"
  }
}
function {
  name: "ICreateTypeInfo_AddRefTypeInfo_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ICreateTypeInfo_AddFuncDesc_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RICreateTypeInfo;;"
  }
  parameter {
    name: "index"
    type: "UI"
  }
  parameter {
    name: "pFuncDesc"
    type: "*RtagFUNCDESC;;"
  }
}
function {
  name: "ICreateTypeInfo_AddFuncDesc_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ICreateTypeInfo_AddImplType_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RICreateTypeInfo;;"
  }
  parameter {
    name: "index"
    type: "UI"
  }
  parameter {
    name: "hRefType"
    type: "UI"
  }
}
function {
  name: "ICreateTypeInfo_AddImplType_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ICreateTypeInfo_SetImplTypeFlags_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RICreateTypeInfo;;"
  }
  parameter {
    name: "index"
    type: "UI"
  }
  parameter {
    name: "implTypeFlags"
    type: "I"
  }
}
function {
  name: "ICreateTypeInfo_SetImplTypeFlags_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ICreateTypeInfo_SetAlignment_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RICreateTypeInfo;;"
  }
  parameter {
    name: "cbAlignment"
    type: "US"
  }
}
function {
  name: "ICreateTypeInfo_SetAlignment_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ICreateTypeInfo_SetSchema_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RICreateTypeInfo;;"
  }
  parameter {
    name: "pStrSchema"
    type: "*US;"
  }
}
function {
  name: "ICreateTypeInfo_SetSchema_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ICreateTypeInfo_AddVarDesc_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RICreateTypeInfo;;"
  }
  parameter {
    name: "index"
    type: "UI"
  }
  parameter {
    name: "pVarDesc"
    type: "*RtagVARDESC;;"
  }
}
function {
  name: "ICreateTypeInfo_AddVarDesc_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ICreateTypeInfo_SetFuncAndParamNames_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RICreateTypeInfo;;"
  }
  parameter {
    name: "index"
    type: "UI"
  }
  parameter {
    name: "rgszNames"
    type: "**US;;"
  }
  parameter {
    name: "cNames"
    type: "UI"
  }
}
function {
  name: "ICreateTypeInfo_SetFuncAndParamNames_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ICreateTypeInfo_SetVarName_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RICreateTypeInfo;;"
  }
  parameter {
    name: "index"
    type: "UI"
  }
  parameter {
    name: "szName"
    type: "*US;"
  }
}
function {
  name: "ICreateTypeInfo_SetVarName_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ICreateTypeInfo_SetTypeDescAlias_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RICreateTypeInfo;;"
  }
  parameter {
    name: "pTDescAlias"
    type: "*RtagTYPEDESC;;"
  }
}
function {
  name: "ICreateTypeInfo_SetTypeDescAlias_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ICreateTypeInfo_DefineFuncAsDllEntry_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RICreateTypeInfo;;"
  }
  parameter {
    name: "index"
    type: "UI"
  }
  parameter {
    name: "szDllName"
    type: "*US;"
  }
  parameter {
    name: "szProcName"
    type: "*US;"
  }
}
function {
  name: "ICreateTypeInfo_DefineFuncAsDllEntry_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ICreateTypeInfo_SetFuncDocString_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RICreateTypeInfo;;"
  }
  parameter {
    name: "index"
    type: "UI"
  }
  parameter {
    name: "szDocString"
    type: "*US;"
  }
}
function {
  name: "ICreateTypeInfo_SetFuncDocString_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ICreateTypeInfo_SetVarDocString_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RICreateTypeInfo;;"
  }
  parameter {
    name: "index"
    type: "UI"
  }
  parameter {
    name: "szDocString"
    type: "*US;"
  }
}
function {
  name: "ICreateTypeInfo_SetVarDocString_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ICreateTypeInfo_SetFuncHelpContext_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RICreateTypeInfo;;"
  }
  parameter {
    name: "index"
    type: "UI"
  }
  parameter {
    name: "dwHelpContext"
    type: "UI"
  }
}
function {
  name: "ICreateTypeInfo_SetFuncHelpContext_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ICreateTypeInfo_SetVarHelpContext_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RICreateTypeInfo;;"
  }
  parameter {
    name: "index"
    type: "UI"
  }
  parameter {
    name: "dwHelpContext"
    type: "UI"
  }
}
function {
  name: "ICreateTypeInfo_SetVarHelpContext_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ICreateTypeInfo_SetMops_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RICreateTypeInfo;;"
  }
  parameter {
    name: "index"
    type: "UI"
  }
  parameter {
    name: "bstrMops"
    type: "*US;"
  }
}
function {
  name: "ICreateTypeInfo_SetMops_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ICreateTypeInfo_SetTypeIdldesc_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RICreateTypeInfo;;"
  }
  parameter {
    name: "pIdlDesc"
    type: "*RtagIDLDESC;;"
  }
}
function {
  name: "ICreateTypeInfo_SetTypeIdldesc_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ICreateTypeInfo_LayOut_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RICreateTypeInfo;;"
  }
}
function {
  name: "ICreateTypeInfo_LayOut_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ICreateTypeInfo2_DeleteFuncDesc_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RICreateTypeInfo2;;"
  }
  parameter {
    name: "index"
    type: "UI"
  }
}
function {
  name: "ICreateTypeInfo2_DeleteFuncDesc_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ICreateTypeInfo2_DeleteFuncDescByMemId_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RICreateTypeInfo2;;"
  }
  parameter {
    name: "memid"
    type: "I"
  }
  parameter {
    name: "invKind"
    type: "X(Enum.enum tagINVOKEKIND)"
  }
}
function {
  name: "ICreateTypeInfo2_DeleteFuncDescByMemId_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ICreateTypeInfo2_DeleteVarDesc_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RICreateTypeInfo2;;"
  }
  parameter {
    name: "index"
    type: "UI"
  }
}
function {
  name: "ICreateTypeInfo2_DeleteVarDesc_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ICreateTypeInfo2_DeleteVarDescByMemId_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RICreateTypeInfo2;;"
  }
  parameter {
    name: "memid"
    type: "I"
  }
}
function {
  name: "ICreateTypeInfo2_DeleteVarDescByMemId_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ICreateTypeInfo2_DeleteImplType_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RICreateTypeInfo2;;"
  }
  parameter {
    name: "index"
    type: "UI"
  }
}
function {
  name: "ICreateTypeInfo2_DeleteImplType_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ICreateTypeInfo2_SetCustData_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RICreateTypeInfo2;;"
  }
  parameter {
    name: "guid"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "pVarVal"
    type: "*RtagVARIANT;;"
  }
}
function {
  name: "ICreateTypeInfo2_SetCustData_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ICreateTypeInfo2_SetFuncCustData_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RICreateTypeInfo2;;"
  }
  parameter {
    name: "index"
    type: "UI"
  }
  parameter {
    name: "guid"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "pVarVal"
    type: "*RtagVARIANT;;"
  }
}
function {
  name: "ICreateTypeInfo2_SetFuncCustData_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ICreateTypeInfo2_SetParamCustData_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RICreateTypeInfo2;;"
  }
  parameter {
    name: "indexFunc"
    type: "UI"
  }
  parameter {
    name: "indexParam"
    type: "UI"
  }
  parameter {
    name: "guid"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "pVarVal"
    type: "*RtagVARIANT;;"
  }
}
function {
  name: "ICreateTypeInfo2_SetParamCustData_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ICreateTypeInfo2_SetVarCustData_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RICreateTypeInfo2;;"
  }
  parameter {
    name: "index"
    type: "UI"
  }
  parameter {
    name: "guid"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "pVarVal"
    type: "*RtagVARIANT;;"
  }
}
function {
  name: "ICreateTypeInfo2_SetVarCustData_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ICreateTypeInfo2_SetImplTypeCustData_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RICreateTypeInfo2;;"
  }
  parameter {
    name: "index"
    type: "UI"
  }
  parameter {
    name: "guid"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "pVarVal"
    type: "*RtagVARIANT;;"
  }
}
function {
  name: "ICreateTypeInfo2_SetImplTypeCustData_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ICreateTypeInfo2_SetHelpStringContext_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RICreateTypeInfo2;;"
  }
  parameter {
    name: "dwHelpStringContext"
    type: "UI"
  }
}
function {
  name: "ICreateTypeInfo2_SetHelpStringContext_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ICreateTypeInfo2_SetFuncHelpStringContext_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RICreateTypeInfo2;;"
  }
  parameter {
    name: "index"
    type: "UI"
  }
  parameter {
    name: "dwHelpStringContext"
    type: "UI"
  }
}
function {
  name: "ICreateTypeInfo2_SetFuncHelpStringContext_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ICreateTypeInfo2_SetVarHelpStringContext_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RICreateTypeInfo2;;"
  }
  parameter {
    name: "index"
    type: "UI"
  }
  parameter {
    name: "dwHelpStringContext"
    type: "UI"
  }
}
function {
  name: "ICreateTypeInfo2_SetVarHelpStringContext_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ICreateTypeInfo2_Invalidate_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RICreateTypeInfo2;;"
  }
}
function {
  name: "ICreateTypeInfo2_Invalidate_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ICreateTypeInfo2_SetName_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RICreateTypeInfo2;;"
  }
  parameter {
    name: "szName"
    type: "*US;"
  }
}
function {
  name: "ICreateTypeInfo2_SetName_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ICreateTypeLib_CreateTypeInfo_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RICreateTypeLib;;"
  }
  parameter {
    name: "szName"
    type: "*US;"
  }
  parameter {
    name: "tkind"
    type: "X(Enum.enum tagTYPEKIND)"
  }
  parameter {
    name: "ppCTInfo"
    type: "**RICreateTypeInfo;;;"
  }
}
function {
  name: "ICreateTypeLib_CreateTypeInfo_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ICreateTypeLib_SetName_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RICreateTypeLib;;"
  }
  parameter {
    name: "szName"
    type: "*US;"
  }
}
function {
  name: "ICreateTypeLib_SetName_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ICreateTypeLib_SetVersion_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RICreateTypeLib;;"
  }
  parameter {
    name: "wMajorVerNum"
    type: "US"
  }
  parameter {
    name: "wMinorVerNum"
    type: "US"
  }
}
function {
  name: "ICreateTypeLib_SetVersion_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ICreateTypeLib_SetGuid_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RICreateTypeLib;;"
  }
  parameter {
    name: "guid"
    type: "c*cR_GUID;;"
  }
}
function {
  name: "ICreateTypeLib_SetGuid_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ICreateTypeLib_SetDocString_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RICreateTypeLib;;"
  }
  parameter {
    name: "szDoc"
    type: "*US;"
  }
}
function {
  name: "ICreateTypeLib_SetDocString_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ICreateTypeLib_SetHelpFileName_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RICreateTypeLib;;"
  }
  parameter {
    name: "szHelpFileName"
    type: "*US;"
  }
}
function {
  name: "ICreateTypeLib_SetHelpFileName_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ICreateTypeLib_SetHelpContext_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RICreateTypeLib;;"
  }
  parameter {
    name: "dwHelpContext"
    type: "UI"
  }
}
function {
  name: "ICreateTypeLib_SetHelpContext_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ICreateTypeLib_SetLcid_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RICreateTypeLib;;"
  }
  parameter {
    name: "lcid"
    type: "UI"
  }
}
function {
  name: "ICreateTypeLib_SetLcid_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ICreateTypeLib_SetLibFlags_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RICreateTypeLib;;"
  }
  parameter {
    name: "uLibFlags"
    type: "UI"
  }
}
function {
  name: "ICreateTypeLib_SetLibFlags_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ICreateTypeLib_SaveAllChanges_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RICreateTypeLib;;"
  }
}
function {
  name: "ICreateTypeLib_SaveAllChanges_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ICreateTypeLib2_DeleteTypeInfo_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RICreateTypeLib2;;"
  }
  parameter {
    name: "szName"
    type: "*US;"
  }
}
function {
  name: "ICreateTypeLib2_DeleteTypeInfo_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ICreateTypeLib2_SetCustData_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RICreateTypeLib2;;"
  }
  parameter {
    name: "guid"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "pVarVal"
    type: "*RtagVARIANT;;"
  }
}
function {
  name: "ICreateTypeLib2_SetCustData_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ICreateTypeLib2_SetHelpStringContext_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RICreateTypeLib2;;"
  }
  parameter {
    name: "dwHelpStringContext"
    type: "UI"
  }
}
function {
  name: "ICreateTypeLib2_SetHelpStringContext_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ICreateTypeLib2_SetHelpStringDll_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RICreateTypeLib2;;"
  }
  parameter {
    name: "szFileName"
    type: "*US;"
  }
}
function {
  name: "ICreateTypeLib2_SetHelpStringDll_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IErrorLog_AddError_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIErrorLog;;"
  }
  parameter {
    name: "pszPropName"
    type: "*cUS;"
  }
  parameter {
    name: "pExcepInfo"
    type: "*RtagEXCEPINFO;;"
  }
}
function {
  name: "IErrorLog_AddError_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IPropertyBag_RemoteRead_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIPropertyBag;;"
  }
  parameter {
    name: "pszPropName"
    type: "*cUS;"
  }
  parameter {
    name: "pVar"
    type: "*RtagVARIANT;;"
  }
  parameter {
    name: "pErrorLog"
    type: "*RIErrorLog;;"
  }
  parameter {
    name: "varType"
    type: "UI"
  }
  parameter {
    name: "pUnkObj"
    type: "*RIUnknown;;"
  }
}
function {
  name: "IPropertyBag_RemoteRead_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IPropertyBag_Write_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIPropertyBag;;"
  }
  parameter {
    name: "pszPropName"
    type: "*cUS;"
  }
  parameter {
    name: "pVar"
    type: "*RtagVARIANT;;"
  }
}
function {
  name: "IPropertyBag_Write_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IPropertyBag_Read_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIPropertyBag;;"
  }
  parameter {
    name: "pszPropName"
    type: "*cUS;"
  }
  parameter {
    name: "pVar"
    type: "*RtagVARIANT;;"
  }
  parameter {
    name: "pErrorLog"
    type: "*RIErrorLog;;"
  }
}
function {
  name: "IPropertyBag_Read_Stub"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIPropertyBag;;"
  }
  parameter {
    name: "pszPropName"
    type: "*cUS;"
  }
  parameter {
    name: "pVar"
    type: "*RtagVARIANT;;"
  }
  parameter {
    name: "pErrorLog"
    type: "*RIErrorLog;;"
  }
  parameter {
    name: "varType"
    type: "UI"
  }
  parameter {
    name: "pUnkObj"
    type: "*RIUnknown;;"
  }
}
function {
  name: "VARIANT_UserSize"
  return_type: "UI"
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*RtagVARIANT;;"
  }
}
function {
  name: "VARIANT_UserMarshal"
  return_type: "*UB;"
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UB;"
  }
  parameter {
    name: ""
    type: "*RtagVARIANT;;"
  }
}
function {
  name: "VARIANT_UserUnmarshal"
  return_type: "*UB;"
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UB;"
  }
  parameter {
    name: ""
    type: "*RtagVARIANT;;"
  }
}
function {
  name: "VARIANT_UserFree"
  return_type: "V"
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*RtagVARIANT;;"
  }
}
function {
  name: "BSTR_UserSize"
  return_type: "UI"
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "**US;;"
  }
}
function {
  name: "BSTR_UserMarshal"
  return_type: "*UB;"
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UB;"
  }
  parameter {
    name: ""
    type: "**US;;"
  }
}
function {
  name: "BSTR_UserUnmarshal"
  return_type: "*UB;"
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UB;"
  }
  parameter {
    name: ""
    type: "**US;;"
  }
}
function {
  name: "BSTR_UserFree"
  return_type: "V"
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "**US;;"
  }
}
function {
  name: "CLEANLOCALSTORAGE_UserSize"
  return_type: "UI"
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*RtagCLEANLOCALSTORAGE;;"
  }
}
function {
  name: "CLEANLOCALSTORAGE_UserMarshal"
  return_type: "*UB;"
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UB;"
  }
  parameter {
    name: ""
    type: "*RtagCLEANLOCALSTORAGE;;"
  }
}
function {
  name: "CLEANLOCALSTORAGE_UserUnmarshal"
  return_type: "*UB;"
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UB;"
  }
  parameter {
    name: ""
    type: "*RtagCLEANLOCALSTORAGE;;"
  }
}
function {
  name: "CLEANLOCALSTORAGE_UserFree"
  return_type: "V"
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*RtagCLEANLOCALSTORAGE;;"
  }
}
function {
  name: "IXMLDOMNode_get_nodeName_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDOMNode;;"
  }
  parameter {
    name: "name"
    type: "**US;;"
  }
}
function {
  name: "IXMLDOMNode_get_nodeName_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDOMNode_get_nodeValue_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDOMNode;;"
  }
  parameter {
    name: "value"
    type: "*RtagVARIANT;;"
  }
}
function {
  name: "IXMLDOMNode_get_nodeValue_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDOMNode_put_nodeValue_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDOMNode;;"
  }
  parameter {
    name: "value"
    type: "RtagVARIANT;"
  }
}
function {
  name: "IXMLDOMNode_put_nodeValue_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDOMNode_get_nodeType_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDOMNode;;"
  }
  parameter {
    name: "type"
    type: "*X(Enum.enum tagDOMNodeType);"
  }
}
function {
  name: "IXMLDOMNode_get_nodeType_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDOMNode_get_parentNode_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDOMNode;;"
  }
  parameter {
    name: "parent"
    type: "**RIXMLDOMNode;;;"
  }
}
function {
  name: "IXMLDOMNode_get_parentNode_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDOMNode_get_childNodes_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDOMNode;;"
  }
  parameter {
    name: "childList"
    type: "**RIXMLDOMNodeList;;;"
  }
}
function {
  name: "IXMLDOMNode_get_childNodes_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDOMNode_get_firstChild_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDOMNode;;"
  }
  parameter {
    name: "firstChild"
    type: "**RIXMLDOMNode;;;"
  }
}
function {
  name: "IXMLDOMNode_get_firstChild_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDOMNode_get_lastChild_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDOMNode;;"
  }
  parameter {
    name: "lastChild"
    type: "**RIXMLDOMNode;;;"
  }
}
function {
  name: "IXMLDOMNode_get_lastChild_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDOMNode_get_previousSibling_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDOMNode;;"
  }
  parameter {
    name: "previousSibling"
    type: "**RIXMLDOMNode;;;"
  }
}
function {
  name: "IXMLDOMNode_get_previousSibling_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDOMNode_get_nextSibling_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDOMNode;;"
  }
  parameter {
    name: "nextSibling"
    type: "**RIXMLDOMNode;;;"
  }
}
function {
  name: "IXMLDOMNode_get_nextSibling_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDOMNode_get_attributes_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDOMNode;;"
  }
  parameter {
    name: "attributeMap"
    type: "**RIXMLDOMNamedNodeMap;;;"
  }
}
function {
  name: "IXMLDOMNode_get_attributes_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDOMNode_insertBefore_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDOMNode;;"
  }
  parameter {
    name: "newChild"
    type: "*RIXMLDOMNode;;"
  }
  parameter {
    name: "refChild"
    type: "RtagVARIANT;"
  }
  parameter {
    name: "outNewChild"
    type: "**RIXMLDOMNode;;;"
  }
}
function {
  name: "IXMLDOMNode_insertBefore_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDOMNode_replaceChild_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDOMNode;;"
  }
  parameter {
    name: "newChild"
    type: "*RIXMLDOMNode;;"
  }
  parameter {
    name: "oldChild"
    type: "*RIXMLDOMNode;;"
  }
  parameter {
    name: "outOldChild"
    type: "**RIXMLDOMNode;;;"
  }
}
function {
  name: "IXMLDOMNode_replaceChild_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDOMNode_removeChild_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDOMNode;;"
  }
  parameter {
    name: "childNode"
    type: "*RIXMLDOMNode;;"
  }
  parameter {
    name: "oldChild"
    type: "**RIXMLDOMNode;;;"
  }
}
function {
  name: "IXMLDOMNode_removeChild_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDOMNode_appendChild_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDOMNode;;"
  }
  parameter {
    name: "newChild"
    type: "*RIXMLDOMNode;;"
  }
  parameter {
    name: "outNewChild"
    type: "**RIXMLDOMNode;;;"
  }
}
function {
  name: "IXMLDOMNode_appendChild_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDOMNode_hasChildNodes_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDOMNode;;"
  }
  parameter {
    name: "hasChild"
    type: "*S;"
  }
}
function {
  name: "IXMLDOMNode_hasChildNodes_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDOMNode_get_ownerDocument_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDOMNode;;"
  }
  parameter {
    name: "DOMDocument"
    type: "**RIXMLDOMDocument;;;"
  }
}
function {
  name: "IXMLDOMNode_get_ownerDocument_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDOMNode_cloneNode_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDOMNode;;"
  }
  parameter {
    name: "deep"
    type: "S"
  }
  parameter {
    name: "cloneRoot"
    type: "**RIXMLDOMNode;;;"
  }
}
function {
  name: "IXMLDOMNode_cloneNode_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDOMNode_get_nodeTypeString_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDOMNode;;"
  }
  parameter {
    name: "nodeType"
    type: "**US;;"
  }
}
function {
  name: "IXMLDOMNode_get_nodeTypeString_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDOMNode_get_text_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDOMNode;;"
  }
  parameter {
    name: "text"
    type: "**US;;"
  }
}
function {
  name: "IXMLDOMNode_get_text_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDOMNode_put_text_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDOMNode;;"
  }
  parameter {
    name: "text"
    type: "*US;"
  }
}
function {
  name: "IXMLDOMNode_put_text_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDOMNode_get_specified_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDOMNode;;"
  }
  parameter {
    name: "isSpecified"
    type: "*S;"
  }
}
function {
  name: "IXMLDOMNode_get_specified_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDOMNode_get_definition_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDOMNode;;"
  }
  parameter {
    name: "definitionNode"
    type: "**RIXMLDOMNode;;;"
  }
}
function {
  name: "IXMLDOMNode_get_definition_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDOMNode_get_nodeTypedValue_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDOMNode;;"
  }
  parameter {
    name: "typedValue"
    type: "*RtagVARIANT;;"
  }
}
function {
  name: "IXMLDOMNode_get_nodeTypedValue_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDOMNode_put_nodeTypedValue_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDOMNode;;"
  }
  parameter {
    name: "typedValue"
    type: "RtagVARIANT;"
  }
}
function {
  name: "IXMLDOMNode_put_nodeTypedValue_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDOMNode_get_dataType_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDOMNode;;"
  }
  parameter {
    name: "dataTypeName"
    type: "*RtagVARIANT;;"
  }
}
function {
  name: "IXMLDOMNode_get_dataType_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDOMNode_put_dataType_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDOMNode;;"
  }
  parameter {
    name: "dataTypeName"
    type: "*US;"
  }
}
function {
  name: "IXMLDOMNode_put_dataType_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDOMNode_get_xml_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDOMNode;;"
  }
  parameter {
    name: "xmlString"
    type: "**US;;"
  }
}
function {
  name: "IXMLDOMNode_get_xml_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDOMNode_transformNode_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDOMNode;;"
  }
  parameter {
    name: "styleSheet"
    type: "*RIXMLDOMNode;;"
  }
  parameter {
    name: "xmlString"
    type: "**US;;"
  }
}
function {
  name: "IXMLDOMNode_transformNode_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDOMNode_selectNodes_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDOMNode;;"
  }
  parameter {
    name: "queryString"
    type: "*US;"
  }
  parameter {
    name: "resultList"
    type: "**RIXMLDOMNodeList;;;"
  }
}
function {
  name: "IXMLDOMNode_selectNodes_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDOMNode_selectSingleNode_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDOMNode;;"
  }
  parameter {
    name: "queryString"
    type: "*US;"
  }
  parameter {
    name: "resultNode"
    type: "**RIXMLDOMNode;;;"
  }
}
function {
  name: "IXMLDOMNode_selectSingleNode_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDOMNode_get_parsed_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDOMNode;;"
  }
  parameter {
    name: "isParsed"
    type: "*S;"
  }
}
function {
  name: "IXMLDOMNode_get_parsed_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDOMNode_get_namespaceURI_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDOMNode;;"
  }
  parameter {
    name: "namespaceURI"
    type: "**US;;"
  }
}
function {
  name: "IXMLDOMNode_get_namespaceURI_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDOMNode_get_prefix_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDOMNode;;"
  }
  parameter {
    name: "prefixString"
    type: "**US;;"
  }
}
function {
  name: "IXMLDOMNode_get_prefix_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDOMNode_get_baseName_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDOMNode;;"
  }
  parameter {
    name: "nameString"
    type: "**US;;"
  }
}
function {
  name: "IXMLDOMNode_get_baseName_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDOMNode_transformNodeToObject_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDOMNode;;"
  }
  parameter {
    name: "stylesheet"
    type: "*RIXMLDOMNode;;"
  }
  parameter {
    name: "outputObject"
    type: "RtagVARIANT;"
  }
}
function {
  name: "IXMLDOMNode_transformNodeToObject_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDOMDocument_get_doctype_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDOMDocument;;"
  }
  parameter {
    name: "documentType"
    type: "**RIXMLDOMDocumentType;;;"
  }
}
function {
  name: "IXMLDOMDocument_get_doctype_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDOMDocument_get_implementation_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDOMDocument;;"
  }
  parameter {
    name: "impl"
    type: "**RIXMLDOMImplementation;;;"
  }
}
function {
  name: "IXMLDOMDocument_get_implementation_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDOMDocument_get_documentElement_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDOMDocument;;"
  }
  parameter {
    name: "DOMElement"
    type: "**RIXMLDOMElement;;;"
  }
}
function {
  name: "IXMLDOMDocument_get_documentElement_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDOMDocument_putref_documentElement_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDOMDocument;;"
  }
  parameter {
    name: "DOMElement"
    type: "*RIXMLDOMElement;;"
  }
}
function {
  name: "IXMLDOMDocument_putref_documentElement_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDOMDocument_createElement_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDOMDocument;;"
  }
  parameter {
    name: "tagname"
    type: "*US;"
  }
  parameter {
    name: "element"
    type: "**RIXMLDOMElement;;;"
  }
}
function {
  name: "IXMLDOMDocument_createElement_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDOMDocument_createDocumentFragment_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDOMDocument;;"
  }
  parameter {
    name: "docFrag"
    type: "**RIXMLDOMDocumentFragment;;;"
  }
}
function {
  name: "IXMLDOMDocument_createDocumentFragment_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDOMDocument_createTextNode_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDOMDocument;;"
  }
  parameter {
    name: "data"
    type: "*US;"
  }
  parameter {
    name: "text"
    type: "**RIXMLDOMText;;;"
  }
}
function {
  name: "IXMLDOMDocument_createTextNode_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDOMDocument_createComment_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDOMDocument;;"
  }
  parameter {
    name: "data"
    type: "*US;"
  }
  parameter {
    name: "comment"
    type: "**RIXMLDOMComment;;;"
  }
}
function {
  name: "IXMLDOMDocument_createComment_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDOMDocument_createCDATASection_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDOMDocument;;"
  }
  parameter {
    name: "data"
    type: "*US;"
  }
  parameter {
    name: "cdata"
    type: "**RIXMLDOMCDATASection;;;"
  }
}
function {
  name: "IXMLDOMDocument_createCDATASection_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDOMDocument_createProcessingInstruction_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDOMDocument;;"
  }
  parameter {
    name: "target"
    type: "*US;"
  }
  parameter {
    name: "data"
    type: "*US;"
  }
  parameter {
    name: "pi"
    type: "**RIXMLDOMProcessingInstruction;;;"
  }
}
function {
  name: "IXMLDOMDocument_createProcessingInstruction_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDOMDocument_createAttribute_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDOMDocument;;"
  }
  parameter {
    name: "name"
    type: "*US;"
  }
  parameter {
    name: "attribute"
    type: "**RIXMLDOMAttribute;;;"
  }
}
function {
  name: "IXMLDOMDocument_createAttribute_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDOMDocument_createEntityReference_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDOMDocument;;"
  }
  parameter {
    name: "name"
    type: "*US;"
  }
  parameter {
    name: "entityRef"
    type: "**RIXMLDOMEntityReference;;;"
  }
}
function {
  name: "IXMLDOMDocument_createEntityReference_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDOMDocument_getElementsByTagName_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDOMDocument;;"
  }
  parameter {
    name: "tagName"
    type: "*US;"
  }
  parameter {
    name: "resultList"
    type: "**RIXMLDOMNodeList;;;"
  }
}
function {
  name: "IXMLDOMDocument_getElementsByTagName_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDOMDocument_createNode_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDOMDocument;;"
  }
  parameter {
    name: "Type"
    type: "RtagVARIANT;"
  }
  parameter {
    name: "name"
    type: "*US;"
  }
  parameter {
    name: "namespaceURI"
    type: "*US;"
  }
  parameter {
    name: "node"
    type: "**RIXMLDOMNode;;;"
  }
}
function {
  name: "IXMLDOMDocument_createNode_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDOMDocument_nodeFromID_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDOMDocument;;"
  }
  parameter {
    name: "idString"
    type: "*US;"
  }
  parameter {
    name: "node"
    type: "**RIXMLDOMNode;;;"
  }
}
function {
  name: "IXMLDOMDocument_nodeFromID_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDOMDocument_load_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDOMDocument;;"
  }
  parameter {
    name: "xmlSource"
    type: "RtagVARIANT;"
  }
  parameter {
    name: "isSuccessful"
    type: "*S;"
  }
}
function {
  name: "IXMLDOMDocument_load_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDOMDocument_get_readyState_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDOMDocument;;"
  }
  parameter {
    name: "value"
    type: "*I;"
  }
}
function {
  name: "IXMLDOMDocument_get_readyState_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDOMDocument_get_parseError_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDOMDocument;;"
  }
  parameter {
    name: "errorObj"
    type: "**RIXMLDOMParseError;;;"
  }
}
function {
  name: "IXMLDOMDocument_get_parseError_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDOMDocument_get_url_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDOMDocument;;"
  }
  parameter {
    name: "urlString"
    type: "**US;;"
  }
}
function {
  name: "IXMLDOMDocument_get_url_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDOMDocument_get_async_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDOMDocument;;"
  }
  parameter {
    name: "isAsync"
    type: "*S;"
  }
}
function {
  name: "IXMLDOMDocument_get_async_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDOMDocument_put_async_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDOMDocument;;"
  }
  parameter {
    name: "isAsync"
    type: "S"
  }
}
function {
  name: "IXMLDOMDocument_put_async_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDOMDocument_abort_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDOMDocument;;"
  }
}
function {
  name: "IXMLDOMDocument_abort_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDOMDocument_loadXML_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDOMDocument;;"
  }
  parameter {
    name: "bstrXML"
    type: "*US;"
  }
  parameter {
    name: "isSuccessful"
    type: "*S;"
  }
}
function {
  name: "IXMLDOMDocument_loadXML_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDOMDocument_save_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDOMDocument;;"
  }
  parameter {
    name: "destination"
    type: "RtagVARIANT;"
  }
}
function {
  name: "IXMLDOMDocument_save_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDOMDocument_get_validateOnParse_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDOMDocument;;"
  }
  parameter {
    name: "isValidating"
    type: "*S;"
  }
}
function {
  name: "IXMLDOMDocument_get_validateOnParse_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDOMDocument_put_validateOnParse_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDOMDocument;;"
  }
  parameter {
    name: "isValidating"
    type: "S"
  }
}
function {
  name: "IXMLDOMDocument_put_validateOnParse_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDOMDocument_get_resolveExternals_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDOMDocument;;"
  }
  parameter {
    name: "isResolving"
    type: "*S;"
  }
}
function {
  name: "IXMLDOMDocument_get_resolveExternals_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDOMDocument_put_resolveExternals_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDOMDocument;;"
  }
  parameter {
    name: "isValidating"
    type: "S"
  }
}
function {
  name: "IXMLDOMDocument_put_resolveExternals_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDOMDocument_get_preserveWhiteSpace_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDOMDocument;;"
  }
  parameter {
    name: "isPreserving"
    type: "*S;"
  }
}
function {
  name: "IXMLDOMDocument_get_preserveWhiteSpace_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDOMDocument_put_preserveWhiteSpace_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDOMDocument;;"
  }
  parameter {
    name: "isPreserving"
    type: "S"
  }
}
function {
  name: "IXMLDOMDocument_put_preserveWhiteSpace_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDOMDocument_put_onreadystatechange_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDOMDocument;;"
  }
  parameter {
    name: "readystatechangeSink"
    type: "RtagVARIANT;"
  }
}
function {
  name: "IXMLDOMDocument_put_onreadystatechange_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDOMDocument_put_ondataavailable_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDOMDocument;;"
  }
  parameter {
    name: "ondataavailableSink"
    type: "RtagVARIANT;"
  }
}
function {
  name: "IXMLDOMDocument_put_ondataavailable_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDOMDocument_put_ontransformnode_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDOMDocument;;"
  }
  parameter {
    name: "ontransformnodeSink"
    type: "RtagVARIANT;"
  }
}
function {
  name: "IXMLDOMDocument_put_ontransformnode_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDOMNodeList_get_item_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDOMNodeList;;"
  }
  parameter {
    name: "index"
    type: "I"
  }
  parameter {
    name: "listItem"
    type: "**RIXMLDOMNode;;;"
  }
}
function {
  name: "IXMLDOMNodeList_get_item_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDOMNodeList_get_length_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDOMNodeList;;"
  }
  parameter {
    name: "listLength"
    type: "*I;"
  }
}
function {
  name: "IXMLDOMNodeList_get_length_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDOMNodeList_nextNode_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDOMNodeList;;"
  }
  parameter {
    name: "nextItem"
    type: "**RIXMLDOMNode;;;"
  }
}
function {
  name: "IXMLDOMNodeList_nextNode_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDOMNodeList_reset_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDOMNodeList;;"
  }
}
function {
  name: "IXMLDOMNodeList_reset_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDOMNodeList__newEnum_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDOMNodeList;;"
  }
  parameter {
    name: "ppUnk"
    type: "**RIUnknown;;;"
  }
}
function {
  name: "IXMLDOMNodeList__newEnum_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDOMNamedNodeMap_getNamedItem_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDOMNamedNodeMap;;"
  }
  parameter {
    name: "name"
    type: "*US;"
  }
  parameter {
    name: "namedItem"
    type: "**RIXMLDOMNode;;;"
  }
}
function {
  name: "IXMLDOMNamedNodeMap_getNamedItem_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDOMNamedNodeMap_setNamedItem_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDOMNamedNodeMap;;"
  }
  parameter {
    name: "newItem"
    type: "*RIXMLDOMNode;;"
  }
  parameter {
    name: "namedItem"
    type: "**RIXMLDOMNode;;;"
  }
}
function {
  name: "IXMLDOMNamedNodeMap_setNamedItem_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDOMNamedNodeMap_removeNamedItem_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDOMNamedNodeMap;;"
  }
  parameter {
    name: "name"
    type: "*US;"
  }
  parameter {
    name: "namedItem"
    type: "**RIXMLDOMNode;;;"
  }
}
function {
  name: "IXMLDOMNamedNodeMap_removeNamedItem_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDOMNamedNodeMap_get_item_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDOMNamedNodeMap;;"
  }
  parameter {
    name: "index"
    type: "I"
  }
  parameter {
    name: "listItem"
    type: "**RIXMLDOMNode;;;"
  }
}
function {
  name: "IXMLDOMNamedNodeMap_get_item_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDOMNamedNodeMap_get_length_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDOMNamedNodeMap;;"
  }
  parameter {
    name: "listLength"
    type: "*I;"
  }
}
function {
  name: "IXMLDOMNamedNodeMap_get_length_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDOMNamedNodeMap_getQualifiedItem_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDOMNamedNodeMap;;"
  }
  parameter {
    name: "baseName"
    type: "*US;"
  }
  parameter {
    name: "namespaceURI"
    type: "*US;"
  }
  parameter {
    name: "qualifiedItem"
    type: "**RIXMLDOMNode;;;"
  }
}
function {
  name: "IXMLDOMNamedNodeMap_getQualifiedItem_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDOMNamedNodeMap_removeQualifiedItem_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDOMNamedNodeMap;;"
  }
  parameter {
    name: "baseName"
    type: "*US;"
  }
  parameter {
    name: "namespaceURI"
    type: "*US;"
  }
  parameter {
    name: "qualifiedItem"
    type: "**RIXMLDOMNode;;;"
  }
}
function {
  name: "IXMLDOMNamedNodeMap_removeQualifiedItem_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDOMNamedNodeMap_nextNode_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDOMNamedNodeMap;;"
  }
  parameter {
    name: "nextItem"
    type: "**RIXMLDOMNode;;;"
  }
}
function {
  name: "IXMLDOMNamedNodeMap_nextNode_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDOMNamedNodeMap_reset_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDOMNamedNodeMap;;"
  }
}
function {
  name: "IXMLDOMNamedNodeMap_reset_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDOMNamedNodeMap__newEnum_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDOMNamedNodeMap;;"
  }
  parameter {
    name: "ppUnk"
    type: "**RIUnknown;;;"
  }
}
function {
  name: "IXMLDOMNamedNodeMap__newEnum_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDOMCharacterData_get_data_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDOMCharacterData;;"
  }
  parameter {
    name: "data"
    type: "**US;;"
  }
}
function {
  name: "IXMLDOMCharacterData_get_data_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDOMCharacterData_put_data_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDOMCharacterData;;"
  }
  parameter {
    name: "data"
    type: "*US;"
  }
}
function {
  name: "IXMLDOMCharacterData_put_data_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDOMCharacterData_get_length_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDOMCharacterData;;"
  }
  parameter {
    name: "dataLength"
    type: "*I;"
  }
}
function {
  name: "IXMLDOMCharacterData_get_length_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDOMCharacterData_substringData_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDOMCharacterData;;"
  }
  parameter {
    name: "offset"
    type: "I"
  }
  parameter {
    name: "count"
    type: "I"
  }
  parameter {
    name: "data"
    type: "**US;;"
  }
}
function {
  name: "IXMLDOMCharacterData_substringData_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDOMCharacterData_appendData_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDOMCharacterData;;"
  }
  parameter {
    name: "data"
    type: "*US;"
  }
}
function {
  name: "IXMLDOMCharacterData_appendData_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDOMCharacterData_insertData_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDOMCharacterData;;"
  }
  parameter {
    name: "offset"
    type: "I"
  }
  parameter {
    name: "data"
    type: "*US;"
  }
}
function {
  name: "IXMLDOMCharacterData_insertData_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDOMCharacterData_deleteData_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDOMCharacterData;;"
  }
  parameter {
    name: "offset"
    type: "I"
  }
  parameter {
    name: "count"
    type: "I"
  }
}
function {
  name: "IXMLDOMCharacterData_deleteData_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDOMCharacterData_replaceData_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDOMCharacterData;;"
  }
  parameter {
    name: "offset"
    type: "I"
  }
  parameter {
    name: "count"
    type: "I"
  }
  parameter {
    name: "data"
    type: "*US;"
  }
}
function {
  name: "IXMLDOMCharacterData_replaceData_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDOMAttribute_get_name_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDOMAttribute;;"
  }
  parameter {
    name: "attributeName"
    type: "**US;;"
  }
}
function {
  name: "IXMLDOMAttribute_get_name_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDOMAttribute_get_value_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDOMAttribute;;"
  }
  parameter {
    name: "attributeValue"
    type: "*RtagVARIANT;;"
  }
}
function {
  name: "IXMLDOMAttribute_get_value_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDOMAttribute_put_value_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDOMAttribute;;"
  }
  parameter {
    name: "attributeValue"
    type: "RtagVARIANT;"
  }
}
function {
  name: "IXMLDOMAttribute_put_value_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDOMElement_get_tagName_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDOMElement;;"
  }
  parameter {
    name: "tagName"
    type: "**US;;"
  }
}
function {
  name: "IXMLDOMElement_get_tagName_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDOMElement_getAttribute_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDOMElement;;"
  }
  parameter {
    name: "name"
    type: "*US;"
  }
  parameter {
    name: "value"
    type: "*RtagVARIANT;;"
  }
}
function {
  name: "IXMLDOMElement_getAttribute_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDOMElement_setAttribute_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDOMElement;;"
  }
  parameter {
    name: "name"
    type: "*US;"
  }
  parameter {
    name: "value"
    type: "RtagVARIANT;"
  }
}
function {
  name: "IXMLDOMElement_setAttribute_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDOMElement_removeAttribute_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDOMElement;;"
  }
  parameter {
    name: "name"
    type: "*US;"
  }
}
function {
  name: "IXMLDOMElement_removeAttribute_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDOMElement_getAttributeNode_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDOMElement;;"
  }
  parameter {
    name: "name"
    type: "*US;"
  }
  parameter {
    name: "attributeNode"
    type: "**RIXMLDOMAttribute;;;"
  }
}
function {
  name: "IXMLDOMElement_getAttributeNode_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDOMElement_setAttributeNode_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDOMElement;;"
  }
  parameter {
    name: "DOMAttribute"
    type: "*RIXMLDOMAttribute;;"
  }
  parameter {
    name: "attributeNode"
    type: "**RIXMLDOMAttribute;;;"
  }
}
function {
  name: "IXMLDOMElement_setAttributeNode_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDOMElement_removeAttributeNode_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDOMElement;;"
  }
  parameter {
    name: "DOMAttribute"
    type: "*RIXMLDOMAttribute;;"
  }
  parameter {
    name: "attributeNode"
    type: "**RIXMLDOMAttribute;;;"
  }
}
function {
  name: "IXMLDOMElement_removeAttributeNode_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDOMElement_getElementsByTagName_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDOMElement;;"
  }
  parameter {
    name: "tagName"
    type: "*US;"
  }
  parameter {
    name: "resultList"
    type: "**RIXMLDOMNodeList;;;"
  }
}
function {
  name: "IXMLDOMElement_getElementsByTagName_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDOMElement_normalize_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDOMElement;;"
  }
}
function {
  name: "IXMLDOMElement_normalize_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDOMText_splitText_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDOMText;;"
  }
  parameter {
    name: "offset"
    type: "I"
  }
  parameter {
    name: "rightHandTextNode"
    type: "**RIXMLDOMText;;;"
  }
}
function {
  name: "IXMLDOMText_splitText_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDOMProcessingInstruction_get_target_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDOMProcessingInstruction;;"
  }
  parameter {
    name: "name"
    type: "**US;;"
  }
}
function {
  name: "IXMLDOMProcessingInstruction_get_target_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDOMProcessingInstruction_get_data_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDOMProcessingInstruction;;"
  }
  parameter {
    name: "value"
    type: "**US;;"
  }
}
function {
  name: "IXMLDOMProcessingInstruction_get_data_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDOMProcessingInstruction_put_data_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDOMProcessingInstruction;;"
  }
  parameter {
    name: "value"
    type: "*US;"
  }
}
function {
  name: "IXMLDOMProcessingInstruction_put_data_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDOMDocumentType_get_name_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDOMDocumentType;;"
  }
  parameter {
    name: "rootName"
    type: "**US;;"
  }
}
function {
  name: "IXMLDOMDocumentType_get_name_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDOMDocumentType_get_entities_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDOMDocumentType;;"
  }
  parameter {
    name: "entityMap"
    type: "**RIXMLDOMNamedNodeMap;;;"
  }
}
function {
  name: "IXMLDOMDocumentType_get_entities_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDOMDocumentType_get_notations_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDOMDocumentType;;"
  }
  parameter {
    name: "notationMap"
    type: "**RIXMLDOMNamedNodeMap;;;"
  }
}
function {
  name: "IXMLDOMDocumentType_get_notations_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDOMNotation_get_publicId_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDOMNotation;;"
  }
  parameter {
    name: "publicId"
    type: "*RtagVARIANT;;"
  }
}
function {
  name: "IXMLDOMNotation_get_publicId_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDOMNotation_get_systemId_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDOMNotation;;"
  }
  parameter {
    name: "systemId"
    type: "*RtagVARIANT;;"
  }
}
function {
  name: "IXMLDOMNotation_get_systemId_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDOMEntity_get_publicId_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDOMEntity;;"
  }
  parameter {
    name: "publicId"
    type: "*RtagVARIANT;;"
  }
}
function {
  name: "IXMLDOMEntity_get_publicId_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDOMEntity_get_systemId_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDOMEntity;;"
  }
  parameter {
    name: "systemId"
    type: "*RtagVARIANT;;"
  }
}
function {
  name: "IXMLDOMEntity_get_systemId_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDOMEntity_get_notationName_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDOMEntity;;"
  }
  parameter {
    name: "name"
    type: "**US;;"
  }
}
function {
  name: "IXMLDOMEntity_get_notationName_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDOMImplementation_hasFeature_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDOMImplementation;;"
  }
  parameter {
    name: "feature"
    type: "*US;"
  }
  parameter {
    name: "version"
    type: "*US;"
  }
  parameter {
    name: "pbool"
    type: "*S;"
  }
}
function {
  name: "IXMLDOMImplementation_hasFeature_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDOMParseError_get_errorCode_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDOMParseError;;"
  }
  parameter {
    name: "errCode"
    type: "*I;"
  }
}
function {
  name: "IXMLDOMParseError_get_errorCode_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDOMParseError_get_url_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDOMParseError;;"
  }
  parameter {
    name: "p"
    type: "**US;;"
  }
}
function {
  name: "IXMLDOMParseError_get_url_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDOMParseError_get_reason_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDOMParseError;;"
  }
  parameter {
    name: "p"
    type: "**US;;"
  }
}
function {
  name: "IXMLDOMParseError_get_reason_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDOMParseError_get_srcText_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDOMParseError;;"
  }
  parameter {
    name: "p"
    type: "**US;;"
  }
}
function {
  name: "IXMLDOMParseError_get_srcText_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDOMParseError_get_line_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDOMParseError;;"
  }
  parameter {
    name: "lineNo"
    type: "*I;"
  }
}
function {
  name: "IXMLDOMParseError_get_line_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDOMParseError_get_linepos_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDOMParseError;;"
  }
  parameter {
    name: "linePos"
    type: "*I;"
  }
}
function {
  name: "IXMLDOMParseError_get_linepos_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDOMParseError_get_filepos_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDOMParseError;;"
  }
  parameter {
    name: "filePos"
    type: "*I;"
  }
}
function {
  name: "IXMLDOMParseError_get_filepos_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLHttpRequest_open_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLHttpRequest;;"
  }
  parameter {
    name: "bstrMethod"
    type: "*US;"
  }
  parameter {
    name: "bstrUrl"
    type: "*US;"
  }
  parameter {
    name: "varAsync"
    type: "RtagVARIANT;"
  }
  parameter {
    name: "varUser"
    type: "RtagVARIANT;"
  }
  parameter {
    name: "varPassword"
    type: "RtagVARIANT;"
  }
}
function {
  name: "IXMLHttpRequest_open_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLHttpRequest_setRequestHeader_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLHttpRequest;;"
  }
  parameter {
    name: "bstrHeader"
    type: "*US;"
  }
  parameter {
    name: "bstrValue"
    type: "*US;"
  }
}
function {
  name: "IXMLHttpRequest_setRequestHeader_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLHttpRequest_getResponseHeader_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLHttpRequest;;"
  }
  parameter {
    name: "bstrHeader"
    type: "*US;"
  }
  parameter {
    name: "pbstrValue"
    type: "**US;;"
  }
}
function {
  name: "IXMLHttpRequest_getResponseHeader_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLHttpRequest_getAllResponseHeaders_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLHttpRequest;;"
  }
  parameter {
    name: "pbstrHeaders"
    type: "**US;;"
  }
}
function {
  name: "IXMLHttpRequest_getAllResponseHeaders_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLHttpRequest_send_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLHttpRequest;;"
  }
  parameter {
    name: "varBody"
    type: "RtagVARIANT;"
  }
}
function {
  name: "IXMLHttpRequest_send_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLHttpRequest_abort_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLHttpRequest;;"
  }
}
function {
  name: "IXMLHttpRequest_abort_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLHttpRequest_get_status_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLHttpRequest;;"
  }
  parameter {
    name: "plStatus"
    type: "*I;"
  }
}
function {
  name: "IXMLHttpRequest_get_status_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLHttpRequest_get_statusText_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLHttpRequest;;"
  }
  parameter {
    name: "bstrStatus"
    type: "**US;;"
  }
}
function {
  name: "IXMLHttpRequest_get_statusText_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLHttpRequest_get_responseXML_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLHttpRequest;;"
  }
  parameter {
    name: "ppBody"
    type: "**RIDispatch;;;"
  }
}
function {
  name: "IXMLHttpRequest_get_responseXML_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLHttpRequest_get_responseText_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLHttpRequest;;"
  }
  parameter {
    name: "pbstrBody"
    type: "**US;;"
  }
}
function {
  name: "IXMLHttpRequest_get_responseText_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLHttpRequest_get_responseBody_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLHttpRequest;;"
  }
  parameter {
    name: "pvarBody"
    type: "*RtagVARIANT;;"
  }
}
function {
  name: "IXMLHttpRequest_get_responseBody_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLHttpRequest_get_responseStream_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLHttpRequest;;"
  }
  parameter {
    name: "pvarBody"
    type: "*RtagVARIANT;;"
  }
}
function {
  name: "IXMLHttpRequest_get_responseStream_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLHttpRequest_get_readyState_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLHttpRequest;;"
  }
  parameter {
    name: "plState"
    type: "*I;"
  }
}
function {
  name: "IXMLHttpRequest_get_readyState_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLHttpRequest_put_onreadystatechange_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLHttpRequest;;"
  }
  parameter {
    name: "pReadyStateSink"
    type: "*RIDispatch;;"
  }
}
function {
  name: "IXMLHttpRequest_put_onreadystatechange_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDSOControl_get_XMLDocument_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDSOControl;;"
  }
  parameter {
    name: "ppDoc"
    type: "**RIXMLDOMDocument;;;"
  }
}
function {
  name: "IXMLDSOControl_get_XMLDocument_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDSOControl_put_XMLDocument_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDSOControl;;"
  }
  parameter {
    name: "ppDoc"
    type: "*RIXMLDOMDocument;;"
  }
}
function {
  name: "IXMLDSOControl_put_XMLDocument_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDSOControl_get_JavaDSOCompatible_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDSOControl;;"
  }
  parameter {
    name: "fJavaDSOCompatible"
    type: "*I;"
  }
}
function {
  name: "IXMLDSOControl_get_JavaDSOCompatible_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDSOControl_put_JavaDSOCompatible_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDSOControl;;"
  }
  parameter {
    name: "fJavaDSOCompatible"
    type: "I"
  }
}
function {
  name: "IXMLDSOControl_put_JavaDSOCompatible_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDSOControl_get_readyState_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDSOControl;;"
  }
  parameter {
    name: "state"
    type: "*I;"
  }
}
function {
  name: "IXMLDSOControl_get_readyState_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLElementCollection_put_length_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLElementCollection;;"
  }
  parameter {
    name: "v"
    type: "I"
  }
}
function {
  name: "IXMLElementCollection_put_length_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLElementCollection_get_length_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLElementCollection;;"
  }
  parameter {
    name: "p"
    type: "*I;"
  }
}
function {
  name: "IXMLElementCollection_get_length_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLElementCollection_get__newEnum_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLElementCollection;;"
  }
  parameter {
    name: "ppUnk"
    type: "**RIUnknown;;;"
  }
}
function {
  name: "IXMLElementCollection_get__newEnum_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLElementCollection_item_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLElementCollection;;"
  }
  parameter {
    name: "var1"
    type: "RtagVARIANT;"
  }
  parameter {
    name: "var2"
    type: "RtagVARIANT;"
  }
  parameter {
    name: "ppDisp"
    type: "**RIDispatch;;;"
  }
}
function {
  name: "IXMLElementCollection_item_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLElement_get_tagName_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLElement;;"
  }
  parameter {
    name: "p"
    type: "**US;;"
  }
}
function {
  name: "IXMLElement_get_tagName_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLElement_put_tagName_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLElement;;"
  }
  parameter {
    name: "p"
    type: "*US;"
  }
}
function {
  name: "IXMLElement_put_tagName_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLElement_get_parent_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLElement;;"
  }
  parameter {
    name: "parent"
    type: "**RIXMLElement;;;"
  }
}
function {
  name: "IXMLElement_get_parent_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLElement_setAttribute_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLElement;;"
  }
  parameter {
    name: "strPropertyName"
    type: "*US;"
  }
  parameter {
    name: "PropertyValue"
    type: "RtagVARIANT;"
  }
}
function {
  name: "IXMLElement_setAttribute_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLElement_getAttribute_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLElement;;"
  }
  parameter {
    name: "strPropertyName"
    type: "*US;"
  }
  parameter {
    name: "PropertyValue"
    type: "*RtagVARIANT;;"
  }
}
function {
  name: "IXMLElement_getAttribute_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLElement_removeAttribute_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLElement;;"
  }
  parameter {
    name: "strPropertyName"
    type: "*US;"
  }
}
function {
  name: "IXMLElement_removeAttribute_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLElement_get_children_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLElement;;"
  }
  parameter {
    name: "p"
    type: "**RIXMLElementCollection;;;"
  }
}
function {
  name: "IXMLElement_get_children_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLElement_get_type_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLElement;;"
  }
  parameter {
    name: "p"
    type: "*I;"
  }
}
function {
  name: "IXMLElement_get_type_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLElement_get_text_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLElement;;"
  }
  parameter {
    name: "p"
    type: "**US;;"
  }
}
function {
  name: "IXMLElement_get_text_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLElement_put_text_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLElement;;"
  }
  parameter {
    name: "p"
    type: "*US;"
  }
}
function {
  name: "IXMLElement_put_text_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLElement_addChild_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLElement;;"
  }
  parameter {
    name: "pChildElem"
    type: "*RIXMLElement;;"
  }
  parameter {
    name: "lIndex"
    type: "I"
  }
  parameter {
    name: "lreserved"
    type: "I"
  }
}
function {
  name: "IXMLElement_addChild_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLElement_removeChild_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLElement;;"
  }
  parameter {
    name: "pChildElem"
    type: "*RIXMLElement;;"
  }
}
function {
  name: "IXMLElement_removeChild_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDocument_get_root_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDocument;;"
  }
  parameter {
    name: "p"
    type: "**RIXMLElement;;;"
  }
}
function {
  name: "IXMLDocument_get_root_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDocument_get_fileSize_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDocument;;"
  }
  parameter {
    name: "p"
    type: "**US;;"
  }
}
function {
  name: "IXMLDocument_get_fileSize_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDocument_get_fileModifiedDate_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDocument;;"
  }
  parameter {
    name: "p"
    type: "**US;;"
  }
}
function {
  name: "IXMLDocument_get_fileModifiedDate_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDocument_get_fileUpdatedDate_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDocument;;"
  }
  parameter {
    name: "p"
    type: "**US;;"
  }
}
function {
  name: "IXMLDocument_get_fileUpdatedDate_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDocument_get_URL_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDocument;;"
  }
  parameter {
    name: "p"
    type: "**US;;"
  }
}
function {
  name: "IXMLDocument_get_URL_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDocument_put_URL_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDocument;;"
  }
  parameter {
    name: "p"
    type: "*US;"
  }
}
function {
  name: "IXMLDocument_put_URL_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDocument_get_mimeType_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDocument;;"
  }
  parameter {
    name: "p"
    type: "**US;;"
  }
}
function {
  name: "IXMLDocument_get_mimeType_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDocument_get_readyState_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDocument;;"
  }
  parameter {
    name: "p"
    type: "*I;"
  }
}
function {
  name: "IXMLDocument_get_readyState_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDocument_get_charset_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDocument;;"
  }
  parameter {
    name: "p"
    type: "**US;;"
  }
}
function {
  name: "IXMLDocument_get_charset_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDocument_put_charset_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDocument;;"
  }
  parameter {
    name: "p"
    type: "*US;"
  }
}
function {
  name: "IXMLDocument_put_charset_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDocument_get_version_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDocument;;"
  }
  parameter {
    name: "p"
    type: "**US;;"
  }
}
function {
  name: "IXMLDocument_get_version_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDocument_get_doctype_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDocument;;"
  }
  parameter {
    name: "p"
    type: "**US;;"
  }
}
function {
  name: "IXMLDocument_get_doctype_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDocument_get_dtdURl_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDocument;;"
  }
  parameter {
    name: "p"
    type: "**US;;"
  }
}
function {
  name: "IXMLDocument_get_dtdURl_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDocument_createElement_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDocument;;"
  }
  parameter {
    name: "vType"
    type: "RtagVARIANT;"
  }
  parameter {
    name: "var1"
    type: "RtagVARIANT;"
  }
  parameter {
    name: "ppElem"
    type: "**RIXMLElement;;;"
  }
}
function {
  name: "IXMLDocument_createElement_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLElement2_get_tagName_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLElement2;;"
  }
  parameter {
    name: "p"
    type: "**US;;"
  }
}
function {
  name: "IXMLElement2_get_tagName_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLElement2_put_tagName_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLElement2;;"
  }
  parameter {
    name: "p"
    type: "*US;"
  }
}
function {
  name: "IXMLElement2_put_tagName_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLElement2_get_parent_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLElement2;;"
  }
  parameter {
    name: "ppParent"
    type: "**RIXMLElement2;;;"
  }
}
function {
  name: "IXMLElement2_get_parent_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLElement2_setAttribute_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLElement2;;"
  }
  parameter {
    name: "strPropertyName"
    type: "*US;"
  }
  parameter {
    name: "PropertyValue"
    type: "RtagVARIANT;"
  }
}
function {
  name: "IXMLElement2_setAttribute_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLElement2_getAttribute_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLElement2;;"
  }
  parameter {
    name: "strPropertyName"
    type: "*US;"
  }
  parameter {
    name: "PropertyValue"
    type: "*RtagVARIANT;;"
  }
}
function {
  name: "IXMLElement2_getAttribute_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLElement2_removeAttribute_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLElement2;;"
  }
  parameter {
    name: "strPropertyName"
    type: "*US;"
  }
}
function {
  name: "IXMLElement2_removeAttribute_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLElement2_get_children_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLElement2;;"
  }
  parameter {
    name: "pp"
    type: "**RIXMLElementCollection;;;"
  }
}
function {
  name: "IXMLElement2_get_children_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLElement2_get_type_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLElement2;;"
  }
  parameter {
    name: "plType"
    type: "*I;"
  }
}
function {
  name: "IXMLElement2_get_type_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLElement2_get_text_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLElement2;;"
  }
  parameter {
    name: "p"
    type: "**US;;"
  }
}
function {
  name: "IXMLElement2_get_text_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLElement2_put_text_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLElement2;;"
  }
  parameter {
    name: "p"
    type: "*US;"
  }
}
function {
  name: "IXMLElement2_put_text_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLElement2_addChild_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLElement2;;"
  }
  parameter {
    name: "pChildElem"
    type: "*RIXMLElement2;;"
  }
  parameter {
    name: "lIndex"
    type: "I"
  }
  parameter {
    name: "lReserved"
    type: "I"
  }
}
function {
  name: "IXMLElement2_addChild_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLElement2_removeChild_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLElement2;;"
  }
  parameter {
    name: "pChildElem"
    type: "*RIXMLElement2;;"
  }
}
function {
  name: "IXMLElement2_removeChild_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLElement2_get_attributes_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLElement2;;"
  }
  parameter {
    name: "pp"
    type: "**RIXMLElementCollection;;;"
  }
}
function {
  name: "IXMLElement2_get_attributes_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDocument2_get_root_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDocument2;;"
  }
  parameter {
    name: "p"
    type: "**RIXMLElement2;;;"
  }
}
function {
  name: "IXMLDocument2_get_root_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDocument2_get_fileSize_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDocument2;;"
  }
  parameter {
    name: "p"
    type: "**US;;"
  }
}
function {
  name: "IXMLDocument2_get_fileSize_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDocument2_get_fileModifiedDate_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDocument2;;"
  }
  parameter {
    name: "p"
    type: "**US;;"
  }
}
function {
  name: "IXMLDocument2_get_fileModifiedDate_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDocument2_get_fileUpdatedDate_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDocument2;;"
  }
  parameter {
    name: "p"
    type: "**US;;"
  }
}
function {
  name: "IXMLDocument2_get_fileUpdatedDate_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDocument2_get_URL_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDocument2;;"
  }
  parameter {
    name: "p"
    type: "**US;;"
  }
}
function {
  name: "IXMLDocument2_get_URL_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDocument2_put_URL_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDocument2;;"
  }
  parameter {
    name: "p"
    type: "*US;"
  }
}
function {
  name: "IXMLDocument2_put_URL_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDocument2_get_mimeType_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDocument2;;"
  }
  parameter {
    name: "p"
    type: "**US;;"
  }
}
function {
  name: "IXMLDocument2_get_mimeType_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDocument2_get_readyState_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDocument2;;"
  }
  parameter {
    name: "pl"
    type: "*I;"
  }
}
function {
  name: "IXMLDocument2_get_readyState_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDocument2_get_charset_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDocument2;;"
  }
  parameter {
    name: "p"
    type: "**US;;"
  }
}
function {
  name: "IXMLDocument2_get_charset_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDocument2_put_charset_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDocument2;;"
  }
  parameter {
    name: "p"
    type: "*US;"
  }
}
function {
  name: "IXMLDocument2_put_charset_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDocument2_get_version_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDocument2;;"
  }
  parameter {
    name: "p"
    type: "**US;;"
  }
}
function {
  name: "IXMLDocument2_get_version_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDocument2_get_doctype_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDocument2;;"
  }
  parameter {
    name: "p"
    type: "**US;;"
  }
}
function {
  name: "IXMLDocument2_get_doctype_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDocument2_get_dtdURL_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDocument2;;"
  }
  parameter {
    name: "p"
    type: "**US;;"
  }
}
function {
  name: "IXMLDocument2_get_dtdURL_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDocument2_createElement_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDocument2;;"
  }
  parameter {
    name: "vType"
    type: "RtagVARIANT;"
  }
  parameter {
    name: "var"
    type: "RtagVARIANT;"
  }
  parameter {
    name: "ppElem"
    type: "**RIXMLElement2;;;"
  }
}
function {
  name: "IXMLDocument2_createElement_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDocument2_get_async_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDocument2;;"
  }
  parameter {
    name: "pf"
    type: "*S;"
  }
}
function {
  name: "IXMLDocument2_get_async_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLDocument2_put_async_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLDocument2;;"
  }
  parameter {
    name: "f"
    type: "S"
  }
}
function {
  name: "IXMLDocument2_put_async_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLAttribute_get_name_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLAttribute;;"
  }
  parameter {
    name: "p"
    type: "**US;;"
  }
}
function {
  name: "IXMLAttribute_get_name_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLAttribute_get_value_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLAttribute;;"
  }
  parameter {
    name: "p"
    type: "**US;;"
  }
}
function {
  name: "IXMLAttribute_get_value_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLError_GetErrorInfo_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLError;;"
  }
  parameter {
    name: "pErrorReturn"
    type: "*R_xml_error;;"
  }
}
function {
  name: "IXMLError_GetErrorInfo_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IXMLElementNotificationSink_ChildAdded_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIXMLElementNotificationSink;;"
  }
  parameter {
    name: "pChildElem"
    type: "*RIDispatch;;"
  }
}
function {
  name: "IXMLElementNotificationSink_ChildAdded_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "BSTR_UserSize"
  return_type: "UI"
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "**US;;"
  }
}
function {
  name: "BSTR_UserMarshal"
  return_type: "*UB;"
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UB;"
  }
  parameter {
    name: ""
    type: "**US;;"
  }
}
function {
  name: "BSTR_UserUnmarshal"
  return_type: "*UB;"
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UB;"
  }
  parameter {
    name: ""
    type: "**US;;"
  }
}
function {
  name: "BSTR_UserFree"
  return_type: "V"
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "**US;;"
  }
}
function {
  name: "VARIANT_UserSize"
  return_type: "UI"
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*RtagVARIANT;;"
  }
}
function {
  name: "VARIANT_UserMarshal"
  return_type: "*UB;"
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UB;"
  }
  parameter {
    name: ""
    type: "*RtagVARIANT;;"
  }
}
function {
  name: "VARIANT_UserUnmarshal"
  return_type: "*UB;"
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UB;"
  }
  parameter {
    name: ""
    type: "*RtagVARIANT;;"
  }
}
function {
  name: "VARIANT_UserFree"
  return_type: "V"
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*RtagVARIANT;;"
  }
}
function {
  name: "IBinding_Abort_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIBinding;;"
  }
}
function {
  name: "IBinding_Abort_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IBinding_Suspend_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIBinding;;"
  }
}
function {
  name: "IBinding_Suspend_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IBinding_Resume_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIBinding;;"
  }
}
function {
  name: "IBinding_Resume_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IBinding_SetPriority_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIBinding;;"
  }
  parameter {
    name: "nPriority"
    type: "I"
  }
}
function {
  name: "IBinding_SetPriority_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IBinding_GetPriority_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIBinding;;"
  }
  parameter {
    name: "pnPriority"
    type: "*I;"
  }
}
function {
  name: "IBinding_GetPriority_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IBinding_RemoteGetBindResult_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIBinding;;"
  }
  parameter {
    name: "pclsidProtocol"
    type: "*R_GUID;;"
  }
  parameter {
    name: "pdwResult"
    type: "*UI;"
  }
  parameter {
    name: "pszResult"
    type: "**US;;"
  }
  parameter {
    name: "dwReserved"
    type: "UI"
  }
}
function {
  name: "IBinding_RemoteGetBindResult_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IBinding_GetBindResult_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIBinding;;"
  }
  parameter {
    name: "pclsidProtocol"
    type: "*R_GUID;;"
  }
  parameter {
    name: "pdwResult"
    type: "*UI;"
  }
  parameter {
    name: "pszResult"
    type: "**US;;"
  }
  parameter {
    name: "pdwReserved"
    type: "*UI;"
  }
}
function {
  name: "IBinding_GetBindResult_Stub"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIBinding;;"
  }
  parameter {
    name: "pclsidProtocol"
    type: "*R_GUID;;"
  }
  parameter {
    name: "pdwResult"
    type: "*UI;"
  }
  parameter {
    name: "pszResult"
    type: "**US;;"
  }
  parameter {
    name: "dwReserved"
    type: "UI"
  }
}
function {
  name: "IBindStatusCallback_OnStartBinding_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIBindStatusCallback;;"
  }
  parameter {
    name: "dwReserved"
    type: "UI"
  }
  parameter {
    name: "pib"
    type: "*RIBinding;;"
  }
}
function {
  name: "IBindStatusCallback_OnStartBinding_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IBindStatusCallback_GetPriority_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIBindStatusCallback;;"
  }
  parameter {
    name: "pnPriority"
    type: "*I;"
  }
}
function {
  name: "IBindStatusCallback_GetPriority_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IBindStatusCallback_OnLowResource_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIBindStatusCallback;;"
  }
  parameter {
    name: "reserved"
    type: "UI"
  }
}
function {
  name: "IBindStatusCallback_OnLowResource_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IBindStatusCallback_OnProgress_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIBindStatusCallback;;"
  }
  parameter {
    name: "ulProgress"
    type: "UI"
  }
  parameter {
    name: "ulProgressMax"
    type: "UI"
  }
  parameter {
    name: "ulStatusCode"
    type: "UI"
  }
  parameter {
    name: "szStatusText"
    type: "*cUS;"
  }
}
function {
  name: "IBindStatusCallback_OnProgress_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IBindStatusCallback_OnStopBinding_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIBindStatusCallback;;"
  }
  parameter {
    name: "hresult"
    type: "I"
  }
  parameter {
    name: "szError"
    type: "*cUS;"
  }
}
function {
  name: "IBindStatusCallback_OnStopBinding_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IBindStatusCallback_RemoteGetBindInfo_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIBindStatusCallback;;"
  }
  parameter {
    name: "grfBINDF"
    type: "*UI;"
  }
  parameter {
    name: "pbindinfo"
    type: "*R_tagRemBINDINFO;;"
  }
  parameter {
    name: "pstgmed"
    type: "*RtagRemSTGMEDIUM;;"
  }
}
function {
  name: "IBindStatusCallback_RemoteGetBindInfo_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IBindStatusCallback_RemoteOnDataAvailable_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIBindStatusCallback;;"
  }
  parameter {
    name: "grfBSCF"
    type: "UI"
  }
  parameter {
    name: "dwSize"
    type: "UI"
  }
  parameter {
    name: "pformatetc"
    type: "*RtagRemFORMATETC;;"
  }
  parameter {
    name: "pstgmed"
    type: "*RtagRemSTGMEDIUM;;"
  }
}
function {
  name: "IBindStatusCallback_RemoteOnDataAvailable_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IBindStatusCallback_OnObjectAvailable_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIBindStatusCallback;;"
  }
  parameter {
    name: "riid"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "punk"
    type: "*RIUnknown;;"
  }
}
function {
  name: "IBindStatusCallback_OnObjectAvailable_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IBindStatusCallback_GetBindInfo_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIBindStatusCallback;;"
  }
  parameter {
    name: "grfBINDF"
    type: "*UI;"
  }
  parameter {
    name: "pbindinfo"
    type: "*R_tagBINDINFO;;"
  }
}
function {
  name: "IBindStatusCallback_GetBindInfo_Stub"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIBindStatusCallback;;"
  }
  parameter {
    name: "grfBINDF"
    type: "*UI;"
  }
  parameter {
    name: "pbindinfo"
    type: "*R_tagRemBINDINFO;;"
  }
  parameter {
    name: "pstgmed"
    type: "*RtagRemSTGMEDIUM;;"
  }
}
function {
  name: "IBindStatusCallback_OnDataAvailable_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIBindStatusCallback;;"
  }
  parameter {
    name: "grfBSCF"
    type: "UI"
  }
  parameter {
    name: "dwSize"
    type: "UI"
  }
  parameter {
    name: "pformatetc"
    type: "*RtagFORMATETC;;"
  }
  parameter {
    name: "pstgmed"
    type: "*RtagSTGMEDIUM;;"
  }
}
function {
  name: "IBindStatusCallback_OnDataAvailable_Stub"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIBindStatusCallback;;"
  }
  parameter {
    name: "grfBSCF"
    type: "UI"
  }
  parameter {
    name: "dwSize"
    type: "UI"
  }
  parameter {
    name: "pformatetc"
    type: "*RtagRemFORMATETC;;"
  }
  parameter {
    name: "pstgmed"
    type: "*RtagRemSTGMEDIUM;;"
  }
}
function {
  name: "IBindStatusCallbackEx_RemoteGetBindInfoEx_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIBindStatusCallbackEx;;"
  }
  parameter {
    name: "grfBINDF"
    type: "*UI;"
  }
  parameter {
    name: "pbindinfo"
    type: "*R_tagRemBINDINFO;;"
  }
  parameter {
    name: "pstgmed"
    type: "*RtagRemSTGMEDIUM;;"
  }
  parameter {
    name: "grfBINDF2"
    type: "*UI;"
  }
  parameter {
    name: "pdwReserved"
    type: "*UI;"
  }
}
function {
  name: "IBindStatusCallbackEx_RemoteGetBindInfoEx_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IBindStatusCallbackEx_GetBindInfoEx_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIBindStatusCallbackEx;;"
  }
  parameter {
    name: "grfBINDF"
    type: "*UI;"
  }
  parameter {
    name: "pbindinfo"
    type: "*R_tagBINDINFO;;"
  }
  parameter {
    name: "grfBINDF2"
    type: "*UI;"
  }
  parameter {
    name: "pdwReserved"
    type: "*UI;"
  }
}
function {
  name: "IBindStatusCallbackEx_GetBindInfoEx_Stub"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIBindStatusCallbackEx;;"
  }
  parameter {
    name: "grfBINDF"
    type: "*UI;"
  }
  parameter {
    name: "pbindinfo"
    type: "*R_tagRemBINDINFO;;"
  }
  parameter {
    name: "pstgmed"
    type: "*RtagRemSTGMEDIUM;;"
  }
  parameter {
    name: "grfBINDF2"
    type: "*UI;"
  }
  parameter {
    name: "pdwReserved"
    type: "*UI;"
  }
}
function {
  name: "IAuthenticate_Authenticate_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIAuthenticate;;"
  }
  parameter {
    name: "phwnd"
    type: "**RHWND__;;;"
  }
  parameter {
    name: "pszUsername"
    type: "**US;;"
  }
  parameter {
    name: "pszPassword"
    type: "**US;;"
  }
}
function {
  name: "IAuthenticate_Authenticate_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IHttpNegotiate_BeginningTransaction_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIHttpNegotiate;;"
  }
  parameter {
    name: "szURL"
    type: "*cUS;"
  }
  parameter {
    name: "szHeaders"
    type: "*cUS;"
  }
  parameter {
    name: "dwReserved"
    type: "UI"
  }
  parameter {
    name: "pszAdditionalHeaders"
    type: "**US;;"
  }
}
function {
  name: "IHttpNegotiate_BeginningTransaction_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IHttpNegotiate_OnResponse_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIHttpNegotiate;;"
  }
  parameter {
    name: "dwResponseCode"
    type: "UI"
  }
  parameter {
    name: "szResponseHeaders"
    type: "*cUS;"
  }
  parameter {
    name: "szRequestHeaders"
    type: "*cUS;"
  }
  parameter {
    name: "pszAdditionalRequestHeaders"
    type: "**US;;"
  }
}
function {
  name: "IHttpNegotiate_OnResponse_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IHttpNegotiate2_GetRootSecurityId_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIHttpNegotiate2;;"
  }
  parameter {
    name: "pbSecurityId"
    type: "*UB;"
  }
  parameter {
    name: "pcbSecurityId"
    type: "*UI;"
  }
  parameter {
    name: "dwReserved"
    type: "UI"
  }
}
function {
  name: "IHttpNegotiate2_GetRootSecurityId_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IBindHost_CreateMoniker_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIBindHost;;"
  }
  parameter {
    name: "szName"
    type: "*US;"
  }
  parameter {
    name: "pBC"
    type: "*RIBindCtx;;"
  }
  parameter {
    name: "ppmk"
    type: "**RIMoniker;;;"
  }
  parameter {
    name: "dwReserved"
    type: "UI"
  }
}
function {
  name: "IBindHost_CreateMoniker_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IBindHost_RemoteMonikerBindToStorage_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIBindHost;;"
  }
  parameter {
    name: "pMk"
    type: "*RIMoniker;;"
  }
  parameter {
    name: "pBC"
    type: "*RIBindCtx;;"
  }
  parameter {
    name: "pBSC"
    type: "*RIBindStatusCallback;;"
  }
  parameter {
    name: "riid"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "ppvObj"
    type: "**RIUnknown;;;"
  }
}
function {
  name: "IBindHost_RemoteMonikerBindToStorage_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IBindHost_RemoteMonikerBindToObject_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIBindHost;;"
  }
  parameter {
    name: "pMk"
    type: "*RIMoniker;;"
  }
  parameter {
    name: "pBC"
    type: "*RIBindCtx;;"
  }
  parameter {
    name: "pBSC"
    type: "*RIBindStatusCallback;;"
  }
  parameter {
    name: "riid"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "ppvObj"
    type: "**RIUnknown;;;"
  }
}
function {
  name: "IBindHost_RemoteMonikerBindToObject_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IBindHost_MonikerBindToStorage_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIBindHost;;"
  }
  parameter {
    name: "pMk"
    type: "*RIMoniker;;"
  }
  parameter {
    name: "pBC"
    type: "*RIBindCtx;;"
  }
  parameter {
    name: "pBSC"
    type: "*RIBindStatusCallback;;"
  }
  parameter {
    name: "riid"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "ppvObj"
    type: "**V;;"
  }
}
function {
  name: "IBindHost_MonikerBindToStorage_Stub"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIBindHost;;"
  }
  parameter {
    name: "pMk"
    type: "*RIMoniker;;"
  }
  parameter {
    name: "pBC"
    type: "*RIBindCtx;;"
  }
  parameter {
    name: "pBSC"
    type: "*RIBindStatusCallback;;"
  }
  parameter {
    name: "riid"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "ppvObj"
    type: "**RIUnknown;;;"
  }
}
function {
  name: "IBindHost_MonikerBindToObject_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIBindHost;;"
  }
  parameter {
    name: "pMk"
    type: "*RIMoniker;;"
  }
  parameter {
    name: "pBC"
    type: "*RIBindCtx;;"
  }
  parameter {
    name: "pBSC"
    type: "*RIBindStatusCallback;;"
  }
  parameter {
    name: "riid"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "ppvObj"
    type: "**V;;"
  }
}
function {
  name: "IBindHost_MonikerBindToObject_Stub"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIBindHost;;"
  }
  parameter {
    name: "pMk"
    type: "*RIMoniker;;"
  }
  parameter {
    name: "pBC"
    type: "*RIBindCtx;;"
  }
  parameter {
    name: "pBSC"
    type: "*RIBindStatusCallback;;"
  }
  parameter {
    name: "riid"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "ppvObj"
    type: "**RIUnknown;;;"
  }
}
function {
  name: "IWinInetInfo_RemoteQueryOption_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIWinInetInfo;;"
  }
  parameter {
    name: "dwOption"
    type: "UI"
  }
  parameter {
    name: "pBuffer"
    type: "*UB;"
  }
  parameter {
    name: "pcbBuf"
    type: "*UI;"
  }
}
function {
  name: "IWinInetInfo_RemoteQueryOption_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IWinInetInfo_QueryOption_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIWinInetInfo;;"
  }
  parameter {
    name: "dwOption"
    type: "UI"
  }
  parameter {
    name: "pBuffer"
    type: "*V;"
  }
  parameter {
    name: "pcbBuf"
    type: "*UI;"
  }
}
function {
  name: "IWinInetInfo_QueryOption_Stub"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIWinInetInfo;;"
  }
  parameter {
    name: "dwOption"
    type: "UI"
  }
  parameter {
    name: "pBuffer"
    type: "*UB;"
  }
  parameter {
    name: "pcbBuf"
    type: "*UI;"
  }
}
function {
  name: "IWinInetHttpInfo_RemoteQueryInfo_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIWinInetHttpInfo;;"
  }
  parameter {
    name: "dwOption"
    type: "UI"
  }
  parameter {
    name: "pBuffer"
    type: "*UB;"
  }
  parameter {
    name: "pcbBuf"
    type: "*UI;"
  }
  parameter {
    name: "pdwFlags"
    type: "*UI;"
  }
  parameter {
    name: "pdwReserved"
    type: "*UI;"
  }
}
function {
  name: "IWinInetHttpInfo_RemoteQueryInfo_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IWinInetHttpInfo_QueryInfo_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIWinInetHttpInfo;;"
  }
  parameter {
    name: "dwOption"
    type: "UI"
  }
  parameter {
    name: "pBuffer"
    type: "*V;"
  }
  parameter {
    name: "pcbBuf"
    type: "*UI;"
  }
  parameter {
    name: "pdwFlags"
    type: "*UI;"
  }
  parameter {
    name: "pdwReserved"
    type: "*UI;"
  }
}
function {
  name: "IWinInetHttpInfo_QueryInfo_Stub"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIWinInetHttpInfo;;"
  }
  parameter {
    name: "dwOption"
    type: "UI"
  }
  parameter {
    name: "pBuffer"
    type: "*UB;"
  }
  parameter {
    name: "pcbBuf"
    type: "*UI;"
  }
  parameter {
    name: "pdwFlags"
    type: "*UI;"
  }
  parameter {
    name: "pdwReserved"
    type: "*UI;"
  }
}
function {
  name: "IWindowForBindingUI_GetWindow_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIWindowForBindingUI;;"
  }
  parameter {
    name: "rguidReason"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "phwnd"
    type: "**RHWND__;;;"
  }
}
function {
  name: "IWindowForBindingUI_GetWindow_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ICodeInstall_OnCodeInstallProblem_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RICodeInstall;;"
  }
  parameter {
    name: "ulStatusCode"
    type: "UI"
  }
  parameter {
    name: "szDestination"
    type: "*cUS;"
  }
  parameter {
    name: "szSource"
    type: "*cUS;"
  }
  parameter {
    name: "dwReserved"
    type: "UI"
  }
}
function {
  name: "ICodeInstall_OnCodeInstallProblem_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IHttpSecurity_OnSecurityProblem_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIHttpSecurity;;"
  }
  parameter {
    name: "dwProblem"
    type: "UI"
  }
}
function {
  name: "IHttpSecurity_OnSecurityProblem_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IPersistMoniker_GetClassID_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIPersistMoniker;;"
  }
  parameter {
    name: "pClassID"
    type: "*R_GUID;;"
  }
}
function {
  name: "IPersistMoniker_GetClassID_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IPersistMoniker_IsDirty_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIPersistMoniker;;"
  }
}
function {
  name: "IPersistMoniker_IsDirty_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IPersistMoniker_Load_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIPersistMoniker;;"
  }
  parameter {
    name: "fFullyAvailable"
    type: "I"
  }
  parameter {
    name: "pimkName"
    type: "*RIMoniker;;"
  }
  parameter {
    name: "pibc"
    type: "*RIBindCtx;;"
  }
  parameter {
    name: "grfMode"
    type: "UI"
  }
}
function {
  name: "IPersistMoniker_Load_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IPersistMoniker_Save_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIPersistMoniker;;"
  }
  parameter {
    name: "pimkName"
    type: "*RIMoniker;;"
  }
  parameter {
    name: "pbc"
    type: "*RIBindCtx;;"
  }
  parameter {
    name: "fRemember"
    type: "I"
  }
}
function {
  name: "IPersistMoniker_Save_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IPersistMoniker_SaveCompleted_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIPersistMoniker;;"
  }
  parameter {
    name: "pimkName"
    type: "*RIMoniker;;"
  }
  parameter {
    name: "pibc"
    type: "*RIBindCtx;;"
  }
}
function {
  name: "IPersistMoniker_SaveCompleted_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IPersistMoniker_GetCurMoniker_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIPersistMoniker;;"
  }
  parameter {
    name: "ppimkName"
    type: "**RIMoniker;;;"
  }
}
function {
  name: "IPersistMoniker_GetCurMoniker_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IMonikerProp_PutProperty_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIMonikerProp;;"
  }
  parameter {
    name: "mkp"
    type: "X(Enum.enum __WIDL_urlmon_generated_name_00000007)"
  }
  parameter {
    name: "val"
    type: "*cUS;"
  }
}
function {
  name: "IMonikerProp_PutProperty_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IBindProtocol_CreateBinding_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIBindProtocol;;"
  }
  parameter {
    name: "szUrl"
    type: "*cUS;"
  }
  parameter {
    name: "pbc"
    type: "*RIBindCtx;;"
  }
  parameter {
    name: "ppb"
    type: "**RIBinding;;;"
  }
}
function {
  name: "IBindProtocol_CreateBinding_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IInternetBindInfo_GetBindInfo_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIInternetBindInfo;;"
  }
  parameter {
    name: "grfBINDF"
    type: "*UI;"
  }
  parameter {
    name: "pbindinfo"
    type: "*R_tagBINDINFO;;"
  }
}
function {
  name: "IInternetBindInfo_GetBindInfo_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IInternetBindInfo_GetBindString_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIInternetBindInfo;;"
  }
  parameter {
    name: "ulStringType"
    type: "UI"
  }
  parameter {
    name: "ppwzStr"
    type: "**US;;"
  }
  parameter {
    name: "cEl"
    type: "UI"
  }
  parameter {
    name: "pcElFetched"
    type: "*UI;"
  }
}
function {
  name: "IInternetBindInfo_GetBindString_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IInternetPriority_SetPriority_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIInternetPriority;;"
  }
  parameter {
    name: "nPriority"
    type: "I"
  }
}
function {
  name: "IInternetPriority_SetPriority_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IInternetPriority_GetPriority_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIInternetPriority;;"
  }
  parameter {
    name: "pnPriority"
    type: "*I;"
  }
}
function {
  name: "IInternetPriority_GetPriority_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IInternetProtocolRoot_Start_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIInternetProtocolRoot;;"
  }
  parameter {
    name: "szUrl"
    type: "*cUS;"
  }
  parameter {
    name: "pOIProtSink"
    type: "*RIInternetProtocolSink;;"
  }
  parameter {
    name: "pOIBindInfo"
    type: "*RIInternetBindInfo;;"
  }
  parameter {
    name: "grfPI"
    type: "UI"
  }
  parameter {
    name: "dwReserved"
    type: "UI"
  }
}
function {
  name: "IInternetProtocolRoot_Start_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IInternetProtocolRoot_Continue_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIInternetProtocolRoot;;"
  }
  parameter {
    name: "pProtocolData"
    type: "*R_tagPROTOCOLDATA;;"
  }
}
function {
  name: "IInternetProtocolRoot_Continue_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IInternetProtocolRoot_Abort_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIInternetProtocolRoot;;"
  }
  parameter {
    name: "hrReason"
    type: "I"
  }
  parameter {
    name: "dwOptions"
    type: "UI"
  }
}
function {
  name: "IInternetProtocolRoot_Abort_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IInternetProtocolRoot_Terminate_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIInternetProtocolRoot;;"
  }
  parameter {
    name: "dwOptions"
    type: "UI"
  }
}
function {
  name: "IInternetProtocolRoot_Terminate_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IInternetProtocolRoot_Suspend_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIInternetProtocolRoot;;"
  }
}
function {
  name: "IInternetProtocolRoot_Suspend_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IInternetProtocolRoot_Resume_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIInternetProtocolRoot;;"
  }
}
function {
  name: "IInternetProtocolRoot_Resume_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IInternetProtocolSink_Switch_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIInternetProtocolSink;;"
  }
  parameter {
    name: "pProtocolData"
    type: "*R_tagPROTOCOLDATA;;"
  }
}
function {
  name: "IInternetProtocolSink_Switch_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IInternetProtocolSink_ReportProgress_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIInternetProtocolSink;;"
  }
  parameter {
    name: "ulStatusCode"
    type: "UI"
  }
  parameter {
    name: "szStatusText"
    type: "*cUS;"
  }
}
function {
  name: "IInternetProtocolSink_ReportProgress_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IInternetProtocolSink_ReportData_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIInternetProtocolSink;;"
  }
  parameter {
    name: "grfBSCF"
    type: "UI"
  }
  parameter {
    name: "ulProgress"
    type: "UI"
  }
  parameter {
    name: "ulProgressMax"
    type: "UI"
  }
}
function {
  name: "IInternetProtocolSink_ReportData_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IInternetProtocolSink_ReportResult_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIInternetProtocolSink;;"
  }
  parameter {
    name: "hrResult"
    type: "I"
  }
  parameter {
    name: "dwError"
    type: "UI"
  }
  parameter {
    name: "szResult"
    type: "*cUS;"
  }
}
function {
  name: "IInternetProtocolSink_ReportResult_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IInternetProtocol_Read_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIInternetProtocol;;"
  }
  parameter {
    name: "pv"
    type: "*V;"
  }
  parameter {
    name: "cb"
    type: "UI"
  }
  parameter {
    name: "pcbRead"
    type: "*UI;"
  }
}
function {
  name: "IInternetProtocol_Read_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IInternetProtocol_Seek_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIInternetProtocol;;"
  }
  parameter {
    name: "dlibMove"
    type: "Runion _LARGE_INTEGER;"
  }
  parameter {
    name: "dwOrigin"
    type: "UI"
  }
  parameter {
    name: "plibNewPosition"
    type: "*Runion _ULARGE_INTEGER;;"
  }
}
function {
  name: "IInternetProtocol_Seek_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IInternetProtocol_LockRequest_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIInternetProtocol;;"
  }
  parameter {
    name: "dwOptions"
    type: "UI"
  }
}
function {
  name: "IInternetProtocol_LockRequest_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IInternetProtocol_UnlockRequest_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIInternetProtocol;;"
  }
}
function {
  name: "IInternetProtocol_UnlockRequest_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IInternetProtocolInfo_ParseUrl_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIInternetProtocolInfo;;"
  }
  parameter {
    name: "pwzUrl"
    type: "*cUS;"
  }
  parameter {
    name: "ParseAction"
    type: "X(Enum.enum _tagPARSEACTION)"
  }
  parameter {
    name: "dwParseFlags"
    type: "UI"
  }
  parameter {
    name: "pwzResult"
    type: "*US;"
  }
  parameter {
    name: "cchResult"
    type: "UI"
  }
  parameter {
    name: "pcchResult"
    type: "*UI;"
  }
  parameter {
    name: "dwReserved"
    type: "UI"
  }
}
function {
  name: "IInternetProtocolInfo_ParseUrl_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IInternetProtocolInfo_CombineUrl_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIInternetProtocolInfo;;"
  }
  parameter {
    name: "pwzBaseUrl"
    type: "*cUS;"
  }
  parameter {
    name: "pwzRelativeUrl"
    type: "*cUS;"
  }
  parameter {
    name: "dwCombineFlags"
    type: "UI"
  }
  parameter {
    name: "pwzResult"
    type: "*US;"
  }
  parameter {
    name: "cchResult"
    type: "UI"
  }
  parameter {
    name: "pcchResult"
    type: "*UI;"
  }
  parameter {
    name: "dwReserved"
    type: "UI"
  }
}
function {
  name: "IInternetProtocolInfo_CombineUrl_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IInternetProtocolInfo_CompareUrl_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIInternetProtocolInfo;;"
  }
  parameter {
    name: "pwzUrl1"
    type: "*cUS;"
  }
  parameter {
    name: "pwzUrl2"
    type: "*cUS;"
  }
  parameter {
    name: "dwCompareFlags"
    type: "UI"
  }
}
function {
  name: "IInternetProtocolInfo_CompareUrl_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IInternetProtocolInfo_QueryInfo_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIInternetProtocolInfo;;"
  }
  parameter {
    name: "pwzUrl"
    type: "*cUS;"
  }
  parameter {
    name: "OueryOption"
    type: "X(Enum.enum _tagQUERYOPTION)"
  }
  parameter {
    name: "dwQueryFlags"
    type: "UI"
  }
  parameter {
    name: "pBuffer"
    type: "*V;"
  }
  parameter {
    name: "cbBuffer"
    type: "UI"
  }
  parameter {
    name: "pcbBuf"
    type: "*UI;"
  }
  parameter {
    name: "dwReserved"
    type: "UI"
  }
}
function {
  name: "IInternetProtocolInfo_QueryInfo_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IInternetSession_RegisterNameSpace_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIInternetSession;;"
  }
  parameter {
    name: "pCF"
    type: "*RIClassFactory;;"
  }
  parameter {
    name: "rclsid"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "pwzProtocol"
    type: "*cUS;"
  }
  parameter {
    name: "cPatterns"
    type: "UI"
  }
  parameter {
    name: "ppwzPatterns"
    type: "*c*cUS;;"
  }
  parameter {
    name: "dwReserved"
    type: "UI"
  }
}
function {
  name: "IInternetSession_RegisterNameSpace_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IInternetSession_UnregisterNameSpace_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIInternetSession;;"
  }
  parameter {
    name: "pCF"
    type: "*RIClassFactory;;"
  }
  parameter {
    name: "pszProtocol"
    type: "*cUS;"
  }
}
function {
  name: "IInternetSession_UnregisterNameSpace_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IInternetSession_RegisterMimeFilter_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIInternetSession;;"
  }
  parameter {
    name: "pCF"
    type: "*RIClassFactory;;"
  }
  parameter {
    name: "rclsid"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "pwzType"
    type: "*cUS;"
  }
}
function {
  name: "IInternetSession_RegisterMimeFilter_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IInternetSession_UnregisterMimeFilter_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIInternetSession;;"
  }
  parameter {
    name: "pCF"
    type: "*RIClassFactory;;"
  }
  parameter {
    name: "pwzType"
    type: "*cUS;"
  }
}
function {
  name: "IInternetSession_UnregisterMimeFilter_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IInternetSession_CreateBinding_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIInternetSession;;"
  }
  parameter {
    name: "pBC"
    type: "*RIBindCtx;;"
  }
  parameter {
    name: "szUrl"
    type: "*cUS;"
  }
  parameter {
    name: "pUnkOuter"
    type: "*RIUnknown;;"
  }
  parameter {
    name: "ppUnk"
    type: "**RIUnknown;;;"
  }
  parameter {
    name: "ppOInetProt"
    type: "**RIInternetProtocol;;;"
  }
  parameter {
    name: "dwOption"
    type: "UI"
  }
}
function {
  name: "IInternetSession_CreateBinding_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IInternetSession_SetSessionOption_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIInternetSession;;"
  }
  parameter {
    name: "dwOption"
    type: "UI"
  }
  parameter {
    name: "pBuffer"
    type: "*V;"
  }
  parameter {
    name: "dwBufferLength"
    type: "UI"
  }
  parameter {
    name: "dwReserved"
    type: "UI"
  }
}
function {
  name: "IInternetSession_SetSessionOption_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IInternetSecurityMgrSite_GetWindow_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIInternetSecurityMgrSite;;"
  }
  parameter {
    name: "phwnd"
    type: "**RHWND__;;;"
  }
}
function {
  name: "IInternetSecurityMgrSite_GetWindow_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IInternetSecurityMgrSite_EnableModeless_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIInternetSecurityMgrSite;;"
  }
  parameter {
    name: "fEnable"
    type: "I"
  }
}
function {
  name: "IInternetSecurityMgrSite_EnableModeless_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IInternetSecurityManager_SetSecuritySite_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIInternetSecurityManager;;"
  }
  parameter {
    name: "pSite"
    type: "*RIInternetSecurityMgrSite;;"
  }
}
function {
  name: "IInternetSecurityManager_SetSecuritySite_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IInternetSecurityManager_GetSecuritySite_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIInternetSecurityManager;;"
  }
  parameter {
    name: "ppSite"
    type: "**RIInternetSecurityMgrSite;;;"
  }
}
function {
  name: "IInternetSecurityManager_GetSecuritySite_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IInternetSecurityManager_MapUrlToZone_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIInternetSecurityManager;;"
  }
  parameter {
    name: "pwszUrl"
    type: "*cUS;"
  }
  parameter {
    name: "pdwZone"
    type: "*UI;"
  }
  parameter {
    name: "dwFlags"
    type: "UI"
  }
}
function {
  name: "IInternetSecurityManager_MapUrlToZone_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IInternetSecurityManager_GetSecurityId_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIInternetSecurityManager;;"
  }
  parameter {
    name: "pwszUrl"
    type: "*cUS;"
  }
  parameter {
    name: "pbSecurityId"
    type: "*UB;"
  }
  parameter {
    name: "pcbSecurityId"
    type: "*UI;"
  }
  parameter {
    name: "dwReserved"
    type: "UI"
  }
}
function {
  name: "IInternetSecurityManager_GetSecurityId_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IInternetSecurityManager_ProcessUrlAction_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIInternetSecurityManager;;"
  }
  parameter {
    name: "pwszUrl"
    type: "*cUS;"
  }
  parameter {
    name: "dwAction"
    type: "UI"
  }
  parameter {
    name: "pPolicy"
    type: "*UB;"
  }
  parameter {
    name: "cbPolicy"
    type: "UI"
  }
  parameter {
    name: "pContext"
    type: "*UB;"
  }
  parameter {
    name: "cbContext"
    type: "UI"
  }
  parameter {
    name: "dwFlags"
    type: "UI"
  }
  parameter {
    name: "dwReserved"
    type: "UI"
  }
}
function {
  name: "IInternetSecurityManager_ProcessUrlAction_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IInternetSecurityManager_QueryCustomPolicy_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIInternetSecurityManager;;"
  }
  parameter {
    name: "pwszUrl"
    type: "*cUS;"
  }
  parameter {
    name: "guidKey"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "ppPolicy"
    type: "**UB;;"
  }
  parameter {
    name: "pcbPolicy"
    type: "*UI;"
  }
  parameter {
    name: "pContext"
    type: "*UB;"
  }
  parameter {
    name: "cbContext"
    type: "UI"
  }
  parameter {
    name: "dwReserved"
    type: "UI"
  }
}
function {
  name: "IInternetSecurityManager_QueryCustomPolicy_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IInternetSecurityManager_SetZoneMapping_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIInternetSecurityManager;;"
  }
  parameter {
    name: "dwZone"
    type: "UI"
  }
  parameter {
    name: "lpszPattern"
    type: "*cUS;"
  }
  parameter {
    name: "dwFlags"
    type: "UI"
  }
}
function {
  name: "IInternetSecurityManager_SetZoneMapping_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IInternetSecurityManager_GetZoneMappings_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIInternetSecurityManager;;"
  }
  parameter {
    name: "dwZone"
    type: "UI"
  }
  parameter {
    name: "ppenumString"
    type: "**RIEnumString;;;"
  }
  parameter {
    name: "dwFlags"
    type: "UI"
  }
}
function {
  name: "IInternetSecurityManager_GetZoneMappings_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IInternetSecurityManagerEx_ProcessUrlActionEx_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIInternetSecurityManagerEx;;"
  }
  parameter {
    name: "pwszUrl"
    type: "*cUS;"
  }
  parameter {
    name: "dwAction"
    type: "UI"
  }
  parameter {
    name: "pPolicy"
    type: "*UB;"
  }
  parameter {
    name: "cbPolicy"
    type: "UI"
  }
  parameter {
    name: "pContext"
    type: "*UB;"
  }
  parameter {
    name: "cbContext"
    type: "UI"
  }
  parameter {
    name: "dwFlags"
    type: "UI"
  }
  parameter {
    name: "dwReserved"
    type: "UI"
  }
  parameter {
    name: "pdwOutFlags"
    type: "*UI;"
  }
}
function {
  name: "IInternetSecurityManagerEx_ProcessUrlActionEx_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IInternetSecurityManagerEx2_MapUrlToZoneEx2_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIInternetSecurityManagerEx2;;"
  }
  parameter {
    name: "pUri"
    type: "*RIUri;;"
  }
  parameter {
    name: "pdwZone"
    type: "*UI;"
  }
  parameter {
    name: "dwFlags"
    type: "UI"
  }
  parameter {
    name: "ppwszMappedUrl"
    type: "**US;;"
  }
  parameter {
    name: "pdwOutFlags"
    type: "*UI;"
  }
}
function {
  name: "IInternetSecurityManagerEx2_MapUrlToZoneEx2_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IInternetSecurityManagerEx2_ProcessUrlActionEx2_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIInternetSecurityManagerEx2;;"
  }
  parameter {
    name: "pUri"
    type: "*RIUri;;"
  }
  parameter {
    name: "dwAction"
    type: "UI"
  }
  parameter {
    name: "pPolicy"
    type: "*UB;"
  }
  parameter {
    name: "cbPolicy"
    type: "UI"
  }
  parameter {
    name: "pContext"
    type: "*UB;"
  }
  parameter {
    name: "cbContext"
    type: "UI"
  }
  parameter {
    name: "dwFlags"
    type: "UI"
  }
  parameter {
    name: "dwReserved"
    type: "UI"
  }
  parameter {
    name: "pdwOutFlags"
    type: "*UI;"
  }
}
function {
  name: "IInternetSecurityManagerEx2_ProcessUrlActionEx2_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IInternetSecurityManagerEx2_GetSecurityIdEx2_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIInternetSecurityManagerEx2;;"
  }
  parameter {
    name: "pUri"
    type: "*RIUri;;"
  }
  parameter {
    name: "pbSecurityId"
    type: "*UB;"
  }
  parameter {
    name: "pcbSecurityId"
    type: "*UI;"
  }
  parameter {
    name: "dwReserved"
    type: "UI"
  }
}
function {
  name: "IInternetSecurityManagerEx2_GetSecurityIdEx2_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IInternetSecurityManagerEx2_QueryCustomPolicyEx2_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIInternetSecurityManagerEx2;;"
  }
  parameter {
    name: "pUri"
    type: "*RIUri;;"
  }
  parameter {
    name: "guidKey"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "ppPolicy"
    type: "**UB;;"
  }
  parameter {
    name: "pcbPolicy"
    type: "*UI;"
  }
  parameter {
    name: "pContext"
    type: "*UB;"
  }
  parameter {
    name: "cbContext"
    type: "UI"
  }
  parameter {
    name: "dwReserved"
    type: "UI"
  }
}
function {
  name: "IInternetSecurityManagerEx2_QueryCustomPolicyEx2_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IInternetHostSecurityManager_GetSecurityId_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIInternetHostSecurityManager;;"
  }
  parameter {
    name: "pbSecurityId"
    type: "*UB;"
  }
  parameter {
    name: "pcbSecurityId"
    type: "*UI;"
  }
  parameter {
    name: "dwReserved"
    type: "UI"
  }
}
function {
  name: "IInternetHostSecurityManager_GetSecurityId_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IInternetHostSecurityManager_ProcessUrlAction_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIInternetHostSecurityManager;;"
  }
  parameter {
    name: "dwAction"
    type: "UI"
  }
  parameter {
    name: "pPolicy"
    type: "*UB;"
  }
  parameter {
    name: "cbPolicy"
    type: "UI"
  }
  parameter {
    name: "pContext"
    type: "*UB;"
  }
  parameter {
    name: "cbContext"
    type: "UI"
  }
  parameter {
    name: "dwFlags"
    type: "UI"
  }
  parameter {
    name: "dwReserved"
    type: "UI"
  }
}
function {
  name: "IInternetHostSecurityManager_ProcessUrlAction_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IInternetHostSecurityManager_QueryCustomPolicy_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIInternetHostSecurityManager;;"
  }
  parameter {
    name: "guidKey"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "ppPolicy"
    type: "**UB;;"
  }
  parameter {
    name: "pcbPolicy"
    type: "*UI;"
  }
  parameter {
    name: "pContext"
    type: "*UB;"
  }
  parameter {
    name: "cbContext"
    type: "UI"
  }
  parameter {
    name: "dwReserved"
    type: "UI"
  }
}
function {
  name: "IInternetHostSecurityManager_QueryCustomPolicy_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IInternetZoneManager_GetZoneAttributes_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIInternetZoneManager;;"
  }
  parameter {
    name: "dwZone"
    type: "UI"
  }
  parameter {
    name: "pZoneAttributes"
    type: "*R_ZONEATTRIBUTES;;"
  }
}
function {
  name: "IInternetZoneManager_GetZoneAttributes_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IInternetZoneManager_SetZoneAttributes_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIInternetZoneManager;;"
  }
  parameter {
    name: "dwZone"
    type: "UI"
  }
  parameter {
    name: "pZoneAttributes"
    type: "*R_ZONEATTRIBUTES;;"
  }
}
function {
  name: "IInternetZoneManager_SetZoneAttributes_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IInternetZoneManager_GetZoneCustomPolicy_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIInternetZoneManager;;"
  }
  parameter {
    name: "dwZone"
    type: "UI"
  }
  parameter {
    name: "guidKey"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "ppPolicy"
    type: "**UB;;"
  }
  parameter {
    name: "pcbPolicy"
    type: "*UI;"
  }
  parameter {
    name: "ulrZoneReg"
    type: "X(Enum.enum _URLZONEREG)"
  }
}
function {
  name: "IInternetZoneManager_GetZoneCustomPolicy_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IInternetZoneManager_SetZoneCustomPolicy_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIInternetZoneManager;;"
  }
  parameter {
    name: "dwZone"
    type: "UI"
  }
  parameter {
    name: "guidKey"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "ppPolicy"
    type: "*UB;"
  }
  parameter {
    name: "pcbPolicy"
    type: "UI"
  }
  parameter {
    name: "ulrZoneReg"
    type: "X(Enum.enum _URLZONEREG)"
  }
}
function {
  name: "IInternetZoneManager_SetZoneCustomPolicy_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IInternetZoneManager_GetZoneActionPolicy_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIInternetZoneManager;;"
  }
  parameter {
    name: "dwZone"
    type: "UI"
  }
  parameter {
    name: "dwAction"
    type: "UI"
  }
  parameter {
    name: "pPolicy"
    type: "*UB;"
  }
  parameter {
    name: "cbPolicy"
    type: "UI"
  }
  parameter {
    name: "urlZoneReg"
    type: "X(Enum.enum _URLZONEREG)"
  }
}
function {
  name: "IInternetZoneManager_GetZoneActionPolicy_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IInternetZoneManager_SetZoneActionPolicy_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIInternetZoneManager;;"
  }
  parameter {
    name: "dwZone"
    type: "UI"
  }
  parameter {
    name: "dwAction"
    type: "UI"
  }
  parameter {
    name: "pPolicy"
    type: "*UB;"
  }
  parameter {
    name: "cbPolicy"
    type: "UI"
  }
  parameter {
    name: "urlZoneReg"
    type: "X(Enum.enum _URLZONEREG)"
  }
}
function {
  name: "IInternetZoneManager_SetZoneActionPolicy_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IInternetZoneManager_PromptAction_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIInternetZoneManager;;"
  }
  parameter {
    name: "dwAction"
    type: "UI"
  }
  parameter {
    name: "hwndParent"
    type: "*RHWND__;;"
  }
  parameter {
    name: "pwszUrl"
    type: "*cUS;"
  }
  parameter {
    name: "pwszText"
    type: "*cUS;"
  }
  parameter {
    name: "dwPromptFlags"
    type: "UI"
  }
}
function {
  name: "IInternetZoneManager_PromptAction_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IInternetZoneManager_LogAction_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIInternetZoneManager;;"
  }
  parameter {
    name: "dwAction"
    type: "UI"
  }
  parameter {
    name: "pwszUrl"
    type: "*cUS;"
  }
  parameter {
    name: "pwszText"
    type: "*cUS;"
  }
  parameter {
    name: "dwLogFlags"
    type: "UI"
  }
}
function {
  name: "IInternetZoneManager_LogAction_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IInternetZoneManager_CreateZoneEnumerator_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIInternetZoneManager;;"
  }
  parameter {
    name: "pdwEnum"
    type: "*UI;"
  }
  parameter {
    name: "pdwCount"
    type: "*UI;"
  }
  parameter {
    name: "dwFlags"
    type: "UI"
  }
}
function {
  name: "IInternetZoneManager_CreateZoneEnumerator_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IInternetZoneManager_GetZoneAt_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIInternetZoneManager;;"
  }
  parameter {
    name: "dwEnum"
    type: "UI"
  }
  parameter {
    name: "dwIndex"
    type: "UI"
  }
  parameter {
    name: "pdwZone"
    type: "*UI;"
  }
}
function {
  name: "IInternetZoneManager_GetZoneAt_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IInternetZoneManager_DestroyZoneEnumerator_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIInternetZoneManager;;"
  }
  parameter {
    name: "dwEnum"
    type: "UI"
  }
}
function {
  name: "IInternetZoneManager_DestroyZoneEnumerator_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IInternetZoneManager_CopyTemplatePoliciesToZone_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIInternetZoneManager;;"
  }
  parameter {
    name: "dwTemplate"
    type: "UI"
  }
  parameter {
    name: "dwZone"
    type: "UI"
  }
  parameter {
    name: "dwReserved"
    type: "UI"
  }
}
function {
  name: "IInternetZoneManager_CopyTemplatePoliciesToZone_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IInternetZoneManagerEx_GetZoneActionPolicyEx_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIInternetZoneManagerEx;;"
  }
  parameter {
    name: "dwZone"
    type: "UI"
  }
  parameter {
    name: "dwAction"
    type: "UI"
  }
  parameter {
    name: "pPolicy"
    type: "*UB;"
  }
  parameter {
    name: "cbPolicy"
    type: "UI"
  }
  parameter {
    name: "urlZoneReg"
    type: "X(Enum.enum _URLZONEREG)"
  }
  parameter {
    name: "dwFlags"
    type: "UI"
  }
}
function {
  name: "IInternetZoneManagerEx_GetZoneActionPolicyEx_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IInternetZoneManagerEx_SetZoneActionPolicyEx_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIInternetZoneManagerEx;;"
  }
  parameter {
    name: "dwZone"
    type: "UI"
  }
  parameter {
    name: "dwAction"
    type: "UI"
  }
  parameter {
    name: "pPolicy"
    type: "*UB;"
  }
  parameter {
    name: "cbPolicy"
    type: "UI"
  }
  parameter {
    name: "urlZoneReg"
    type: "X(Enum.enum _URLZONEREG)"
  }
  parameter {
    name: "dwFlags"
    type: "UI"
  }
}
function {
  name: "IInternetZoneManagerEx_SetZoneActionPolicyEx_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IInternetZoneManagerEx2_GetZoneAttributesEx_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIInternetZoneManagerEx2;;"
  }
  parameter {
    name: "dwZone"
    type: "UI"
  }
  parameter {
    name: "pZoneAttributes"
    type: "*R_ZONEATTRIBUTES;;"
  }
  parameter {
    name: "dwFlags"
    type: "UI"
  }
}
function {
  name: "IInternetZoneManagerEx2_GetZoneAttributesEx_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IInternetZoneManagerEx2_GetZoneSecurityState_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIInternetZoneManagerEx2;;"
  }
  parameter {
    name: "dwZoneIndex"
    type: "UI"
  }
  parameter {
    name: "fRespectPolicy"
    type: "I"
  }
  parameter {
    name: "pdwState"
    type: "*UI;"
  }
  parameter {
    name: "pfPolicyEncountered"
    type: "*I;"
  }
}
function {
  name: "IInternetZoneManagerEx2_GetZoneSecurityState_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IInternetZoneManagerEx2_GetIESecurityState_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIInternetZoneManagerEx2;;"
  }
  parameter {
    name: "fRespectPolicy"
    type: "I"
  }
  parameter {
    name: "pdwState"
    type: "*UI;"
  }
  parameter {
    name: "pfPolicyEncountered"
    type: "*I;"
  }
  parameter {
    name: "fNoCache"
    type: "I"
  }
}
function {
  name: "IInternetZoneManagerEx2_GetIESecurityState_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IInternetZoneManagerEx2_FixInsecureSettings_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIInternetZoneManagerEx2;;"
  }
}
function {
  name: "IInternetZoneManagerEx2_FixInsecureSettings_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ISoftDistExt_ProcessSoftDist_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RISoftDistExt;;"
  }
  parameter {
    name: "szCDFURL"
    type: "*cUS;"
  }
  parameter {
    name: "pSoftDistElement"
    type: "*RIXMLElement;;"
  }
  parameter {
    name: "lpsdi"
    type: "*R_tagSOFTDISTINFO;;"
  }
}
function {
  name: "ISoftDistExt_ProcessSoftDist_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ISoftDistExt_GetFirstCodeBase_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RISoftDistExt;;"
  }
  parameter {
    name: "szCodeBase"
    type: "**US;;"
  }
  parameter {
    name: "dwMaxSize"
    type: "*UI;"
  }
}
function {
  name: "ISoftDistExt_GetFirstCodeBase_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ISoftDistExt_GetNextCodeBase_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RISoftDistExt;;"
  }
  parameter {
    name: "szCodeBase"
    type: "**US;;"
  }
  parameter {
    name: "dwMaxSize"
    type: "*UI;"
  }
}
function {
  name: "ISoftDistExt_GetNextCodeBase_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "ISoftDistExt_AsyncInstallDistributionUnit_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RISoftDistExt;;"
  }
  parameter {
    name: "pbc"
    type: "*RIBindCtx;;"
  }
  parameter {
    name: "lpReserved"
    type: "*V;"
  }
  parameter {
    name: "flags"
    type: "UI"
  }
  parameter {
    name: "lpcbh"
    type: "*R_tagCODEBASEHOLD;;"
  }
}
function {
  name: "ISoftDistExt_AsyncInstallDistributionUnit_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IUri_GetPropertyBSTR_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIUri;;"
  }
  parameter {
    name: "uriProp"
    type: "X(Enum.enum __WIDL_urlmon_generated_name_0000000B)"
  }
  parameter {
    name: "pbstrProperty"
    type: "**US;;"
  }
  parameter {
    name: "dwFlags"
    type: "UI"
  }
}
function {
  name: "IUri_GetPropertyBSTR_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IUri_GetPropertyLength_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIUri;;"
  }
  parameter {
    name: "uriProp"
    type: "X(Enum.enum __WIDL_urlmon_generated_name_0000000B)"
  }
  parameter {
    name: "pcchProperty"
    type: "*UI;"
  }
  parameter {
    name: "dwFlags"
    type: "UI"
  }
}
function {
  name: "IUri_GetPropertyLength_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IUri_GetPropertyDWORD_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIUri;;"
  }
  parameter {
    name: "uriProp"
    type: "X(Enum.enum __WIDL_urlmon_generated_name_0000000B)"
  }
  parameter {
    name: "pdwProperty"
    type: "*UI;"
  }
  parameter {
    name: "dwFlags"
    type: "UI"
  }
}
function {
  name: "IUri_GetPropertyDWORD_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IUri_HasProperty_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIUri;;"
  }
  parameter {
    name: "uriProp"
    type: "X(Enum.enum __WIDL_urlmon_generated_name_0000000B)"
  }
  parameter {
    name: "pfHasProperty"
    type: "*I;"
  }
}
function {
  name: "IUri_HasProperty_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IUri_GetAbsoluteUri_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIUri;;"
  }
  parameter {
    name: "pbstrAbsoluteUri"
    type: "**US;;"
  }
}
function {
  name: "IUri_GetAbsoluteUri_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IUri_GetAuthority_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIUri;;"
  }
  parameter {
    name: "pbstrAuthority"
    type: "**US;;"
  }
}
function {
  name: "IUri_GetAuthority_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IUri_GetDisplayUri_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIUri;;"
  }
  parameter {
    name: "pbstrDisplayString"
    type: "**US;;"
  }
}
function {
  name: "IUri_GetDisplayUri_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IUri_GetDomain_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIUri;;"
  }
  parameter {
    name: "pbstrDomain"
    type: "**US;;"
  }
}
function {
  name: "IUri_GetDomain_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IUri_GetExtension_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIUri;;"
  }
  parameter {
    name: "pbstrExtension"
    type: "**US;;"
  }
}
function {
  name: "IUri_GetExtension_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IUri_GetFragment_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIUri;;"
  }
  parameter {
    name: "pbstrFragment"
    type: "**US;;"
  }
}
function {
  name: "IUri_GetFragment_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IUri_GetHost_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIUri;;"
  }
  parameter {
    name: "pbstrHost"
    type: "**US;;"
  }
}
function {
  name: "IUri_GetHost_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IUri_GetPassword_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIUri;;"
  }
  parameter {
    name: "pbstrPassword"
    type: "**US;;"
  }
}
function {
  name: "IUri_GetPassword_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IUri_GetPath_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIUri;;"
  }
  parameter {
    name: "pbstrPath"
    type: "**US;;"
  }
}
function {
  name: "IUri_GetPath_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IUri_GetPathAndQuery_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIUri;;"
  }
  parameter {
    name: "pbstrPathAndQuery"
    type: "**US;;"
  }
}
function {
  name: "IUri_GetPathAndQuery_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IUri_GetQuery_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIUri;;"
  }
  parameter {
    name: "pbstrQuery"
    type: "**US;;"
  }
}
function {
  name: "IUri_GetQuery_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IUri_GetRawUri_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIUri;;"
  }
  parameter {
    name: "pbstrRawUri"
    type: "**US;;"
  }
}
function {
  name: "IUri_GetRawUri_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IUri_GetSchemeName_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIUri;;"
  }
  parameter {
    name: "pbstrSchemeName"
    type: "**US;;"
  }
}
function {
  name: "IUri_GetSchemeName_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IUri_GetUserInfo_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIUri;;"
  }
  parameter {
    name: "pbstrUserInfo"
    type: "**US;;"
  }
}
function {
  name: "IUri_GetUserInfo_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IUri_GetUserName_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIUri;;"
  }
  parameter {
    name: "pbstrUserName"
    type: "**US;;"
  }
}
function {
  name: "IUri_GetUserName_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IUri_GetHostType_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIUri;;"
  }
  parameter {
    name: "pdwHostType"
    type: "*UI;"
  }
}
function {
  name: "IUri_GetHostType_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IUri_GetPort_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIUri;;"
  }
  parameter {
    name: "pdwPort"
    type: "*UI;"
  }
}
function {
  name: "IUri_GetPort_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IUri_GetScheme_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIUri;;"
  }
  parameter {
    name: "pdwScheme"
    type: "*UI;"
  }
}
function {
  name: "IUri_GetScheme_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IUri_GetZone_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIUri;;"
  }
  parameter {
    name: "pdwZone"
    type: "*UI;"
  }
}
function {
  name: "IUri_GetZone_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IUri_GetProperties_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIUri;;"
  }
  parameter {
    name: "pdwFlags"
    type: "*UI;"
  }
}
function {
  name: "IUri_GetProperties_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IUri_IsEqual_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIUri;;"
  }
  parameter {
    name: "pUri"
    type: "*RIUri;;"
  }
  parameter {
    name: "pfEqual"
    type: "*I;"
  }
}
function {
  name: "IUri_IsEqual_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "CreateUri"
  return_type: "I"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "**RIUri;;;"
  }
}
function {
  name: "CreateUriWithFragment"
  return_type: "I"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "**RIUri;;;"
  }
}
function {
  name: "CreateUriFromMultiByteString"
  return_type: "I"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "**RIUri;;;"
  }
}
function {
  name: "IUriContainer_GetIUri_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIUriContainer;;"
  }
  parameter {
    name: "ppIUri"
    type: "**RIUri;;;"
  }
}
function {
  name: "IUriContainer_GetIUri_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IUriBuilder_CreateUriSimple_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIUriBuilder;;"
  }
  parameter {
    name: "dwAllowEncodingPropertyMask"
    type: "UI"
  }
  parameter {
    name: "dwReserved"
    type: "UI"
  }
  parameter {
    name: "ppIUri"
    type: "**RIUri;;;"
  }
}
function {
  name: "IUriBuilder_CreateUriSimple_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IUriBuilder_CreateUri_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIUriBuilder;;"
  }
  parameter {
    name: "dwCreateFlags"
    type: "UI"
  }
  parameter {
    name: "dwAllowEncodingPropertyMask"
    type: "UI"
  }
  parameter {
    name: "dwReserved"
    type: "UI"
  }
  parameter {
    name: "ppIUri"
    type: "**RIUri;;;"
  }
}
function {
  name: "IUriBuilder_CreateUri_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IUriBuilder_CreateUriWithFlags_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIUriBuilder;;"
  }
  parameter {
    name: "dwCreateFlags"
    type: "UI"
  }
  parameter {
    name: "dwUriBuilderFlags"
    type: "UI"
  }
  parameter {
    name: "dwAllowEncodingPropertyMask"
    type: "UI"
  }
  parameter {
    name: "dwReserved"
    type: "UI"
  }
  parameter {
    name: "ppIUri"
    type: "**RIUri;;;"
  }
}
function {
  name: "IUriBuilder_CreateUriWithFlags_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IUriBuilder_GetIUri_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIUriBuilder;;"
  }
  parameter {
    name: "ppIUri"
    type: "**RIUri;;;"
  }
}
function {
  name: "IUriBuilder_GetIUri_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IUriBuilder_SetIUri_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIUriBuilder;;"
  }
  parameter {
    name: "pIUri"
    type: "*RIUri;;"
  }
}
function {
  name: "IUriBuilder_SetIUri_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IUriBuilder_GetFragment_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIUriBuilder;;"
  }
  parameter {
    name: "pcchFragment"
    type: "*UI;"
  }
  parameter {
    name: "ppwzFragment"
    type: "**cUS;;"
  }
}
function {
  name: "IUriBuilder_GetFragment_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IUriBuilder_GetHost_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIUriBuilder;;"
  }
  parameter {
    name: "pcchHost"
    type: "*UI;"
  }
  parameter {
    name: "ppwzHost"
    type: "**cUS;;"
  }
}
function {
  name: "IUriBuilder_GetHost_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IUriBuilder_GetPassword_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIUriBuilder;;"
  }
  parameter {
    name: "pcchPassword"
    type: "*UI;"
  }
  parameter {
    name: "ppwzPassword"
    type: "**cUS;;"
  }
}
function {
  name: "IUriBuilder_GetPassword_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IUriBuilder_GetPath_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIUriBuilder;;"
  }
  parameter {
    name: "pcchPath"
    type: "*UI;"
  }
  parameter {
    name: "ppwzPath"
    type: "**cUS;;"
  }
}
function {
  name: "IUriBuilder_GetPath_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IUriBuilder_GetPort_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIUriBuilder;;"
  }
  parameter {
    name: "pfHasPort"
    type: "*I;"
  }
  parameter {
    name: "pdwPort"
    type: "*UI;"
  }
}
function {
  name: "IUriBuilder_GetPort_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IUriBuilder_GetQuery_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIUriBuilder;;"
  }
  parameter {
    name: "pcchQuery"
    type: "*UI;"
  }
  parameter {
    name: "ppwzQuery"
    type: "**cUS;;"
  }
}
function {
  name: "IUriBuilder_GetQuery_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IUriBuilder_GetSchemeName_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIUriBuilder;;"
  }
  parameter {
    name: "pcchSchemeName"
    type: "*UI;"
  }
  parameter {
    name: "ppwzSchemeName"
    type: "**cUS;;"
  }
}
function {
  name: "IUriBuilder_GetSchemeName_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IUriBuilder_GetUserName_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIUriBuilder;;"
  }
  parameter {
    name: "pcchUserName"
    type: "*UI;"
  }
  parameter {
    name: "ppwzUserName"
    type: "**cUS;;"
  }
}
function {
  name: "IUriBuilder_GetUserName_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IUriBuilder_SetFragment_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIUriBuilder;;"
  }
  parameter {
    name: "pwzNewValue"
    type: "*cUS;"
  }
}
function {
  name: "IUriBuilder_SetFragment_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IUriBuilder_SetHost_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIUriBuilder;;"
  }
  parameter {
    name: "pwzNewValue"
    type: "*cUS;"
  }
}
function {
  name: "IUriBuilder_SetHost_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IUriBuilder_SetPassword_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIUriBuilder;;"
  }
  parameter {
    name: "pwzNewValue"
    type: "*cUS;"
  }
}
function {
  name: "IUriBuilder_SetPassword_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IUriBuilder_SetPath_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIUriBuilder;;"
  }
  parameter {
    name: "pwzNewValue"
    type: "*cUS;"
  }
}
function {
  name: "IUriBuilder_SetPath_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IUriBuilder_SetPort_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIUriBuilder;;"
  }
  parameter {
    name: "fHasPort"
    type: "I"
  }
  parameter {
    name: "dwNewValue"
    type: "UI"
  }
}
function {
  name: "IUriBuilder_SetPort_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IUriBuilder_SetQuery_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIUriBuilder;;"
  }
  parameter {
    name: "pwzNewValue"
    type: "*cUS;"
  }
}
function {
  name: "IUriBuilder_SetQuery_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IUriBuilder_SetSchemeName_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIUriBuilder;;"
  }
  parameter {
    name: "pwzNewValue"
    type: "*cUS;"
  }
}
function {
  name: "IUriBuilder_SetSchemeName_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IUriBuilder_SetUserName_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIUriBuilder;;"
  }
  parameter {
    name: "pwzNewValue"
    type: "*cUS;"
  }
}
function {
  name: "IUriBuilder_SetUserName_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IUriBuilder_RemoveProperties_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIUriBuilder;;"
  }
  parameter {
    name: "dwPropertyMask"
    type: "UI"
  }
}
function {
  name: "IUriBuilder_RemoveProperties_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IUriBuilder_HasBeenModified_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIUriBuilder;;"
  }
  parameter {
    name: "pfModified"
    type: "*I;"
  }
}
function {
  name: "IUriBuilder_HasBeenModified_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "CreateIUriBuilder"
  return_type: "I"
  parameter {
    name: ""
    type: "*RIUri;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "**RIUriBuilder;;;"
  }
}
function {
  name: "IUriBuilderFactory_CreateIUriBuilder_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIUriBuilderFactory;;"
  }
  parameter {
    name: "dwFlags"
    type: "UI"
  }
  parameter {
    name: "dwReserved"
    type: "UI"
  }
  parameter {
    name: "ppIUriBuilder"
    type: "**RIUriBuilder;;;"
  }
}
function {
  name: "IUriBuilderFactory_CreateIUriBuilder_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IUriBuilderFactory_CreateInitializedIUriBuilder_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIUriBuilderFactory;;"
  }
  parameter {
    name: "dwFlags"
    type: "UI"
  }
  parameter {
    name: "dwReserved"
    type: "UI"
  }
  parameter {
    name: "ppIUriBuilder"
    type: "**RIUriBuilder;;;"
  }
}
function {
  name: "IUriBuilderFactory_CreateInitializedIUriBuilder_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IInternetProtocolEx_StartEx_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIInternetProtocolEx;;"
  }
  parameter {
    name: "pUri"
    type: "*RIUri;;"
  }
  parameter {
    name: "pOIProtSink"
    type: "*RIInternetProtocolSink;;"
  }
  parameter {
    name: "pOIBindInfo"
    type: "*RIInternetBindInfo;;"
  }
  parameter {
    name: "grfPI"
    type: "UI"
  }
  parameter {
    name: "dwReserved"
    type: "**V;;"
  }
}
function {
  name: "IInternetProtocolEx_StartEx_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IGetBindHandle_GetBindHandle_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIGetBindHandle;;"
  }
  parameter {
    name: "enumRequestedHandle"
    type: "X(Enum.enum __WIDL_urlmon_generated_name_0000000D)"
  }
  parameter {
    name: "pRetHandle"
    type: "**V;;"
  }
}
function {
  name: "IGetBindHandle_GetBindHandle_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "CoGetClassObjectFromURL"
  return_type: "I"
  parameter {
    name: ""
    type: "c*cR_GUID;;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*RIBindCtx;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "c*cR_GUID;;"
  }
  parameter {
    name: ""
    type: "**V;;"
  }
}
function {
  name: "CreateURLMoniker"
  return_type: "I"
  parameter {
    name: "pmkContext"
    type: "*RIMoniker;;"
  }
  parameter {
    name: "szURL"
    type: "*cUS;"
  }
  parameter {
    name: "ppmk"
    type: "**RIMoniker;;;"
  }
}
function {
  name: "CreateURLMonikerEx"
  return_type: "I"
  parameter {
    name: ""
    type: "*RIMoniker;;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "**RIMoniker;;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "CreateURLMonikerEx2"
  return_type: "I"
  parameter {
    name: ""
    type: "*RIMoniker;;"
  }
  parameter {
    name: ""
    type: "*RIUri;;"
  }
  parameter {
    name: ""
    type: "**RIMoniker;;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "RegisterBindStatusCallback"
  return_type: "I"
  parameter {
    name: "pbc"
    type: "*RIBindCtx;;"
  }
  parameter {
    name: "pbsc"
    type: "*RIBindStatusCallback;;"
  }
  parameter {
    name: "ppbsc"
    type: "**RIBindStatusCallback;;;"
  }
  parameter {
    name: "dwReserved"
    type: "UI"
  }
}
function {
  name: "CompareSecurityIds"
  return_type: "I"
  parameter {
    name: ""
    type: "*UB;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UB;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "URLDownloadToFileA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RIUnknown;;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*RIBindStatusCallback;;"
  }
}
function {
  name: "URLDownloadToFileW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RIUnknown;;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*RIBindStatusCallback;;"
  }
}
function {
  name: "URLDownloadToCacheFileA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RIUnknown;;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*RIBindStatusCallback;;"
  }
}
function {
  name: "URLDownloadToCacheFileW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RIUnknown;;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*RIBindStatusCallback;;"
  }
}
function {
  name: "CoInternetGetSession"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "**RIInternetSession;;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "MkParseDisplayNameEx"
  return_type: "I"
  parameter {
    name: ""
    type: "*RIBindCtx;;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "**RIMoniker;;;"
  }
}
function {
  name: "IsAsyncMoniker"
  return_type: "I"
  parameter {
    name: "pmk"
    type: "*RIMoniker;;"
  }
}
function {
  name: "CreateAsyncBindCtx"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*RIBindStatusCallback;;"
  }
  parameter {
    name: ""
    type: "*RIEnumFORMATETC;;"
  }
  parameter {
    name: ""
    type: "**RIBindCtx;;;"
  }
}
function {
  name: "CreateAsyncBindCtxEx"
  return_type: "I"
  parameter {
    name: ""
    type: "*RIBindCtx;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*RIBindStatusCallback;;"
  }
  parameter {
    name: ""
    type: "*RIEnumFORMATETC;;"
  }
  parameter {
    name: ""
    type: "**RIBindCtx;;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "CoInternetCreateSecurityManager"
  return_type: "I"
  parameter {
    name: ""
    type: "*RIServiceProvider;;"
  }
  parameter {
    name: ""
    type: "**RIInternetSecurityManager;;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "CoInternetCombineUrl"
  return_type: "I"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "CoInternetCombineUrlEx"
  return_type: "I"
  parameter {
    name: ""
    type: "*RIUri;;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "**RIUri;;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "CoInternetCompareUrl"
  return_type: "I"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "CoInternetCombineIUri"
  return_type: "I"
  parameter {
    name: ""
    type: "*RIUri;;"
  }
  parameter {
    name: ""
    type: "*RIUri;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "**RIUri;;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "CoInternetCreateZoneManager"
  return_type: "I"
  parameter {
    name: ""
    type: "*RIServiceProvider;;"
  }
  parameter {
    name: ""
    type: "**RIInternetZoneManager;;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "CoInternetParseUrl"
  return_type: "I"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "X(Enum.enum _tagPARSEACTION)"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "CoInternetParseIUri"
  return_type: "I"
  parameter {
    name: ""
    type: "*RIUri;;"
  }
  parameter {
    name: ""
    type: "X(Enum.enum _tagPARSEACTION)"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "CoInternetQueryInfo"
  return_type: "I"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "X(Enum.enum _tagQUERYOPTION)"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "CoInternetSetFeatureEnabled"
  return_type: "I"
  parameter {
    name: ""
    type: "X(Enum.enum _tagINTERNETFEATURELIST)"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "CoInternetIsFeatureEnabled"
  return_type: "I"
  parameter {
    name: ""
    type: "X(Enum.enum _tagINTERNETFEATURELIST)"
  }
  parameter {
    name: "dwFlags"
    type: "UI"
  }
}
function {
  name: "CoInternetIsFeatureEnabledForUrl"
  return_type: "I"
  parameter {
    name: ""
    type: "X(Enum.enum _tagINTERNETFEATURELIST)"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*RIInternetSecurityManager;;"
  }
}
function {
  name: "CoInternetGetSecurityUrl"
  return_type: "I"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "**US;;"
  }
  parameter {
    name: ""
    type: "X(Enum.enum _tagPSUACTION)"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "CoInternetGetSecurityUrlEx"
  return_type: "I"
  parameter {
    name: ""
    type: "*RIUri;;"
  }
  parameter {
    name: ""
    type: "**RIUri;;;"
  }
  parameter {
    name: ""
    type: "X(Enum.enum _tagPSUACTION)"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "AsyncInstallDistributionUnit"
  return_type: "I"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*RIBindCtx;;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "CreateFormatEnumerator"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*RtagFORMATETC;;"
  }
  parameter {
    name: ""
    type: "**RIEnumFORMATETC;;;"
  }
}
function {
  name: "GetSoftwareUpdateInfo"
  return_type: "I"
  parameter {
    name: "szDistUnit"
    type: "*cUS;"
  }
  parameter {
    name: "psdi"
    type: "*R_tagSOFTDISTINFO;;"
  }
}
function {
  name: "FaultInIEFeature"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*R__WIDL_wtypes_generated_name_00000000;;"
  }
  parameter {
    name: ""
    type: "*RtagQUERYCONTEXT;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "FindMimeFromData"
  return_type: "I"
  parameter {
    name: ""
    type: "*RIBindCtx;;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "**US;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "GetClassFileOrMime"
  return_type: "I"
  parameter {
    name: ""
    type: "*RIBindCtx;;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*R_GUID;;"
  }
}
function {
  name: "HlinkGoBack"
  return_type: "I"
  parameter {
    name: ""
    type: "*RIUnknown;;"
  }
}
function {
  name: "HlinkGoForward"
  return_type: "I"
  parameter {
    name: ""
    type: "*RIUnknown;;"
  }
}
function {
  name: "HlinkNavigateMoniker"
  return_type: "I"
  parameter {
    name: ""
    type: "*RIUnknown;;"
  }
  parameter {
    name: ""
    type: "*RIMoniker;;"
  }
}
function {
  name: "HlinkNavigateString"
  return_type: "I"
  parameter {
    name: ""
    type: "*RIUnknown;;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
}
function {
  name: "HlinkSimpleNavigateToMoniker"
  return_type: "I"
  parameter {
    name: ""
    type: "*RIMoniker;;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*RIUnknown;;"
  }
  parameter {
    name: ""
    type: "*RIBindCtx;;"
  }
  parameter {
    name: ""
    type: "*RIBindStatusCallback;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "HlinkSimpleNavigateToString"
  return_type: "I"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*RIUnknown;;"
  }
  parameter {
    name: ""
    type: "*RIBindCtx;;"
  }
  parameter {
    name: ""
    type: "*RIBindStatusCallback;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "IsValidURL"
  return_type: "I"
  parameter {
    name: ""
    type: "*RIBindCtx;;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "ObtainUserAgentString"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "RegisterFormatEnumerator"
  return_type: "I"
  parameter {
    name: ""
    type: "*RIBindCtx;;"
  }
  parameter {
    name: ""
    type: "*RIEnumFORMATETC;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "RevokeFormatEnumerator"
  return_type: "I"
  parameter {
    name: ""
    type: "*RIBindCtx;;"
  }
  parameter {
    name: ""
    type: "*RIEnumFORMATETC;;"
  }
}
function {
  name: "RevokeBindStatusCallback"
  return_type: "I"
  parameter {
    name: ""
    type: "*RIBindCtx;;"
  }
  parameter {
    name: ""
    type: "*RIBindStatusCallback;;"
  }
}
function {
  name: "CopyStgMedium"
  return_type: "I"
  parameter {
    name: ""
    type: "*cRtagSTGMEDIUM;;"
  }
  parameter {
    name: ""
    type: "*RtagSTGMEDIUM;;"
  }
}
function {
  name: "CopyBindInfo"
  return_type: "I"
  parameter {
    name: ""
    type: "*cR_tagBINDINFO;;"
  }
  parameter {
    name: ""
    type: "*R_tagBINDINFO;;"
  }
}
function {
  name: "ReleaseBindInfo"
  return_type: "V"
  parameter {
    name: ""
    type: "*R_tagBINDINFO;;"
  }
}
function {
  name: "UrlMkGetSessionOption"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "UrlMkSetSessionOption"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "URLOpenStreamA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RIUnknown;;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*RIBindStatusCallback;;"
  }
}
function {
  name: "URLOpenStreamW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RIUnknown;;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*RIBindStatusCallback;;"
  }
}
function {
  name: "URLOpenPullStreamA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RIUnknown;;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*RIBindStatusCallback;;"
  }
}
function {
  name: "URLOpenPullStreamW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RIUnknown;;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*RIBindStatusCallback;;"
  }
}
function {
  name: "URLOpenBlockingStreamA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RIUnknown;;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "**RIStream;;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*RIBindStatusCallback;;"
  }
}
function {
  name: "URLOpenBlockingStreamW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RIUnknown;;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "**RIStream;;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*RIBindStatusCallback;;"
  }
}
function {
  name: "IsLoggingEnabledA"
  return_type: "I"
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "IsLoggingEnabledW"
  return_type: "I"
  parameter {
    name: ""
    type: "*cUS;"
  }
}
function {
  name: "STGMEDIUM_UserSize"
  return_type: "UI"
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*RtagSTGMEDIUM;;"
  }
}
function {
  name: "STGMEDIUM_UserMarshal"
  return_type: "*UB;"
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UB;"
  }
  parameter {
    name: ""
    type: "*RtagSTGMEDIUM;;"
  }
}
function {
  name: "STGMEDIUM_UserUnmarshal"
  return_type: "*UB;"
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UB;"
  }
  parameter {
    name: ""
    type: "*RtagSTGMEDIUM;;"
  }
}
function {
  name: "STGMEDIUM_UserFree"
  return_type: "V"
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*RtagSTGMEDIUM;;"
  }
}
function {
  name: "CLIPFORMAT_UserSize"
  return_type: "UI"
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*US;"
  }
}
function {
  name: "CLIPFORMAT_UserMarshal"
  return_type: "*UB;"
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UB;"
  }
  parameter {
    name: ""
    type: "*US;"
  }
}
function {
  name: "CLIPFORMAT_UserUnmarshal"
  return_type: "*UB;"
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UB;"
  }
  parameter {
    name: ""
    type: "*US;"
  }
}
function {
  name: "CLIPFORMAT_UserFree"
  return_type: "V"
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*US;"
  }
}
function {
  name: "HWND_UserSize"
  return_type: "UI"
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "**RHWND__;;;"
  }
}
function {
  name: "HWND_UserMarshal"
  return_type: "*UB;"
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UB;"
  }
  parameter {
    name: ""
    type: "**RHWND__;;;"
  }
}
function {
  name: "HWND_UserUnmarshal"
  return_type: "*UB;"
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UB;"
  }
  parameter {
    name: ""
    type: "**RHWND__;;;"
  }
}
function {
  name: "HWND_UserFree"
  return_type: "V"
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "**RHWND__;;;"
  }
}
function {
  name: "BSTR_UserSize"
  return_type: "UI"
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "**US;;"
  }
}
function {
  name: "BSTR_UserMarshal"
  return_type: "*UB;"
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UB;"
  }
  parameter {
    name: ""
    type: "**US;;"
  }
}
function {
  name: "BSTR_UserUnmarshal"
  return_type: "*UB;"
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UB;"
  }
  parameter {
    name: ""
    type: "**US;;"
  }
}
function {
  name: "BSTR_UserFree"
  return_type: "V"
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "**US;;"
  }
}
function {
  name: "IPropertyStorage_ReadMultiple_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIPropertyStorage;;"
  }
  parameter {
    name: "cpspec"
    type: "UI"
  }
  parameter {
    name: "rgpspec"
    type: "X(IncompleteArray.const PROPSPEC [])"
  }
  parameter {
    name: "rgpropvar"
    type: "X(IncompleteArray.PROPVARIANT [])"
  }
}
function {
  name: "IPropertyStorage_ReadMultiple_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IPropertyStorage_WriteMultiple_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIPropertyStorage;;"
  }
  parameter {
    name: "cpspec"
    type: "UI"
  }
  parameter {
    name: "rgpspec"
    type: "X(IncompleteArray.const PROPSPEC [])"
  }
  parameter {
    name: "rgpropvar"
    type: "X(IncompleteArray.const PROPVARIANT [])"
  }
  parameter {
    name: "propidNameFirst"
    type: "UI"
  }
}
function {
  name: "IPropertyStorage_WriteMultiple_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IPropertyStorage_DeleteMultiple_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIPropertyStorage;;"
  }
  parameter {
    name: "cpspec"
    type: "UI"
  }
  parameter {
    name: "rgpspec"
    type: "X(IncompleteArray.const PROPSPEC [])"
  }
}
function {
  name: "IPropertyStorage_DeleteMultiple_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IPropertyStorage_ReadPropertyNames_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIPropertyStorage;;"
  }
  parameter {
    name: "cpropid"
    type: "UI"
  }
  parameter {
    name: "rgpropid"
    type: "X(IncompleteArray.const PROPID [])"
  }
  parameter {
    name: "rglpwstrName"
    type: "X(IncompleteArray.LPOLESTR [])"
  }
}
function {
  name: "IPropertyStorage_ReadPropertyNames_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IPropertyStorage_WritePropertyNames_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIPropertyStorage;;"
  }
  parameter {
    name: "cpropid"
    type: "UI"
  }
  parameter {
    name: "rgpropid"
    type: "X(IncompleteArray.const PROPID [])"
  }
  parameter {
    name: "rglpwstrName"
    type: "X(IncompleteArray.const LPOLESTR [])"
  }
}
function {
  name: "IPropertyStorage_WritePropertyNames_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IPropertyStorage_DeletePropertyNames_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIPropertyStorage;;"
  }
  parameter {
    name: "cpropid"
    type: "UI"
  }
  parameter {
    name: "rgpropid"
    type: "X(IncompleteArray.const PROPID [])"
  }
}
function {
  name: "IPropertyStorage_DeletePropertyNames_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IPropertyStorage_Commit_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIPropertyStorage;;"
  }
  parameter {
    name: "grfCommitFlags"
    type: "UI"
  }
}
function {
  name: "IPropertyStorage_Commit_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IPropertyStorage_Revert_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIPropertyStorage;;"
  }
}
function {
  name: "IPropertyStorage_Revert_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IPropertyStorage_Enum_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIPropertyStorage;;"
  }
  parameter {
    name: "ppenum"
    type: "**RIEnumSTATPROPSTG;;;"
  }
}
function {
  name: "IPropertyStorage_Enum_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IPropertyStorage_SetTimes_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIPropertyStorage;;"
  }
  parameter {
    name: "pctime"
    type: "*cR_FILETIME;;"
  }
  parameter {
    name: "patime"
    type: "*cR_FILETIME;;"
  }
  parameter {
    name: "pmtime"
    type: "*cR_FILETIME;;"
  }
}
function {
  name: "IPropertyStorage_SetTimes_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IPropertyStorage_SetClass_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIPropertyStorage;;"
  }
  parameter {
    name: "clsid"
    type: "c*cR_GUID;;"
  }
}
function {
  name: "IPropertyStorage_SetClass_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IPropertyStorage_Stat_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIPropertyStorage;;"
  }
  parameter {
    name: "statpsstg"
    type: "*RtagSTATPROPSETSTG;;"
  }
}
function {
  name: "IPropertyStorage_Stat_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IPropertySetStorage_Create_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIPropertySetStorage;;"
  }
  parameter {
    name: "rfmtid"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "pclsid"
    type: "*cR_GUID;;"
  }
  parameter {
    name: "grfFlags"
    type: "UI"
  }
  parameter {
    name: "grfMode"
    type: "UI"
  }
  parameter {
    name: "ppprstg"
    type: "**RIPropertyStorage;;;"
  }
}
function {
  name: "IPropertySetStorage_Create_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IPropertySetStorage_Open_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIPropertySetStorage;;"
  }
  parameter {
    name: "rfmtid"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "grfMode"
    type: "UI"
  }
  parameter {
    name: "ppprstg"
    type: "**RIPropertyStorage;;;"
  }
}
function {
  name: "IPropertySetStorage_Open_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IPropertySetStorage_Delete_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIPropertySetStorage;;"
  }
  parameter {
    name: "rfmtid"
    type: "c*cR_GUID;;"
  }
}
function {
  name: "IPropertySetStorage_Delete_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IPropertySetStorage_Enum_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIPropertySetStorage;;"
  }
  parameter {
    name: "ppenum"
    type: "**RIEnumSTATPROPSETSTG;;;"
  }
}
function {
  name: "IPropertySetStorage_Enum_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IEnumSTATPROPSTG_RemoteNext_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIEnumSTATPROPSTG;;"
  }
  parameter {
    name: "celt"
    type: "UI"
  }
  parameter {
    name: "rgelt"
    type: "*RtagSTATPROPSTG;;"
  }
  parameter {
    name: "pceltFetched"
    type: "*UI;"
  }
}
function {
  name: "IEnumSTATPROPSTG_RemoteNext_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IEnumSTATPROPSTG_Skip_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIEnumSTATPROPSTG;;"
  }
  parameter {
    name: "celt"
    type: "UI"
  }
}
function {
  name: "IEnumSTATPROPSTG_Skip_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IEnumSTATPROPSTG_Reset_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIEnumSTATPROPSTG;;"
  }
}
function {
  name: "IEnumSTATPROPSTG_Reset_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IEnumSTATPROPSTG_Clone_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIEnumSTATPROPSTG;;"
  }
  parameter {
    name: "ppenum"
    type: "**RIEnumSTATPROPSTG;;;"
  }
}
function {
  name: "IEnumSTATPROPSTG_Clone_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IEnumSTATPROPSTG_Next_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIEnumSTATPROPSTG;;"
  }
  parameter {
    name: "celt"
    type: "UI"
  }
  parameter {
    name: "rgelt"
    type: "*RtagSTATPROPSTG;;"
  }
  parameter {
    name: "pceltFetched"
    type: "*UI;"
  }
}
function {
  name: "IEnumSTATPROPSTG_Next_Stub"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIEnumSTATPROPSTG;;"
  }
  parameter {
    name: "celt"
    type: "UI"
  }
  parameter {
    name: "rgelt"
    type: "*RtagSTATPROPSTG;;"
  }
  parameter {
    name: "pceltFetched"
    type: "*UI;"
  }
}
function {
  name: "IEnumSTATPROPSETSTG_RemoteNext_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIEnumSTATPROPSETSTG;;"
  }
  parameter {
    name: "celt"
    type: "UI"
  }
  parameter {
    name: "rgelt"
    type: "*RtagSTATPROPSETSTG;;"
  }
  parameter {
    name: "pceltFetched"
    type: "*UI;"
  }
}
function {
  name: "IEnumSTATPROPSETSTG_RemoteNext_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IEnumSTATPROPSETSTG_Skip_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIEnumSTATPROPSETSTG;;"
  }
  parameter {
    name: "celt"
    type: "UI"
  }
}
function {
  name: "IEnumSTATPROPSETSTG_Skip_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IEnumSTATPROPSETSTG_Reset_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIEnumSTATPROPSETSTG;;"
  }
}
function {
  name: "IEnumSTATPROPSETSTG_Reset_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IEnumSTATPROPSETSTG_Clone_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIEnumSTATPROPSETSTG;;"
  }
  parameter {
    name: "ppenum"
    type: "**RIEnumSTATPROPSETSTG;;;"
  }
}
function {
  name: "IEnumSTATPROPSETSTG_Clone_Stub"
  return_type: "V"
  parameter {
    name: "This"
    type: "*RIRpcStubBuffer;;"
  }
  parameter {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  parameter {
    name: "pRpcMessage"
    type: "*R_RPC_MESSAGE;;"
  }
  parameter {
    name: "pdwStubPhase"
    type: "*UI;"
  }
}
function {
  name: "IEnumSTATPROPSETSTG_Next_Proxy"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIEnumSTATPROPSETSTG;;"
  }
  parameter {
    name: "celt"
    type: "UI"
  }
  parameter {
    name: "rgelt"
    type: "*RtagSTATPROPSETSTG;;"
  }
  parameter {
    name: "pceltFetched"
    type: "*UI;"
  }
}
function {
  name: "IEnumSTATPROPSETSTG_Next_Stub"
  return_type: "I"
  parameter {
    name: "This"
    type: "*RIEnumSTATPROPSETSTG;;"
  }
  parameter {
    name: "celt"
    type: "UI"
  }
  parameter {
    name: "rgelt"
    type: "*RtagSTATPROPSETSTG;;"
  }
  parameter {
    name: "pceltFetched"
    type: "*UI;"
  }
}
function {
  name: "FreePropVariantArray"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*RtagPROPVARIANT;;"
  }
}
function {
  name: "PropVariantClear"
  return_type: "I"
  parameter {
    name: ""
    type: "*RtagPROPVARIANT;;"
  }
}
function {
  name: "PropVariantCopy"
  return_type: "I"
  parameter {
    name: ""
    type: "*RtagPROPVARIANT;;"
  }
  parameter {
    name: ""
    type: "*cRtagPROPVARIANT;;"
  }
}
function {
  name: "StgCreatePropStg"
  return_type: "I"
  parameter {
    name: ""
    type: "*RIUnknown;;"
  }
  parameter {
    name: ""
    type: "c*cR_GUID;;"
  }
  parameter {
    name: ""
    type: "*cR_GUID;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "**RIPropertyStorage;;;"
  }
}
function {
  name: "StgOpenPropStg"
  return_type: "I"
  parameter {
    name: ""
    type: "*RIUnknown;;"
  }
  parameter {
    name: ""
    type: "c*cR_GUID;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "**RIPropertyStorage;;;"
  }
}
function {
  name: "StgCreatePropSetStg"
  return_type: "I"
  parameter {
    name: ""
    type: "*RIStorage;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "**RIPropertySetStorage;;;"
  }
}
function {
  name: "FmtIdToPropStgName"
  return_type: "I"
  parameter {
    name: ""
    type: "*cR_GUID;;"
  }
  parameter {
    name: ""
    type: "*US;"
  }
}
function {
  name: "PropStgNameToFmtId"
  return_type: "I"
  parameter {
    name: ""
    type: "c*US;"
  }
  parameter {
    name: ""
    type: "*R_GUID;;"
  }
}
function {
  name: "BSTR_UserSize"
  return_type: "UI"
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "**US;;"
  }
}
function {
  name: "BSTR_UserMarshal"
  return_type: "*UB;"
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UB;"
  }
  parameter {
    name: ""
    type: "**US;;"
  }
}
function {
  name: "BSTR_UserUnmarshal"
  return_type: "*UB;"
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UB;"
  }
  parameter {
    name: ""
    type: "**US;;"
  }
}
function {
  name: "BSTR_UserFree"
  return_type: "V"
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "**US;;"
  }
}
function {
  name: "LPSAFEARRAY_UserSize"
  return_type: "UI"
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "**RtagSAFEARRAY;;;"
  }
}
function {
  name: "LPSAFEARRAY_UserMarshal"
  return_type: "*UB;"
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UB;"
  }
  parameter {
    name: ""
    type: "**RtagSAFEARRAY;;;"
  }
}
function {
  name: "LPSAFEARRAY_UserUnmarshal"
  return_type: "*UB;"
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UB;"
  }
  parameter {
    name: ""
    type: "**RtagSAFEARRAY;;;"
  }
}
function {
  name: "LPSAFEARRAY_UserFree"
  return_type: "V"
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "**RtagSAFEARRAY;;;"
  }
}
function {
  name: "OaBuildVersion"
  return_type: "UI"
}
function {
  name: "SysAllocString"
  return_type: "*US;"
  parameter {
    name: ""
    type: "*cUS;"
  }
}
function {
  name: "SysAllocStringByteLen"
  return_type: "*US;"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "SysAllocStringLen"
  return_type: "*US;"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "SysFreeString"
  return_type: "V"
  parameter {
    name: ""
    type: "*US;"
  }
}
function {
  name: "SysReAllocString"
  return_type: "I"
  parameter {
    name: ""
    type: "**US;;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
}
function {
  name: "SysReAllocStringLen"
  return_type: "I"
  parameter {
    name: ""
    type: "**US;;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "SysStringByteLen"
  return_type: "UI"
  parameter {
    name: ""
    type: "*US;"
  }
}
function {
  name: "SysStringLen"
  return_type: "UI"
  parameter {
    name: ""
    type: "*US;"
  }
}
function {
  name: "SetErrorInfo"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*RIErrorInfo;;"
  }
}
function {
  name: "GetErrorInfo"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "**RIErrorInfo;;;"
  }
}
function {
  name: "CreateErrorInfo"
  return_type: "I"
  parameter {
    name: ""
    type: "**RICreateErrorInfo;;;"
  }
}
function {
  name: "SafeArrayCreate"
  return_type: "*RtagSAFEARRAY;;"
  parameter {
    name: ""
    type: "US"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*RtagSAFEARRAYBOUND;;"
  }
}
function {
  name: "SafeArrayCreateEx"
  return_type: "*RtagSAFEARRAY;;"
  parameter {
    name: ""
    type: "US"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*RtagSAFEARRAYBOUND;;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "SafeArrayCreateVector"
  return_type: "*RtagSAFEARRAY;;"
  parameter {
    name: ""
    type: "US"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "SafeArrayCreateVectorEx"
  return_type: "*RtagSAFEARRAY;;"
  parameter {
    name: ""
    type: "US"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "SafeArrayAllocDescriptor"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "**RtagSAFEARRAY;;;"
  }
}
function {
  name: "SafeArrayAllocDescriptorEx"
  return_type: "I"
  parameter {
    name: ""
    type: "US"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "**RtagSAFEARRAY;;;"
  }
}
function {
  name: "SafeArrayAllocData"
  return_type: "I"
  parameter {
    name: ""
    type: "*RtagSAFEARRAY;;"
  }
}
function {
  name: "SafeArrayDestroyDescriptor"
  return_type: "I"
  parameter {
    name: ""
    type: "*RtagSAFEARRAY;;"
  }
}
function {
  name: "SafeArrayPutElement"
  return_type: "I"
  parameter {
    name: ""
    type: "*RtagSAFEARRAY;;"
  }
  parameter {
    name: ""
    type: "*I;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "SafeArrayGetElement"
  return_type: "I"
  parameter {
    name: ""
    type: "*RtagSAFEARRAY;;"
  }
  parameter {
    name: ""
    type: "*I;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "SafeArrayLock"
  return_type: "I"
  parameter {
    name: ""
    type: "*RtagSAFEARRAY;;"
  }
}
function {
  name: "SafeArrayUnlock"
  return_type: "I"
  parameter {
    name: ""
    type: "*RtagSAFEARRAY;;"
  }
}
function {
  name: "SafeArrayGetUBound"
  return_type: "I"
  parameter {
    name: ""
    type: "*RtagSAFEARRAY;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*I;"
  }
}
function {
  name: "SafeArrayGetLBound"
  return_type: "I"
  parameter {
    name: ""
    type: "*RtagSAFEARRAY;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*I;"
  }
}
function {
  name: "SafeArrayGetDim"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RtagSAFEARRAY;;"
  }
}
function {
  name: "SafeArrayGetElemsize"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RtagSAFEARRAY;;"
  }
}
function {
  name: "SafeArrayGetVartype"
  return_type: "I"
  parameter {
    name: ""
    type: "*RtagSAFEARRAY;;"
  }
  parameter {
    name: ""
    type: "*US;"
  }
}
function {
  name: "SafeArrayAccessData"
  return_type: "I"
  parameter {
    name: ""
    type: "*RtagSAFEARRAY;;"
  }
  parameter {
    name: ""
    type: "**V;;"
  }
}
function {
  name: "SafeArrayUnaccessData"
  return_type: "I"
  parameter {
    name: ""
    type: "*RtagSAFEARRAY;;"
  }
}
function {
  name: "SafeArrayPtrOfIndex"
  return_type: "I"
  parameter {
    name: ""
    type: "*RtagSAFEARRAY;;"
  }
  parameter {
    name: ""
    type: "*I;"
  }
  parameter {
    name: ""
    type: "**V;;"
  }
}
function {
  name: "SafeArrayCopyData"
  return_type: "I"
  parameter {
    name: ""
    type: "*RtagSAFEARRAY;;"
  }
  parameter {
    name: ""
    type: "*RtagSAFEARRAY;;"
  }
}
function {
  name: "SafeArrayDestroyData"
  return_type: "I"
  parameter {
    name: ""
    type: "*RtagSAFEARRAY;;"
  }
}
function {
  name: "SafeArrayDestroy"
  return_type: "I"
  parameter {
    name: ""
    type: "*RtagSAFEARRAY;;"
  }
}
function {
  name: "SafeArrayCopy"
  return_type: "I"
  parameter {
    name: ""
    type: "*RtagSAFEARRAY;;"
  }
  parameter {
    name: ""
    type: "**RtagSAFEARRAY;;;"
  }
}
function {
  name: "SafeArrayRedim"
  return_type: "I"
  parameter {
    name: ""
    type: "*RtagSAFEARRAY;;"
  }
  parameter {
    name: ""
    type: "*RtagSAFEARRAYBOUND;;"
  }
}
function {
  name: "SafeArraySetRecordInfo"
  return_type: "I"
  parameter {
    name: ""
    type: "*RtagSAFEARRAY;;"
  }
  parameter {
    name: ""
    type: "*RIRecordInfo;;"
  }
}
function {
  name: "SafeArrayGetRecordInfo"
  return_type: "I"
  parameter {
    name: ""
    type: "*RtagSAFEARRAY;;"
  }
  parameter {
    name: ""
    type: "**RIRecordInfo;;;"
  }
}
function {
  name: "SafeArraySetIID"
  return_type: "I"
  parameter {
    name: ""
    type: "*RtagSAFEARRAY;;"
  }
  parameter {
    name: ""
    type: "c*cR_GUID;;"
  }
}
function {
  name: "SafeArrayGetIID"
  return_type: "I"
  parameter {
    name: ""
    type: "*RtagSAFEARRAY;;"
  }
  parameter {
    name: ""
    type: "*R_GUID;;"
  }
}
function {
  name: "VectorFromBstr"
  return_type: "I"
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "**RtagSAFEARRAY;;;"
  }
}
function {
  name: "BstrFromVector"
  return_type: "I"
  parameter {
    name: ""
    type: "*RtagSAFEARRAY;;"
  }
  parameter {
    name: ""
    type: "**US;;"
  }
}
function {
  name: "RegisterActiveObject"
  return_type: "I"
  parameter {
    name: ""
    type: "*RIUnknown;;"
  }
  parameter {
    name: ""
    type: "c*cR_GUID;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "RevokeActiveObject"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "GetActiveObject"
  return_type: "I"
  parameter {
    name: ""
    type: "c*cR_GUID;;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "**RIUnknown;;;"
  }
}
function {
  name: "GetRecordInfoFromTypeInfo"
  return_type: "I"
  parameter {
    name: ""
    type: "*RITypeInfo;;"
  }
  parameter {
    name: ""
    type: "**RIRecordInfo;;;"
  }
}
function {
  name: "GetRecordInfoFromGuids"
  return_type: "I"
  parameter {
    name: ""
    type: "c*cR_GUID;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "c*cR_GUID;;"
  }
  parameter {
    name: ""
    type: "**RIRecordInfo;;;"
  }
}
function {
  name: "VariantInit"
  return_type: "V"
  parameter {
    name: ""
    type: "*RtagVARIANT;;"
  }
}
function {
  name: "VariantClear"
  return_type: "I"
  parameter {
    name: ""
    type: "*RtagVARIANT;;"
  }
}
function {
  name: "VariantCopy"
  return_type: "I"
  parameter {
    name: ""
    type: "*RtagVARIANT;;"
  }
  parameter {
    name: ""
    type: "*RtagVARIANT;;"
  }
}
function {
  name: "VariantCopyInd"
  return_type: "I"
  parameter {
    name: ""
    type: "*RtagVARIANT;;"
  }
  parameter {
    name: ""
    type: "*RtagVARIANT;;"
  }
}
function {
  name: "VariantChangeType"
  return_type: "I"
  parameter {
    name: ""
    type: "*RtagVARIANT;;"
  }
  parameter {
    name: ""
    type: "*RtagVARIANT;;"
  }
  parameter {
    name: ""
    type: "US"
  }
  parameter {
    name: ""
    type: "US"
  }
}
function {
  name: "VariantChangeTypeEx"
  return_type: "I"
  parameter {
    name: ""
    type: "*RtagVARIANT;;"
  }
  parameter {
    name: ""
    type: "*RtagVARIANT;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "US"
  }
  parameter {
    name: ""
    type: "US"
  }
}
function {
  name: "VarUI1FromI2"
  return_type: "I"
  parameter {
    name: ""
    type: "S"
  }
  parameter {
    name: ""
    type: "*UB;"
  }
}
function {
  name: "VarUI1FromI4"
  return_type: "I"
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*UB;"
  }
}
function {
  name: "VarUI1FromI8"
  return_type: "I"
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*UB;"
  }
}
function {
  name: "VarUI1FromR4"
  return_type: "I"
  parameter {
    name: ""
    type: "F"
  }
  parameter {
    name: ""
    type: "*UB;"
  }
}
function {
  name: "VarUI1FromR8"
  return_type: "I"
  parameter {
    name: ""
    type: "D"
  }
  parameter {
    name: ""
    type: "*UB;"
  }
}
function {
  name: "VarUI1FromDate"
  return_type: "I"
  parameter {
    name: ""
    type: "D"
  }
  parameter {
    name: ""
    type: "*UB;"
  }
}
function {
  name: "VarUI1FromBool"
  return_type: "I"
  parameter {
    name: ""
    type: "S"
  }
  parameter {
    name: ""
    type: "*UB;"
  }
}
function {
  name: "VarUI1FromI1"
  return_type: "I"
  parameter {
    name: ""
    type: "B"
  }
  parameter {
    name: ""
    type: "*UB;"
  }
}
function {
  name: "VarUI1FromUI2"
  return_type: "I"
  parameter {
    name: ""
    type: "US"
  }
  parameter {
    name: ""
    type: "*UB;"
  }
}
function {
  name: "VarUI1FromUI4"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UB;"
  }
}
function {
  name: "VarUI1FromUI8"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UB;"
  }
}
function {
  name: "VarUI1FromStr"
  return_type: "I"
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UB;"
  }
}
function {
  name: "VarUI1FromCy"
  return_type: "I"
  parameter {
    name: ""
    type: "Runion tagCY;"
  }
  parameter {
    name: ""
    type: "*UB;"
  }
}
function {
  name: "VarUI1FromDec"
  return_type: "I"
  parameter {
    name: ""
    type: "*RtagDEC;;"
  }
  parameter {
    name: ""
    type: "*UB;"
  }
}
function {
  name: "VarUI1FromDisp"
  return_type: "I"
  parameter {
    name: ""
    type: "*RIDispatch;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UB;"
  }
}
function {
  name: "VarI2FromUI1"
  return_type: "I"
  parameter {
    name: ""
    type: "UB"
  }
  parameter {
    name: ""
    type: "*S;"
  }
}
function {
  name: "VarI2FromI4"
  return_type: "I"
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*S;"
  }
}
function {
  name: "VarI2FromI8"
  return_type: "I"
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*S;"
  }
}
function {
  name: "VarI2FromR4"
  return_type: "I"
  parameter {
    name: ""
    type: "F"
  }
  parameter {
    name: ""
    type: "*S;"
  }
}
function {
  name: "VarI2FromR8"
  return_type: "I"
  parameter {
    name: ""
    type: "D"
  }
  parameter {
    name: ""
    type: "*S;"
  }
}
function {
  name: "VarI2FromDate"
  return_type: "I"
  parameter {
    name: ""
    type: "D"
  }
  parameter {
    name: ""
    type: "*S;"
  }
}
function {
  name: "VarI2FromBool"
  return_type: "I"
  parameter {
    name: ""
    type: "S"
  }
  parameter {
    name: ""
    type: "*S;"
  }
}
function {
  name: "VarI2FromI1"
  return_type: "I"
  parameter {
    name: ""
    type: "B"
  }
  parameter {
    name: ""
    type: "*S;"
  }
}
function {
  name: "VarI2FromUI2"
  return_type: "I"
  parameter {
    name: ""
    type: "US"
  }
  parameter {
    name: ""
    type: "*S;"
  }
}
function {
  name: "VarI2FromUI4"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*S;"
  }
}
function {
  name: "VarI2FromUI8"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*S;"
  }
}
function {
  name: "VarI2FromStr"
  return_type: "I"
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*S;"
  }
}
function {
  name: "VarI2FromCy"
  return_type: "I"
  parameter {
    name: ""
    type: "Runion tagCY;"
  }
  parameter {
    name: ""
    type: "*S;"
  }
}
function {
  name: "VarI2FromDec"
  return_type: "I"
  parameter {
    name: ""
    type: "*RtagDEC;;"
  }
  parameter {
    name: ""
    type: "*S;"
  }
}
function {
  name: "VarI2FromDisp"
  return_type: "I"
  parameter {
    name: ""
    type: "*RIDispatch;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*S;"
  }
}
function {
  name: "VarI4FromUI1"
  return_type: "I"
  parameter {
    name: ""
    type: "UB"
  }
  parameter {
    name: ""
    type: "*I;"
  }
}
function {
  name: "VarI4FromI2"
  return_type: "I"
  parameter {
    name: ""
    type: "S"
  }
  parameter {
    name: ""
    type: "*I;"
  }
}
function {
  name: "VarI4FromI8"
  return_type: "I"
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*I;"
  }
}
function {
  name: "VarI4FromR4"
  return_type: "I"
  parameter {
    name: ""
    type: "F"
  }
  parameter {
    name: ""
    type: "*I;"
  }
}
function {
  name: "VarI4FromR8"
  return_type: "I"
  parameter {
    name: ""
    type: "D"
  }
  parameter {
    name: ""
    type: "*I;"
  }
}
function {
  name: "VarI4FromDate"
  return_type: "I"
  parameter {
    name: ""
    type: "D"
  }
  parameter {
    name: ""
    type: "*I;"
  }
}
function {
  name: "VarI4FromBool"
  return_type: "I"
  parameter {
    name: ""
    type: "S"
  }
  parameter {
    name: ""
    type: "*I;"
  }
}
function {
  name: "VarI4FromI1"
  return_type: "I"
  parameter {
    name: ""
    type: "B"
  }
  parameter {
    name: ""
    type: "*I;"
  }
}
function {
  name: "VarI4FromUI2"
  return_type: "I"
  parameter {
    name: ""
    type: "US"
  }
  parameter {
    name: ""
    type: "*I;"
  }
}
function {
  name: "VarI4FromUI4"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*I;"
  }
}
function {
  name: "VarI4FromUI8"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*I;"
  }
}
function {
  name: "VarI4FromStr"
  return_type: "I"
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*I;"
  }
}
function {
  name: "VarI4FromCy"
  return_type: "I"
  parameter {
    name: ""
    type: "Runion tagCY;"
  }
  parameter {
    name: ""
    type: "*I;"
  }
}
function {
  name: "VarI4FromDec"
  return_type: "I"
  parameter {
    name: ""
    type: "*RtagDEC;;"
  }
  parameter {
    name: ""
    type: "*I;"
  }
}
function {
  name: "VarI4FromDisp"
  return_type: "I"
  parameter {
    name: ""
    type: "*RIDispatch;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*I;"
  }
}
function {
  name: "VarI8FromUI1"
  return_type: "I"
  parameter {
    name: ""
    type: "UB"
  }
  parameter {
    name: ""
    type: "*I;"
  }
}
function {
  name: "VarI8FromI2"
  return_type: "I"
  parameter {
    name: ""
    type: "S"
  }
  parameter {
    name: ""
    type: "*I;"
  }
}
function {
  name: "VarI8FromI4"
  return_type: "I"
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*I;"
  }
}
function {
  name: "VarI8FromR4"
  return_type: "I"
  parameter {
    name: ""
    type: "F"
  }
  parameter {
    name: ""
    type: "*I;"
  }
}
function {
  name: "VarI8FromR8"
  return_type: "I"
  parameter {
    name: ""
    type: "D"
  }
  parameter {
    name: ""
    type: "*I;"
  }
}
function {
  name: "VarI8FromDate"
  return_type: "I"
  parameter {
    name: ""
    type: "D"
  }
  parameter {
    name: ""
    type: "*I;"
  }
}
function {
  name: "VarI8FromStr"
  return_type: "I"
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*I;"
  }
}
function {
  name: "VarI8FromBool"
  return_type: "I"
  parameter {
    name: ""
    type: "S"
  }
  parameter {
    name: ""
    type: "*I;"
  }
}
function {
  name: "VarI8FromI1"
  return_type: "I"
  parameter {
    name: ""
    type: "B"
  }
  parameter {
    name: ""
    type: "*I;"
  }
}
function {
  name: "VarI8FromUI2"
  return_type: "I"
  parameter {
    name: ""
    type: "US"
  }
  parameter {
    name: ""
    type: "*I;"
  }
}
function {
  name: "VarI8FromUI4"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*I;"
  }
}
function {
  name: "VarI8FromUI8"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*I;"
  }
}
function {
  name: "VarI8FromDec"
  return_type: "I"
  parameter {
    name: "pdecIn"
    type: "*RtagDEC;;"
  }
  parameter {
    name: ""
    type: "*I;"
  }
}
function {
  name: "VarI8FromInt"
  return_type: "I"
  parameter {
    name: "intIn"
    type: "I"
  }
  parameter {
    name: ""
    type: "*I;"
  }
}
function {
  name: "VarI8FromCy"
  return_type: "I"
  parameter {
    name: ""
    type: "Runion tagCY;"
  }
  parameter {
    name: ""
    type: "*I;"
  }
}
function {
  name: "VarI8FromDisp"
  return_type: "I"
  parameter {
    name: ""
    type: "*RIDispatch;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*I;"
  }
}
function {
  name: "VarR4FromUI1"
  return_type: "I"
  parameter {
    name: ""
    type: "UB"
  }
  parameter {
    name: ""
    type: "*F;"
  }
}
function {
  name: "VarR4FromI2"
  return_type: "I"
  parameter {
    name: ""
    type: "S"
  }
  parameter {
    name: ""
    type: "*F;"
  }
}
function {
  name: "VarR4FromI4"
  return_type: "I"
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*F;"
  }
}
function {
  name: "VarR4FromI8"
  return_type: "I"
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*F;"
  }
}
function {
  name: "VarR4FromR8"
  return_type: "I"
  parameter {
    name: ""
    type: "D"
  }
  parameter {
    name: ""
    type: "*F;"
  }
}
function {
  name: "VarR4FromDate"
  return_type: "I"
  parameter {
    name: ""
    type: "D"
  }
  parameter {
    name: ""
    type: "*F;"
  }
}
function {
  name: "VarR4FromBool"
  return_type: "I"
  parameter {
    name: ""
    type: "S"
  }
  parameter {
    name: ""
    type: "*F;"
  }
}
function {
  name: "VarR4FromI1"
  return_type: "I"
  parameter {
    name: ""
    type: "B"
  }
  parameter {
    name: ""
    type: "*F;"
  }
}
function {
  name: "VarR4FromUI2"
  return_type: "I"
  parameter {
    name: ""
    type: "US"
  }
  parameter {
    name: ""
    type: "*F;"
  }
}
function {
  name: "VarR4FromUI4"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*F;"
  }
}
function {
  name: "VarR4FromUI8"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*F;"
  }
}
function {
  name: "VarR4FromStr"
  return_type: "I"
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*F;"
  }
}
function {
  name: "VarR4FromCy"
  return_type: "I"
  parameter {
    name: ""
    type: "Runion tagCY;"
  }
  parameter {
    name: ""
    type: "*F;"
  }
}
function {
  name: "VarR4FromDec"
  return_type: "I"
  parameter {
    name: ""
    type: "*RtagDEC;;"
  }
  parameter {
    name: ""
    type: "*F;"
  }
}
function {
  name: "VarR4FromDisp"
  return_type: "I"
  parameter {
    name: ""
    type: "*RIDispatch;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*F;"
  }
}
function {
  name: "VarR8FromUI1"
  return_type: "I"
  parameter {
    name: ""
    type: "UB"
  }
  parameter {
    name: ""
    type: "*D;"
  }
}
function {
  name: "VarR8FromI2"
  return_type: "I"
  parameter {
    name: ""
    type: "S"
  }
  parameter {
    name: ""
    type: "*D;"
  }
}
function {
  name: "VarR8FromI4"
  return_type: "I"
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*D;"
  }
}
function {
  name: "VarR8FromI8"
  return_type: "I"
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*D;"
  }
}
function {
  name: "VarR8FromR4"
  return_type: "I"
  parameter {
    name: ""
    type: "F"
  }
  parameter {
    name: ""
    type: "*D;"
  }
}
function {
  name: "VarR8FromDate"
  return_type: "I"
  parameter {
    name: ""
    type: "D"
  }
  parameter {
    name: ""
    type: "*D;"
  }
}
function {
  name: "VarR8FromBool"
  return_type: "I"
  parameter {
    name: ""
    type: "S"
  }
  parameter {
    name: ""
    type: "*D;"
  }
}
function {
  name: "VarR8FromI1"
  return_type: "I"
  parameter {
    name: ""
    type: "B"
  }
  parameter {
    name: ""
    type: "*D;"
  }
}
function {
  name: "VarR8FromUI2"
  return_type: "I"
  parameter {
    name: ""
    type: "US"
  }
  parameter {
    name: ""
    type: "*D;"
  }
}
function {
  name: "VarR8FromUI4"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*D;"
  }
}
function {
  name: "VarR8FromUI8"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*D;"
  }
}
function {
  name: "VarR8FromStr"
  return_type: "I"
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*D;"
  }
}
function {
  name: "VarR8FromCy"
  return_type: "I"
  parameter {
    name: ""
    type: "Runion tagCY;"
  }
  parameter {
    name: ""
    type: "*D;"
  }
}
function {
  name: "VarR8FromDec"
  return_type: "I"
  parameter {
    name: ""
    type: "*cRtagDEC;;"
  }
  parameter {
    name: ""
    type: "*D;"
  }
}
function {
  name: "VarR8FromDisp"
  return_type: "I"
  parameter {
    name: ""
    type: "*RIDispatch;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*D;"
  }
}
function {
  name: "VarDateFromUI1"
  return_type: "I"
  parameter {
    name: ""
    type: "UB"
  }
  parameter {
    name: ""
    type: "*D;"
  }
}
function {
  name: "VarDateFromI2"
  return_type: "I"
  parameter {
    name: ""
    type: "S"
  }
  parameter {
    name: ""
    type: "*D;"
  }
}
function {
  name: "VarDateFromI4"
  return_type: "I"
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*D;"
  }
}
function {
  name: "VarDateFromI8"
  return_type: "I"
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*D;"
  }
}
function {
  name: "VarDateFromR4"
  return_type: "I"
  parameter {
    name: ""
    type: "F"
  }
  parameter {
    name: ""
    type: "*D;"
  }
}
function {
  name: "VarDateFromR8"
  return_type: "I"
  parameter {
    name: ""
    type: "D"
  }
  parameter {
    name: ""
    type: "*D;"
  }
}
function {
  name: "VarDateFromStr"
  return_type: "I"
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*D;"
  }
}
function {
  name: "VarDateFromI1"
  return_type: "I"
  parameter {
    name: ""
    type: "B"
  }
  parameter {
    name: ""
    type: "*D;"
  }
}
function {
  name: "VarDateFromUI2"
  return_type: "I"
  parameter {
    name: ""
    type: "US"
  }
  parameter {
    name: ""
    type: "*D;"
  }
}
function {
  name: "VarDateFromUI4"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*D;"
  }
}
function {
  name: "VarDateFromUI8"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*D;"
  }
}
function {
  name: "VarDateFromBool"
  return_type: "I"
  parameter {
    name: ""
    type: "S"
  }
  parameter {
    name: ""
    type: "*D;"
  }
}
function {
  name: "VarDateFromCy"
  return_type: "I"
  parameter {
    name: ""
    type: "Runion tagCY;"
  }
  parameter {
    name: ""
    type: "*D;"
  }
}
function {
  name: "VarDateFromDec"
  return_type: "I"
  parameter {
    name: ""
    type: "*RtagDEC;;"
  }
  parameter {
    name: ""
    type: "*D;"
  }
}
function {
  name: "VarDateFromDisp"
  return_type: "I"
  parameter {
    name: ""
    type: "*RIDispatch;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*D;"
  }
}
function {
  name: "VarCyFromUI1"
  return_type: "I"
  parameter {
    name: ""
    type: "UB"
  }
  parameter {
    name: ""
    type: "*Runion tagCY;;"
  }
}
function {
  name: "VarCyFromI2"
  return_type: "I"
  parameter {
    name: "sIn"
    type: "S"
  }
  parameter {
    name: ""
    type: "*Runion tagCY;;"
  }
}
function {
  name: "VarCyFromI4"
  return_type: "I"
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*Runion tagCY;;"
  }
}
function {
  name: "VarCyFromI8"
  return_type: "I"
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*Runion tagCY;;"
  }
}
function {
  name: "VarCyFromR4"
  return_type: "I"
  parameter {
    name: ""
    type: "F"
  }
  parameter {
    name: ""
    type: "*Runion tagCY;;"
  }
}
function {
  name: "VarCyFromR8"
  return_type: "I"
  parameter {
    name: ""
    type: "D"
  }
  parameter {
    name: ""
    type: "*Runion tagCY;;"
  }
}
function {
  name: "VarCyFromDate"
  return_type: "I"
  parameter {
    name: ""
    type: "D"
  }
  parameter {
    name: ""
    type: "*Runion tagCY;;"
  }
}
function {
  name: "VarCyFromStr"
  return_type: "I"
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*Runion tagCY;;"
  }
}
function {
  name: "VarCyFromBool"
  return_type: "I"
  parameter {
    name: ""
    type: "S"
  }
  parameter {
    name: ""
    type: "*Runion tagCY;;"
  }
}
function {
  name: "VarCyFromI1"
  return_type: "I"
  parameter {
    name: ""
    type: "B"
  }
  parameter {
    name: ""
    type: "*Runion tagCY;;"
  }
}
function {
  name: "VarCyFromUI2"
  return_type: "I"
  parameter {
    name: ""
    type: "US"
  }
  parameter {
    name: ""
    type: "*Runion tagCY;;"
  }
}
function {
  name: "VarCyFromUI4"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*Runion tagCY;;"
  }
}
function {
  name: "VarCyFromUI8"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*Runion tagCY;;"
  }
}
function {
  name: "VarCyFromDec"
  return_type: "I"
  parameter {
    name: ""
    type: "*RtagDEC;;"
  }
  parameter {
    name: ""
    type: "*Runion tagCY;;"
  }
}
function {
  name: "VarCyFromDisp"
  return_type: "I"
  parameter {
    name: ""
    type: "*RIDispatch;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*Runion tagCY;;"
  }
}
function {
  name: "VarBstrFromUI1"
  return_type: "I"
  parameter {
    name: ""
    type: "UB"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "**US;;"
  }
}
function {
  name: "VarBstrFromI2"
  return_type: "I"
  parameter {
    name: ""
    type: "S"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "**US;;"
  }
}
function {
  name: "VarBstrFromI4"
  return_type: "I"
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "**US;;"
  }
}
function {
  name: "VarBstrFromI8"
  return_type: "I"
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "**US;;"
  }
}
function {
  name: "VarBstrFromR4"
  return_type: "I"
  parameter {
    name: ""
    type: "F"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "**US;;"
  }
}
function {
  name: "VarBstrFromR8"
  return_type: "I"
  parameter {
    name: ""
    type: "D"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "**US;;"
  }
}
function {
  name: "VarBstrFromDate"
  return_type: "I"
  parameter {
    name: ""
    type: "D"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "**US;;"
  }
}
function {
  name: "VarBstrFromBool"
  return_type: "I"
  parameter {
    name: ""
    type: "S"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "**US;;"
  }
}
function {
  name: "VarBstrFromI1"
  return_type: "I"
  parameter {
    name: ""
    type: "B"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "**US;;"
  }
}
function {
  name: "VarBstrFromUI2"
  return_type: "I"
  parameter {
    name: ""
    type: "US"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "**US;;"
  }
}
function {
  name: "VarBstrFromUI8"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "**US;;"
  }
}
function {
  name: "VarBstrFromUI4"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "**US;;"
  }
}
function {
  name: "VarBstrFromCy"
  return_type: "I"
  parameter {
    name: ""
    type: "Runion tagCY;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "**US;;"
  }
}
function {
  name: "VarBstrFromDec"
  return_type: "I"
  parameter {
    name: ""
    type: "*RtagDEC;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "**US;;"
  }
}
function {
  name: "VarBstrFromDisp"
  return_type: "I"
  parameter {
    name: ""
    type: "*RIDispatch;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "**US;;"
  }
}
function {
  name: "VarBoolFromUI1"
  return_type: "I"
  parameter {
    name: ""
    type: "UB"
  }
  parameter {
    name: ""
    type: "*S;"
  }
}
function {
  name: "VarBoolFromI2"
  return_type: "I"
  parameter {
    name: ""
    type: "S"
  }
  parameter {
    name: ""
    type: "*S;"
  }
}
function {
  name: "VarBoolFromI4"
  return_type: "I"
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*S;"
  }
}
function {
  name: "VarBoolFromI8"
  return_type: "I"
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*S;"
  }
}
function {
  name: "VarBoolFromR4"
  return_type: "I"
  parameter {
    name: ""
    type: "F"
  }
  parameter {
    name: ""
    type: "*S;"
  }
}
function {
  name: "VarBoolFromR8"
  return_type: "I"
  parameter {
    name: ""
    type: "D"
  }
  parameter {
    name: ""
    type: "*S;"
  }
}
function {
  name: "VarBoolFromDate"
  return_type: "I"
  parameter {
    name: ""
    type: "D"
  }
  parameter {
    name: ""
    type: "*S;"
  }
}
function {
  name: "VarBoolFromStr"
  return_type: "I"
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*S;"
  }
}
function {
  name: "VarBoolFromI1"
  return_type: "I"
  parameter {
    name: ""
    type: "B"
  }
  parameter {
    name: ""
    type: "*S;"
  }
}
function {
  name: "VarBoolFromUI2"
  return_type: "I"
  parameter {
    name: ""
    type: "US"
  }
  parameter {
    name: ""
    type: "*S;"
  }
}
function {
  name: "VarBoolFromUI4"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*S;"
  }
}
function {
  name: "VarBoolFromUI8"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*S;"
  }
}
function {
  name: "VarBoolFromCy"
  return_type: "I"
  parameter {
    name: ""
    type: "Runion tagCY;"
  }
  parameter {
    name: ""
    type: "*S;"
  }
}
function {
  name: "VarBoolFromDec"
  return_type: "I"
  parameter {
    name: ""
    type: "*RtagDEC;;"
  }
  parameter {
    name: ""
    type: "*S;"
  }
}
function {
  name: "VarBoolFromDisp"
  return_type: "I"
  parameter {
    name: ""
    type: "*RIDispatch;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*S;"
  }
}
function {
  name: "VarI1FromUI1"
  return_type: "I"
  parameter {
    name: ""
    type: "UB"
  }
  parameter {
    name: ""
    type: "*B;"
  }
}
function {
  name: "VarI1FromI2"
  return_type: "I"
  parameter {
    name: ""
    type: "S"
  }
  parameter {
    name: ""
    type: "*B;"
  }
}
function {
  name: "VarI1FromI4"
  return_type: "I"
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*B;"
  }
}
function {
  name: "VarI1FromI8"
  return_type: "I"
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*B;"
  }
}
function {
  name: "VarI1FromR4"
  return_type: "I"
  parameter {
    name: ""
    type: "F"
  }
  parameter {
    name: ""
    type: "*B;"
  }
}
function {
  name: "VarI1FromR8"
  return_type: "I"
  parameter {
    name: ""
    type: "D"
  }
  parameter {
    name: ""
    type: "*B;"
  }
}
function {
  name: "VarI1FromDate"
  return_type: "I"
  parameter {
    name: ""
    type: "D"
  }
  parameter {
    name: ""
    type: "*B;"
  }
}
function {
  name: "VarI1FromStr"
  return_type: "I"
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*B;"
  }
}
function {
  name: "VarI1FromBool"
  return_type: "I"
  parameter {
    name: ""
    type: "S"
  }
  parameter {
    name: ""
    type: "*B;"
  }
}
function {
  name: "VarI1FromUI2"
  return_type: "I"
  parameter {
    name: ""
    type: "US"
  }
  parameter {
    name: ""
    type: "*B;"
  }
}
function {
  name: "VarI1FromUI4"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*B;"
  }
}
function {
  name: "VarI1FromUI8"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*B;"
  }
}
function {
  name: "VarI1FromCy"
  return_type: "I"
  parameter {
    name: ""
    type: "Runion tagCY;"
  }
  parameter {
    name: ""
    type: "*B;"
  }
}
function {
  name: "VarI1FromDec"
  return_type: "I"
  parameter {
    name: ""
    type: "*RtagDEC;;"
  }
  parameter {
    name: ""
    type: "*B;"
  }
}
function {
  name: "VarI1FromDisp"
  return_type: "I"
  parameter {
    name: ""
    type: "*RIDispatch;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*B;"
  }
}
function {
  name: "VarUI2FromUI1"
  return_type: "I"
  parameter {
    name: ""
    type: "UB"
  }
  parameter {
    name: ""
    type: "*US;"
  }
}
function {
  name: "VarUI2FromI2"
  return_type: "I"
  parameter {
    name: ""
    type: "S"
  }
  parameter {
    name: ""
    type: "*US;"
  }
}
function {
  name: "VarUI2FromI4"
  return_type: "I"
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*US;"
  }
}
function {
  name: "VarUI2FromI8"
  return_type: "I"
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*US;"
  }
}
function {
  name: "VarUI2FromR4"
  return_type: "I"
  parameter {
    name: ""
    type: "F"
  }
  parameter {
    name: ""
    type: "*US;"
  }
}
function {
  name: "VarUI2FromR8"
  return_type: "I"
  parameter {
    name: ""
    type: "D"
  }
  parameter {
    name: ""
    type: "*US;"
  }
}
function {
  name: "VarUI2FromDate"
  return_type: "I"
  parameter {
    name: ""
    type: "D"
  }
  parameter {
    name: ""
    type: "*US;"
  }
}
function {
  name: "VarUI2FromStr"
  return_type: "I"
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*US;"
  }
}
function {
  name: "VarUI2FromBool"
  return_type: "I"
  parameter {
    name: ""
    type: "S"
  }
  parameter {
    name: ""
    type: "*US;"
  }
}
function {
  name: "VarUI2FromI1"
  return_type: "I"
  parameter {
    name: ""
    type: "B"
  }
  parameter {
    name: ""
    type: "*US;"
  }
}
function {
  name: "VarUI2FromUI4"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*US;"
  }
}
function {
  name: "VarUI2FromUI8"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*US;"
  }
}
function {
  name: "VarUI2FromCy"
  return_type: "I"
  parameter {
    name: ""
    type: "Runion tagCY;"
  }
  parameter {
    name: ""
    type: "*US;"
  }
}
function {
  name: "VarUI2FromDec"
  return_type: "I"
  parameter {
    name: ""
    type: "*RtagDEC;;"
  }
  parameter {
    name: ""
    type: "*US;"
  }
}
function {
  name: "VarUI2FromDisp"
  return_type: "I"
  parameter {
    name: ""
    type: "*RIDispatch;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*US;"
  }
}
function {
  name: "VarUI4FromStr"
  return_type: "I"
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "VarUI4FromUI1"
  return_type: "I"
  parameter {
    name: ""
    type: "UB"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "VarUI4FromI2"
  return_type: "I"
  parameter {
    name: ""
    type: "S"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "VarUI4FromI4"
  return_type: "I"
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "VarUI4FromI8"
  return_type: "I"
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "VarUI4FromR4"
  return_type: "I"
  parameter {
    name: ""
    type: "F"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "VarUI4FromR8"
  return_type: "I"
  parameter {
    name: ""
    type: "D"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "VarUI4FromDate"
  return_type: "I"
  parameter {
    name: ""
    type: "D"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "VarUI4FromBool"
  return_type: "I"
  parameter {
    name: ""
    type: "S"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "VarUI4FromI1"
  return_type: "I"
  parameter {
    name: ""
    type: "B"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "VarUI4FromUI2"
  return_type: "I"
  parameter {
    name: ""
    type: "US"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "VarUI4FromUI8"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "VarUI4FromCy"
  return_type: "I"
  parameter {
    name: ""
    type: "Runion tagCY;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "VarUI4FromDec"
  return_type: "I"
  parameter {
    name: ""
    type: "*RtagDEC;;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "VarUI4FromDisp"
  return_type: "I"
  parameter {
    name: ""
    type: "*RIDispatch;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "VarUI8FromUI1"
  return_type: "I"
  parameter {
    name: ""
    type: "UB"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "VarUI8FromI2"
  return_type: "I"
  parameter {
    name: ""
    type: "S"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "VarUI8FromI4"
  return_type: "I"
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "VarUI8FromI8"
  return_type: "I"
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "VarUI8FromR4"
  return_type: "I"
  parameter {
    name: ""
    type: "F"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "VarUI8FromR8"
  return_type: "I"
  parameter {
    name: ""
    type: "D"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "VarUI8FromDate"
  return_type: "I"
  parameter {
    name: ""
    type: "D"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "VarUI8FromStr"
  return_type: "I"
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "VarUI8FromBool"
  return_type: "I"
  parameter {
    name: ""
    type: "S"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "VarUI8FromI1"
  return_type: "I"
  parameter {
    name: ""
    type: "B"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "VarUI8FromUI2"
  return_type: "I"
  parameter {
    name: ""
    type: "US"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "VarUI8FromUI4"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "VarUI8FromDec"
  return_type: "I"
  parameter {
    name: ""
    type: "*RtagDEC;;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "VarUI8FromInt"
  return_type: "I"
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "VarUI8FromCy"
  return_type: "I"
  parameter {
    name: ""
    type: "Runion tagCY;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "VarUI8FromDisp"
  return_type: "I"
  parameter {
    name: ""
    type: "*RIDispatch;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "VarDecFromUI1"
  return_type: "I"
  parameter {
    name: ""
    type: "UB"
  }
  parameter {
    name: ""
    type: "*RtagDEC;;"
  }
}
function {
  name: "VarDecFromI2"
  return_type: "I"
  parameter {
    name: ""
    type: "S"
  }
  parameter {
    name: ""
    type: "*RtagDEC;;"
  }
}
function {
  name: "VarDecFromI4"
  return_type: "I"
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*RtagDEC;;"
  }
}
function {
  name: "VarDecFromI8"
  return_type: "I"
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*RtagDEC;;"
  }
}
function {
  name: "VarDecFromR4"
  return_type: "I"
  parameter {
    name: ""
    type: "F"
  }
  parameter {
    name: ""
    type: "*RtagDEC;;"
  }
}
function {
  name: "VarDecFromR8"
  return_type: "I"
  parameter {
    name: ""
    type: "D"
  }
  parameter {
    name: ""
    type: "*RtagDEC;;"
  }
}
function {
  name: "VarDecFromDate"
  return_type: "I"
  parameter {
    name: ""
    type: "D"
  }
  parameter {
    name: ""
    type: "*RtagDEC;;"
  }
}
function {
  name: "VarDecFromStr"
  return_type: "I"
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*RtagDEC;;"
  }
}
function {
  name: "VarDecFromBool"
  return_type: "I"
  parameter {
    name: ""
    type: "S"
  }
  parameter {
    name: ""
    type: "*RtagDEC;;"
  }
}
function {
  name: "VarDecFromI1"
  return_type: "I"
  parameter {
    name: ""
    type: "B"
  }
  parameter {
    name: ""
    type: "*RtagDEC;;"
  }
}
function {
  name: "VarDecFromUI2"
  return_type: "I"
  parameter {
    name: ""
    type: "US"
  }
  parameter {
    name: ""
    type: "*RtagDEC;;"
  }
}
function {
  name: "VarDecFromUI4"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*RtagDEC;;"
  }
}
function {
  name: "VarDecFromUI8"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*RtagDEC;;"
  }
}
function {
  name: "VarDecFromCy"
  return_type: "I"
  parameter {
    name: ""
    type: "Runion tagCY;"
  }
  parameter {
    name: ""
    type: "*RtagDEC;;"
  }
}
function {
  name: "VarDecFromDisp"
  return_type: "I"
  parameter {
    name: ""
    type: "*RIDispatch;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*RtagDEC;;"
  }
}
function {
  name: "VarR4CmpR8"
  return_type: "I"
  parameter {
    name: ""
    type: "F"
  }
  parameter {
    name: ""
    type: "D"
  }
}
function {
  name: "VarR8Pow"
  return_type: "I"
  parameter {
    name: ""
    type: "D"
  }
  parameter {
    name: ""
    type: "D"
  }
  parameter {
    name: ""
    type: "*D;"
  }
}
function {
  name: "VarR8Round"
  return_type: "I"
  parameter {
    name: ""
    type: "D"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*D;"
  }
}
function {
  name: "VarDecAbs"
  return_type: "I"
  parameter {
    name: ""
    type: "*cRtagDEC;;"
  }
  parameter {
    name: ""
    type: "*RtagDEC;;"
  }
}
function {
  name: "VarDecAdd"
  return_type: "I"
  parameter {
    name: ""
    type: "*cRtagDEC;;"
  }
  parameter {
    name: ""
    type: "*cRtagDEC;;"
  }
  parameter {
    name: ""
    type: "*RtagDEC;;"
  }
}
function {
  name: "VarDecCmp"
  return_type: "I"
  parameter {
    name: ""
    type: "*cRtagDEC;;"
  }
  parameter {
    name: ""
    type: "*cRtagDEC;;"
  }
}
function {
  name: "VarDecCmpR8"
  return_type: "I"
  parameter {
    name: ""
    type: "*cRtagDEC;;"
  }
  parameter {
    name: ""
    type: "D"
  }
}
function {
  name: "VarDecDiv"
  return_type: "I"
  parameter {
    name: ""
    type: "*cRtagDEC;;"
  }
  parameter {
    name: ""
    type: "*cRtagDEC;;"
  }
  parameter {
    name: ""
    type: "*RtagDEC;;"
  }
}
function {
  name: "VarDecFix"
  return_type: "I"
  parameter {
    name: ""
    type: "*cRtagDEC;;"
  }
  parameter {
    name: ""
    type: "*RtagDEC;;"
  }
}
function {
  name: "VarDecInt"
  return_type: "I"
  parameter {
    name: ""
    type: "*cRtagDEC;;"
  }
  parameter {
    name: ""
    type: "*RtagDEC;;"
  }
}
function {
  name: "VarDecMul"
  return_type: "I"
  parameter {
    name: ""
    type: "*cRtagDEC;;"
  }
  parameter {
    name: ""
    type: "*cRtagDEC;;"
  }
  parameter {
    name: ""
    type: "*RtagDEC;;"
  }
}
function {
  name: "VarDecNeg"
  return_type: "I"
  parameter {
    name: ""
    type: "*cRtagDEC;;"
  }
  parameter {
    name: ""
    type: "*RtagDEC;;"
  }
}
function {
  name: "VarDecRound"
  return_type: "I"
  parameter {
    name: ""
    type: "*cRtagDEC;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*RtagDEC;;"
  }
}
function {
  name: "VarDecSub"
  return_type: "I"
  parameter {
    name: ""
    type: "*cRtagDEC;;"
  }
  parameter {
    name: ""
    type: "*cRtagDEC;;"
  }
  parameter {
    name: ""
    type: "*RtagDEC;;"
  }
}
function {
  name: "VarCyAbs"
  return_type: "I"
  parameter {
    name: ""
    type: "cRunion tagCY;"
  }
  parameter {
    name: ""
    type: "*Runion tagCY;;"
  }
}
function {
  name: "VarCyAdd"
  return_type: "I"
  parameter {
    name: ""
    type: "cRunion tagCY;"
  }
  parameter {
    name: ""
    type: "cRunion tagCY;"
  }
  parameter {
    name: ""
    type: "*Runion tagCY;;"
  }
}
function {
  name: "VarCyCmp"
  return_type: "I"
  parameter {
    name: ""
    type: "cRunion tagCY;"
  }
  parameter {
    name: ""
    type: "cRunion tagCY;"
  }
}
function {
  name: "VarCyCmpR8"
  return_type: "I"
  parameter {
    name: ""
    type: "cRunion tagCY;"
  }
  parameter {
    name: ""
    type: "D"
  }
}
function {
  name: "VarCyFix"
  return_type: "I"
  parameter {
    name: ""
    type: "cRunion tagCY;"
  }
  parameter {
    name: ""
    type: "*Runion tagCY;;"
  }
}
function {
  name: "VarCyInt"
  return_type: "I"
  parameter {
    name: ""
    type: "cRunion tagCY;"
  }
  parameter {
    name: ""
    type: "*Runion tagCY;;"
  }
}
function {
  name: "VarCyMul"
  return_type: "I"
  parameter {
    name: ""
    type: "cRunion tagCY;"
  }
  parameter {
    name: ""
    type: "Runion tagCY;"
  }
  parameter {
    name: ""
    type: "*Runion tagCY;;"
  }
}
function {
  name: "VarCyMulI4"
  return_type: "I"
  parameter {
    name: ""
    type: "cRunion tagCY;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*Runion tagCY;;"
  }
}
function {
  name: "VarCyMulI8"
  return_type: "I"
  parameter {
    name: ""
    type: "cRunion tagCY;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*Runion tagCY;;"
  }
}
function {
  name: "VarCyNeg"
  return_type: "I"
  parameter {
    name: ""
    type: "cRunion tagCY;"
  }
  parameter {
    name: ""
    type: "*Runion tagCY;;"
  }
}
function {
  name: "VarCyRound"
  return_type: "I"
  parameter {
    name: ""
    type: "cRunion tagCY;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*Runion tagCY;;"
  }
}
function {
  name: "VarCySub"
  return_type: "I"
  parameter {
    name: ""
    type: "cRunion tagCY;"
  }
  parameter {
    name: ""
    type: "cRunion tagCY;"
  }
  parameter {
    name: ""
    type: "*Runion tagCY;;"
  }
}
function {
  name: "VarAdd"
  return_type: "I"
  parameter {
    name: ""
    type: "*RtagVARIANT;;"
  }
  parameter {
    name: ""
    type: "*RtagVARIANT;;"
  }
  parameter {
    name: ""
    type: "*RtagVARIANT;;"
  }
}
function {
  name: "VarAnd"
  return_type: "I"
  parameter {
    name: ""
    type: "*RtagVARIANT;;"
  }
  parameter {
    name: ""
    type: "*RtagVARIANT;;"
  }
  parameter {
    name: ""
    type: "*RtagVARIANT;;"
  }
}
function {
  name: "VarCat"
  return_type: "I"
  parameter {
    name: ""
    type: "*RtagVARIANT;;"
  }
  parameter {
    name: ""
    type: "*RtagVARIANT;;"
  }
  parameter {
    name: ""
    type: "*RtagVARIANT;;"
  }
}
function {
  name: "VarDiv"
  return_type: "I"
  parameter {
    name: ""
    type: "*RtagVARIANT;;"
  }
  parameter {
    name: ""
    type: "*RtagVARIANT;;"
  }
  parameter {
    name: ""
    type: "*RtagVARIANT;;"
  }
}
function {
  name: "VarEqv"
  return_type: "I"
  parameter {
    name: ""
    type: "*RtagVARIANT;;"
  }
  parameter {
    name: ""
    type: "*RtagVARIANT;;"
  }
  parameter {
    name: ""
    type: "*RtagVARIANT;;"
  }
}
function {
  name: "VarIdiv"
  return_type: "I"
  parameter {
    name: ""
    type: "*RtagVARIANT;;"
  }
  parameter {
    name: ""
    type: "*RtagVARIANT;;"
  }
  parameter {
    name: ""
    type: "*RtagVARIANT;;"
  }
}
function {
  name: "VarImp"
  return_type: "I"
  parameter {
    name: ""
    type: "*RtagVARIANT;;"
  }
  parameter {
    name: ""
    type: "*RtagVARIANT;;"
  }
  parameter {
    name: ""
    type: "*RtagVARIANT;;"
  }
}
function {
  name: "VarMod"
  return_type: "I"
  parameter {
    name: ""
    type: "*RtagVARIANT;;"
  }
  parameter {
    name: ""
    type: "*RtagVARIANT;;"
  }
  parameter {
    name: ""
    type: "*RtagVARIANT;;"
  }
}
function {
  name: "VarMul"
  return_type: "I"
  parameter {
    name: ""
    type: "*RtagVARIANT;;"
  }
  parameter {
    name: ""
    type: "*RtagVARIANT;;"
  }
  parameter {
    name: ""
    type: "*RtagVARIANT;;"
  }
}
function {
  name: "VarOr"
  return_type: "I"
  parameter {
    name: ""
    type: "*RtagVARIANT;;"
  }
  parameter {
    name: ""
    type: "*RtagVARIANT;;"
  }
  parameter {
    name: ""
    type: "*RtagVARIANT;;"
  }
}
function {
  name: "VarPow"
  return_type: "I"
  parameter {
    name: ""
    type: "*RtagVARIANT;;"
  }
  parameter {
    name: ""
    type: "*RtagVARIANT;;"
  }
  parameter {
    name: ""
    type: "*RtagVARIANT;;"
  }
}
function {
  name: "VarSub"
  return_type: "I"
  parameter {
    name: ""
    type: "*RtagVARIANT;;"
  }
  parameter {
    name: ""
    type: "*RtagVARIANT;;"
  }
  parameter {
    name: ""
    type: "*RtagVARIANT;;"
  }
}
function {
  name: "VarXor"
  return_type: "I"
  parameter {
    name: ""
    type: "*RtagVARIANT;;"
  }
  parameter {
    name: ""
    type: "*RtagVARIANT;;"
  }
  parameter {
    name: ""
    type: "*RtagVARIANT;;"
  }
}
function {
  name: "VarAbs"
  return_type: "I"
  parameter {
    name: ""
    type: "*RtagVARIANT;;"
  }
  parameter {
    name: ""
    type: "*RtagVARIANT;;"
  }
}
function {
  name: "VarFix"
  return_type: "I"
  parameter {
    name: ""
    type: "*RtagVARIANT;;"
  }
  parameter {
    name: ""
    type: "*RtagVARIANT;;"
  }
}
function {
  name: "VarInt"
  return_type: "I"
  parameter {
    name: ""
    type: "*RtagVARIANT;;"
  }
  parameter {
    name: ""
    type: "*RtagVARIANT;;"
  }
}
function {
  name: "VarNeg"
  return_type: "I"
  parameter {
    name: ""
    type: "*RtagVARIANT;;"
  }
  parameter {
    name: ""
    type: "*RtagVARIANT;;"
  }
}
function {
  name: "VarNot"
  return_type: "I"
  parameter {
    name: ""
    type: "*RtagVARIANT;;"
  }
  parameter {
    name: ""
    type: "*RtagVARIANT;;"
  }
}
function {
  name: "VarRound"
  return_type: "I"
  parameter {
    name: ""
    type: "*RtagVARIANT;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "*RtagVARIANT;;"
  }
}
function {
  name: "VarCmp"
  return_type: "I"
  parameter {
    name: ""
    type: "*RtagVARIANT;;"
  }
  parameter {
    name: ""
    type: "*RtagVARIANT;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "VarBstrCmp"
  return_type: "I"
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "VarBstrCat"
  return_type: "I"
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "**US;;"
  }
}
function {
  name: "VarParseNumFromStr"
  return_type: "I"
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*RNUMPARSE;;"
  }
  parameter {
    name: ""
    type: "*UB;"
  }
}
function {
  name: "VarNumFromParseNum"
  return_type: "I"
  parameter {
    name: ""
    type: "*RNUMPARSE;;"
  }
  parameter {
    name: ""
    type: "*UB;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*RtagVARIANT;;"
  }
}
function {
  name: "DosDateTimeToVariantTime"
  return_type: "I"
  parameter {
    name: ""
    type: "US"
  }
  parameter {
    name: ""
    type: "US"
  }
  parameter {
    name: ""
    type: "*D;"
  }
}
function {
  name: "VariantTimeToDosDateTime"
  return_type: "I"
  parameter {
    name: ""
    type: "D"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "*US;"
  }
}
function {
  name: "VariantTimeToSystemTime"
  return_type: "I"
  parameter {
    name: ""
    type: "D"
  }
  parameter {
    name: ""
    type: "*R_SYSTEMTIME;;"
  }
}
function {
  name: "SystemTimeToVariantTime"
  return_type: "I"
  parameter {
    name: ""
    type: "*R_SYSTEMTIME;;"
  }
  parameter {
    name: ""
    type: "*D;"
  }
}
function {
  name: "VarDateFromUdate"
  return_type: "I"
  parameter {
    name: ""
    type: "*RUDATE;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*D;"
  }
}
function {
  name: "VarDateFromUdateEx"
  return_type: "I"
  parameter {
    name: ""
    type: "*RUDATE;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*D;"
  }
}
function {
  name: "VarUdateFromDate"
  return_type: "I"
  parameter {
    name: ""
    type: "D"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*RUDATE;;"
  }
}
function {
  name: "VarWeekdayName"
  return_type: "I"
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "**US;;"
  }
}
function {
  name: "VarMonthName"
  return_type: "I"
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "**US;;"
  }
}
function {
  name: "GetAltMonthNames"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "***US;;;"
  }
}
function {
  name: "VarFormat"
  return_type: "I"
  parameter {
    name: ""
    type: "*RtagVARIANT;;"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "**US;;"
  }
}
function {
  name: "VarFormatCurrency"
  return_type: "I"
  parameter {
    name: ""
    type: "*RtagVARIANT;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "**US;;"
  }
}
function {
  name: "VarFormatDateTime"
  return_type: "I"
  parameter {
    name: ""
    type: "*RtagVARIANT;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "**US;;"
  }
}
function {
  name: "VarFormatNumber"
  return_type: "I"
  parameter {
    name: ""
    type: "*RtagVARIANT;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "**US;;"
  }
}
function {
  name: "VarFormatPercent"
  return_type: "I"
  parameter {
    name: ""
    type: "*RtagVARIANT;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "**US;;"
  }
}
function {
  name: "VarFormatFromTokens"
  return_type: "I"
  parameter {
    name: ""
    type: "*RtagVARIANT;;"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "*UB;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "**US;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "VarTokenizeFormatString"
  return_type: "I"
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "*UB;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*I;"
  }
}
function {
  name: "DispGetParam"
  return_type: "I"
  parameter {
    name: ""
    type: "*RtagDISPPARAMS;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "US"
  }
  parameter {
    name: ""
    type: "*RtagVARIANT;;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "DispGetIDsOfNames"
  return_type: "I"
  parameter {
    name: ""
    type: "*RITypeInfo;;"
  }
  parameter {
    name: ""
    type: "**US;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*I;"
  }
}
function {
  name: "DispInvoke"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*RITypeInfo;;"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "US"
  }
  parameter {
    name: ""
    type: "*RtagDISPPARAMS;;"
  }
  parameter {
    name: ""
    type: "*RtagVARIANT;;"
  }
  parameter {
    name: ""
    type: "*RtagEXCEPINFO;;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "CreateDispTypeInfo"
  return_type: "I"
  parameter {
    name: ""
    type: "*RtagINTERFACEDATA;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "**RITypeInfo;;;"
  }
}
function {
  name: "CreateStdDispatch"
  return_type: "I"
  parameter {
    name: ""
    type: "*RIUnknown;;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*RITypeInfo;;"
  }
  parameter {
    name: ""
    type: "**RIUnknown;;;"
  }
}
function {
  name: "DispCallFunc"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "X(Enum.enum tagCALLCONV)"
  }
  parameter {
    name: ""
    type: "US"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "**RtagVARIANT;;;"
  }
  parameter {
    name: ""
    type: "*RtagVARIANT;;"
  }
}
function {
  name: "LHashValOfNameSysA"
  return_type: "UI"
  parameter {
    name: ""
    type: "X(Enum.enum tagSYSKIND)"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "LHashValOfNameSys"
  return_type: "UI"
  parameter {
    name: ""
    type: "X(Enum.enum tagSYSKIND)"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
}
function {
  name: "CreateTypeLib"
  return_type: "I"
  parameter {
    name: ""
    type: "X(Enum.enum tagSYSKIND)"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "**RICreateTypeLib;;;"
  }
}
function {
  name: "CreateTypeLib2"
  return_type: "I"
  parameter {
    name: ""
    type: "X(Enum.enum tagSYSKIND)"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "**RICreateTypeLib2;;;"
  }
}
function {
  name: "LoadRegTypeLib"
  return_type: "I"
  parameter {
    name: ""
    type: "c*cR_GUID;;"
  }
  parameter {
    name: ""
    type: "US"
  }
  parameter {
    name: ""
    type: "US"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "**RITypeLib;;;"
  }
}
function {
  name: "LoadTypeLib"
  return_type: "I"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "**RITypeLib;;;"
  }
}
function {
  name: "LoadTypeLibEx"
  return_type: "I"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "X(Enum.enum tagREGKIND)"
  }
  parameter {
    name: ""
    type: "**RITypeLib;;;"
  }
}
function {
  name: "QueryPathOfRegTypeLib"
  return_type: "I"
  parameter {
    name: ""
    type: "c*cR_GUID;;"
  }
  parameter {
    name: ""
    type: "US"
  }
  parameter {
    name: ""
    type: "US"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "**US;;"
  }
}
function {
  name: "RegisterTypeLib"
  return_type: "I"
  parameter {
    name: ""
    type: "*RITypeLib;;"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "*US;"
  }
}
function {
  name: "UnRegisterTypeLib"
  return_type: "I"
  parameter {
    name: ""
    type: "c*cR_GUID;;"
  }
  parameter {
    name: ""
    type: "US"
  }
  parameter {
    name: ""
    type: "US"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "X(Enum.enum tagSYSKIND)"
  }
}
function {
  name: "RegisterTypeLibForUser"
  return_type: "I"
  parameter {
    name: ""
    type: "*RITypeLib;;"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "*US;"
  }
}
function {
  name: "UnRegisterTypeLibForUser"
  return_type: "I"
  parameter {
    name: ""
    type: "c*cR_GUID;;"
  }
  parameter {
    name: ""
    type: "US"
  }
  parameter {
    name: ""
    type: "US"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "X(Enum.enum tagSYSKIND)"
  }
}
function {
  name: "ClearCustData"
  return_type: "V"
  parameter {
    name: ""
    type: "*RtagCUSTDATA;;"
  }
}
function {
  name: "RegisterDragDrop"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*RIDropTarget;;"
  }
}
function {
  name: "RevokeDragDrop"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
}
function {
  name: "DoDragDrop"
  return_type: "I"
  parameter {
    name: ""
    type: "*RIDataObject;;"
  }
  parameter {
    name: ""
    type: "*RIDropSource;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "OleLoadFromStream"
  return_type: "I"
  parameter {
    name: "pStm"
    type: "*RIStream;;"
  }
  parameter {
    name: "iidInterface"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "ppvObj"
    type: "**V;;"
  }
}
function {
  name: "OleSaveToStream"
  return_type: "I"
  parameter {
    name: "pPStm"
    type: "*RIPersistStream;;"
  }
  parameter {
    name: "pStm"
    type: "*RIStream;;"
  }
}
function {
  name: "OleCreateMenuDescriptor"
  return_type: "*V;"
  parameter {
    name: "hmenuCombined"
    type: "*RHMENU__;;"
  }
  parameter {
    name: "lpMenuWidths"
    type: "*RtagOleMenuGroupWidths;;"
  }
}
function {
  name: "OleDestroyMenuDescriptor"
  return_type: "I"
  parameter {
    name: "hmenuDescriptor"
    type: "*V;"
  }
}
function {
  name: "OleSetMenuDescriptor"
  return_type: "I"
  parameter {
    name: "hmenuDescriptor"
    type: "*V;"
  }
  parameter {
    name: "hwndFrame"
    type: "*RHWND__;;"
  }
  parameter {
    name: "hwndActiveObject"
    type: "*RHWND__;;"
  }
  parameter {
    name: "lpFrame"
    type: "*RIOleInPlaceFrame;;"
  }
  parameter {
    name: "lpActiveObject"
    type: "*RIOleInPlaceActiveObject;;"
  }
}
function {
  name: "WriteClassStg"
  return_type: "I"
  parameter {
    name: "pstg"
    type: "*RIStorage;;"
  }
  parameter {
    name: "rclsid"
    type: "c*cR_GUID;;"
  }
}
function {
  name: "ReadClassStg"
  return_type: "I"
  parameter {
    name: "pstg"
    type: "*RIStorage;;"
  }
  parameter {
    name: "pclsid"
    type: "*R_GUID;;"
  }
}
function {
  name: "WriteClassStm"
  return_type: "I"
  parameter {
    name: "pStm"
    type: "*RIStream;;"
  }
  parameter {
    name: "rclsid"
    type: "c*cR_GUID;;"
  }
}
function {
  name: "ReadClassStm"
  return_type: "I"
  parameter {
    name: "pStm"
    type: "*RIStream;;"
  }
  parameter {
    name: "pclsid"
    type: "*R_GUID;;"
  }
}
function {
  name: "OleSave"
  return_type: "I"
  parameter {
    name: "pPS"
    type: "*RIPersistStorage;;"
  }
  parameter {
    name: "pStg"
    type: "*RIStorage;;"
  }
  parameter {
    name: "fSameAsLoad"
    type: "I"
  }
}
function {
  name: "OleRegGetUserType"
  return_type: "I"
  parameter {
    name: "clsid"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "dwFormOfType"
    type: "UI"
  }
  parameter {
    name: "pszUserType"
    type: "**US;;"
  }
}
function {
  name: "OleRegGetMiscStatus"
  return_type: "I"
  parameter {
    name: "clsid"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "dwAspect"
    type: "UI"
  }
  parameter {
    name: "pdwStatus"
    type: "*UI;"
  }
}
function {
  name: "OleRegEnumFormatEtc"
  return_type: "I"
  parameter {
    name: "clsid"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "dwDirection"
    type: "UI"
  }
  parameter {
    name: "ppenumFormatetc"
    type: "**RIEnumFORMATETC;;;"
  }
}
function {
  name: "CreateStreamOnHGlobal"
  return_type: "I"
  parameter {
    name: "hGlobal"
    type: "*V;"
  }
  parameter {
    name: "fDeleteOnRelease"
    type: "I"
  }
  parameter {
    name: "ppstm"
    type: "**RIStream;;;"
  }
}
function {
  name: "GetHGlobalFromStream"
  return_type: "I"
  parameter {
    name: "pstm"
    type: "*RIStream;;"
  }
  parameter {
    name: "phglobal"
    type: "**V;;"
  }
}
function {
  name: "OleRegEnumVerbs"
  return_type: "I"
  parameter {
    name: "clsid"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "ppenum"
    type: "**RIEnumOLEVERB;;;"
  }
}
function {
  name: "OleIsRunning"
  return_type: "I"
  parameter {
    name: "pObject"
    type: "*RIOleObject;;"
  }
}
function {
  name: "OleCreateLinkFromData"
  return_type: "I"
  parameter {
    name: "pSrcDataObj"
    type: "*RIDataObject;;"
  }
  parameter {
    name: "riid"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "renderopt"
    type: "UI"
  }
  parameter {
    name: "pFormatEtc"
    type: "*RtagFORMATETC;;"
  }
  parameter {
    name: "pClientSite"
    type: "*RIOleClientSite;;"
  }
  parameter {
    name: "pStg"
    type: "*RIStorage;;"
  }
  parameter {
    name: "ppvObj"
    type: "**V;;"
  }
}
function {
  name: "OleSetContainedObject"
  return_type: "I"
  parameter {
    name: "pUnknown"
    type: "*RIUnknown;;"
  }
  parameter {
    name: "fContained"
    type: "I"
  }
}
function {
  name: "OleNoteObjectVisible"
  return_type: "I"
  parameter {
    name: "pUnknown"
    type: "*RIUnknown;;"
  }
  parameter {
    name: "fVisible"
    type: "I"
  }
}
function {
  name: "OleQueryLinkFromData"
  return_type: "I"
  parameter {
    name: "pSrcDataObject"
    type: "*RIDataObject;;"
  }
}
function {
  name: "OleQueryCreateFromData"
  return_type: "I"
  parameter {
    name: "pSrcDataObject"
    type: "*RIDataObject;;"
  }
}
function {
  name: "OleRun"
  return_type: "I"
  parameter {
    name: "pUnknown"
    type: "*RIUnknown;;"
  }
}
function {
  name: "OleDraw"
  return_type: "I"
  parameter {
    name: "pUnknown"
    type: "*RIUnknown;;"
  }
  parameter {
    name: "dwAspect"
    type: "UI"
  }
  parameter {
    name: "hdcDraw"
    type: "*RHDC__;;"
  }
  parameter {
    name: "lprcBounds"
    type: "*cRtagRECT;;"
  }
}
function {
  name: "ReleaseStgMedium"
  return_type: "V"
  parameter {
    name: ""
    type: "*RtagSTGMEDIUM;;"
  }
}
function {
  name: "OleGetClipboard"
  return_type: "I"
  parameter {
    name: "ppDataObj"
    type: "**RIDataObject;;;"
  }
}
function {
  name: "OleIsCurrentClipboard"
  return_type: "I"
  parameter {
    name: ""
    type: "*RIDataObject;;"
  }
}
function {
  name: "OleSetClipboard"
  return_type: "I"
  parameter {
    name: ""
    type: "*RIDataObject;;"
  }
}
function {
  name: "OleCreateStaticFromData"
  return_type: "I"
  parameter {
    name: "pSrcDataObj"
    type: "*RIDataObject;;"
  }
  parameter {
    name: "iid"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "renderopt"
    type: "UI"
  }
  parameter {
    name: "pFormatEtc"
    type: "*RtagFORMATETC;;"
  }
  parameter {
    name: "pClientSite"
    type: "*RIOleClientSite;;"
  }
  parameter {
    name: "pStg"
    type: "*RIStorage;;"
  }
  parameter {
    name: "ppvObj"
    type: "**V;;"
  }
}
function {
  name: "ReadFmtUserTypeStg"
  return_type: "I"
  parameter {
    name: "pstg"
    type: "*RIStorage;;"
  }
  parameter {
    name: "pcf"
    type: "*US;"
  }
  parameter {
    name: "lplpszUserType"
    type: "**US;;"
  }
}
function {
  name: "OleLoad"
  return_type: "I"
  parameter {
    name: "pStg"
    type: "*RIStorage;;"
  }
  parameter {
    name: "riid"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "pClientSite"
    type: "*RIOleClientSite;;"
  }
  parameter {
    name: "ppvObj"
    type: "**V;;"
  }
}
function {
  name: "GetHGlobalFromILockBytes"
  return_type: "I"
  parameter {
    name: "plkbyt"
    type: "*RILockBytes;;"
  }
  parameter {
    name: "phglobal"
    type: "**V;;"
  }
}
function {
  name: "CreateILockBytesOnHGlobal"
  return_type: "I"
  parameter {
    name: "hGlobal"
    type: "*V;"
  }
  parameter {
    name: "fDeleteOnRelease"
    type: "I"
  }
  parameter {
    name: "pplkbyt"
    type: "**RILockBytes;;;"
  }
}
function {
  name: "CreateDataAdviseHolder"
  return_type: "I"
  parameter {
    name: "ppDAHolder"
    type: "**RIDataAdviseHolder;;;"
  }
}
function {
  name: "OleGetIconOfClass"
  return_type: "*V;"
  parameter {
    name: "rclsid"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "lpszLabel"
    type: "*US;"
  }
  parameter {
    name: "fUseTypeAsLabel"
    type: "I"
  }
}
function {
  name: "OleGetIconOfFile"
  return_type: "*V;"
  parameter {
    name: "lpszPath"
    type: "*US;"
  }
  parameter {
    name: "fUseFileAsLabel"
    type: "I"
  }
}
function {
  name: "OleMetafilePictFromIconAndLabel"
  return_type: "*V;"
  parameter {
    name: "hIcon"
    type: "*RHICON__;;"
  }
  parameter {
    name: "lpszLabel"
    type: "*US;"
  }
  parameter {
    name: "lpszSourceFile"
    type: "*US;"
  }
  parameter {
    name: "iIconIndex"
    type: "UI"
  }
}
function {
  name: "OleLockRunning"
  return_type: "I"
  parameter {
    name: "pUnknown"
    type: "*RIUnknown;;"
  }
  parameter {
    name: "fLock"
    type: "I"
  }
  parameter {
    name: "fLastUnlockCloses"
    type: "I"
  }
}
function {
  name: "OleCreateFromFile"
  return_type: "I"
  parameter {
    name: "rclsid"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "lpszFileName"
    type: "*cUS;"
  }
  parameter {
    name: "riid"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "renderopt"
    type: "UI"
  }
  parameter {
    name: "lpFormatEtc"
    type: "*RtagFORMATETC;;"
  }
  parameter {
    name: "pClientSite"
    type: "*RIOleClientSite;;"
  }
  parameter {
    name: "pStg"
    type: "*RIStorage;;"
  }
  parameter {
    name: "ppvObj"
    type: "**V;;"
  }
}
function {
  name: "OleCreateLink"
  return_type: "I"
  parameter {
    name: "pmkLinkSrc"
    type: "*RIMoniker;;"
  }
  parameter {
    name: "riid"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "renderopt"
    type: "UI"
  }
  parameter {
    name: "lpFormatEtc"
    type: "*RtagFORMATETC;;"
  }
  parameter {
    name: "pClientSite"
    type: "*RIOleClientSite;;"
  }
  parameter {
    name: "pStg"
    type: "*RIStorage;;"
  }
  parameter {
    name: "ppvObj"
    type: "**V;;"
  }
}
function {
  name: "OleCreate"
  return_type: "I"
  parameter {
    name: "rclsid"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "riid"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "renderopt"
    type: "UI"
  }
  parameter {
    name: "pFormatEtc"
    type: "*RtagFORMATETC;;"
  }
  parameter {
    name: "pClientSite"
    type: "*RIOleClientSite;;"
  }
  parameter {
    name: "pStg"
    type: "*RIStorage;;"
  }
  parameter {
    name: "ppvObj"
    type: "**V;;"
  }
}
function {
  name: "OleFlushClipboard"
  return_type: "I"
}
function {
  name: "GetConvertStg"
  return_type: "I"
  parameter {
    name: "pStg"
    type: "*RIStorage;;"
  }
}
function {
  name: "SetConvertStg"
  return_type: "I"
  parameter {
    name: "pStg"
    type: "*RIStorage;;"
  }
  parameter {
    name: "fConvert"
    type: "I"
  }
}
function {
  name: "IsAccelerator"
  return_type: "I"
  parameter {
    name: "hAccel"
    type: "*RHACCEL__;;"
  }
  parameter {
    name: "cAccelEntries"
    type: "I"
  }
  parameter {
    name: "lpMsg"
    type: "*RtagMSG;;"
  }
  parameter {
    name: "lpwCmd"
    type: "*US;"
  }
}
function {
  name: "OleCreateLinkToFile"
  return_type: "I"
  parameter {
    name: "lpszFileName"
    type: "*cUS;"
  }
  parameter {
    name: "riid"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "renderopt"
    type: "UI"
  }
  parameter {
    name: "lpFormatEtc"
    type: "*RtagFORMATETC;;"
  }
  parameter {
    name: "pClientSite"
    type: "*RIOleClientSite;;"
  }
  parameter {
    name: "pStg"
    type: "*RIStorage;;"
  }
  parameter {
    name: "ppvObj"
    type: "**V;;"
  }
}
function {
  name: "OleDuplicateData"
  return_type: "*V;"
  parameter {
    name: "hSrc"
    type: "*V;"
  }
  parameter {
    name: "cfFormat"
    type: "US"
  }
  parameter {
    name: "uiFlags"
    type: "UI"
  }
}
function {
  name: "WriteFmtUserTypeStg"
  return_type: "I"
  parameter {
    name: "pstg"
    type: "*RIStorage;;"
  }
  parameter {
    name: "cf"
    type: "US"
  }
  parameter {
    name: "lpszUserType"
    type: "*US;"
  }
}
function {
  name: "OleTranslateAccelerator"
  return_type: "I"
  parameter {
    name: "lpFrame"
    type: "*RIOleInPlaceFrame;;"
  }
  parameter {
    name: "lpFrameInfo"
    type: "*RtagOleInPlaceFrameInfo;;"
  }
  parameter {
    name: "lpmsg"
    type: "*RtagMSG;;"
  }
}
function {
  name: "OleCreateFromData"
  return_type: "I"
  parameter {
    name: "pSrcDataObj"
    type: "*RIDataObject;;"
  }
  parameter {
    name: "riid"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "renderopt"
    type: "UI"
  }
  parameter {
    name: "pFormatEtc"
    type: "*RtagFORMATETC;;"
  }
  parameter {
    name: "pClientSite"
    type: "*RIOleClientSite;;"
  }
  parameter {
    name: "pStg"
    type: "*RIStorage;;"
  }
  parameter {
    name: "ppvObj"
    type: "**V;;"
  }
}
function {
  name: "OleCreateFromDataEx"
  return_type: "I"
  parameter {
    name: "pSrcDataObj"
    type: "*RIDataObject;;"
  }
  parameter {
    name: "riid"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "dwFlags"
    type: "UI"
  }
  parameter {
    name: "renderopt"
    type: "UI"
  }
  parameter {
    name: "num_formats"
    type: "UI"
  }
  parameter {
    name: "adv_flags"
    type: "*UI;"
  }
  parameter {
    name: "fmts"
    type: "*RtagFORMATETC;;"
  }
  parameter {
    name: "sink"
    type: "*RIAdviseSink;;"
  }
  parameter {
    name: "conns"
    type: "*UI;"
  }
  parameter {
    name: "pClientSite"
    type: "*RIOleClientSite;;"
  }
  parameter {
    name: "pStg"
    type: "*RIStorage;;"
  }
  parameter {
    name: "ppvObj"
    type: "**V;;"
  }
}
function {
  name: "OleCreateDefaultHandler"
  return_type: "I"
  parameter {
    name: "clsid"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "pUnkOuter"
    type: "*RIUnknown;;"
  }
  parameter {
    name: "riid"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "ppvObj"
    type: "**V;;"
  }
}
function {
  name: "OleCreateEmbeddingHelper"
  return_type: "I"
  parameter {
    name: "clsid"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "pUnkOuter"
    type: "*RIUnknown;;"
  }
  parameter {
    name: "flags"
    type: "UI"
  }
  parameter {
    name: "pCF"
    type: "*RIClassFactory;;"
  }
  parameter {
    name: "riid"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "ppvObj"
    type: "**V;;"
  }
}
function {
  name: "CreateOleAdviseHolder"
  return_type: "I"
  parameter {
    name: "ppOAHolder"
    type: "**RIOleAdviseHolder;;;"
  }
}
function {
  name: "OleInitialize"
  return_type: "I"
  parameter {
    name: "pvReserved"
    type: "*V;"
  }
}
function {
  name: "OleUninitialize"
  return_type: "V"
}
function {
  name: "IsValidInterface"
  return_type: "I"
  parameter {
    name: "punk"
    type: "*RIUnknown;;"
  }
}
function {
  name: "OleBuildVersion"
  return_type: "UI"
}
function {
  name: "OleConvertOLESTREAMToIStorage"
  return_type: "I"
  parameter {
    name: "lpolestream"
    type: "*R_OLESTREAM;;"
  }
  parameter {
    name: "pstg"
    type: "*RIStorage;;"
  }
  parameter {
    name: "ptd"
    type: "*cRtagDVTARGETDEVICE;;"
  }
}
function {
  name: "OleConvertIStorageToOLESTREAM"
  return_type: "I"
  parameter {
    name: "pstg"
    type: "*RIStorage;;"
  }
  parameter {
    name: "lpolestream"
    type: "*R_OLESTREAM;;"
  }
}
function {
  name: "OleDoAutoConvert"
  return_type: "I"
  parameter {
    name: "pStg"
    type: "*RIStorage;;"
  }
  parameter {
    name: "pClsidNew"
    type: "*R_GUID;;"
  }
}
function {
  name: "OleGetAutoConvert"
  return_type: "I"
  parameter {
    name: "clsidOld"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "pClsidNew"
    type: "*R_GUID;;"
  }
}
function {
  name: "OleSetAutoConvert"
  return_type: "I"
  parameter {
    name: "clsidOld"
    type: "c*cR_GUID;;"
  }
  parameter {
    name: "clsidNew"
    type: "c*cR_GUID;;"
  }
}
function {
  name: "SCardAccessStartedEvent"
  return_type: "*V;"
}
function {
  name: "SCardAddReaderToGroupA"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "SCardAddReaderToGroupW"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
}
function {
  name: "SCardBeginTransaction"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "SCardCancel"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "SCardConnectA"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "SCardConnectW"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "SCardControl"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cV;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "SCardDisconnect"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "SCardEndTransaction"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "SCardEstablishContext"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cV;"
  }
  parameter {
    name: ""
    type: "*cV;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "SCardForgetCardTypeA"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "SCardForgetCardTypeW"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
}
function {
  name: "SCardForgetReaderA"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "SCardForgetReaderW"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
}
function {
  name: "SCardForgetReaderGroupA"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "SCardForgetReaderGroupW"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
}
function {
  name: "SCardFreeMemory"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cV;"
  }
}
function {
  name: "SCardGetAttrib"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UB;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "SCardGetCardTypeProviderNameA"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "SCardGetCardTypeProviderNameW"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "SCardGetProviderIdA"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*R_GUID;;"
  }
}
function {
  name: "SCardGetProviderIdW"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*R_GUID;;"
  }
}
function {
  name: "SCardGetStatusChangeA"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*RSCARD_READERSTATEA;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "SCardGetStatusChangeW"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*RSCARD_READERSTATEW;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "SCardIntroduceCardTypeA"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*cR_GUID;;"
  }
  parameter {
    name: ""
    type: "*cR_GUID;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cUB;"
  }
  parameter {
    name: ""
    type: "*cUB;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "SCardIntroduceCardTypeW"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*cR_GUID;;"
  }
  parameter {
    name: ""
    type: "*cR_GUID;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cUB;"
  }
  parameter {
    name: ""
    type: "*cUB;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "SCardIntroduceReaderA"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "SCardIntroduceReaderW"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
}
function {
  name: "SCardIntroduceReaderGroupA"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "SCardIntroduceReaderGroupW"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
}
function {
  name: "SCardIsValidContext"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "SCardListCardsA"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cUB;"
  }
  parameter {
    name: ""
    type: "*cR_GUID;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "SCardListCardsW"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cUB;"
  }
  parameter {
    name: ""
    type: "*cR_GUID;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "SCardListInterfacesA"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*R_GUID;;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "SCardListInterfacesW"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*R_GUID;;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "SCardListReadersA"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "SCardListReadersW"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "SCardListReaderGroupsA"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "SCardListReaderGroupsW"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "SCardLocateCardsA"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*RSCARD_READERSTATEA;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "SCardLocateCardsW"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*RSCARD_READERSTATEW;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "SCardLocateCardsByATRA"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*R_SCARD_ATRMASK;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*RSCARD_READERSTATEA;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "SCardLocateCardsByATRW"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*R_SCARD_ATRMASK;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*RSCARD_READERSTATEW;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "SCardReconnect"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "SCardReleaseContext"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "SCardReleaseStartedEvent"
  return_type: "V"
}
function {
  name: "SCardRemoveReaderFromGroupA"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "SCardRemoveReaderFromGroupW"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
}
function {
  name: "SCardSetAttrib"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cUB;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "SCardSetCardTypeProviderNameA"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "SCardSetCardTypeProviderNameW"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
}
function {
  name: "SCardState"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UB;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "SCardStatusA"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UB;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "SCardStatusW"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UB;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "SCardTransmit"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cR_SCARD_IO_REQUEST;;"
  }
  parameter {
    name: ""
    type: "*cUB;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*R_SCARD_IO_REQUEST;;"
  }
  parameter {
    name: ""
    type: "*UB;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "DeviceCapabilitiesA"
  return_type: "I"
  parameter {
    name: "pDevice"
    type: "*cC;"
  }
  parameter {
    name: "pPort"
    type: "*cC;"
  }
  parameter {
    name: "fwCapability"
    type: "US"
  }
  parameter {
    name: "pOutput"
    type: "*C;"
  }
  parameter {
    name: "pDevMode"
    type: "*RDEVMODEA;;"
  }
}
function {
  name: "DeviceCapabilitiesW"
  return_type: "I"
  parameter {
    name: "pDevice"
    type: "*cUS;"
  }
  parameter {
    name: "pPort"
    type: "*cUS;"
  }
  parameter {
    name: "fwCapability"
    type: "US"
  }
  parameter {
    name: "pOutput"
    type: "*US;"
  }
  parameter {
    name: "pDevMode"
    type: "*cRDEVMODEW;;"
  }
}
function {
  name: "DocumentPropertiesA"
  return_type: "I"
  parameter {
    name: "hWnd"
    type: "*RHWND__;;"
  }
  parameter {
    name: "hPrinter"
    type: "*V;"
  }
  parameter {
    name: "pDeviceName"
    type: "*C;"
  }
  parameter {
    name: "pDevModeOutput"
    type: "*RDEVMODEA;;"
  }
  parameter {
    name: "pDevModeInput"
    type: "*RDEVMODEA;;"
  }
  parameter {
    name: "fMode"
    type: "UI"
  }
}
function {
  name: "DocumentPropertiesW"
  return_type: "I"
  parameter {
    name: "hWnd"
    type: "*RHWND__;;"
  }
  parameter {
    name: "hPrinter"
    type: "*V;"
  }
  parameter {
    name: "pDeviceName"
    type: "*US;"
  }
  parameter {
    name: "pDevModeOutput"
    type: "*RDEVMODEW;;"
  }
  parameter {
    name: "pDevModeInput"
    type: "*RDEVMODEW;;"
  }
  parameter {
    name: "fMode"
    type: "UI"
  }
}
function {
  name: "OpenPrinterA"
  return_type: "I"
  parameter {
    name: "lpPrinterName"
    type: "*C;"
  }
  parameter {
    name: "phPrinter"
    type: "**V;;"
  }
  parameter {
    name: "pDefault"
    type: "*R_PRINTER_DEFAULTSA;;"
  }
}
function {
  name: "OpenPrinterW"
  return_type: "I"
  parameter {
    name: "lpPrinterName"
    type: "*US;"
  }
  parameter {
    name: "phPrinter"
    type: "**V;;"
  }
  parameter {
    name: "pDefault"
    type: "*R_PRINTER_DEFAULTSW;;"
  }
}
function {
  name: "ResetPrinterA"
  return_type: "I"
  parameter {
    name: "hPrinter"
    type: "*V;"
  }
  parameter {
    name: "pDefault"
    type: "*R_PRINTER_DEFAULTSA;;"
  }
}
function {
  name: "ResetPrinterW"
  return_type: "I"
  parameter {
    name: "hPrinter"
    type: "*V;"
  }
  parameter {
    name: "pDefault"
    type: "*R_PRINTER_DEFAULTSW;;"
  }
}
function {
  name: "ClosePrinter"
  return_type: "I"
  parameter {
    name: "phPrinter"
    type: "*V;"
  }
}
function {
  name: "EnumJobsA"
  return_type: "I"
  parameter {
    name: "hPrinter"
    type: "*V;"
  }
  parameter {
    name: "FirstJob"
    type: "UI"
  }
  parameter {
    name: "NoJobs"
    type: "UI"
  }
  parameter {
    name: "Level"
    type: "UI"
  }
  parameter {
    name: "pJob"
    type: "*UB;"
  }
  parameter {
    name: "cbBuf"
    type: "UI"
  }
  parameter {
    name: "pcbNeeded"
    type: "*UI;"
  }
  parameter {
    name: "pcReturned"
    type: "*UI;"
  }
}
function {
  name: "EnumJobsW"
  return_type: "I"
  parameter {
    name: "hPrinter"
    type: "*V;"
  }
  parameter {
    name: "FirstJob"
    type: "UI"
  }
  parameter {
    name: "NoJobs"
    type: "UI"
  }
  parameter {
    name: "Level"
    type: "UI"
  }
  parameter {
    name: "pJob"
    type: "*UB;"
  }
  parameter {
    name: "cbBuf"
    type: "UI"
  }
  parameter {
    name: "pcbNeeded"
    type: "*UI;"
  }
  parameter {
    name: "pcReturned"
    type: "*UI;"
  }
}
function {
  name: "EnumPrintersA"
  return_type: "I"
  parameter {
    name: "dwType"
    type: "UI"
  }
  parameter {
    name: "lpszName"
    type: "*C;"
  }
  parameter {
    name: "dwLevel"
    type: "UI"
  }
  parameter {
    name: "lpbPrinters"
    type: "*UB;"
  }
  parameter {
    name: "cbBuf"
    type: "UI"
  }
  parameter {
    name: "lpdwNeeded"
    type: "*UI;"
  }
  parameter {
    name: "lpdwReturned"
    type: "*UI;"
  }
}
function {
  name: "EnumPrintersW"
  return_type: "I"
  parameter {
    name: "dwType"
    type: "UI"
  }
  parameter {
    name: "lpszName"
    type: "*US;"
  }
  parameter {
    name: "dwLevel"
    type: "UI"
  }
  parameter {
    name: "lpbPrinters"
    type: "*UB;"
  }
  parameter {
    name: "cbBuf"
    type: "UI"
  }
  parameter {
    name: "lpdwNeeded"
    type: "*UI;"
  }
  parameter {
    name: "lpdwReturned"
    type: "*UI;"
  }
}
function {
  name: "PrinterProperties"
  return_type: "I"
  parameter {
    name: "hWnd"
    type: "*RHWND__;;"
  }
  parameter {
    name: "hPrinter"
    type: "*V;"
  }
}
function {
  name: "GetPrinterDriverDirectoryA"
  return_type: "I"
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UB;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "GetPrinterDriverDirectoryW"
  return_type: "I"
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UB;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "GetPrinterDriverA"
  return_type: "I"
  parameter {
    name: "hPrinter"
    type: "*V;"
  }
  parameter {
    name: "pEnvironment"
    type: "*C;"
  }
  parameter {
    name: "Level"
    type: "UI"
  }
  parameter {
    name: "pDriverInfo"
    type: "*UB;"
  }
  parameter {
    name: "cbBuf"
    type: "UI"
  }
  parameter {
    name: "pcbNeeded"
    type: "*UI;"
  }
}
function {
  name: "GetPrinterDriverW"
  return_type: "I"
  parameter {
    name: "hPrinter"
    type: "*V;"
  }
  parameter {
    name: "pEnvironment"
    type: "*US;"
  }
  parameter {
    name: "Level"
    type: "UI"
  }
  parameter {
    name: "pDriverInfo"
    type: "*UB;"
  }
  parameter {
    name: "cbBuf"
    type: "UI"
  }
  parameter {
    name: "pcbNeeded"
    type: "*UI;"
  }
}
function {
  name: "SetJobA"
  return_type: "I"
  parameter {
    name: "hPrinter"
    type: "*V;"
  }
  parameter {
    name: "JobID"
    type: "UI"
  }
  parameter {
    name: "Level"
    type: "UI"
  }
  parameter {
    name: "pJob"
    type: "*UB;"
  }
  parameter {
    name: "Command"
    type: "UI"
  }
}
function {
  name: "SetJobW"
  return_type: "I"
  parameter {
    name: "hPrinter"
    type: "*V;"
  }
  parameter {
    name: "JobID"
    type: "UI"
  }
  parameter {
    name: "Level"
    type: "UI"
  }
  parameter {
    name: "pJob"
    type: "*UB;"
  }
  parameter {
    name: "Command"
    type: "UI"
  }
}
function {
  name: "GetJobA"
  return_type: "I"
  parameter {
    name: "hPrinter"
    type: "*V;"
  }
  parameter {
    name: "JobID"
    type: "UI"
  }
  parameter {
    name: "Level"
    type: "UI"
  }
  parameter {
    name: "pJob"
    type: "*UB;"
  }
  parameter {
    name: "cbBuf"
    type: "UI"
  }
  parameter {
    name: "pcbNeeded"
    type: "*UI;"
  }
}
function {
  name: "GetJobW"
  return_type: "I"
  parameter {
    name: "hPrinter"
    type: "*V;"
  }
  parameter {
    name: "JobID"
    type: "UI"
  }
  parameter {
    name: "Level"
    type: "UI"
  }
  parameter {
    name: "pJob"
    type: "*UB;"
  }
  parameter {
    name: "cbBuf"
    type: "UI"
  }
  parameter {
    name: "pcbNeeded"
    type: "*UI;"
  }
}
function {
  name: "AddPrinterA"
  return_type: "*V;"
  parameter {
    name: "pName"
    type: "*C;"
  }
  parameter {
    name: "Level"
    type: "UI"
  }
  parameter {
    name: "pPrinter"
    type: "*UB;"
  }
}
function {
  name: "AddPrinterW"
  return_type: "*V;"
  parameter {
    name: "pName"
    type: "*US;"
  }
  parameter {
    name: "Level"
    type: "UI"
  }
  parameter {
    name: "pPrinter"
    type: "*UB;"
  }
}
function {
  name: "DeletePrinter"
  return_type: "I"
  parameter {
    name: "hPrinter"
    type: "*V;"
  }
}
function {
  name: "SetPrinterA"
  return_type: "I"
  parameter {
    name: "hPrinter"
    type: "*V;"
  }
  parameter {
    name: "Level"
    type: "UI"
  }
  parameter {
    name: "pPrinter"
    type: "*UB;"
  }
  parameter {
    name: "Command"
    type: "UI"
  }
}
function {
  name: "SetPrinterW"
  return_type: "I"
  parameter {
    name: "hPrinter"
    type: "*V;"
  }
  parameter {
    name: "Level"
    type: "UI"
  }
  parameter {
    name: "pPrinter"
    type: "*UB;"
  }
  parameter {
    name: "Command"
    type: "UI"
  }
}
function {
  name: "GetPrinterA"
  return_type: "I"
  parameter {
    name: "hPrinter"
    type: "*V;"
  }
  parameter {
    name: "Level"
    type: "UI"
  }
  parameter {
    name: "pPrinter"
    type: "*UB;"
  }
  parameter {
    name: "cbBuf"
    type: "UI"
  }
  parameter {
    name: "pcbNeeded"
    type: "*UI;"
  }
}
function {
  name: "GetPrinterW"
  return_type: "I"
  parameter {
    name: "hPrinter"
    type: "*V;"
  }
  parameter {
    name: "Level"
    type: "UI"
  }
  parameter {
    name: "pPrinter"
    type: "*UB;"
  }
  parameter {
    name: "cbBuf"
    type: "UI"
  }
  parameter {
    name: "pcbNeeded"
    type: "*UI;"
  }
}
function {
  name: "AddPrinterDriverA"
  return_type: "I"
  parameter {
    name: "pName"
    type: "*C;"
  }
  parameter {
    name: "Level"
    type: "UI"
  }
  parameter {
    name: "pDriverInfo"
    type: "*UB;"
  }
}
function {
  name: "AddPrinterDriverW"
  return_type: "I"
  parameter {
    name: "pName"
    type: "*US;"
  }
  parameter {
    name: "Level"
    type: "UI"
  }
  parameter {
    name: "pDriverInfo"
    type: "*UB;"
  }
}
function {
  name: "AddPrinterDriverExA"
  return_type: "I"
  parameter {
    name: "pName"
    type: "*C;"
  }
  parameter {
    name: "Level"
    type: "UI"
  }
  parameter {
    name: "pDriverInfo"
    type: "*UB;"
  }
  parameter {
    name: "dwFileCopyFlags"
    type: "UI"
  }
}
function {
  name: "AddPrinterDriverExW"
  return_type: "I"
  parameter {
    name: "pName"
    type: "*US;"
  }
  parameter {
    name: "Level"
    type: "UI"
  }
  parameter {
    name: "pDriverInfo"
    type: "*UB;"
  }
  parameter {
    name: "dwFileCopyFlags"
    type: "UI"
  }
}
function {
  name: "EnumPrinterDriversA"
  return_type: "I"
  parameter {
    name: "pName"
    type: "*C;"
  }
  parameter {
    name: "pEnvironment"
    type: "*C;"
  }
  parameter {
    name: "Level"
    type: "UI"
  }
  parameter {
    name: "pDriverInfo"
    type: "*UB;"
  }
  parameter {
    name: "cbBuf"
    type: "UI"
  }
  parameter {
    name: "pcbNeeded"
    type: "*UI;"
  }
  parameter {
    name: "pcbReturned"
    type: "*UI;"
  }
}
function {
  name: "EnumPrinterDriversW"
  return_type: "I"
  parameter {
    name: "pName"
    type: "*US;"
  }
  parameter {
    name: "pEnvironment"
    type: "*US;"
  }
  parameter {
    name: "Level"
    type: "UI"
  }
  parameter {
    name: "pDriverInfo"
    type: "*UB;"
  }
  parameter {
    name: "cbBuf"
    type: "UI"
  }
  parameter {
    name: "pcbNeeded"
    type: "*UI;"
  }
  parameter {
    name: "pcbReturned"
    type: "*UI;"
  }
}
function {
  name: "GetDefaultPrinterA"
  return_type: "I"
  parameter {
    name: "pName"
    type: "*C;"
  }
  parameter {
    name: "pcbNameSize"
    type: "*UI;"
  }
}
function {
  name: "GetDefaultPrinterW"
  return_type: "I"
  parameter {
    name: "pName"
    type: "*US;"
  }
  parameter {
    name: "pcbNameSize"
    type: "*UI;"
  }
}
function {
  name: "SetDefaultPrinterA"
  return_type: "I"
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "SetDefaultPrinterW"
  return_type: "I"
  parameter {
    name: ""
    type: "*cUS;"
  }
}
function {
  name: "DeletePrinterDriverA"
  return_type: "I"
  parameter {
    name: "pName"
    type: "*C;"
  }
  parameter {
    name: "pEnvironment"
    type: "*C;"
  }
  parameter {
    name: "pDriverName"
    type: "*C;"
  }
}
function {
  name: "DeletePrinterDriverW"
  return_type: "I"
  parameter {
    name: "pName"
    type: "*US;"
  }
  parameter {
    name: "pEnvironment"
    type: "*US;"
  }
  parameter {
    name: "pDriverName"
    type: "*US;"
  }
}
function {
  name: "DeletePrinterDriverExA"
  return_type: "I"
  parameter {
    name: "pName"
    type: "*C;"
  }
  parameter {
    name: "pEnvironment"
    type: "*C;"
  }
  parameter {
    name: "pDriverName"
    type: "*C;"
  }
  parameter {
    name: "dwDeleteFlag"
    type: "UI"
  }
  parameter {
    name: "dwVersionFlag"
    type: "UI"
  }
}
function {
  name: "DeletePrinterDriverExW"
  return_type: "I"
  parameter {
    name: "pName"
    type: "*US;"
  }
  parameter {
    name: "pEnvironment"
    type: "*US;"
  }
  parameter {
    name: "pDriverName"
    type: "*US;"
  }
  parameter {
    name: "dwDeleteFlag"
    type: "UI"
  }
  parameter {
    name: "dwVersionFlag"
    type: "UI"
  }
}
function {
  name: "AddPrintProcessorA"
  return_type: "I"
  parameter {
    name: "pName"
    type: "*C;"
  }
  parameter {
    name: "pEnvironment"
    type: "*C;"
  }
  parameter {
    name: "pPathName"
    type: "*C;"
  }
  parameter {
    name: "pPrintProcessorName"
    type: "*C;"
  }
}
function {
  name: "AddPrintProcessorW"
  return_type: "I"
  parameter {
    name: "pName"
    type: "*US;"
  }
  parameter {
    name: "pEnvironment"
    type: "*US;"
  }
  parameter {
    name: "pPathName"
    type: "*US;"
  }
  parameter {
    name: "pPrintProcessorName"
    type: "*US;"
  }
}
function {
  name: "EnumPrintProcessorsA"
  return_type: "I"
  parameter {
    name: "pName"
    type: "*C;"
  }
  parameter {
    name: "pEnvironment"
    type: "*C;"
  }
  parameter {
    name: "Level"
    type: "UI"
  }
  parameter {
    name: "pPrintProcessorInfo"
    type: "*UB;"
  }
  parameter {
    name: "cbBuf"
    type: "UI"
  }
  parameter {
    name: "pcbNeeded"
    type: "*UI;"
  }
  parameter {
    name: "pcbReturned"
    type: "*UI;"
  }
}
function {
  name: "EnumPrintProcessorsW"
  return_type: "I"
  parameter {
    name: "pName"
    type: "*US;"
  }
  parameter {
    name: "pEnvironment"
    type: "*US;"
  }
  parameter {
    name: "Level"
    type: "UI"
  }
  parameter {
    name: "pPrintProcessorInfo"
    type: "*UB;"
  }
  parameter {
    name: "cbBuf"
    type: "UI"
  }
  parameter {
    name: "pcbNeeded"
    type: "*UI;"
  }
  parameter {
    name: "pcbReturned"
    type: "*UI;"
  }
}
function {
  name: "GetPrintProcessorDirectoryA"
  return_type: "I"
  parameter {
    name: "pName"
    type: "*C;"
  }
  parameter {
    name: "pEnvironment"
    type: "*C;"
  }
  parameter {
    name: "Level"
    type: "UI"
  }
  parameter {
    name: "pPrintProcessorInfo"
    type: "*UB;"
  }
  parameter {
    name: "cbBuf"
    type: "UI"
  }
  parameter {
    name: "pcbNeeded"
    type: "*UI;"
  }
}
function {
  name: "GetPrintProcessorDirectoryW"
  return_type: "I"
  parameter {
    name: "pName"
    type: "*US;"
  }
  parameter {
    name: "pEnvironment"
    type: "*US;"
  }
  parameter {
    name: "Level"
    type: "UI"
  }
  parameter {
    name: "pPrintProcessorInfo"
    type: "*UB;"
  }
  parameter {
    name: "cbBuf"
    type: "UI"
  }
  parameter {
    name: "pcbNeeded"
    type: "*UI;"
  }
}
function {
  name: "EnumPrintProcessorDatatypesA"
  return_type: "I"
  parameter {
    name: "pName"
    type: "*C;"
  }
  parameter {
    name: "pPrintProcessorName"
    type: "*C;"
  }
  parameter {
    name: "Level"
    type: "UI"
  }
  parameter {
    name: "pDatatypes"
    type: "*UB;"
  }
  parameter {
    name: "cbBuf"
    type: "UI"
  }
  parameter {
    name: "pcbNeeded"
    type: "*UI;"
  }
  parameter {
    name: "pcbReturned"
    type: "*UI;"
  }
}
function {
  name: "EnumPrintProcessorDatatypesW"
  return_type: "I"
  parameter {
    name: "pName"
    type: "*US;"
  }
  parameter {
    name: "pPrintProcessorName"
    type: "*US;"
  }
  parameter {
    name: "Level"
    type: "UI"
  }
  parameter {
    name: "pDatatypes"
    type: "*UB;"
  }
  parameter {
    name: "cbBuf"
    type: "UI"
  }
  parameter {
    name: "pcbNeeded"
    type: "*UI;"
  }
  parameter {
    name: "pcbReturned"
    type: "*UI;"
  }
}
function {
  name: "DeletePrintProcessorA"
  return_type: "I"
  parameter {
    name: "pName"
    type: "*C;"
  }
  parameter {
    name: "pEnvironment"
    type: "*C;"
  }
  parameter {
    name: "pPrintProcessorName"
    type: "*C;"
  }
}
function {
  name: "DeletePrintProcessorW"
  return_type: "I"
  parameter {
    name: "pName"
    type: "*US;"
  }
  parameter {
    name: "pEnvironment"
    type: "*US;"
  }
  parameter {
    name: "pPrintProcessorName"
    type: "*US;"
  }
}
function {
  name: "StartDocPrinterA"
  return_type: "UI"
  parameter {
    name: "hPrinter"
    type: "*V;"
  }
  parameter {
    name: "Level"
    type: "UI"
  }
  parameter {
    name: "pDocInfo"
    type: "*UB;"
  }
}
function {
  name: "StartDocPrinterW"
  return_type: "UI"
  parameter {
    name: "hPrinter"
    type: "*V;"
  }
  parameter {
    name: "Level"
    type: "UI"
  }
  parameter {
    name: "pDocInfo"
    type: "*UB;"
  }
}
function {
  name: "StartPagePrinter"
  return_type: "I"
  parameter {
    name: "hPrinter"
    type: "*V;"
  }
}
function {
  name: "WritePrinter"
  return_type: "I"
  parameter {
    name: "hPrinter"
    type: "*V;"
  }
  parameter {
    name: "pBuf"
    type: "*V;"
  }
  parameter {
    name: "cbBuf"
    type: "UI"
  }
  parameter {
    name: "pcWritten"
    type: "*UI;"
  }
}
function {
  name: "EndPagePrinter"
  return_type: "I"
  parameter {
    name: "hPrinter"
    type: "*V;"
  }
}
function {
  name: "AbortPrinter"
  return_type: "I"
  parameter {
    name: "hPrinter"
    type: "*V;"
  }
}
function {
  name: "ReadPrinter"
  return_type: "I"
  parameter {
    name: "hPrinter"
    type: "*V;"
  }
  parameter {
    name: "pBuf"
    type: "*V;"
  }
  parameter {
    name: "cbBuf"
    type: "UI"
  }
  parameter {
    name: "pNoBytesRead"
    type: "*UI;"
  }
}
function {
  name: "EndDocPrinter"
  return_type: "I"
  parameter {
    name: "hPrinter"
    type: "*V;"
  }
}
function {
  name: "AddJobA"
  return_type: "I"
  parameter {
    name: "hPrinter"
    type: "*V;"
  }
  parameter {
    name: "Level"
    type: "UI"
  }
  parameter {
    name: "pData"
    type: "*UB;"
  }
  parameter {
    name: "cbBuf"
    type: "UI"
  }
  parameter {
    name: "pcbNeeded"
    type: "*UI;"
  }
}
function {
  name: "AddJobW"
  return_type: "I"
  parameter {
    name: "hPrinter"
    type: "*V;"
  }
  parameter {
    name: "Level"
    type: "UI"
  }
  parameter {
    name: "pData"
    type: "*UB;"
  }
  parameter {
    name: "cbBuf"
    type: "UI"
  }
  parameter {
    name: "pcbNeeded"
    type: "*UI;"
  }
}
function {
  name: "ScheduleJob"
  return_type: "I"
  parameter {
    name: "hPrinter"
    type: "*V;"
  }
  parameter {
    name: "JobID"
    type: "UI"
  }
}
function {
  name: "AdvancedDocumentPropertiesA"
  return_type: "I"
  parameter {
    name: "hWnd"
    type: "*RHWND__;;"
  }
  parameter {
    name: "hPrinter"
    type: "*V;"
  }
  parameter {
    name: "pDeviceName"
    type: "*C;"
  }
  parameter {
    name: "pDevModeOutput"
    type: "*RDEVMODEA;;"
  }
  parameter {
    name: "pDevModeInput"
    type: "*RDEVMODEA;;"
  }
}
function {
  name: "AdvancedDocumentPropertiesW"
  return_type: "I"
  parameter {
    name: "hWnd"
    type: "*RHWND__;;"
  }
  parameter {
    name: "hPrinter"
    type: "*V;"
  }
  parameter {
    name: "pDeviceName"
    type: "*US;"
  }
  parameter {
    name: "pDevModeOutput"
    type: "*RDEVMODEW;;"
  }
  parameter {
    name: "pDevModeInput"
    type: "*RDEVMODEW;;"
  }
}
function {
  name: "GetPrinterDataA"
  return_type: "UI"
  parameter {
    name: "hPrinter"
    type: "*V;"
  }
  parameter {
    name: "pValueName"
    type: "*C;"
  }
  parameter {
    name: "pType"
    type: "*UI;"
  }
  parameter {
    name: "pData"
    type: "*UB;"
  }
  parameter {
    name: "nSize"
    type: "UI"
  }
  parameter {
    name: "pcbNeeded"
    type: "*UI;"
  }
}
function {
  name: "GetPrinterDataW"
  return_type: "UI"
  parameter {
    name: "hPrinter"
    type: "*V;"
  }
  parameter {
    name: "pValueName"
    type: "*US;"
  }
  parameter {
    name: "pType"
    type: "*UI;"
  }
  parameter {
    name: "pData"
    type: "*UB;"
  }
  parameter {
    name: "nSize"
    type: "UI"
  }
  parameter {
    name: "pcbNeeded"
    type: "*UI;"
  }
}
function {
  name: "GetPrinterDataExA"
  return_type: "UI"
  parameter {
    name: "hPrinter"
    type: "*V;"
  }
  parameter {
    name: "pKeyName"
    type: "*cC;"
  }
  parameter {
    name: "pValueName"
    type: "*cC;"
  }
  parameter {
    name: "pType"
    type: "*UI;"
  }
  parameter {
    name: "pData"
    type: "*UB;"
  }
  parameter {
    name: "nSize"
    type: "UI"
  }
  parameter {
    name: "pcbNeeded"
    type: "*UI;"
  }
}
function {
  name: "GetPrinterDataExW"
  return_type: "UI"
  parameter {
    name: "hPrinter"
    type: "*V;"
  }
  parameter {
    name: "pKeyName"
    type: "*cUS;"
  }
  parameter {
    name: "pValueName"
    type: "*cUS;"
  }
  parameter {
    name: "pType"
    type: "*UI;"
  }
  parameter {
    name: "pData"
    type: "*UB;"
  }
  parameter {
    name: "nSize"
    type: "UI"
  }
  parameter {
    name: "pcbNeeded"
    type: "*UI;"
  }
}
function {
  name: "DeletePrinterDataExA"
  return_type: "UI"
  parameter {
    name: "hPrinter"
    type: "*V;"
  }
  parameter {
    name: "pKeyName"
    type: "*cC;"
  }
  parameter {
    name: "pValueName"
    type: "*cC;"
  }
}
function {
  name: "DeletePrinterDataExW"
  return_type: "UI"
  parameter {
    name: "hPrinter"
    type: "*V;"
  }
  parameter {
    name: "pKeyName"
    type: "*cUS;"
  }
  parameter {
    name: "pValueName"
    type: "*cUS;"
  }
}
function {
  name: "SetPrinterDataA"
  return_type: "UI"
  parameter {
    name: "hPrinter"
    type: "*V;"
  }
  parameter {
    name: "pValueName"
    type: "*C;"
  }
  parameter {
    name: "Type"
    type: "UI"
  }
  parameter {
    name: "pData"
    type: "*UB;"
  }
  parameter {
    name: "cbData"
    type: "UI"
  }
}
function {
  name: "SetPrinterDataW"
  return_type: "UI"
  parameter {
    name: "hPrinter"
    type: "*V;"
  }
  parameter {
    name: "pValueName"
    type: "*US;"
  }
  parameter {
    name: "Type"
    type: "UI"
  }
  parameter {
    name: "pData"
    type: "*UB;"
  }
  parameter {
    name: "cbData"
    type: "UI"
  }
}
function {
  name: "SetPrinterDataExA"
  return_type: "UI"
  parameter {
    name: "hPrinter"
    type: "*V;"
  }
  parameter {
    name: "pKeyName"
    type: "*cC;"
  }
  parameter {
    name: "pValueName"
    type: "*cC;"
  }
  parameter {
    name: "Type"
    type: "UI"
  }
  parameter {
    name: "pData"
    type: "*UB;"
  }
  parameter {
    name: "cbData"
    type: "UI"
  }
}
function {
  name: "SetPrinterDataExW"
  return_type: "UI"
  parameter {
    name: "hPrinter"
    type: "*V;"
  }
  parameter {
    name: "pKeyName"
    type: "*cUS;"
  }
  parameter {
    name: "pValueName"
    type: "*cUS;"
  }
  parameter {
    name: "Type"
    type: "UI"
  }
  parameter {
    name: "pData"
    type: "*UB;"
  }
  parameter {
    name: "cbData"
    type: "UI"
  }
}
function {
  name: "WaitForPrinterChange"
  return_type: "UI"
  parameter {
    name: "hPrinter"
    type: "*V;"
  }
  parameter {
    name: "Flags"
    type: "UI"
  }
}
function {
  name: "FindFirstPrinterChangeNotification"
  return_type: "*V;"
  parameter {
    name: "hPrinter"
    type: "*V;"
  }
  parameter {
    name: "fdwFlags"
    type: "UI"
  }
  parameter {
    name: "fdwOptions"
    type: "UI"
  }
  parameter {
    name: "pPrinterNotifyOptions"
    type: "*V;"
  }
}
function {
  name: "FindNextPrinterChangeNotification"
  return_type: "I"
  parameter {
    name: "hChange"
    type: "*V;"
  }
  parameter {
    name: "pdwChange"
    type: "*UI;"
  }
  parameter {
    name: "pvReserved"
    type: "*V;"
  }
  parameter {
    name: "ppPrinterNotifyInfo"
    type: "**V;;"
  }
}
function {
  name: "FreePrinterNotifyInfo"
  return_type: "I"
  parameter {
    name: "pPrinterNotifyInfo"
    type: "*R_PRINTER_NOTIFY_INFO;;"
  }
}
function {
  name: "FindClosePrinterChangeNotification"
  return_type: "I"
  parameter {
    name: "hChange"
    type: "*V;"
  }
}
function {
  name: "PrinterMessageBoxA"
  return_type: "UI"
  parameter {
    name: "hPrinter"
    type: "*V;"
  }
  parameter {
    name: "Error"
    type: "UI"
  }
  parameter {
    name: "hWnd"
    type: "*RHWND__;;"
  }
  parameter {
    name: "pText"
    type: "*C;"
  }
  parameter {
    name: "pCaption"
    type: "*C;"
  }
  parameter {
    name: "dwType"
    type: "UI"
  }
}
function {
  name: "PrinterMessageBoxW"
  return_type: "UI"
  parameter {
    name: "hPrinter"
    type: "*V;"
  }
  parameter {
    name: "Error"
    type: "UI"
  }
  parameter {
    name: "hWnd"
    type: "*RHWND__;;"
  }
  parameter {
    name: "pText"
    type: "*US;"
  }
  parameter {
    name: "pCaption"
    type: "*US;"
  }
  parameter {
    name: "dwType"
    type: "UI"
  }
}
function {
  name: "AddFormA"
  return_type: "I"
  parameter {
    name: "hPrinter"
    type: "*V;"
  }
  parameter {
    name: "Level"
    type: "UI"
  }
  parameter {
    name: "pForm"
    type: "*UB;"
  }
}
function {
  name: "AddFormW"
  return_type: "I"
  parameter {
    name: "hPrinter"
    type: "*V;"
  }
  parameter {
    name: "Level"
    type: "UI"
  }
  parameter {
    name: "pForm"
    type: "*UB;"
  }
}
function {
  name: "DeleteFormA"
  return_type: "I"
  parameter {
    name: "hPrinter"
    type: "*V;"
  }
  parameter {
    name: "pFormName"
    type: "*C;"
  }
}
function {
  name: "DeleteFormW"
  return_type: "I"
  parameter {
    name: "hPrinter"
    type: "*V;"
  }
  parameter {
    name: "pFormName"
    type: "*US;"
  }
}
function {
  name: "GetFormA"
  return_type: "I"
  parameter {
    name: "hPrinter"
    type: "*V;"
  }
  parameter {
    name: "pFormName"
    type: "*C;"
  }
  parameter {
    name: "Level"
    type: "UI"
  }
  parameter {
    name: "pForm"
    type: "*UB;"
  }
  parameter {
    name: "cbBuf"
    type: "UI"
  }
  parameter {
    name: "pcbNeeded"
    type: "*UI;"
  }
}
function {
  name: "GetFormW"
  return_type: "I"
  parameter {
    name: "hPrinter"
    type: "*V;"
  }
  parameter {
    name: "pFormName"
    type: "*US;"
  }
  parameter {
    name: "Level"
    type: "UI"
  }
  parameter {
    name: "pForm"
    type: "*UB;"
  }
  parameter {
    name: "cbBuf"
    type: "UI"
  }
  parameter {
    name: "pcbNeeded"
    type: "*UI;"
  }
}
function {
  name: "SetFormA"
  return_type: "I"
  parameter {
    name: "hPrinter"
    type: "*V;"
  }
  parameter {
    name: "pFormName"
    type: "*C;"
  }
  parameter {
    name: "Level"
    type: "UI"
  }
  parameter {
    name: "pForm"
    type: "*UB;"
  }
}
function {
  name: "SetFormW"
  return_type: "I"
  parameter {
    name: "hPrinter"
    type: "*V;"
  }
  parameter {
    name: "pFormName"
    type: "*US;"
  }
  parameter {
    name: "Level"
    type: "UI"
  }
  parameter {
    name: "pForm"
    type: "*UB;"
  }
}
function {
  name: "EnumFormsA"
  return_type: "I"
  parameter {
    name: "hPrinter"
    type: "*V;"
  }
  parameter {
    name: "Level"
    type: "UI"
  }
  parameter {
    name: "pForm"
    type: "*UB;"
  }
  parameter {
    name: "cbBuf"
    type: "UI"
  }
  parameter {
    name: "pcbNeeded"
    type: "*UI;"
  }
  parameter {
    name: "pcReturned"
    type: "*UI;"
  }
}
function {
  name: "EnumFormsW"
  return_type: "I"
  parameter {
    name: "hPrinter"
    type: "*V;"
  }
  parameter {
    name: "Level"
    type: "UI"
  }
  parameter {
    name: "pForm"
    type: "*UB;"
  }
  parameter {
    name: "cbBuf"
    type: "UI"
  }
  parameter {
    name: "pcbNeeded"
    type: "*UI;"
  }
  parameter {
    name: "pcReturned"
    type: "*UI;"
  }
}
function {
  name: "EnumMonitorsA"
  return_type: "I"
  parameter {
    name: "pName"
    type: "*C;"
  }
  parameter {
    name: "Level"
    type: "UI"
  }
  parameter {
    name: "pMonitors"
    type: "*UB;"
  }
  parameter {
    name: "cbBuf"
    type: "UI"
  }
  parameter {
    name: "pcbNeeded"
    type: "*UI;"
  }
  parameter {
    name: "pcReturned"
    type: "*UI;"
  }
}
function {
  name: "EnumMonitorsW"
  return_type: "I"
  parameter {
    name: "pName"
    type: "*US;"
  }
  parameter {
    name: "Level"
    type: "UI"
  }
  parameter {
    name: "pMonitors"
    type: "*UB;"
  }
  parameter {
    name: "cbBuf"
    type: "UI"
  }
  parameter {
    name: "pcbNeeded"
    type: "*UI;"
  }
  parameter {
    name: "pcReturned"
    type: "*UI;"
  }
}
function {
  name: "EnumPrinterDataA"
  return_type: "UI"
  parameter {
    name: "hPrinter"
    type: "*V;"
  }
  parameter {
    name: "dwIndex"
    type: "UI"
  }
  parameter {
    name: "pValueName"
    type: "*C;"
  }
  parameter {
    name: "cbValueName"
    type: "UI"
  }
  parameter {
    name: "pcbValueName"
    type: "*UI;"
  }
  parameter {
    name: "pType"
    type: "*UI;"
  }
  parameter {
    name: "pData"
    type: "*UB;"
  }
  parameter {
    name: "cbData"
    type: "UI"
  }
  parameter {
    name: "pcbData"
    type: "*UI;"
  }
}
function {
  name: "EnumPrinterDataW"
  return_type: "UI"
  parameter {
    name: "hPrinter"
    type: "*V;"
  }
  parameter {
    name: "dwIndex"
    type: "UI"
  }
  parameter {
    name: "pValueName"
    type: "*US;"
  }
  parameter {
    name: "cbValueName"
    type: "UI"
  }
  parameter {
    name: "pcbValueName"
    type: "*UI;"
  }
  parameter {
    name: "pType"
    type: "*UI;"
  }
  parameter {
    name: "pData"
    type: "*UB;"
  }
  parameter {
    name: "cbData"
    type: "UI"
  }
  parameter {
    name: "pcbData"
    type: "*UI;"
  }
}
function {
  name: "AddMonitorA"
  return_type: "I"
  parameter {
    name: "pName"
    type: "*C;"
  }
  parameter {
    name: "Level"
    type: "UI"
  }
  parameter {
    name: "pMonitors"
    type: "*UB;"
  }
}
function {
  name: "AddMonitorW"
  return_type: "I"
  parameter {
    name: "pName"
    type: "*US;"
  }
  parameter {
    name: "Level"
    type: "UI"
  }
  parameter {
    name: "pMonitors"
    type: "*UB;"
  }
}
function {
  name: "DeleteMonitorA"
  return_type: "I"
  parameter {
    name: "pName"
    type: "*C;"
  }
  parameter {
    name: "pEnvironment"
    type: "*C;"
  }
  parameter {
    name: "pMonitorName"
    type: "*C;"
  }
}
function {
  name: "DeleteMonitorW"
  return_type: "I"
  parameter {
    name: "pName"
    type: "*US;"
  }
  parameter {
    name: "pEnvironment"
    type: "*US;"
  }
  parameter {
    name: "pMonitorName"
    type: "*US;"
  }
}
function {
  name: "EnumPortsA"
  return_type: "I"
  parameter {
    name: "pName"
    type: "*C;"
  }
  parameter {
    name: "Level"
    type: "UI"
  }
  parameter {
    name: "pPorts"
    type: "*UB;"
  }
  parameter {
    name: "cbBuf"
    type: "UI"
  }
  parameter {
    name: "pcbNeeded"
    type: "*UI;"
  }
  parameter {
    name: "pcReturned"
    type: "*UI;"
  }
}
function {
  name: "EnumPortsW"
  return_type: "I"
  parameter {
    name: "pName"
    type: "*US;"
  }
  parameter {
    name: "Level"
    type: "UI"
  }
  parameter {
    name: "pPorts"
    type: "*UB;"
  }
  parameter {
    name: "cbBuf"
    type: "UI"
  }
  parameter {
    name: "pcbNeeded"
    type: "*UI;"
  }
  parameter {
    name: "pcReturned"
    type: "*UI;"
  }
}
function {
  name: "AddPortA"
  return_type: "I"
  parameter {
    name: "pName"
    type: "*C;"
  }
  parameter {
    name: "hWnd"
    type: "*RHWND__;;"
  }
  parameter {
    name: "pMonitorName"
    type: "*C;"
  }
}
function {
  name: "AddPortW"
  return_type: "I"
  parameter {
    name: "pName"
    type: "*US;"
  }
  parameter {
    name: "hWnd"
    type: "*RHWND__;;"
  }
  parameter {
    name: "pMonitorName"
    type: "*US;"
  }
}
function {
  name: "AddPortExA"
  return_type: "I"
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UB;"
  }
  parameter {
    name: ""
    type: "*C;"
  }
}
function {
  name: "AddPortExW"
  return_type: "I"
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UB;"
  }
  parameter {
    name: ""
    type: "*US;"
  }
}
function {
  name: "ConfigurePortA"
  return_type: "I"
  parameter {
    name: "pName"
    type: "*C;"
  }
  parameter {
    name: "hWnd"
    type: "*RHWND__;;"
  }
  parameter {
    name: "pPortName"
    type: "*C;"
  }
}
function {
  name: "ConfigurePortW"
  return_type: "I"
  parameter {
    name: "pName"
    type: "*US;"
  }
  parameter {
    name: "hWnd"
    type: "*RHWND__;;"
  }
  parameter {
    name: "pPortName"
    type: "*US;"
  }
}
function {
  name: "DeletePortA"
  return_type: "I"
  parameter {
    name: "pName"
    type: "*C;"
  }
  parameter {
    name: "hWnd"
    type: "*RHWND__;;"
  }
  parameter {
    name: "pPortName"
    type: "*C;"
  }
}
function {
  name: "DeletePortW"
  return_type: "I"
  parameter {
    name: "pName"
    type: "*US;"
  }
  parameter {
    name: "hWnd"
    type: "*RHWND__;;"
  }
  parameter {
    name: "pPortName"
    type: "*US;"
  }
}
function {
  name: "SetPortA"
  return_type: "I"
  parameter {
    name: "pName"
    type: "*C;"
  }
  parameter {
    name: "pPortName"
    type: "*C;"
  }
  parameter {
    name: "dwLevel"
    type: "UI"
  }
  parameter {
    name: "pPortInfo"
    type: "*UB;"
  }
}
function {
  name: "SetPortW"
  return_type: "I"
  parameter {
    name: "pName"
    type: "*US;"
  }
  parameter {
    name: "pPortName"
    type: "*US;"
  }
  parameter {
    name: "dwLevel"
    type: "UI"
  }
  parameter {
    name: "pPortInfo"
    type: "*UB;"
  }
}
function {
  name: "AddPrinterConnectionA"
  return_type: "I"
  parameter {
    name: "pName"
    type: "*C;"
  }
}
function {
  name: "AddPrinterConnectionW"
  return_type: "I"
  parameter {
    name: "pName"
    type: "*US;"
  }
}
function {
  name: "DeletePrinterConnectionA"
  return_type: "I"
  parameter {
    name: "pName"
    type: "*C;"
  }
}
function {
  name: "DeletePrinterConnectionW"
  return_type: "I"
  parameter {
    name: "pName"
    type: "*US;"
  }
}
function {
  name: "ConnectToPrinterDlg"
  return_type: "*V;"
  parameter {
    name: "hwnd"
    type: "*RHWND__;;"
  }
  parameter {
    name: "Flags"
    type: "UI"
  }
}
function {
  name: "AddPrintProvidorA"
  return_type: "I"
  parameter {
    name: "pName"
    type: "*C;"
  }
  parameter {
    name: "Level"
    type: "UI"
  }
  parameter {
    name: "pProvidorInfo"
    type: "*UB;"
  }
}
function {
  name: "AddPrintProvidorW"
  return_type: "I"
  parameter {
    name: "pName"
    type: "*US;"
  }
  parameter {
    name: "Level"
    type: "UI"
  }
  parameter {
    name: "pProvidorInfo"
    type: "*UB;"
  }
}
function {
  name: "DeletePrintProvidorA"
  return_type: "I"
  parameter {
    name: "pName"
    type: "*C;"
  }
  parameter {
    name: "pEnvironment"
    type: "*C;"
  }
  parameter {
    name: "pPrintProvidorName"
    type: "*C;"
  }
}
function {
  name: "DeletePrintProvidorW"
  return_type: "I"
  parameter {
    name: "pName"
    type: "*US;"
  }
  parameter {
    name: "pEnvironment"
    type: "*US;"
  }
  parameter {
    name: "pPrintProvidorName"
    type: "*US;"
  }
}
function {
  name: "EnumPrinterDataExA"
  return_type: "UI"
  parameter {
    name: "hPrinter"
    type: "*V;"
  }
  parameter {
    name: "pKeyName"
    type: "*cC;"
  }
  parameter {
    name: "pEnumValues"
    type: "*UB;"
  }
  parameter {
    name: "cbEnumValues"
    type: "UI"
  }
  parameter {
    name: "pcbEnumValues"
    type: "*UI;"
  }
  parameter {
    name: "pnEnumValues"
    type: "*UI;"
  }
}
function {
  name: "EnumPrinterDataExW"
  return_type: "UI"
  parameter {
    name: "hPrinter"
    type: "*V;"
  }
  parameter {
    name: "pKeyName"
    type: "*cUS;"
  }
  parameter {
    name: "pEnumValues"
    type: "*UB;"
  }
  parameter {
    name: "cbEnumValues"
    type: "UI"
  }
  parameter {
    name: "pcbEnumValues"
    type: "*UI;"
  }
  parameter {
    name: "pnEnumValues"
    type: "*UI;"
  }
}
function {
  name: "ExtDeviceMode"
  return_type: "I"
  parameter {
    name: "hWnd"
    type: "*RHWND__;;"
  }
  parameter {
    name: "hInst"
    type: "*V;"
  }
  parameter {
    name: "pDevModeOutput"
    type: "*RDEVMODEA;;"
  }
  parameter {
    name: "pDeviceName"
    type: "*C;"
  }
  parameter {
    name: "pPort"
    type: "*C;"
  }
  parameter {
    name: "pDevModeInput"
    type: "*RDEVMODEA;;"
  }
  parameter {
    name: "pProfile"
    type: "*C;"
  }
  parameter {
    name: "fMode"
    type: "UI"
  }
}
function {
  name: "StartDocDlgA"
  return_type: "*C;"
  parameter {
    name: "hPrinter"
    type: "*V;"
  }
  parameter {
    name: "doc"
    type: "*RDOCINFOA;;"
  }
}
function {
  name: "StartDocDlgW"
  return_type: "*US;"
  parameter {
    name: "hPrinter"
    type: "*V;"
  }
  parameter {
    name: "doc"
    type: "*RDOCINFOW;;"
  }
}
function {
  name: "XcvDataW"
  return_type: "I"
  parameter {
    name: "hXcv"
    type: "*V;"
  }
  parameter {
    name: "pszDataName"
    type: "*cUS;"
  }
  parameter {
    name: "pInputData"
    type: "*UB;"
  }
  parameter {
    name: "cbInputData"
    type: "UI"
  }
  parameter {
    name: "pOutputData"
    type: "*UB;"
  }
  parameter {
    name: "cbOutputData"
    type: "UI"
  }
  parameter {
    name: "pcbOutputNeeded"
    type: "*UI;"
  }
  parameter {
    name: "pdwStatus"
    type: "*UI;"
  }
}
function {
  name: "PropertySheetA"
  return_type: "I"
  parameter {
    name: ""
    type: "*cR_PROPSHEETHEADERA;;"
  }
}
function {
  name: "PropertySheetW"
  return_type: "I"
  parameter {
    name: ""
    type: "*cR_PROPSHEETHEADERW;;"
  }
}
function {
  name: "CreatePropertySheetPageA"
  return_type: "*R_PSP;;"
  parameter {
    name: ""
    type: "*cR_PROPSHEETPAGEA;;"
  }
}
function {
  name: "CreatePropertySheetPageW"
  return_type: "*R_PSP;;"
  parameter {
    name: ""
    type: "*cR_PROPSHEETPAGEW;;"
  }
}
function {
  name: "DestroyPropertySheetPage"
  return_type: "I"
  parameter {
    name: "hPropPage"
    type: "*R_PSP;;"
  }
}
function {
  name: "ChooseColorA"
  return_type: "I"
  parameter {
    name: "lpChCol"
    type: "*RCHOOSECOLORA;;"
  }
}
function {
  name: "ChooseColorW"
  return_type: "I"
  parameter {
    name: "lpChCol"
    type: "*RCHOOSECOLORW;;"
  }
}
function {
  name: "CommDlgExtendedError"
  return_type: "UI"
}
function {
  name: "FindTextA"
  return_type: "*RHWND__;;"
  parameter {
    name: "lpFind"
    type: "*RFINDREPLACEA;;"
  }
}
function {
  name: "FindTextW"
  return_type: "*RHWND__;;"
  parameter {
    name: "lpFind"
    type: "*RFINDREPLACEW;;"
  }
}
function {
  name: "GetFileTitleA"
  return_type: "S"
  parameter {
    name: "lpFile"
    type: "*cC;"
  }
  parameter {
    name: "lpTitle"
    type: "*C;"
  }
  parameter {
    name: "cbBuf"
    type: "US"
  }
}
function {
  name: "GetFileTitleW"
  return_type: "S"
  parameter {
    name: "lpFile"
    type: "*cUS;"
  }
  parameter {
    name: "lpTitle"
    type: "*US;"
  }
  parameter {
    name: "cbBuf"
    type: "US"
  }
}
function {
  name: "GetOpenFileNameA"
  return_type: "I"
  parameter {
    name: "ofn"
    type: "*RtagOFNA;;"
  }
}
function {
  name: "GetOpenFileNameW"
  return_type: "I"
  parameter {
    name: "ofn"
    type: "*RtagOFNW;;"
  }
}
function {
  name: "GetSaveFileNameA"
  return_type: "I"
  parameter {
    name: "ofn"
    type: "*RtagOFNA;;"
  }
}
function {
  name: "GetSaveFileNameW"
  return_type: "I"
  parameter {
    name: "ofn"
    type: "*RtagOFNW;;"
  }
}
function {
  name: "PageSetupDlgA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RtagPSDA;;"
  }
}
function {
  name: "PageSetupDlgW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RtagPSDW;;"
  }
}
function {
  name: "PrintDlgA"
  return_type: "I"
  parameter {
    name: "printdlg"
    type: "*RtagPDA;;"
  }
}
function {
  name: "PrintDlgW"
  return_type: "I"
  parameter {
    name: "printdlg"
    type: "*RtagPDW;;"
  }
}
function {
  name: "PrintDlgExA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RtagPDEXA;;"
  }
}
function {
  name: "PrintDlgExW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RtagPDEXW;;"
  }
}
function {
  name: "ReplaceTextA"
  return_type: "*RHWND__;;"
  parameter {
    name: "lpFind"
    type: "*RFINDREPLACEA;;"
  }
}
function {
  name: "ReplaceTextW"
  return_type: "*RHWND__;;"
  parameter {
    name: "lpFind"
    type: "*RFINDREPLACEW;;"
  }
}
function {
  name: "ChooseFontA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RtagCHOOSEFONTA;;"
  }
}
function {
  name: "ChooseFontW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RtagCHOOSEFONTW;;"
  }
}
function {
  name: "COMDLG32_SetCommDlgExtendedError"
  return_type: "V"
  parameter {
    name: "err"
    type: "UI"
  }
}
function {
  name: "ChangeServiceConfigA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RSC_HANDLE__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "ChangeServiceConfigW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RSC_HANDLE__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
}
function {
  name: "ChangeServiceConfig2A"
  return_type: "I"
  parameter {
    name: ""
    type: "*RSC_HANDLE__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "ChangeServiceConfig2W"
  return_type: "I"
  parameter {
    name: ""
    type: "*RSC_HANDLE__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "CloseServiceHandle"
  return_type: "I"
  parameter {
    name: ""
    type: "*RSC_HANDLE__;;"
  }
}
function {
  name: "ControlService"
  return_type: "I"
  parameter {
    name: ""
    type: "*RSC_HANDLE__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*R_SERVICE_STATUS;;"
  }
}
function {
  name: "CreateServiceA"
  return_type: "*RSC_HANDLE__;;"
  parameter {
    name: ""
    type: "*RSC_HANDLE__;;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "CreateServiceW"
  return_type: "*RSC_HANDLE__;;"
  parameter {
    name: ""
    type: "*RSC_HANDLE__;;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
}
function {
  name: "DeleteService"
  return_type: "I"
  parameter {
    name: ""
    type: "*RSC_HANDLE__;;"
  }
}
function {
  name: "EnumDependentServicesA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RSC_HANDLE__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*R_ENUM_SERVICE_STATUSA;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "EnumDependentServicesW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RSC_HANDLE__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*R_ENUM_SERVICE_STATUSW;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "EnumServicesStatusA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RSC_HANDLE__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*R_ENUM_SERVICE_STATUSA;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "EnumServicesStatusW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RSC_HANDLE__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*R_ENUM_SERVICE_STATUSW;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "EnumServicesStatusExA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RSC_HANDLE__;;"
  }
  parameter {
    name: ""
    type: "X(Enum.enum _SC_ENUM_TYPE)"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UB;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "EnumServicesStatusExW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RSC_HANDLE__;;"
  }
  parameter {
    name: ""
    type: "X(Enum.enum _SC_ENUM_TYPE)"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UB;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
}
function {
  name: "GetServiceDisplayNameA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RSC_HANDLE__;;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "GetServiceDisplayNameW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RSC_HANDLE__;;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "GetServiceKeyNameA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RSC_HANDLE__;;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "GetServiceKeyNameW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RSC_HANDLE__;;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "LockServiceDatabase"
  return_type: "*V;"
  parameter {
    name: ""
    type: "*RSC_HANDLE__;;"
  }
}
function {
  name: "NotifyBootConfigStatus"
  return_type: "I"
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "OpenSCManagerA"
  return_type: "*RSC_HANDLE__;;"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "OpenSCManagerW"
  return_type: "*RSC_HANDLE__;;"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "OpenServiceA"
  return_type: "*RSC_HANDLE__;;"
  parameter {
    name: ""
    type: "*RSC_HANDLE__;;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "OpenServiceW"
  return_type: "*RSC_HANDLE__;;"
  parameter {
    name: ""
    type: "*RSC_HANDLE__;;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "QueryServiceStatus"
  return_type: "I"
  parameter {
    name: ""
    type: "*RSC_HANDLE__;;"
  }
  parameter {
    name: ""
    type: "*R_SERVICE_STATUS;;"
  }
}
function {
  name: "QueryServiceStatusEx"
  return_type: "I"
  parameter {
    name: ""
    type: "*RSC_HANDLE__;;"
  }
  parameter {
    name: ""
    type: "X(Enum.enum _SC_STATUS_TYPE)"
  }
  parameter {
    name: ""
    type: "*UB;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "QueryServiceConfigA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RSC_HANDLE__;;"
  }
  parameter {
    name: ""
    type: "*R_QUERY_SERVICE_CONFIGA;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "QueryServiceConfigW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RSC_HANDLE__;;"
  }
  parameter {
    name: ""
    type: "*R_QUERY_SERVICE_CONFIGW;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "QueryServiceConfig2A"
  return_type: "I"
  parameter {
    name: ""
    type: "*RSC_HANDLE__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UB;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "QueryServiceConfig2W"
  return_type: "I"
  parameter {
    name: ""
    type: "*RSC_HANDLE__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UB;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "QueryServiceLockStatusA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RSC_HANDLE__;;"
  }
  parameter {
    name: ""
    type: "*R_QUERY_SERVICE_LOCK_STATUSA;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "QueryServiceLockStatusW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RSC_HANDLE__;;"
  }
  parameter {
    name: ""
    type: "*R_QUERY_SERVICE_LOCK_STATUSW;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "QueryServiceObjectSecurity"
  return_type: "I"
  parameter {
    name: ""
    type: "*RSC_HANDLE__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "RegisterServiceCtrlHandlerA"
  return_type: "*RSERVICE_STATUS_HANDLE__;;"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*(UI)V;"
  }
}
function {
  name: "RegisterServiceCtrlHandlerW"
  return_type: "*RSERVICE_STATUS_HANDLE__;;"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*(UI)V;"
  }
}
function {
  name: "RegisterServiceCtrlHandlerExA"
  return_type: "*RSERVICE_STATUS_HANDLE__;;"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*(UIUI*V;*V;)UI;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "RegisterServiceCtrlHandlerExW"
  return_type: "*RSERVICE_STATUS_HANDLE__;;"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*(UIUI*V;*V;)UI;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "SetServiceObjectSecurity"
  return_type: "I"
  parameter {
    name: ""
    type: "*RSC_HANDLE__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "SetServiceStatus"
  return_type: "I"
  parameter {
    name: ""
    type: "*RSERVICE_STATUS_HANDLE__;;"
  }
  parameter {
    name: ""
    type: "*R_SERVICE_STATUS;;"
  }
}
function {
  name: "StartServiceA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RSC_HANDLE__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "**cC;;"
  }
}
function {
  name: "StartServiceW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RSC_HANDLE__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "**cUS;;"
  }
}
function {
  name: "StartServiceCtrlDispatcherA"
  return_type: "I"
  parameter {
    name: ""
    type: "*cR_SERVICE_TABLE_ENTRYA;;"
  }
}
function {
  name: "StartServiceCtrlDispatcherW"
  return_type: "I"
  parameter {
    name: ""
    type: "*cR_SERVICE_TABLE_ENTRYW;;"
  }
}
function {
  name: "UnlockServiceDatabase"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "ImmAssociateContext"
  return_type: "*V;"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "ImmAssociateContextEx"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "ImmConfigureIMEA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHKL__;;"
  }
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "ImmConfigureIMEW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHKL__;;"
  }
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "ImmCreateContext"
  return_type: "*V;"
}
function {
  name: "ImmDestroyContext"
  return_type: "I"
  parameter {
    name: "hIMC"
    type: "*V;"
  }
}
function {
  name: "ImmDisableIME"
  return_type: "I"
  parameter {
    name: "idThread"
    type: "UI"
  }
}
function {
  name: "ImmEnumInputContext"
  return_type: "I"
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*(*V;I)I;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "ImmEnumRegisterWordA"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHKL__;;"
  }
  parameter {
    name: ""
    type: "*(*cC;UI*cC;*V;)I;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "ImmEnumRegisterWordW"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHKL__;;"
  }
  parameter {
    name: ""
    type: "*(*cUS;UI*cUS;*V;)I;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "ImmEscapeA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHKL__;;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "ImmEscapeW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHKL__;;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "ImmGetCandidateListA"
  return_type: "UI"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*RtagCANDIDATELIST;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "ImmGetCandidateListW"
  return_type: "UI"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*RtagCANDIDATELIST;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "ImmGetCandidateListCountA"
  return_type: "UI"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "ImmGetCandidateListCountW"
  return_type: "UI"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "ImmGetCandidateWindow"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*RtagCANDIDATEFORM;;"
  }
}
function {
  name: "ImmGetCompositionFontA"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*RtagLOGFONTA;;"
  }
}
function {
  name: "ImmGetCompositionFontW"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*RtagLOGFONTW;;"
  }
}
function {
  name: "ImmSetCompositionFontA"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*RtagLOGFONTA;;"
  }
}
function {
  name: "ImmSetCompositionFontW"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*RtagLOGFONTW;;"
  }
}
function {
  name: "ImmGetCompositionStringA"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "ImmGetCompositionStringW"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "ImmGetCompositionWindow"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*R_tagCOMPOSITIONFORM;;"
  }
}
function {
  name: "ImmGetContext"
  return_type: "*V;"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
}
function {
  name: "ImmGetConversionListA"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHKL__;;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*RtagCANDIDATELIST;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "ImmGetConversionListW"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHKL__;;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*RtagCANDIDATELIST;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "ImmGetConversionStatus"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
  parameter {
    name: ""
    type: "*UI;"
  }
}
function {
  name: "ImmGetDefaultIMEWnd"
  return_type: "*RHWND__;;"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
}
function {
  name: "ImmGetDescriptionA"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHKL__;;"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "ImmGetDescriptionW"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHKL__;;"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "ImmGetGuideLineA"
  return_type: "UI"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "ImmGetGuideLineW"
  return_type: "UI"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "ImmGetIMEFileNameA"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHKL__;;"
  }
  parameter {
    name: ""
    type: "*C;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "ImmGetIMEFileNameW"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHKL__;;"
  }
  parameter {
    name: ""
    type: "*US;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "ImmGetImeMenuItemsA"
  return_type: "UI"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*RtagIMEMENUITEMINFOA;;"
  }
  parameter {
    name: ""
    type: "*RtagIMEMENUITEMINFOA;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "ImmGetImeMenuItemsW"
  return_type: "UI"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*RtagIMEMENUITEMINFOW;;"
  }
  parameter {
    name: ""
    type: "*RtagIMEMENUITEMINFOW;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "ImmGetOpenStatus"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "ImmGetProperty"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHKL__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "ImmGetRegisterWordStyleA"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHKL__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*RtagSTYLEBUFA;;"
  }
}
function {
  name: "ImmGetRegisterWordStyleW"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHKL__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*RtagSTYLEBUFW;;"
  }
}
function {
  name: "ImmGetStatusWindowPos"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*RtagPOINT;;"
  }
}
function {
  name: "ImmGetVirtualKey"
  return_type: "UI"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
}
function {
  name: "ImmInstallIMEA"
  return_type: "*RHKL__;;"
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "ImmInstallIMEW"
  return_type: "*RHKL__;;"
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
}
function {
  name: "ImmIsIME"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHKL__;;"
  }
}
function {
  name: "ImmIsUIMessageA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "ImmIsUIMessageW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "ImmNotifyIME"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "ImmProcessKey"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*RHKL__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "I"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "ImmRegisterWordA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHKL__;;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "ImmRegisterWordW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHKL__;;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
}
function {
  name: "ImmReleaseContext"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "*V;"
  }
}
function {
  name: "ImmSetCandidateWindow"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*RtagCANDIDATEFORM;;"
  }
}
function {
  name: "ImmSetCompositionStringA"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cV;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cV;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "ImmSetCompositionStringW"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cV;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cV;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "ImmSetCompositionWindow"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*R_tagCOMPOSITIONFORM;;"
  }
}
function {
  name: "ImmSetConversionStatus"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "ImmSetOpenStatus"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "I"
  }
}
function {
  name: "ImmSetStatusWindowPos"
  return_type: "I"
  parameter {
    name: ""
    type: "*V;"
  }
  parameter {
    name: ""
    type: "*RtagPOINT;;"
  }
}
function {
  name: "ImmSimulateHotKey"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHWND__;;"
  }
  parameter {
    name: ""
    type: "UI"
  }
}
function {
  name: "ImmUnregisterWordA"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHKL__;;"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cC;"
  }
}
function {
  name: "ImmUnregisterWordW"
  return_type: "I"
  parameter {
    name: ""
    type: "*RHKL__;;"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
  parameter {
    name: ""
    type: "UI"
  }
  parameter {
    name: ""
    type: "*cUS;"
  }
}
struct {
  name: "_GUID"
  field {
    name: "Data1"
    type: "UI"
  }
  field {
    name: "Data2"
    type: "US"
  }
  field {
    name: "Data3"
    type: "US"
  }
  field {
    name: "Data4"
    type: "X(ConstantArray.unsigned char [8])"
  }
}
struct {
  name: "__darwin_pthread_handler_rec"
  field {
    name: "__routine"
    type: "*(*V;)V;"
  }
  field {
    name: "__arg"
    type: "*V;"
  }
  field {
    name: "__next"
    type: "*R__darwin_pthread_handler_rec;;"
  }
}
struct {
  name: "_opaque_pthread_attr_t"
  field {
    name: "__sig"
    type: "I"
  }
  field {
    name: "__opaque"
    type: "X(ConstantArray.char [56])"
  }
}
struct {
  name: "_opaque_pthread_cond_t"
  field {
    name: "__sig"
    type: "I"
  }
  field {
    name: "__opaque"
    type: "X(ConstantArray.char [40])"
  }
}
struct {
  name: "_opaque_pthread_condattr_t"
  field {
    name: "__sig"
    type: "I"
  }
  field {
    name: "__opaque"
    type: "X(ConstantArray.char [8])"
  }
}
struct {
  name: "_opaque_pthread_mutex_t"
  field {
    name: "__sig"
    type: "I"
  }
  field {
    name: "__opaque"
    type: "X(ConstantArray.char [56])"
  }
}
struct {
  name: "_opaque_pthread_mutexattr_t"
  field {
    name: "__sig"
    type: "I"
  }
  field {
    name: "__opaque"
    type: "X(ConstantArray.char [8])"
  }
}
struct {
  name: "_opaque_pthread_once_t"
  field {
    name: "__sig"
    type: "I"
  }
  field {
    name: "__opaque"
    type: "X(ConstantArray.char [8])"
  }
}
struct {
  name: "_opaque_pthread_rwlock_t"
  field {
    name: "__sig"
    type: "I"
  }
  field {
    name: "__opaque"
    type: "X(ConstantArray.char [192])"
  }
}
struct {
  name: "_opaque_pthread_rwlockattr_t"
  field {
    name: "__sig"
    type: "I"
  }
  field {
    name: "__opaque"
    type: "X(ConstantArray.char [16])"
  }
}
struct {
  name: "_opaque_pthread_t"
  field {
    name: "__sig"
    type: "I"
  }
  field {
    name: "__cleanup_stack"
    type: "*R__darwin_pthread_handler_rec;;"
  }
  field {
    name: "__opaque"
    type: "X(ConstantArray.char [8176])"
  }
}
struct {
  name: "_RuneEntry"
  field {
    name: "__min"
    type: "I"
  }
  field {
    name: "__max"
    type: "I"
  }
  field {
    name: "__map"
    type: "I"
  }
  field {
    name: "__types"
    type: "*UI;"
  }
}
struct {
  name: "_RuneRange"
  field {
    name: "__nranges"
    type: "I"
  }
  field {
    name: "__ranges"
    type: "*R_RuneEntry;;"
  }
}
struct {
  name: "_RuneCharClass"
  field {
    name: "__name"
    type: "X(ConstantArray.char [14])"
  }
  field {
    name: "__mask"
    type: "UI"
  }
}
struct {
  name: "_RuneLocale"
  field {
    name: "__magic"
    type: "X(ConstantArray.char [8])"
  }
  field {
    name: "__encoding"
    type: "X(ConstantArray.char [32])"
  }
  field {
    name: "__sgetrune"
    type: "*(*cC;UI**cC;;)I;"
  }
  field {
    name: "__sputrune"
    type: "*(I*C;UI**C;;)I;"
  }
  field {
    name: "__invalid_rune"
    type: "I"
  }
  field {
    name: "__runetype"
    type: "X(ConstantArray.__uint32_t [256])"
  }
  field {
    name: "__maplower"
    type: "X(ConstantArray.__darwin_rune_t [256])"
  }
  field {
    name: "__mapupper"
    type: "X(ConstantArray.__darwin_rune_t [256])"
  }
  field {
    name: "__runetype_ext"
    type: "R_RuneRange;"
  }
  field {
    name: "__maplower_ext"
    type: "R_RuneRange;"
  }
  field {
    name: "__mapupper_ext"
    type: "R_RuneRange;"
  }
  field {
    name: "__variable"
    type: "*V;"
  }
  field {
    name: "__variable_len"
    type: "I"
  }
  field {
    name: "__ncharclasses"
    type: "I"
  }
  field {
    name: "__charclasses"
    type: "*R_RuneCharClass;;"
  }
}
struct {
  name: "_MEMORY_BASIC_INFORMATION"
  field {
    name: "BaseAddress"
    type: "*V;"
  }
  field {
    name: "AllocationBase"
    type: "*V;"
  }
  field {
    name: "AllocationProtect"
    type: "UI"
  }
  field {
    name: "RegionSize"
    type: "UI"
  }
  field {
    name: "State"
    type: "UI"
  }
  field {
    name: "Protect"
    type: "UI"
  }
  field {
    name: "Type"
    type: "UI"
  }
}
struct {
  name: "_MEMORY_BASIC_INFORMATION"
  field {
    name: "BaseAddress"
    type: "*V;"
  }
  field {
    name: "AllocationBase"
    type: "*V;"
  }
  field {
    name: "AllocationProtect"
    type: "UI"
  }
  field {
    name: "RegionSize"
    type: "UI"
  }
  field {
    name: "State"
    type: "UI"
  }
  field {
    name: "Protect"
    type: "UI"
  }
  field {
    name: "Type"
    type: "UI"
  }
}
struct {
  name: "_LIST_ENTRY"
  field {
    name: "Flink"
    type: "*R_LIST_ENTRY;;"
  }
  field {
    name: "Blink"
    type: "*R_LIST_ENTRY;;"
  }
}
struct {
  name: "_LIST_ENTRY"
  field {
    name: "Flink"
    type: "*R_LIST_ENTRY;;"
  }
  field {
    name: "Blink"
    type: "*R_LIST_ENTRY;;"
  }
}
struct {
  name: "_LIST_ENTRY"
  field {
    name: "Flink"
    type: "*R_LIST_ENTRY;;"
  }
  field {
    name: "Blink"
    type: "*R_LIST_ENTRY;;"
  }
}
struct {
  name: "_SINGLE_LIST_ENTRY"
  field {
    name: "Next"
    type: "*R_SINGLE_LIST_ENTRY;;"
  }
}
struct {
  name: "_SINGLE_LIST_ENTRY"
  field {
    name: "Next"
    type: "*R_SINGLE_LIST_ENTRY;;"
  }
}
struct {
  name: "_SLIST_ENTRY"
  field {
    name: "Next"
    type: "*R_SLIST_ENTRY;;"
  }
}
struct {
  name: "struct _SLIST_HEADER::(anonymous at /usr/local/include/wine/windows/winnt.h:772:5)"
  field {
    name: "Alignment"
    type: "UI"
  }
  field {
    name: "Region"
    type: "UI"
  }
}
struct {
  name: "struct _SLIST_HEADER::(anonymous at /usr/local/include/wine/windows/winnt.h:776:5)"
  field {
    name: "Depth"
    type: "UI"
  }
  field {
    name: "Sequence"
    type: "UI"
  }
  field {
    name: "NextEntry"
    type: "UI"
  }
  field {
    name: "HeaderType"
    type: "UI"
  }
  field {
    name: "Init"
    type: "UI"
  }
  field {
    name: "Reserved"
    type: "UI"
  }
  field {
    name: "Region"
    type: "UI"
  }
}
struct {
  name: "struct _SLIST_HEADER::(anonymous at /usr/local/include/wine/windows/winnt.h:785:5)"
  field {
    name: "Depth"
    type: "UI"
  }
  field {
    name: "Sequence"
    type: "UI"
  }
  field {
    name: "HeaderType"
    type: "UI"
  }
  field {
    name: "Init"
    type: "UI"
  }
  field {
    name: "Reserved"
    type: "UI"
  }
  field {
    name: "NextEntry"
    type: "UI"
  }
}
struct {
  name: "struct _SLIST_HEADER::(anonymous at /usr/local/include/wine/windows/winnt.h:772:5)"
  field {
    name: "Alignment"
    type: "UI"
  }
  field {
    name: "Region"
    type: "UI"
  }
}
struct {
  name: "struct _SLIST_HEADER::(anonymous at /usr/local/include/wine/windows/winnt.h:776:5)"
  field {
    name: "Depth"
    type: "UI"
  }
  field {
    name: "Sequence"
    type: "UI"
  }
  field {
    name: "NextEntry"
    type: "UI"
  }
  field {
    name: "HeaderType"
    type: "UI"
  }
  field {
    name: "Init"
    type: "UI"
  }
  field {
    name: "Reserved"
    type: "UI"
  }
  field {
    name: "Region"
    type: "UI"
  }
}
struct {
  name: "struct _SLIST_HEADER::(anonymous at /usr/local/include/wine/windows/winnt.h:785:5)"
  field {
    name: "Depth"
    type: "UI"
  }
  field {
    name: "Sequence"
    type: "UI"
  }
  field {
    name: "HeaderType"
    type: "UI"
  }
  field {
    name: "Init"
    type: "UI"
  }
  field {
    name: "Reserved"
    type: "UI"
  }
  field {
    name: "NextEntry"
    type: "UI"
  }
}
struct {
  name: "_LDT_ENTRY"
  field {
    name: "LimitLow"
    type: "US"
  }
  field {
    name: "BaseLow"
    type: "US"
  }
  field {
    name: "HighWord"
    type: "Runion _LDT_ENTRY::(anonymous at /usr/local/include/wine/windows/winnt.h:960:5);"
  }
}
struct {
  name: "struct _LDT_ENTRY::(anonymous at /usr/local/include/wine/windows/winnt.h:961:9)"
  field {
    name: "BaseMid"
    type: "UB"
  }
  field {
    name: "Flags1"
    type: "UB"
  }
  field {
    name: "Flags2"
    type: "UB"
  }
  field {
    name: "BaseHi"
    type: "UB"
  }
}
struct {
  name: "struct _LDT_ENTRY::(anonymous at /usr/local/include/wine/windows/winnt.h:967:9)"
  field {
    name: "BaseMid"
    type: "UI"
  }
  field {
    name: "Type"
    type: "UI"
  }
  field {
    name: "Dpl"
    type: "UI"
  }
  field {
    name: "Pres"
    type: "UI"
  }
  field {
    name: "LimitHi"
    type: "UI"
  }
  field {
    name: "Sys"
    type: "UI"
  }
  field {
    name: "Reserved_0"
    type: "UI"
  }
  field {
    name: "Default_Big"
    type: "UI"
  }
  field {
    name: "Granularity"
    type: "UI"
  }
  field {
    name: "BaseHi"
    type: "UI"
  }
}
struct {
  name: "_LDT_ENTRY"
  field {
    name: "LimitLow"
    type: "US"
  }
  field {
    name: "BaseLow"
    type: "US"
  }
  field {
    name: "HighWord"
    type: "Runion _LDT_ENTRY::(anonymous at /usr/local/include/wine/windows/winnt.h:960:5);"
  }
}
struct {
  name: "struct _LDT_ENTRY::(anonymous at /usr/local/include/wine/windows/winnt.h:961:9)"
  field {
    name: "BaseMid"
    type: "UB"
  }
  field {
    name: "Flags1"
    type: "UB"
  }
  field {
    name: "Flags2"
    type: "UB"
  }
  field {
    name: "BaseHi"
    type: "UB"
  }
}
struct {
  name: "struct _LDT_ENTRY::(anonymous at /usr/local/include/wine/windows/winnt.h:967:9)"
  field {
    name: "BaseMid"
    type: "UI"
  }
  field {
    name: "Type"
    type: "UI"
  }
  field {
    name: "Dpl"
    type: "UI"
  }
  field {
    name: "Pres"
    type: "UI"
  }
  field {
    name: "LimitHi"
    type: "UI"
  }
  field {
    name: "Sys"
    type: "UI"
  }
  field {
    name: "Reserved_0"
    type: "UI"
  }
  field {
    name: "Default_Big"
    type: "UI"
  }
  field {
    name: "Granularity"
    type: "UI"
  }
  field {
    name: "BaseHi"
    type: "UI"
  }
}
struct {
  name: "_M128A"
  field {
    name: "Low"
    type: "UI"
  }
  field {
    name: "High"
    type: "I"
  }
}
struct {
  name: "_M128A"
  field {
    name: "Low"
    type: "UI"
  }
  field {
    name: "High"
    type: "I"
  }
}
struct {
  name: "_XMM_SAVE_AREA32"
  field {
    name: "ControlWord"
    type: "US"
  }
  field {
    name: "StatusWord"
    type: "US"
  }
  field {
    name: "TagWord"
    type: "UB"
  }
  field {
    name: "Reserved1"
    type: "UB"
  }
  field {
    name: "ErrorOpcode"
    type: "US"
  }
  field {
    name: "ErrorOffset"
    type: "UI"
  }
  field {
    name: "ErrorSelector"
    type: "US"
  }
  field {
    name: "Reserved2"
    type: "US"
  }
  field {
    name: "DataOffset"
    type: "UI"
  }
  field {
    name: "DataSelector"
    type: "US"
  }
  field {
    name: "Reserved3"
    type: "US"
  }
  field {
    name: "MxCsr"
    type: "UI"
  }
  field {
    name: "MxCsr_Mask"
    type: "UI"
  }
  field {
    name: "FloatRegisters"
    type: "X(ConstantArray.M128A [8])"
  }
  field {
    name: "XmmRegisters"
    type: "X(ConstantArray.M128A [16])"
  }
  field {
    name: "Reserved4"
    type: "X(ConstantArray.BYTE [96])"
  }
}
struct {
  name: "_XMM_SAVE_AREA32"
  field {
    name: "ControlWord"
    type: "US"
  }
  field {
    name: "StatusWord"
    type: "US"
  }
  field {
    name: "TagWord"
    type: "UB"
  }
  field {
    name: "Reserved1"
    type: "UB"
  }
  field {
    name: "ErrorOpcode"
    type: "US"
  }
  field {
    name: "ErrorOffset"
    type: "UI"
  }
  field {
    name: "ErrorSelector"
    type: "US"
  }
  field {
    name: "Reserved2"
    type: "US"
  }
  field {
    name: "DataOffset"
    type: "UI"
  }
  field {
    name: "DataSelector"
    type: "US"
  }
  field {
    name: "Reserved3"
    type: "US"
  }
  field {
    name: "MxCsr"
    type: "UI"
  }
  field {
    name: "MxCsr_Mask"
    type: "UI"
  }
  field {
    name: "FloatRegisters"
    type: "X(ConstantArray.M128A [8])"
  }
  field {
    name: "XmmRegisters"
    type: "X(ConstantArray.M128A [16])"
  }
  field {
    name: "Reserved4"
    type: "X(ConstantArray.BYTE [96])"
  }
}
struct {
  name: "_CONTEXT"
  field {
    name: "P1Home"
    type: "UI"
  }
  field {
    name: "P2Home"
    type: "UI"
  }
  field {
    name: "P3Home"
    type: "UI"
  }
  field {
    name: "P4Home"
    type: "UI"
  }
  field {
    name: "P5Home"
    type: "UI"
  }
  field {
    name: "P6Home"
    type: "UI"
  }
  field {
    name: "ContextFlags"
    type: "UI"
  }
  field {
    name: "MxCsr"
    type: "UI"
  }
  field {
    name: "SegCs"
    type: "US"
  }
  field {
    name: "SegDs"
    type: "US"
  }
  field {
    name: "SegEs"
    type: "US"
  }
  field {
    name: "SegFs"
    type: "US"
  }
  field {
    name: "SegGs"
    type: "US"
  }
  field {
    name: "SegSs"
    type: "US"
  }
  field {
    name: "EFlags"
    type: "UI"
  }
  field {
    name: "Dr0"
    type: "UI"
  }
  field {
    name: "Dr1"
    type: "UI"
  }
  field {
    name: "Dr2"
    type: "UI"
  }
  field {
    name: "Dr3"
    type: "UI"
  }
  field {
    name: "Dr6"
    type: "UI"
  }
  field {
    name: "Dr7"
    type: "UI"
  }
  field {
    name: "Rax"
    type: "UI"
  }
  field {
    name: "Rcx"
    type: "UI"
  }
  field {
    name: "Rdx"
    type: "UI"
  }
  field {
    name: "Rbx"
    type: "UI"
  }
  field {
    name: "Rsp"
    type: "UI"
  }
  field {
    name: "Rbp"
    type: "UI"
  }
  field {
    name: "Rsi"
    type: "UI"
  }
  field {
    name: "Rdi"
    type: "UI"
  }
  field {
    name: "R8"
    type: "UI"
  }
  field {
    name: "R9"
    type: "UI"
  }
  field {
    name: "R10"
    type: "UI"
  }
  field {
    name: "R11"
    type: "UI"
  }
  field {
    name: "R12"
    type: "UI"
  }
  field {
    name: "R13"
    type: "UI"
  }
  field {
    name: "R14"
    type: "UI"
  }
  field {
    name: "R15"
    type: "UI"
  }
  field {
    name: "Rip"
    type: "UI"
  }
  field {
    name: "VectorRegister"
    type: "X(ConstantArray.M128A [26])"
  }
  field {
    name: "VectorControl"
    type: "UI"
  }
  field {
    name: "DebugControl"
    type: "UI"
  }
  field {
    name: "LastBranchToRip"
    type: "UI"
  }
  field {
    name: "LastBranchFromRip"
    type: "UI"
  }
  field {
    name: "LastExceptionToRip"
    type: "UI"
  }
  field {
    name: "LastExceptionFromRip"
    type: "UI"
  }
}
struct {
  name: "struct _CONTEXT::(anonymous at /usr/local/include/wine/windows/winnt.h:1076:9)"
  field {
    name: "Header"
    type: "X(ConstantArray.M128A [2])"
  }
  field {
    name: "Legacy"
    type: "X(ConstantArray.M128A [8])"
  }
  field {
    name: "Xmm0"
    type: "R_M128A;"
  }
  field {
    name: "Xmm1"
    type: "R_M128A;"
  }
  field {
    name: "Xmm2"
    type: "R_M128A;"
  }
  field {
    name: "Xmm3"
    type: "R_M128A;"
  }
  field {
    name: "Xmm4"
    type: "R_M128A;"
  }
  field {
    name: "Xmm5"
    type: "R_M128A;"
  }
  field {
    name: "Xmm6"
    type: "R_M128A;"
  }
  field {
    name: "Xmm7"
    type: "R_M128A;"
  }
  field {
    name: "Xmm8"
    type: "R_M128A;"
  }
  field {
    name: "Xmm9"
    type: "R_M128A;"
  }
  field {
    name: "Xmm10"
    type: "R_M128A;"
  }
  field {
    name: "Xmm11"
    type: "R_M128A;"
  }
  field {
    name: "Xmm12"
    type: "R_M128A;"
  }
  field {
    name: "Xmm13"
    type: "R_M128A;"
  }
  field {
    name: "Xmm14"
    type: "R_M128A;"
  }
  field {
    name: "Xmm15"
    type: "R_M128A;"
  }
}
struct {
  name: "_RUNTIME_FUNCTION"
  field {
    name: "BeginAddress"
    type: "UI"
  }
  field {
    name: "EndAddress"
    type: "UI"
  }
  field {
    name: "UnwindData"
    type: "UI"
  }
}
struct {
  name: "_RUNTIME_FUNCTION"
  field {
    name: "BeginAddress"
    type: "UI"
  }
  field {
    name: "EndAddress"
    type: "UI"
  }
  field {
    name: "UnwindData"
    type: "UI"
  }
}
struct {
  name: "_UNWIND_HISTORY_TABLE_ENTRY"
  field {
    name: "ImageBase"
    type: "UI"
  }
  field {
    name: "FunctionEntry"
    type: "*R_RUNTIME_FUNCTION;;"
  }
}
struct {
  name: "_UNWIND_HISTORY_TABLE_ENTRY"
  field {
    name: "ImageBase"
    type: "UI"
  }
  field {
    name: "FunctionEntry"
    type: "*R_RUNTIME_FUNCTION;;"
  }
}
struct {
  name: "_UNWIND_HISTORY_TABLE"
  field {
    name: "Count"
    type: "UI"
  }
  field {
    name: "Search"
    type: "UB"
  }
  field {
    name: "LowAddress"
    type: "UI"
  }
  field {
    name: "HighAddress"
    type: "UI"
  }
  field {
    name: "Entry"
    type: "X(ConstantArray.UNWIND_HISTORY_TABLE_ENTRY [12])"
  }
}
struct {
  name: "_UNWIND_HISTORY_TABLE"
  field {
    name: "Count"
    type: "UI"
  }
  field {
    name: "Search"
    type: "UB"
  }
  field {
    name: "LowAddress"
    type: "UI"
  }
  field {
    name: "HighAddress"
    type: "UI"
  }
  field {
    name: "Entry"
    type: "X(ConstantArray.UNWIND_HISTORY_TABLE_ENTRY [12])"
  }
}
struct {
  name: "_KNONVOLATILE_CONTEXT_POINTERS"
}
struct {
  name: "struct _KNONVOLATILE_CONTEXT_POINTERS::(anonymous at /usr/local/include/wine/windows/winnt.h:1143:9)"
  field {
    name: "Xmm0"
    type: "*R_M128A;;"
  }
  field {
    name: "Xmm1"
    type: "*R_M128A;;"
  }
  field {
    name: "Xmm2"
    type: "*R_M128A;;"
  }
  field {
    name: "Xmm3"
    type: "*R_M128A;;"
  }
  field {
    name: "Xmm4"
    type: "*R_M128A;;"
  }
  field {
    name: "Xmm5"
    type: "*R_M128A;;"
  }
  field {
    name: "Xmm6"
    type: "*R_M128A;;"
  }
  field {
    name: "Xmm7"
    type: "*R_M128A;;"
  }
  field {
    name: "Xmm8"
    type: "*R_M128A;;"
  }
  field {
    name: "Xmm9"
    type: "*R_M128A;;"
  }
  field {
    name: "Xmm10"
    type: "*R_M128A;;"
  }
  field {
    name: "Xmm11"
    type: "*R_M128A;;"
  }
  field {
    name: "Xmm12"
    type: "*R_M128A;;"
  }
  field {
    name: "Xmm13"
    type: "*R_M128A;;"
  }
  field {
    name: "Xmm14"
    type: "*R_M128A;;"
  }
  field {
    name: "Xmm15"
    type: "*R_M128A;;"
  }
}
struct {
  name: "struct _KNONVOLATILE_CONTEXT_POINTERS::(anonymous at /usr/local/include/wine/windows/winnt.h:1167:9)"
  field {
    name: "Rax"
    type: "*UI;"
  }
  field {
    name: "Rcx"
    type: "*UI;"
  }
  field {
    name: "Rdx"
    type: "*UI;"
  }
  field {
    name: "Rbx"
    type: "*UI;"
  }
  field {
    name: "Rsp"
    type: "*UI;"
  }
  field {
    name: "Rbp"
    type: "*UI;"
  }
  field {
    name: "Rsi"
    type: "*UI;"
  }
  field {
    name: "Rdi"
    type: "*UI;"
  }
  field {
    name: "R8"
    type: "*UI;"
  }
  field {
    name: "R9"
    type: "*UI;"
  }
  field {
    name: "R10"
    type: "*UI;"
  }
  field {
    name: "R11"
    type: "*UI;"
  }
  field {
    name: "R12"
    type: "*UI;"
  }
  field {
    name: "R13"
    type: "*UI;"
  }
  field {
    name: "R14"
    type: "*UI;"
  }
  field {
    name: "R15"
    type: "*UI;"
  }
}
struct {
  name: "_KNONVOLATILE_CONTEXT_POINTERS"
}
struct {
  name: "struct _KNONVOLATILE_CONTEXT_POINTERS::(anonymous at /usr/local/include/wine/windows/winnt.h:1143:9)"
  field {
    name: "Xmm0"
    type: "*R_M128A;;"
  }
  field {
    name: "Xmm1"
    type: "*R_M128A;;"
  }
  field {
    name: "Xmm2"
    type: "*R_M128A;;"
  }
  field {
    name: "Xmm3"
    type: "*R_M128A;;"
  }
  field {
    name: "Xmm4"
    type: "*R_M128A;;"
  }
  field {
    name: "Xmm5"
    type: "*R_M128A;;"
  }
  field {
    name: "Xmm6"
    type: "*R_M128A;;"
  }
  field {
    name: "Xmm7"
    type: "*R_M128A;;"
  }
  field {
    name: "Xmm8"
    type: "*R_M128A;;"
  }
  field {
    name: "Xmm9"
    type: "*R_M128A;;"
  }
  field {
    name: "Xmm10"
    type: "*R_M128A;;"
  }
  field {
    name: "Xmm11"
    type: "*R_M128A;;"
  }
  field {
    name: "Xmm12"
    type: "*R_M128A;;"
  }
  field {
    name: "Xmm13"
    type: "*R_M128A;;"
  }
  field {
    name: "Xmm14"
    type: "*R_M128A;;"
  }
  field {
    name: "Xmm15"
    type: "*R_M128A;;"
  }
}
struct {
  name: "struct _KNONVOLATILE_CONTEXT_POINTERS::(anonymous at /usr/local/include/wine/windows/winnt.h:1167:9)"
  field {
    name: "Rax"
    type: "*UI;"
  }
  field {
    name: "Rcx"
    type: "*UI;"
  }
  field {
    name: "Rdx"
    type: "*UI;"
  }
  field {
    name: "Rbx"
    type: "*UI;"
  }
  field {
    name: "Rsp"
    type: "*UI;"
  }
  field {
    name: "Rbp"
    type: "*UI;"
  }
  field {
    name: "Rsi"
    type: "*UI;"
  }
  field {
    name: "Rdi"
    type: "*UI;"
  }
  field {
    name: "R8"
    type: "*UI;"
  }
  field {
    name: "R9"
    type: "*UI;"
  }
  field {
    name: "R10"
    type: "*UI;"
  }
  field {
    name: "R11"
    type: "*UI;"
  }
  field {
    name: "R12"
    type: "*UI;"
  }
  field {
    name: "R13"
    type: "*UI;"
  }
  field {
    name: "R14"
    type: "*UI;"
  }
  field {
    name: "R15"
    type: "*UI;"
  }
}
struct {
  name: "_EXCEPTION_RECORD"
  field {
    name: "ExceptionCode"
    type: "UI"
  }
  field {
    name: "ExceptionFlags"
    type: "UI"
  }
  field {
    name: "ExceptionRecord"
    type: "*R_EXCEPTION_RECORD;;"
  }
  field {
    name: "ExceptionAddress"
    type: "*V;"
  }
  field {
    name: "NumberParameters"
    type: "UI"
  }
  field {
    name: "ExceptionInformation"
    type: "X(ConstantArray.ULONG_PTR [15])"
  }
}
struct {
  name: "_EXCEPTION_RECORD"
  field {
    name: "ExceptionCode"
    type: "UI"
  }
  field {
    name: "ExceptionFlags"
    type: "UI"
  }
  field {
    name: "ExceptionRecord"
    type: "*R_EXCEPTION_RECORD;;"
  }
  field {
    name: "ExceptionAddress"
    type: "*V;"
  }
  field {
    name: "NumberParameters"
    type: "UI"
  }
  field {
    name: "ExceptionInformation"
    type: "X(ConstantArray.ULONG_PTR [15])"
  }
}
struct {
  name: "_EXCEPTION_POINTERS"
  field {
    name: "ExceptionRecord"
    type: "*R_EXCEPTION_RECORD;;"
  }
  field {
    name: "ContextRecord"
    type: "*R_CONTEXT;;"
  }
}
struct {
  name: "_EXCEPTION_POINTERS"
  field {
    name: "ExceptionRecord"
    type: "*R_EXCEPTION_RECORD;;"
  }
  field {
    name: "ContextRecord"
    type: "*R_CONTEXT;;"
  }
}
struct {
  name: "_EXCEPTION_REGISTRATION_RECORD"
  field {
    name: "Prev"
    type: "*R_EXCEPTION_REGISTRATION_RECORD;;"
  }
  field {
    name: "Handler"
    type: "*(*R_EXCEPTION_RECORD;;*R_EXCEPTION_REGISTRATION_RECORD;;*R_CONTEXT;;**R_EXCEPTION_REGISTRATION_RECORD;;;)UI;"
  }
}
struct {
  name: "_NT_TIB"
  field {
    name: "ExceptionList"
    type: "*R_EXCEPTION_REGISTRATION_RECORD;;"
  }
  field {
    name: "StackBase"
    type: "*V;"
  }
  field {
    name: "StackLimit"
    type: "*V;"
  }
  field {
    name: "SubSystemTib"
    type: "*V;"
  }
  field {
    name: "ArbitraryUserPointer"
    type: "*V;"
  }
  field {
    name: "Self"
    type: "*R_NT_TIB;;"
  }
}
struct {
  name: "_NT_TIB"
  field {
    name: "ExceptionList"
    type: "*R_EXCEPTION_REGISTRATION_RECORD;;"
  }
  field {
    name: "StackBase"
    type: "*V;"
  }
  field {
    name: "StackLimit"
    type: "*V;"
  }
  field {
    name: "SubSystemTib"
    type: "*V;"
  }
  field {
    name: "ArbitraryUserPointer"
    type: "*V;"
  }
  field {
    name: "Self"
    type: "*R_NT_TIB;;"
  }
}
struct {
  name: "_IMAGE_DOS_HEADER"
  field {
    name: "e_magic"
    type: "US"
  }
  field {
    name: "e_cblp"
    type: "US"
  }
  field {
    name: "e_cp"
    type: "US"
  }
  field {
    name: "e_crlc"
    type: "US"
  }
  field {
    name: "e_cparhdr"
    type: "US"
  }
  field {
    name: "e_minalloc"
    type: "US"
  }
  field {
    name: "e_maxalloc"
    type: "US"
  }
  field {
    name: "e_ss"
    type: "US"
  }
  field {
    name: "e_sp"
    type: "US"
  }
  field {
    name: "e_csum"
    type: "US"
  }
  field {
    name: "e_ip"
    type: "US"
  }
  field {
    name: "e_cs"
    type: "US"
  }
  field {
    name: "e_lfarlc"
    type: "US"
  }
  field {
    name: "e_ovno"
    type: "US"
  }
  field {
    name: "e_res"
    type: "X(ConstantArray.WORD [4])"
  }
  field {
    name: "e_oemid"
    type: "US"
  }
  field {
    name: "e_oeminfo"
    type: "US"
  }
  field {
    name: "e_res2"
    type: "X(ConstantArray.WORD [10])"
  }
  field {
    name: "e_lfanew"
    type: "UI"
  }
}
struct {
  name: "_IMAGE_DOS_HEADER"
  field {
    name: "e_magic"
    type: "US"
  }
  field {
    name: "e_cblp"
    type: "US"
  }
  field {
    name: "e_cp"
    type: "US"
  }
  field {
    name: "e_crlc"
    type: "US"
  }
  field {
    name: "e_cparhdr"
    type: "US"
  }
  field {
    name: "e_minalloc"
    type: "US"
  }
  field {
    name: "e_maxalloc"
    type: "US"
  }
  field {
    name: "e_ss"
    type: "US"
  }
  field {
    name: "e_sp"
    type: "US"
  }
  field {
    name: "e_csum"
    type: "US"
  }
  field {
    name: "e_ip"
    type: "US"
  }
  field {
    name: "e_cs"
    type: "US"
  }
  field {
    name: "e_lfarlc"
    type: "US"
  }
  field {
    name: "e_ovno"
    type: "US"
  }
  field {
    name: "e_res"
    type: "X(ConstantArray.WORD [4])"
  }
  field {
    name: "e_oemid"
    type: "US"
  }
  field {
    name: "e_oeminfo"
    type: "US"
  }
  field {
    name: "e_res2"
    type: "X(ConstantArray.WORD [10])"
  }
  field {
    name: "e_lfanew"
    type: "UI"
  }
}
struct {
  name: "IMAGE_OS2_HEADER"
  field {
    name: "ne_magic"
    type: "US"
  }
  field {
    name: "ne_ver"
    type: "UB"
  }
  field {
    name: "ne_rev"
    type: "UB"
  }
  field {
    name: "ne_enttab"
    type: "US"
  }
  field {
    name: "ne_cbenttab"
    type: "US"
  }
  field {
    name: "ne_crc"
    type: "I"
  }
  field {
    name: "ne_flags"
    type: "US"
  }
  field {
    name: "ne_autodata"
    type: "US"
  }
  field {
    name: "ne_heap"
    type: "US"
  }
  field {
    name: "ne_stack"
    type: "US"
  }
  field {
    name: "ne_csip"
    type: "UI"
  }
  field {
    name: "ne_sssp"
    type: "UI"
  }
  field {
    name: "ne_cseg"
    type: "US"
  }
  field {
    name: "ne_cmod"
    type: "US"
  }
  field {
    name: "ne_cbnrestab"
    type: "US"
  }
  field {
    name: "ne_segtab"
    type: "US"
  }
  field {
    name: "ne_rsrctab"
    type: "US"
  }
  field {
    name: "ne_restab"
    type: "US"
  }
  field {
    name: "ne_modtab"
    type: "US"
  }
  field {
    name: "ne_imptab"
    type: "US"
  }
  field {
    name: "ne_nrestab"
    type: "UI"
  }
  field {
    name: "ne_cmovent"
    type: "US"
  }
  field {
    name: "ne_align"
    type: "US"
  }
  field {
    name: "ne_cres"
    type: "US"
  }
  field {
    name: "ne_exetyp"
    type: "UB"
  }
  field {
    name: "ne_flagsothers"
    type: "UB"
  }
  field {
    name: "ne_pretthunks"
    type: "US"
  }
  field {
    name: "ne_psegrefbytes"
    type: "US"
  }
  field {
    name: "ne_swaparea"
    type: "US"
  }
  field {
    name: "ne_expver"
    type: "US"
  }
}
struct {
  name: "IMAGE_OS2_HEADER"
  field {
    name: "ne_magic"
    type: "US"
  }
  field {
    name: "ne_ver"
    type: "UB"
  }
  field {
    name: "ne_rev"
    type: "UB"
  }
  field {
    name: "ne_enttab"
    type: "US"
  }
  field {
    name: "ne_cbenttab"
    type: "US"
  }
  field {
    name: "ne_crc"
    type: "I"
  }
  field {
    name: "ne_flags"
    type: "US"
  }
  field {
    name: "ne_autodata"
    type: "US"
  }
  field {
    name: "ne_heap"
    type: "US"
  }
  field {
    name: "ne_stack"
    type: "US"
  }
  field {
    name: "ne_csip"
    type: "UI"
  }
  field {
    name: "ne_sssp"
    type: "UI"
  }
  field {
    name: "ne_cseg"
    type: "US"
  }
  field {
    name: "ne_cmod"
    type: "US"
  }
  field {
    name: "ne_cbnrestab"
    type: "US"
  }
  field {
    name: "ne_segtab"
    type: "US"
  }
  field {
    name: "ne_rsrctab"
    type: "US"
  }
  field {
    name: "ne_restab"
    type: "US"
  }
  field {
    name: "ne_modtab"
    type: "US"
  }
  field {
    name: "ne_imptab"
    type: "US"
  }
  field {
    name: "ne_nrestab"
    type: "UI"
  }
  field {
    name: "ne_cmovent"
    type: "US"
  }
  field {
    name: "ne_align"
    type: "US"
  }
  field {
    name: "ne_cres"
    type: "US"
  }
  field {
    name: "ne_exetyp"
    type: "UB"
  }
  field {
    name: "ne_flagsothers"
    type: "UB"
  }
  field {
    name: "ne_pretthunks"
    type: "US"
  }
  field {
    name: "ne_psegrefbytes"
    type: "US"
  }
  field {
    name: "ne_swaparea"
    type: "US"
  }
  field {
    name: "ne_expver"
    type: "US"
  }
}
struct {
  name: "_IMAGE_VXD_HEADER"
  field {
    name: "e32_magic"
    type: "US"
  }
  field {
    name: "e32_border"
    type: "UB"
  }
  field {
    name: "e32_worder"
    type: "UB"
  }
  field {
    name: "e32_level"
    type: "UI"
  }
  field {
    name: "e32_cpu"
    type: "US"
  }
  field {
    name: "e32_os"
    type: "US"
  }
  field {
    name: "e32_ver"
    type: "UI"
  }
  field {
    name: "e32_mflags"
    type: "UI"
  }
  field {
    name: "e32_mpages"
    type: "UI"
  }
  field {
    name: "e32_startobj"
    type: "UI"
  }
  field {
    name: "e32_eip"
    type: "UI"
  }
  field {
    name: "e32_stackobj"
    type: "UI"
  }
  field {
    name: "e32_esp"
    type: "UI"
  }
  field {
    name: "e32_pagesize"
    type: "UI"
  }
  field {
    name: "e32_lastpagesize"
    type: "UI"
  }
  field {
    name: "e32_fixupsize"
    type: "UI"
  }
  field {
    name: "e32_fixupsum"
    type: "UI"
  }
  field {
    name: "e32_ldrsize"
    type: "UI"
  }
  field {
    name: "e32_ldrsum"
    type: "UI"
  }
  field {
    name: "e32_objtab"
    type: "UI"
  }
  field {
    name: "e32_objcnt"
    type: "UI"
  }
  field {
    name: "e32_objmap"
    type: "UI"
  }
  field {
    name: "e32_itermap"
    type: "UI"
  }
  field {
    name: "e32_rsrctab"
    type: "UI"
  }
  field {
    name: "e32_rsrccnt"
    type: "UI"
  }
  field {
    name: "e32_restab"
    type: "UI"
  }
  field {
    name: "e32_enttab"
    type: "UI"
  }
  field {
    name: "e32_dirtab"
    type: "UI"
  }
  field {
    name: "e32_dircnt"
    type: "UI"
  }
  field {
    name: "e32_fpagetab"
    type: "UI"
  }
  field {
    name: "e32_frectab"
    type: "UI"
  }
  field {
    name: "e32_impmod"
    type: "UI"
  }
  field {
    name: "e32_impmodcnt"
    type: "UI"
  }
  field {
    name: "e32_impproc"
    type: "UI"
  }
  field {
    name: "e32_pagesum"
    type: "UI"
  }
  field {
    name: "e32_datapage"
    type: "UI"
  }
  field {
    name: "e32_preload"
    type: "UI"
  }
  field {
    name: "e32_nrestab"
    type: "UI"
  }
  field {
    name: "e32_cbnrestab"
    type: "UI"
  }
  field {
    name: "e32_nressum"
    type: "UI"
  }
  field {
    name: "e32_autodata"
    type: "UI"
  }
  field {
    name: "e32_debuginfo"
    type: "UI"
  }
  field {
    name: "e32_debuglen"
    type: "UI"
  }
  field {
    name: "e32_instpreload"
    type: "UI"
  }
  field {
    name: "e32_instdemand"
    type: "UI"
  }
  field {
    name: "e32_heapsize"
    type: "UI"
  }
  field {
    name: "e32_res3"
    type: "X(ConstantArray.BYTE [12])"
  }
  field {
    name: "e32_winresoff"
    type: "UI"
  }
  field {
    name: "e32_winreslen"
    type: "UI"
  }
  field {
    name: "e32_devid"
    type: "US"
  }
  field {
    name: "e32_ddkver"
    type: "US"
  }
}
struct {
  name: "_IMAGE_VXD_HEADER"
  field {
    name: "e32_magic"
    type: "US"
  }
  field {
    name: "e32_border"
    type: "UB"
  }
  field {
    name: "e32_worder"
    type: "UB"
  }
  field {
    name: "e32_level"
    type: "UI"
  }
  field {
    name: "e32_cpu"
    type: "US"
  }
  field {
    name: "e32_os"
    type: "US"
  }
  field {
    name: "e32_ver"
    type: "UI"
  }
  field {
    name: "e32_mflags"
    type: "UI"
  }
  field {
    name: "e32_mpages"
    type: "UI"
  }
  field {
    name: "e32_startobj"
    type: "UI"
  }
  field {
    name: "e32_eip"
    type: "UI"
  }
  field {
    name: "e32_stackobj"
    type: "UI"
  }
  field {
    name: "e32_esp"
    type: "UI"
  }
  field {
    name: "e32_pagesize"
    type: "UI"
  }
  field {
    name: "e32_lastpagesize"
    type: "UI"
  }
  field {
    name: "e32_fixupsize"
    type: "UI"
  }
  field {
    name: "e32_fixupsum"
    type: "UI"
  }
  field {
    name: "e32_ldrsize"
    type: "UI"
  }
  field {
    name: "e32_ldrsum"
    type: "UI"
  }
  field {
    name: "e32_objtab"
    type: "UI"
  }
  field {
    name: "e32_objcnt"
    type: "UI"
  }
  field {
    name: "e32_objmap"
    type: "UI"
  }
  field {
    name: "e32_itermap"
    type: "UI"
  }
  field {
    name: "e32_rsrctab"
    type: "UI"
  }
  field {
    name: "e32_rsrccnt"
    type: "UI"
  }
  field {
    name: "e32_restab"
    type: "UI"
  }
  field {
    name: "e32_enttab"
    type: "UI"
  }
  field {
    name: "e32_dirtab"
    type: "UI"
  }
  field {
    name: "e32_dircnt"
    type: "UI"
  }
  field {
    name: "e32_fpagetab"
    type: "UI"
  }
  field {
    name: "e32_frectab"
    type: "UI"
  }
  field {
    name: "e32_impmod"
    type: "UI"
  }
  field {
    name: "e32_impmodcnt"
    type: "UI"
  }
  field {
    name: "e32_impproc"
    type: "UI"
  }
  field {
    name: "e32_pagesum"
    type: "UI"
  }
  field {
    name: "e32_datapage"
    type: "UI"
  }
  field {
    name: "e32_preload"
    type: "UI"
  }
  field {
    name: "e32_nrestab"
    type: "UI"
  }
  field {
    name: "e32_cbnrestab"
    type: "UI"
  }
  field {
    name: "e32_nressum"
    type: "UI"
  }
  field {
    name: "e32_autodata"
    type: "UI"
  }
  field {
    name: "e32_debuginfo"
    type: "UI"
  }
  field {
    name: "e32_debuglen"
    type: "UI"
  }
  field {
    name: "e32_instpreload"
    type: "UI"
  }
  field {
    name: "e32_instdemand"
    type: "UI"
  }
  field {
    name: "e32_heapsize"
    type: "UI"
  }
  field {
    name: "e32_res3"
    type: "X(ConstantArray.BYTE [12])"
  }
  field {
    name: "e32_winresoff"
    type: "UI"
  }
  field {
    name: "e32_winreslen"
    type: "UI"
  }
  field {
    name: "e32_devid"
    type: "US"
  }
  field {
    name: "e32_ddkver"
    type: "US"
  }
}
struct {
  name: "_IMAGE_FILE_HEADER"
  field {
    name: "Machine"
    type: "US"
  }
  field {
    name: "NumberOfSections"
    type: "US"
  }
  field {
    name: "TimeDateStamp"
    type: "UI"
  }
  field {
    name: "PointerToSymbolTable"
    type: "UI"
  }
  field {
    name: "NumberOfSymbols"
    type: "UI"
  }
  field {
    name: "SizeOfOptionalHeader"
    type: "US"
  }
  field {
    name: "Characteristics"
    type: "US"
  }
}
struct {
  name: "_IMAGE_FILE_HEADER"
  field {
    name: "Machine"
    type: "US"
  }
  field {
    name: "NumberOfSections"
    type: "US"
  }
  field {
    name: "TimeDateStamp"
    type: "UI"
  }
  field {
    name: "PointerToSymbolTable"
    type: "UI"
  }
  field {
    name: "NumberOfSymbols"
    type: "UI"
  }
  field {
    name: "SizeOfOptionalHeader"
    type: "US"
  }
  field {
    name: "Characteristics"
    type: "US"
  }
}
struct {
  name: "_IMAGE_DATA_DIRECTORY"
  field {
    name: "VirtualAddress"
    type: "UI"
  }
  field {
    name: "Size"
    type: "UI"
  }
}
struct {
  name: "_IMAGE_DATA_DIRECTORY"
  field {
    name: "VirtualAddress"
    type: "UI"
  }
  field {
    name: "Size"
    type: "UI"
  }
}
struct {
  name: "_IMAGE_OPTIONAL_HEADER64"
  field {
    name: "Magic"
    type: "US"
  }
  field {
    name: "MajorLinkerVersion"
    type: "UB"
  }
  field {
    name: "MinorLinkerVersion"
    type: "UB"
  }
  field {
    name: "SizeOfCode"
    type: "UI"
  }
  field {
    name: "SizeOfInitializedData"
    type: "UI"
  }
  field {
    name: "SizeOfUninitializedData"
    type: "UI"
  }
  field {
    name: "AddressOfEntryPoint"
    type: "UI"
  }
  field {
    name: "BaseOfCode"
    type: "UI"
  }
  field {
    name: "ImageBase"
    type: "UI"
  }
  field {
    name: "SectionAlignment"
    type: "UI"
  }
  field {
    name: "FileAlignment"
    type: "UI"
  }
  field {
    name: "MajorOperatingSystemVersion"
    type: "US"
  }
  field {
    name: "MinorOperatingSystemVersion"
    type: "US"
  }
  field {
    name: "MajorImageVersion"
    type: "US"
  }
  field {
    name: "MinorImageVersion"
    type: "US"
  }
  field {
    name: "MajorSubsystemVersion"
    type: "US"
  }
  field {
    name: "MinorSubsystemVersion"
    type: "US"
  }
  field {
    name: "Win32VersionValue"
    type: "UI"
  }
  field {
    name: "SizeOfImage"
    type: "UI"
  }
  field {
    name: "SizeOfHeaders"
    type: "UI"
  }
  field {
    name: "CheckSum"
    type: "UI"
  }
  field {
    name: "Subsystem"
    type: "US"
  }
  field {
    name: "DllCharacteristics"
    type: "US"
  }
  field {
    name: "SizeOfStackReserve"
    type: "UI"
  }
  field {
    name: "SizeOfStackCommit"
    type: "UI"
  }
  field {
    name: "SizeOfHeapReserve"
    type: "UI"
  }
  field {
    name: "SizeOfHeapCommit"
    type: "UI"
  }
  field {
    name: "LoaderFlags"
    type: "UI"
  }
  field {
    name: "NumberOfRvaAndSizes"
    type: "UI"
  }
  field {
    name: "DataDirectory"
    type: "X(ConstantArray.IMAGE_DATA_DIRECTORY [16])"
  }
}
struct {
  name: "_IMAGE_OPTIONAL_HEADER64"
  field {
    name: "Magic"
    type: "US"
  }
  field {
    name: "MajorLinkerVersion"
    type: "UB"
  }
  field {
    name: "MinorLinkerVersion"
    type: "UB"
  }
  field {
    name: "SizeOfCode"
    type: "UI"
  }
  field {
    name: "SizeOfInitializedData"
    type: "UI"
  }
  field {
    name: "SizeOfUninitializedData"
    type: "UI"
  }
  field {
    name: "AddressOfEntryPoint"
    type: "UI"
  }
  field {
    name: "BaseOfCode"
    type: "UI"
  }
  field {
    name: "ImageBase"
    type: "UI"
  }
  field {
    name: "SectionAlignment"
    type: "UI"
  }
  field {
    name: "FileAlignment"
    type: "UI"
  }
  field {
    name: "MajorOperatingSystemVersion"
    type: "US"
  }
  field {
    name: "MinorOperatingSystemVersion"
    type: "US"
  }
  field {
    name: "MajorImageVersion"
    type: "US"
  }
  field {
    name: "MinorImageVersion"
    type: "US"
  }
  field {
    name: "MajorSubsystemVersion"
    type: "US"
  }
  field {
    name: "MinorSubsystemVersion"
    type: "US"
  }
  field {
    name: "Win32VersionValue"
    type: "UI"
  }
  field {
    name: "SizeOfImage"
    type: "UI"
  }
  field {
    name: "SizeOfHeaders"
    type: "UI"
  }
  field {
    name: "CheckSum"
    type: "UI"
  }
  field {
    name: "Subsystem"
    type: "US"
  }
  field {
    name: "DllCharacteristics"
    type: "US"
  }
  field {
    name: "SizeOfStackReserve"
    type: "UI"
  }
  field {
    name: "SizeOfStackCommit"
    type: "UI"
  }
  field {
    name: "SizeOfHeapReserve"
    type: "UI"
  }
  field {
    name: "SizeOfHeapCommit"
    type: "UI"
  }
  field {
    name: "LoaderFlags"
    type: "UI"
  }
  field {
    name: "NumberOfRvaAndSizes"
    type: "UI"
  }
  field {
    name: "DataDirectory"
    type: "X(ConstantArray.IMAGE_DATA_DIRECTORY [16])"
  }
}
struct {
  name: "_IMAGE_NT_HEADERS64"
  field {
    name: "Signature"
    type: "UI"
  }
  field {
    name: "FileHeader"
    type: "R_IMAGE_FILE_HEADER;"
  }
  field {
    name: "OptionalHeader"
    type: "R_IMAGE_OPTIONAL_HEADER64;"
  }
}
struct {
  name: "_IMAGE_NT_HEADERS64"
  field {
    name: "Signature"
    type: "UI"
  }
  field {
    name: "FileHeader"
    type: "R_IMAGE_FILE_HEADER;"
  }
  field {
    name: "OptionalHeader"
    type: "R_IMAGE_OPTIONAL_HEADER64;"
  }
}
struct {
  name: "_IMAGE_OPTIONAL_HEADER"
  field {
    name: "Magic"
    type: "US"
  }
  field {
    name: "MajorLinkerVersion"
    type: "UB"
  }
  field {
    name: "MinorLinkerVersion"
    type: "UB"
  }
  field {
    name: "SizeOfCode"
    type: "UI"
  }
  field {
    name: "SizeOfInitializedData"
    type: "UI"
  }
  field {
    name: "SizeOfUninitializedData"
    type: "UI"
  }
  field {
    name: "AddressOfEntryPoint"
    type: "UI"
  }
  field {
    name: "BaseOfCode"
    type: "UI"
  }
  field {
    name: "BaseOfData"
    type: "UI"
  }
  field {
    name: "ImageBase"
    type: "UI"
  }
  field {
    name: "SectionAlignment"
    type: "UI"
  }
  field {
    name: "FileAlignment"
    type: "UI"
  }
  field {
    name: "MajorOperatingSystemVersion"
    type: "US"
  }
  field {
    name: "MinorOperatingSystemVersion"
    type: "US"
  }
  field {
    name: "MajorImageVersion"
    type: "US"
  }
  field {
    name: "MinorImageVersion"
    type: "US"
  }
  field {
    name: "MajorSubsystemVersion"
    type: "US"
  }
  field {
    name: "MinorSubsystemVersion"
    type: "US"
  }
  field {
    name: "Win32VersionValue"
    type: "UI"
  }
  field {
    name: "SizeOfImage"
    type: "UI"
  }
  field {
    name: "SizeOfHeaders"
    type: "UI"
  }
  field {
    name: "CheckSum"
    type: "UI"
  }
  field {
    name: "Subsystem"
    type: "US"
  }
  field {
    name: "DllCharacteristics"
    type: "US"
  }
  field {
    name: "SizeOfStackReserve"
    type: "UI"
  }
  field {
    name: "SizeOfStackCommit"
    type: "UI"
  }
  field {
    name: "SizeOfHeapReserve"
    type: "UI"
  }
  field {
    name: "SizeOfHeapCommit"
    type: "UI"
  }
  field {
    name: "LoaderFlags"
    type: "UI"
  }
  field {
    name: "NumberOfRvaAndSizes"
    type: "UI"
  }
  field {
    name: "DataDirectory"
    type: "X(ConstantArray.IMAGE_DATA_DIRECTORY [16])"
  }
}
struct {
  name: "_IMAGE_OPTIONAL_HEADER"
  field {
    name: "Magic"
    type: "US"
  }
  field {
    name: "MajorLinkerVersion"
    type: "UB"
  }
  field {
    name: "MinorLinkerVersion"
    type: "UB"
  }
  field {
    name: "SizeOfCode"
    type: "UI"
  }
  field {
    name: "SizeOfInitializedData"
    type: "UI"
  }
  field {
    name: "SizeOfUninitializedData"
    type: "UI"
  }
  field {
    name: "AddressOfEntryPoint"
    type: "UI"
  }
  field {
    name: "BaseOfCode"
    type: "UI"
  }
  field {
    name: "BaseOfData"
    type: "UI"
  }
  field {
    name: "ImageBase"
    type: "UI"
  }
  field {
    name: "SectionAlignment"
    type: "UI"
  }
  field {
    name: "FileAlignment"
    type: "UI"
  }
  field {
    name: "MajorOperatingSystemVersion"
    type: "US"
  }
  field {
    name: "MinorOperatingSystemVersion"
    type: "US"
  }
  field {
    name: "MajorImageVersion"
    type: "US"
  }
  field {
    name: "MinorImageVersion"
    type: "US"
  }
  field {
    name: "MajorSubsystemVersion"
    type: "US"
  }
  field {
    name: "MinorSubsystemVersion"
    type: "US"
  }
  field {
    name: "Win32VersionValue"
    type: "UI"
  }
  field {
    name: "SizeOfImage"
    type: "UI"
  }
  field {
    name: "SizeOfHeaders"
    type: "UI"
  }
  field {
    name: "CheckSum"
    type: "UI"
  }
  field {
    name: "Subsystem"
    type: "US"
  }
  field {
    name: "DllCharacteristics"
    type: "US"
  }
  field {
    name: "SizeOfStackReserve"
    type: "UI"
  }
  field {
    name: "SizeOfStackCommit"
    type: "UI"
  }
  field {
    name: "SizeOfHeapReserve"
    type: "UI"
  }
  field {
    name: "SizeOfHeapCommit"
    type: "UI"
  }
  field {
    name: "LoaderFlags"
    type: "UI"
  }
  field {
    name: "NumberOfRvaAndSizes"
    type: "UI"
  }
  field {
    name: "DataDirectory"
    type: "X(ConstantArray.IMAGE_DATA_DIRECTORY [16])"
  }
}
struct {
  name: "_IMAGE_NT_HEADERS"
  field {
    name: "Signature"
    type: "UI"
  }
  field {
    name: "FileHeader"
    type: "R_IMAGE_FILE_HEADER;"
  }
  field {
    name: "OptionalHeader"
    type: "R_IMAGE_OPTIONAL_HEADER;"
  }
}
struct {
  name: "_IMAGE_NT_HEADERS"
  field {
    name: "Signature"
    type: "UI"
  }
  field {
    name: "FileHeader"
    type: "R_IMAGE_FILE_HEADER;"
  }
  field {
    name: "OptionalHeader"
    type: "R_IMAGE_OPTIONAL_HEADER;"
  }
}
struct {
  name: "_IMAGE_SECTION_HEADER"
  field {
    name: "Name"
    type: "X(ConstantArray.BYTE [8])"
  }
  field {
    name: "Misc"
    type: "Runion _IMAGE_SECTION_HEADER::(anonymous at /usr/local/include/wine/windows/winnt.h:2686:3);"
  }
  field {
    name: "VirtualAddress"
    type: "UI"
  }
  field {
    name: "SizeOfRawData"
    type: "UI"
  }
  field {
    name: "PointerToRawData"
    type: "UI"
  }
  field {
    name: "PointerToRelocations"
    type: "UI"
  }
  field {
    name: "PointerToLinenumbers"
    type: "UI"
  }
  field {
    name: "NumberOfRelocations"
    type: "US"
  }
  field {
    name: "NumberOfLinenumbers"
    type: "US"
  }
  field {
    name: "Characteristics"
    type: "UI"
  }
}
struct {
  name: "_IMAGE_SECTION_HEADER"
  field {
    name: "Name"
    type: "X(ConstantArray.BYTE [8])"
  }
  field {
    name: "Misc"
    type: "Runion _IMAGE_SECTION_HEADER::(anonymous at /usr/local/include/wine/windows/winnt.h:2686:3);"
  }
  field {
    name: "VirtualAddress"
    type: "UI"
  }
  field {
    name: "SizeOfRawData"
    type: "UI"
  }
  field {
    name: "PointerToRawData"
    type: "UI"
  }
  field {
    name: "PointerToRelocations"
    type: "UI"
  }
  field {
    name: "PointerToLinenumbers"
    type: "UI"
  }
  field {
    name: "NumberOfRelocations"
    type: "US"
  }
  field {
    name: "NumberOfLinenumbers"
    type: "US"
  }
  field {
    name: "Characteristics"
    type: "UI"
  }
}
struct {
  name: "_IMAGE_SYMBOL"
  field {
    name: "N"
    type: "Runion _IMAGE_SYMBOL::(anonymous at /usr/local/include/wine/windows/winnt.h:2765:5);"
  }
  field {
    name: "Value"
    type: "UI"
  }
  field {
    name: "SectionNumber"
    type: "S"
  }
  field {
    name: "Type"
    type: "US"
  }
  field {
    name: "StorageClass"
    type: "UB"
  }
  field {
    name: "NumberOfAuxSymbols"
    type: "UB"
  }
}
struct {
  name: "struct _IMAGE_SYMBOL::(anonymous at /usr/local/include/wine/windows/winnt.h:2767:9)"
  field {
    name: "Short"
    type: "UI"
  }
  field {
    name: "Long"
    type: "UI"
  }
}
struct {
  name: "_IMAGE_LINENUMBER"
  field {
    name: "Type"
    type: "Runion _IMAGE_LINENUMBER::(anonymous at /usr/local/include/wine/windows/winnt.h:2784:5);"
  }
  field {
    name: "Linenumber"
    type: "US"
  }
}
struct {
  name: "struct _IMAGE_AUX_SYMBOL::(anonymous at /usr/local/include/wine/windows/winnt.h:2795:5)"
  field {
    name: "TagIndex"
    type: "UI"
  }
  field {
    name: "Misc"
    type: "Runion _IMAGE_AUX_SYMBOL::(anonymous at /usr/local/include/wine/windows/winnt.h:2797:9);"
  }
  field {
    name: "FcnAry"
    type: "Runion _IMAGE_AUX_SYMBOL::(anonymous at /usr/local/include/wine/windows/winnt.h:2804:9);"
  }
  field {
    name: "TvIndex"
    type: "US"
  }
}
struct {
  name: "struct _IMAGE_AUX_SYMBOL::(anonymous at /usr/local/include/wine/windows/winnt.h:2798:13)"
  field {
    name: "Linenumber"
    type: "US"
  }
  field {
    name: "Size"
    type: "US"
  }
}
struct {
  name: "struct _IMAGE_AUX_SYMBOL::(anonymous at /usr/local/include/wine/windows/winnt.h:2805:13)"
  field {
    name: "PointerToLinenumber"
    type: "UI"
  }
  field {
    name: "PointerToNextFunction"
    type: "UI"
  }
}
struct {
  name: "struct _IMAGE_AUX_SYMBOL::(anonymous at /usr/local/include/wine/windows/winnt.h:2809:13)"
  field {
    name: "Dimension"
    type: "X(ConstantArray.WORD [4])"
  }
}
struct {
  name: "struct _IMAGE_AUX_SYMBOL::(anonymous at /usr/local/include/wine/windows/winnt.h:2815:5)"
  field {
    name: "Name"
    type: "X(ConstantArray.BYTE [18])"
  }
}
struct {
  name: "struct _IMAGE_AUX_SYMBOL::(anonymous at /usr/local/include/wine/windows/winnt.h:2818:5)"
  field {
    name: "Length"
    type: "UI"
  }
  field {
    name: "NumberOfRelocations"
    type: "US"
  }
  field {
    name: "NumberOfLinenumbers"
    type: "US"
  }
  field {
    name: "CheckSum"
    type: "UI"
  }
  field {
    name: "Number"
    type: "S"
  }
  field {
    name: "Selection"
    type: "UB"
  }
}
struct {
  name: "_IMAGE_EXPORT_DIRECTORY"
  field {
    name: "Characteristics"
    type: "UI"
  }
  field {
    name: "TimeDateStamp"
    type: "UI"
  }
  field {
    name: "MajorVersion"
    type: "US"
  }
  field {
    name: "MinorVersion"
    type: "US"
  }
  field {
    name: "Name"
    type: "UI"
  }
  field {
    name: "Base"
    type: "UI"
  }
  field {
    name: "NumberOfFunctions"
    type: "UI"
  }
  field {
    name: "NumberOfNames"
    type: "UI"
  }
  field {
    name: "AddressOfFunctions"
    type: "UI"
  }
  field {
    name: "AddressOfNames"
    type: "UI"
  }
  field {
    name: "AddressOfNameOrdinals"
    type: "UI"
  }
}
struct {
  name: "_IMAGE_EXPORT_DIRECTORY"
  field {
    name: "Characteristics"
    type: "UI"
  }
  field {
    name: "TimeDateStamp"
    type: "UI"
  }
  field {
    name: "MajorVersion"
    type: "US"
  }
  field {
    name: "MinorVersion"
    type: "US"
  }
  field {
    name: "Name"
    type: "UI"
  }
  field {
    name: "Base"
    type: "UI"
  }
  field {
    name: "NumberOfFunctions"
    type: "UI"
  }
  field {
    name: "NumberOfNames"
    type: "UI"
  }
  field {
    name: "AddressOfFunctions"
    type: "UI"
  }
  field {
    name: "AddressOfNames"
    type: "UI"
  }
  field {
    name: "AddressOfNameOrdinals"
    type: "UI"
  }
}
struct {
  name: "_IMAGE_IMPORT_BY_NAME"
  field {
    name: "Hint"
    type: "US"
  }
  field {
    name: "Name"
    type: "X(ConstantArray.BYTE [1])"
  }
}
struct {
  name: "_IMAGE_IMPORT_BY_NAME"
  field {
    name: "Hint"
    type: "US"
  }
  field {
    name: "Name"
    type: "X(ConstantArray.BYTE [1])"
  }
}
struct {
  name: "_IMAGE_THUNK_DATA64"
  field {
    name: "u1"
    type: "Runion _IMAGE_THUNK_DATA64::(anonymous at /usr/local/include/wine/windows/winnt.h:2958:2);"
  }
}
struct {
  name: "_IMAGE_THUNK_DATA64"
  field {
    name: "u1"
    type: "Runion _IMAGE_THUNK_DATA64::(anonymous at /usr/local/include/wine/windows/winnt.h:2958:2);"
  }
}
struct {
  name: "_IMAGE_THUNK_DATA32"
  field {
    name: "u1"
    type: "Runion _IMAGE_THUNK_DATA32::(anonymous at /usr/local/include/wine/windows/winnt.h:2968:2);"
  }
}
struct {
  name: "_IMAGE_THUNK_DATA32"
  field {
    name: "u1"
    type: "Runion _IMAGE_THUNK_DATA32::(anonymous at /usr/local/include/wine/windows/winnt.h:2968:2);"
  }
}
struct {
  name: "_IMAGE_IMPORT_DESCRIPTOR"
  field {
    name: "TimeDateStamp"
    type: "UI"
  }
  field {
    name: "ForwarderChain"
    type: "UI"
  }
  field {
    name: "Name"
    type: "UI"
  }
  field {
    name: "FirstThunk"
    type: "UI"
  }
}
struct {
  name: "_IMAGE_IMPORT_DESCRIPTOR"
  field {
    name: "TimeDateStamp"
    type: "UI"
  }
  field {
    name: "ForwarderChain"
    type: "UI"
  }
  field {
    name: "Name"
    type: "UI"
  }
  field {
    name: "FirstThunk"
    type: "UI"
  }
}
struct {
  name: "_IMAGE_BOUND_IMPORT_DESCRIPTOR"
  field {
    name: "TimeDateStamp"
    type: "UI"
  }
  field {
    name: "OffsetModuleName"
    type: "US"
  }
  field {
    name: "NumberOfModuleForwarderRefs"
    type: "US"
  }
}
struct {
  name: "_IMAGE_BOUND_IMPORT_DESCRIPTOR"
  field {
    name: "TimeDateStamp"
    type: "UI"
  }
  field {
    name: "OffsetModuleName"
    type: "US"
  }
  field {
    name: "NumberOfModuleForwarderRefs"
    type: "US"
  }
}
struct {
  name: "_IMAGE_BOUND_FORWARDER_REF"
  field {
    name: "TimeDateStamp"
    type: "UI"
  }
  field {
    name: "OffsetModuleName"
    type: "US"
  }
  field {
    name: "Reserved"
    type: "US"
  }
}
struct {
  name: "_IMAGE_BOUND_FORWARDER_REF"
  field {
    name: "TimeDateStamp"
    type: "UI"
  }
  field {
    name: "OffsetModuleName"
    type: "US"
  }
  field {
    name: "Reserved"
    type: "US"
  }
}
struct {
  name: "_IMAGE_BASE_RELOCATION"
  field {
    name: "VirtualAddress"
    type: "UI"
  }
  field {
    name: "SizeOfBlock"
    type: "UI"
  }
}
struct {
  name: "_IMAGE_BASE_RELOCATION"
  field {
    name: "VirtualAddress"
    type: "UI"
  }
  field {
    name: "SizeOfBlock"
    type: "UI"
  }
}
struct {
  name: "_IMAGE_RELOCATION"
  field {
    name: "SymbolTableIndex"
    type: "UI"
  }
  field {
    name: "Type"
    type: "US"
  }
}
struct {
  name: "_IMAGE_RELOCATION"
  field {
    name: "SymbolTableIndex"
    type: "UI"
  }
  field {
    name: "Type"
    type: "US"
  }
}
struct {
  name: "_IMAGE_ARCHIVE_MEMBER_HEADER"
  field {
    name: "Name"
    type: "X(ConstantArray.BYTE [16])"
  }
  field {
    name: "Date"
    type: "X(ConstantArray.BYTE [12])"
  }
  field {
    name: "UserID"
    type: "X(ConstantArray.BYTE [6])"
  }
  field {
    name: "GroupID"
    type: "X(ConstantArray.BYTE [6])"
  }
  field {
    name: "Mode"
    type: "X(ConstantArray.BYTE [8])"
  }
  field {
    name: "Size"
    type: "X(ConstantArray.BYTE [10])"
  }
  field {
    name: "EndHeader"
    type: "X(ConstantArray.BYTE [2])"
  }
}
struct {
  name: "_IMAGE_ARCHIVE_MEMBER_HEADER"
  field {
    name: "Name"
    type: "X(ConstantArray.BYTE [16])"
  }
  field {
    name: "Date"
    type: "X(ConstantArray.BYTE [12])"
  }
  field {
    name: "UserID"
    type: "X(ConstantArray.BYTE [6])"
  }
  field {
    name: "GroupID"
    type: "X(ConstantArray.BYTE [6])"
  }
  field {
    name: "Mode"
    type: "X(ConstantArray.BYTE [8])"
  }
  field {
    name: "Size"
    type: "X(ConstantArray.BYTE [10])"
  }
  field {
    name: "EndHeader"
    type: "X(ConstantArray.BYTE [2])"
  }
}
struct {
  name: "_IMPORT_OBJECT_HEADER"
  field {
    name: "Sig1"
    type: "US"
  }
  field {
    name: "Sig2"
    type: "US"
  }
  field {
    name: "Version"
    type: "US"
  }
  field {
    name: "Machine"
    type: "US"
  }
  field {
    name: "TimeDateStamp"
    type: "UI"
  }
  field {
    name: "SizeOfData"
    type: "UI"
  }
  field {
    name: "Type"
    type: "US"
  }
  field {
    name: "NameType"
    type: "US"
  }
  field {
    name: "Reserved"
    type: "US"
  }
}
struct {
  name: "_ANON_OBJECT_HEADER"
  field {
    name: "Sig1"
    type: "US"
  }
  field {
    name: "Sig2"
    type: "US"
  }
  field {
    name: "Version"
    type: "US"
  }
  field {
    name: "Machine"
    type: "US"
  }
  field {
    name: "TimeDateStamp"
    type: "UI"
  }
  field {
    name: "ClassID"
    type: "R_GUID;"
  }
  field {
    name: "SizeOfData"
    type: "UI"
  }
}
struct {
  name: "_IMAGE_RESOURCE_DIRECTORY"
  field {
    name: "Characteristics"
    type: "UI"
  }
  field {
    name: "TimeDateStamp"
    type: "UI"
  }
  field {
    name: "MajorVersion"
    type: "US"
  }
  field {
    name: "MinorVersion"
    type: "US"
  }
  field {
    name: "NumberOfNamedEntries"
    type: "US"
  }
  field {
    name: "NumberOfIdEntries"
    type: "US"
  }
}
struct {
  name: "_IMAGE_RESOURCE_DIRECTORY"
  field {
    name: "Characteristics"
    type: "UI"
  }
  field {
    name: "TimeDateStamp"
    type: "UI"
  }
  field {
    name: "MajorVersion"
    type: "US"
  }
  field {
    name: "MinorVersion"
    type: "US"
  }
  field {
    name: "NumberOfNamedEntries"
    type: "US"
  }
  field {
    name: "NumberOfIdEntries"
    type: "US"
  }
}
struct {
  name: "_IMAGE_RESOURCE_DIRECTORY_ENTRY"
}
struct {
  name: "struct _IMAGE_RESOURCE_DIRECTORY_ENTRY::(anonymous at /usr/local/include/wine/windows/winnt.h:3338:3)"
  field {
    name: "NameOffset"
    type: "UI"
  }
  field {
    name: "NameIsString"
    type: "UI"
  }
}
struct {
  name: "struct _IMAGE_RESOURCE_DIRECTORY_ENTRY::(anonymous at /usr/local/include/wine/windows/winnt.h:3358:3)"
  field {
    name: "OffsetToDirectory"
    type: "UI"
  }
  field {
    name: "DataIsDirectory"
    type: "UI"
  }
}
struct {
  name: "_IMAGE_RESOURCE_DIRECTORY_ENTRY"
}
struct {
  name: "struct _IMAGE_RESOURCE_DIRECTORY_ENTRY::(anonymous at /usr/local/include/wine/windows/winnt.h:3338:3)"
  field {
    name: "NameOffset"
    type: "UI"
  }
  field {
    name: "NameIsString"
    type: "UI"
  }
}
struct {
  name: "struct _IMAGE_RESOURCE_DIRECTORY_ENTRY::(anonymous at /usr/local/include/wine/windows/winnt.h:3358:3)"
  field {
    name: "OffsetToDirectory"
    type: "UI"
  }
  field {
    name: "DataIsDirectory"
    type: "UI"
  }
}
struct {
  name: "_IMAGE_RESOURCE_DIRECTORY_STRING"
  field {
    name: "Length"
    type: "US"
  }
  field {
    name: "NameString"
    type: "X(ConstantArray.CHAR [1])"
  }
}
struct {
  name: "_IMAGE_RESOURCE_DIRECTORY_STRING"
  field {
    name: "Length"
    type: "US"
  }
  field {
    name: "NameString"
    type: "X(ConstantArray.CHAR [1])"
  }
}
struct {
  name: "_IMAGE_RESOURCE_DIR_STRING_U"
  field {
    name: "Length"
    type: "US"
  }
  field {
    name: "NameString"
    type: "X(ConstantArray.WCHAR [1])"
  }
}
struct {
  name: "_IMAGE_RESOURCE_DIR_STRING_U"
  field {
    name: "Length"
    type: "US"
  }
  field {
    name: "NameString"
    type: "X(ConstantArray.WCHAR [1])"
  }
}
struct {
  name: "_IMAGE_RESOURCE_DATA_ENTRY"
  field {
    name: "OffsetToData"
    type: "UI"
  }
  field {
    name: "Size"
    type: "UI"
  }
  field {
    name: "CodePage"
    type: "UI"
  }
  field {
    name: "Reserved"
    type: "UI"
  }
}
struct {
  name: "_IMAGE_RESOURCE_DATA_ENTRY"
  field {
    name: "OffsetToData"
    type: "UI"
  }
  field {
    name: "Size"
    type: "UI"
  }
  field {
    name: "CodePage"
    type: "UI"
  }
  field {
    name: "Reserved"
    type: "UI"
  }
}
struct {
  name: "_IMAGE_TLS_DIRECTORY64"
  field {
    name: "StartAddressOfRawData"
    type: "UI"
  }
  field {
    name: "EndAddressOfRawData"
    type: "UI"
  }
  field {
    name: "AddressOfIndex"
    type: "UI"
  }
  field {
    name: "AddressOfCallBacks"
    type: "UI"
  }
  field {
    name: "SizeOfZeroFill"
    type: "UI"
  }
  field {
    name: "Characteristics"
    type: "UI"
  }
}
struct {
  name: "_IMAGE_TLS_DIRECTORY64"
  field {
    name: "StartAddressOfRawData"
    type: "UI"
  }
  field {
    name: "EndAddressOfRawData"
    type: "UI"
  }
  field {
    name: "AddressOfIndex"
    type: "UI"
  }
  field {
    name: "AddressOfCallBacks"
    type: "UI"
  }
  field {
    name: "SizeOfZeroFill"
    type: "UI"
  }
  field {
    name: "Characteristics"
    type: "UI"
  }
}
struct {
  name: "_IMAGE_TLS_DIRECTORY32"
  field {
    name: "StartAddressOfRawData"
    type: "UI"
  }
  field {
    name: "EndAddressOfRawData"
    type: "UI"
  }
  field {
    name: "AddressOfIndex"
    type: "UI"
  }
  field {
    name: "AddressOfCallBacks"
    type: "UI"
  }
  field {
    name: "SizeOfZeroFill"
    type: "UI"
  }
  field {
    name: "Characteristics"
    type: "UI"
  }
}
struct {
  name: "_IMAGE_TLS_DIRECTORY32"
  field {
    name: "StartAddressOfRawData"
    type: "UI"
  }
  field {
    name: "EndAddressOfRawData"
    type: "UI"
  }
  field {
    name: "AddressOfIndex"
    type: "UI"
  }
  field {
    name: "AddressOfCallBacks"
    type: "UI"
  }
  field {
    name: "SizeOfZeroFill"
    type: "UI"
  }
  field {
    name: "Characteristics"
    type: "UI"
  }
}
struct {
  name: "_IMAGE_DEBUG_DIRECTORY"
  field {
    name: "Characteristics"
    type: "UI"
  }
  field {
    name: "TimeDateStamp"
    type: "UI"
  }
  field {
    name: "MajorVersion"
    type: "US"
  }
  field {
    name: "MinorVersion"
    type: "US"
  }
  field {
    name: "Type"
    type: "UI"
  }
  field {
    name: "SizeOfData"
    type: "UI"
  }
  field {
    name: "AddressOfRawData"
    type: "UI"
  }
  field {
    name: "PointerToRawData"
    type: "UI"
  }
}
struct {
  name: "_IMAGE_DEBUG_DIRECTORY"
  field {
    name: "Characteristics"
    type: "UI"
  }
  field {
    name: "TimeDateStamp"
    type: "UI"
  }
  field {
    name: "MajorVersion"
    type: "US"
  }
  field {
    name: "MinorVersion"
    type: "US"
  }
  field {
    name: "Type"
    type: "UI"
  }
  field {
    name: "SizeOfData"
    type: "UI"
  }
  field {
    name: "AddressOfRawData"
    type: "UI"
  }
  field {
    name: "PointerToRawData"
    type: "UI"
  }
}
struct {
  name: "IMAGE_COR20_HEADER"
  field {
    name: "cb"
    type: "UI"
  }
  field {
    name: "MajorRuntimeVersion"
    type: "US"
  }
  field {
    name: "MinorRuntimeVersion"
    type: "US"
  }
  field {
    name: "MetaData"
    type: "R_IMAGE_DATA_DIRECTORY;"
  }
  field {
    name: "Flags"
    type: "UI"
  }
  field {
    name: "Resources"
    type: "R_IMAGE_DATA_DIRECTORY;"
  }
  field {
    name: "StrongNameSignature"
    type: "R_IMAGE_DATA_DIRECTORY;"
  }
  field {
    name: "CodeManagerTable"
    type: "R_IMAGE_DATA_DIRECTORY;"
  }
  field {
    name: "VTableFixups"
    type: "R_IMAGE_DATA_DIRECTORY;"
  }
  field {
    name: "ExportAddressTableJumps"
    type: "R_IMAGE_DATA_DIRECTORY;"
  }
  field {
    name: "ManagedNativeHeader"
    type: "R_IMAGE_DATA_DIRECTORY;"
  }
}
struct {
  name: "IMAGE_COR20_HEADER"
  field {
    name: "cb"
    type: "UI"
  }
  field {
    name: "MajorRuntimeVersion"
    type: "US"
  }
  field {
    name: "MinorRuntimeVersion"
    type: "US"
  }
  field {
    name: "MetaData"
    type: "R_IMAGE_DATA_DIRECTORY;"
  }
  field {
    name: "Flags"
    type: "UI"
  }
  field {
    name: "Resources"
    type: "R_IMAGE_DATA_DIRECTORY;"
  }
  field {
    name: "StrongNameSignature"
    type: "R_IMAGE_DATA_DIRECTORY;"
  }
  field {
    name: "CodeManagerTable"
    type: "R_IMAGE_DATA_DIRECTORY;"
  }
  field {
    name: "VTableFixups"
    type: "R_IMAGE_DATA_DIRECTORY;"
  }
  field {
    name: "ExportAddressTableJumps"
    type: "R_IMAGE_DATA_DIRECTORY;"
  }
  field {
    name: "ManagedNativeHeader"
    type: "R_IMAGE_DATA_DIRECTORY;"
  }
}
struct {
  name: "_IMAGE_COFF_SYMBOLS_HEADER"
  field {
    name: "NumberOfSymbols"
    type: "UI"
  }
  field {
    name: "LvaToFirstSymbol"
    type: "UI"
  }
  field {
    name: "NumberOfLinenumbers"
    type: "UI"
  }
  field {
    name: "LvaToFirstLinenumber"
    type: "UI"
  }
  field {
    name: "RvaToFirstByteOfCode"
    type: "UI"
  }
  field {
    name: "RvaToLastByteOfCode"
    type: "UI"
  }
  field {
    name: "RvaToFirstByteOfData"
    type: "UI"
  }
  field {
    name: "RvaToLastByteOfData"
    type: "UI"
  }
}
struct {
  name: "_IMAGE_COFF_SYMBOLS_HEADER"
  field {
    name: "NumberOfSymbols"
    type: "UI"
  }
  field {
    name: "LvaToFirstSymbol"
    type: "UI"
  }
  field {
    name: "NumberOfLinenumbers"
    type: "UI"
  }
  field {
    name: "LvaToFirstLinenumber"
    type: "UI"
  }
  field {
    name: "RvaToFirstByteOfCode"
    type: "UI"
  }
  field {
    name: "RvaToLastByteOfCode"
    type: "UI"
  }
  field {
    name: "RvaToFirstByteOfData"
    type: "UI"
  }
  field {
    name: "RvaToLastByteOfData"
    type: "UI"
  }
}
struct {
  name: "_FPO_DATA"
  field {
    name: "ulOffStart"
    type: "UI"
  }
  field {
    name: "cbProcSize"
    type: "UI"
  }
  field {
    name: "cdwLocals"
    type: "UI"
  }
  field {
    name: "cdwParams"
    type: "US"
  }
  field {
    name: "cbProlog"
    type: "US"
  }
  field {
    name: "cbRegs"
    type: "US"
  }
  field {
    name: "fHasSEH"
    type: "US"
  }
  field {
    name: "fUseBP"
    type: "US"
  }
  field {
    name: "reserved"
    type: "US"
  }
  field {
    name: "cbFrame"
    type: "US"
  }
}
struct {
  name: "_FPO_DATA"
  field {
    name: "ulOffStart"
    type: "UI"
  }
  field {
    name: "cbProcSize"
    type: "UI"
  }
  field {
    name: "cdwLocals"
    type: "UI"
  }
  field {
    name: "cdwParams"
    type: "US"
  }
  field {
    name: "cbProlog"
    type: "US"
  }
  field {
    name: "cbRegs"
    type: "US"
  }
  field {
    name: "fHasSEH"
    type: "US"
  }
  field {
    name: "fUseBP"
    type: "US"
  }
  field {
    name: "reserved"
    type: "US"
  }
  field {
    name: "cbFrame"
    type: "US"
  }
}
struct {
  name: "_IMAGE_LOAD_CONFIG_DIRECTORY"
  field {
    name: "Size"
    type: "UI"
  }
  field {
    name: "TimeDateStamp"
    type: "UI"
  }
  field {
    name: "MajorVersion"
    type: "US"
  }
  field {
    name: "MinorVersion"
    type: "US"
  }
  field {
    name: "GlobalFlagsClear"
    type: "UI"
  }
  field {
    name: "GlobalFlagsSet"
    type: "UI"
  }
  field {
    name: "CriticalSectionDefaultTimeout"
    type: "UI"
  }
  field {
    name: "DeCommitFreeBlockThreshold"
    type: "UI"
  }
  field {
    name: "DeCommitTotalFreeThreshold"
    type: "UI"
  }
  field {
    name: "LockPrefixTable"
    type: "*V;"
  }
  field {
    name: "MaximumAllocationSize"
    type: "UI"
  }
  field {
    name: "VirtualMemoryThreshold"
    type: "UI"
  }
  field {
    name: "ProcessHeapFlags"
    type: "UI"
  }
  field {
    name: "ProcessAffinityMask"
    type: "UI"
  }
  field {
    name: "CSDVersion"
    type: "US"
  }
  field {
    name: "Reserved1"
    type: "US"
  }
  field {
    name: "EditList"
    type: "*V;"
  }
  field {
    name: "SecurityCookie"
    type: "UI"
  }
  field {
    name: "SEHandlerTable"
    type: "UI"
  }
  field {
    name: "SEHandlerCount"
    type: "UI"
  }
}
struct {
  name: "_IMAGE_LOAD_CONFIG_DIRECTORY"
  field {
    name: "Size"
    type: "UI"
  }
  field {
    name: "TimeDateStamp"
    type: "UI"
  }
  field {
    name: "MajorVersion"
    type: "US"
  }
  field {
    name: "MinorVersion"
    type: "US"
  }
  field {
    name: "GlobalFlagsClear"
    type: "UI"
  }
  field {
    name: "GlobalFlagsSet"
    type: "UI"
  }
  field {
    name: "CriticalSectionDefaultTimeout"
    type: "UI"
  }
  field {
    name: "DeCommitFreeBlockThreshold"
    type: "UI"
  }
  field {
    name: "DeCommitTotalFreeThreshold"
    type: "UI"
  }
  field {
    name: "LockPrefixTable"
    type: "*V;"
  }
  field {
    name: "MaximumAllocationSize"
    type: "UI"
  }
  field {
    name: "VirtualMemoryThreshold"
    type: "UI"
  }
  field {
    name: "ProcessHeapFlags"
    type: "UI"
  }
  field {
    name: "ProcessAffinityMask"
    type: "UI"
  }
  field {
    name: "CSDVersion"
    type: "US"
  }
  field {
    name: "Reserved1"
    type: "US"
  }
  field {
    name: "EditList"
    type: "*V;"
  }
  field {
    name: "SecurityCookie"
    type: "UI"
  }
  field {
    name: "SEHandlerTable"
    type: "UI"
  }
  field {
    name: "SEHandlerCount"
    type: "UI"
  }
}
struct {
  name: "_IMAGE_FUNCTION_ENTRY"
  field {
    name: "StartingAddress"
    type: "UI"
  }
  field {
    name: "EndingAddress"
    type: "UI"
  }
  field {
    name: "EndOfPrologue"
    type: "UI"
  }
}
struct {
  name: "_IMAGE_FUNCTION_ENTRY"
  field {
    name: "StartingAddress"
    type: "UI"
  }
  field {
    name: "EndingAddress"
    type: "UI"
  }
  field {
    name: "EndOfPrologue"
    type: "UI"
  }
}
struct {
  name: "_IMAGE_DEBUG_MISC"
  field {
    name: "DataType"
    type: "UI"
  }
  field {
    name: "Length"
    type: "UI"
  }
  field {
    name: "Unicode"
    type: "UB"
  }
  field {
    name: "Reserved"
    type: "X(ConstantArray.BYTE [3])"
  }
  field {
    name: "Data"
    type: "X(ConstantArray.BYTE [1])"
  }
}
struct {
  name: "_IMAGE_DEBUG_MISC"
  field {
    name: "DataType"
    type: "UI"
  }
  field {
    name: "Length"
    type: "UI"
  }
  field {
    name: "Unicode"
    type: "UB"
  }
  field {
    name: "Reserved"
    type: "X(ConstantArray.BYTE [3])"
  }
  field {
    name: "Data"
    type: "X(ConstantArray.BYTE [1])"
  }
}
struct {
  name: "_IMAGE_SEPARATE_DEBUG_HEADER"
  field {
    name: "Signature"
    type: "US"
  }
  field {
    name: "Flags"
    type: "US"
  }
  field {
    name: "Machine"
    type: "US"
  }
  field {
    name: "Characteristics"
    type: "US"
  }
  field {
    name: "TimeDateStamp"
    type: "UI"
  }
  field {
    name: "CheckSum"
    type: "UI"
  }
  field {
    name: "ImageBase"
    type: "UI"
  }
  field {
    name: "SizeOfImage"
    type: "UI"
  }
  field {
    name: "NumberOfSections"
    type: "UI"
  }
  field {
    name: "ExportedNamesSize"
    type: "UI"
  }
  field {
    name: "DebugDirectorySize"
    type: "UI"
  }
  field {
    name: "SectionAlignment"
    type: "UI"
  }
  field {
    name: "Reserved"
    type: "X(ConstantArray.DWORD [2])"
  }
}
struct {
  name: "_IMAGE_SEPARATE_DEBUG_HEADER"
  field {
    name: "Signature"
    type: "US"
  }
  field {
    name: "Flags"
    type: "US"
  }
  field {
    name: "Machine"
    type: "US"
  }
  field {
    name: "Characteristics"
    type: "US"
  }
  field {
    name: "TimeDateStamp"
    type: "UI"
  }
  field {
    name: "CheckSum"
    type: "UI"
  }
  field {
    name: "ImageBase"
    type: "UI"
  }
  field {
    name: "SizeOfImage"
    type: "UI"
  }
  field {
    name: "NumberOfSections"
    type: "UI"
  }
  field {
    name: "ExportedNamesSize"
    type: "UI"
  }
  field {
    name: "DebugDirectorySize"
    type: "UI"
  }
  field {
    name: "SectionAlignment"
    type: "UI"
  }
  field {
    name: "Reserved"
    type: "X(ConstantArray.DWORD [2])"
  }
}
struct {
  name: "tagMESSAGE_RESOURCE_ENTRY"
  field {
    name: "Length"
    type: "US"
  }
  field {
    name: "Flags"
    type: "US"
  }
  field {
    name: "Text"
    type: "X(ConstantArray.BYTE [1])"
  }
}
struct {
  name: "tagMESSAGE_RESOURCE_ENTRY"
  field {
    name: "Length"
    type: "US"
  }
  field {
    name: "Flags"
    type: "US"
  }
  field {
    name: "Text"
    type: "X(ConstantArray.BYTE [1])"
  }
}
struct {
  name: "tagMESSAGE_RESOURCE_BLOCK"
  field {
    name: "LowId"
    type: "UI"
  }
  field {
    name: "HighId"
    type: "UI"
  }
  field {
    name: "OffsetToEntries"
    type: "UI"
  }
}
struct {
  name: "tagMESSAGE_RESOURCE_BLOCK"
  field {
    name: "LowId"
    type: "UI"
  }
  field {
    name: "HighId"
    type: "UI"
  }
  field {
    name: "OffsetToEntries"
    type: "UI"
  }
}
struct {
  name: "tagMESSAGE_RESOURCE_DATA"
  field {
    name: "NumberOfBlocks"
    type: "UI"
  }
  field {
    name: "Blocks"
    type: "X(ConstantArray.MESSAGE_RESOURCE_BLOCK [1])"
  }
}
struct {
  name: "tagMESSAGE_RESOURCE_DATA"
  field {
    name: "NumberOfBlocks"
    type: "UI"
  }
  field {
    name: "Blocks"
    type: "X(ConstantArray.MESSAGE_RESOURCE_BLOCK [1])"
  }
}
struct {
  name: "_GENERIC_MAPPING"
  field {
    name: "GenericRead"
    type: "UI"
  }
  field {
    name: "GenericWrite"
    type: "UI"
  }
  field {
    name: "GenericExecute"
    type: "UI"
  }
  field {
    name: "GenericAll"
    type: "UI"
  }
}
struct {
  name: "_GENERIC_MAPPING"
  field {
    name: "GenericRead"
    type: "UI"
  }
  field {
    name: "GenericWrite"
    type: "UI"
  }
  field {
    name: "GenericExecute"
    type: "UI"
  }
  field {
    name: "GenericAll"
    type: "UI"
  }
}
struct {
  name: "SID_IDENTIFIER_AUTHORITY"
  field {
    name: "Value"
    type: "X(ConstantArray.BYTE [6])"
  }
}
struct {
  name: "SID_IDENTIFIER_AUTHORITY"
  field {
    name: "Value"
    type: "X(ConstantArray.BYTE [6])"
  }
}
struct {
  name: "_SID"
  field {
    name: "Revision"
    type: "UB"
  }
  field {
    name: "SubAuthorityCount"
    type: "UB"
  }
  field {
    name: "IdentifierAuthority"
    type: "RSID_IDENTIFIER_AUTHORITY;"
  }
  field {
    name: "SubAuthority"
    type: "X(ConstantArray.DWORD [1])"
  }
}
struct {
  name: "_SID"
  field {
    name: "Revision"
    type: "UB"
  }
  field {
    name: "SubAuthorityCount"
    type: "UB"
  }
  field {
    name: "IdentifierAuthority"
    type: "RSID_IDENTIFIER_AUTHORITY;"
  }
  field {
    name: "SubAuthority"
    type: "X(ConstantArray.DWORD [1])"
  }
}
struct {
  name: "_ACL"
  field {
    name: "AclRevision"
    type: "UB"
  }
  field {
    name: "Sbz1"
    type: "UB"
  }
  field {
    name: "AclSize"
    type: "US"
  }
  field {
    name: "AceCount"
    type: "US"
  }
  field {
    name: "Sbz2"
    type: "US"
  }
}
struct {
  name: "_ACL"
  field {
    name: "AclRevision"
    type: "UB"
  }
  field {
    name: "Sbz1"
    type: "UB"
  }
  field {
    name: "AclSize"
    type: "US"
  }
  field {
    name: "AceCount"
    type: "US"
  }
  field {
    name: "Sbz2"
    type: "US"
  }
}
struct {
  name: "_ACL_REVISION_INFORMATION"
  field {
    name: "AclRevision"
    type: "UI"
  }
}
struct {
  name: "_ACL_REVISION_INFORMATION"
  field {
    name: "AclRevision"
    type: "UI"
  }
}
struct {
  name: "_ACL_SIZE_INFORMATION"
  field {
    name: "AceCount"
    type: "UI"
  }
  field {
    name: "AclBytesInUse"
    type: "UI"
  }
  field {
    name: "AclBytesFree"
    type: "UI"
  }
}
struct {
  name: "_ACL_SIZE_INFORMATION"
  field {
    name: "AceCount"
    type: "UI"
  }
  field {
    name: "AclBytesInUse"
    type: "UI"
  }
  field {
    name: "AclBytesFree"
    type: "UI"
  }
}
struct {
  name: "SECURITY_DESCRIPTOR_RELATIVE"
  field {
    name: "Revision"
    type: "UB"
  }
  field {
    name: "Sbz1"
    type: "UB"
  }
  field {
    name: "Control"
    type: "US"
  }
  field {
    name: "Owner"
    type: "UI"
  }
  field {
    name: "Group"
    type: "UI"
  }
  field {
    name: "Sacl"
    type: "UI"
  }
  field {
    name: "Dacl"
    type: "UI"
  }
}
struct {
  name: "SECURITY_DESCRIPTOR_RELATIVE"
  field {
    name: "Revision"
    type: "UB"
  }
  field {
    name: "Sbz1"
    type: "UB"
  }
  field {
    name: "Control"
    type: "US"
  }
  field {
    name: "Owner"
    type: "UI"
  }
  field {
    name: "Group"
    type: "UI"
  }
  field {
    name: "Sacl"
    type: "UI"
  }
  field {
    name: "Dacl"
    type: "UI"
  }
}
struct {
  name: "SECURITY_DESCRIPTOR"
  field {
    name: "Revision"
    type: "UB"
  }
  field {
    name: "Sbz1"
    type: "UB"
  }
  field {
    name: "Control"
    type: "US"
  }
  field {
    name: "Owner"
    type: "*V;"
  }
  field {
    name: "Group"
    type: "*V;"
  }
  field {
    name: "Sacl"
    type: "*R_ACL;;"
  }
  field {
    name: "Dacl"
    type: "*R_ACL;;"
  }
}
struct {
  name: "SECURITY_DESCRIPTOR"
  field {
    name: "Revision"
    type: "UB"
  }
  field {
    name: "Sbz1"
    type: "UB"
  }
  field {
    name: "Control"
    type: "US"
  }
  field {
    name: "Owner"
    type: "*V;"
  }
  field {
    name: "Group"
    type: "*V;"
  }
  field {
    name: "Sacl"
    type: "*R_ACL;;"
  }
  field {
    name: "Dacl"
    type: "*R_ACL;;"
  }
}
struct {
  name: "_SID_AND_ATTRIBUTES"
  field {
    name: "Sid"
    type: "*V;"
  }
  field {
    name: "Attributes"
    type: "UI"
  }
}
struct {
  name: "_SID_AND_ATTRIBUTES"
  field {
    name: "Sid"
    type: "*V;"
  }
  field {
    name: "Attributes"
    type: "UI"
  }
}
struct {
  name: "_TOKEN_USER"
  field {
    name: "User"
    type: "R_SID_AND_ATTRIBUTES;"
  }
}
struct {
  name: "_TOKEN_USER"
  field {
    name: "User"
    type: "R_SID_AND_ATTRIBUTES;"
  }
}
struct {
  name: "_TOKEN_GROUPS"
  field {
    name: "GroupCount"
    type: "UI"
  }
  field {
    name: "Groups"
    type: "X(ConstantArray.SID_AND_ATTRIBUTES [1])"
  }
}
struct {
  name: "_TOKEN_GROUPS"
  field {
    name: "GroupCount"
    type: "UI"
  }
  field {
    name: "Groups"
    type: "X(ConstantArray.SID_AND_ATTRIBUTES [1])"
  }
}
struct {
  name: "struct _LARGE_INTEGER::(anonymous at /usr/local/include/wine/windows/winnt.h:4181:5)"
  field {
    name: "LowPart"
    type: "UI"
  }
  field {
    name: "HighPart"
    type: "I"
  }
}
struct {
  name: "struct _LARGE_INTEGER::(anonymous at /usr/local/include/wine/windows/winnt.h:4191:5)"
  field {
    name: "LowPart"
    type: "UI"
  }
  field {
    name: "HighPart"
    type: "I"
  }
}
struct {
  name: "struct _LARGE_INTEGER::(anonymous at /usr/local/include/wine/windows/winnt.h:4181:5)"
  field {
    name: "LowPart"
    type: "UI"
  }
  field {
    name: "HighPart"
    type: "I"
  }
}
struct {
  name: "struct _LARGE_INTEGER::(anonymous at /usr/local/include/wine/windows/winnt.h:4191:5)"
  field {
    name: "LowPart"
    type: "UI"
  }
  field {
    name: "HighPart"
    type: "I"
  }
}
struct {
  name: "struct _ULARGE_INTEGER::(anonymous at /usr/local/include/wine/windows/winnt.h:4205:5)"
  field {
    name: "LowPart"
    type: "UI"
  }
  field {
    name: "HighPart"
    type: "UI"
  }
}
struct {
  name: "struct _ULARGE_INTEGER::(anonymous at /usr/local/include/wine/windows/winnt.h:4215:5)"
  field {
    name: "LowPart"
    type: "UI"
  }
  field {
    name: "HighPart"
    type: "UI"
  }
}
struct {
  name: "struct _ULARGE_INTEGER::(anonymous at /usr/local/include/wine/windows/winnt.h:4205:5)"
  field {
    name: "LowPart"
    type: "UI"
  }
  field {
    name: "HighPart"
    type: "UI"
  }
}
struct {
  name: "struct _ULARGE_INTEGER::(anonymous at /usr/local/include/wine/windows/winnt.h:4215:5)"
  field {
    name: "LowPart"
    type: "UI"
  }
  field {
    name: "HighPart"
    type: "UI"
  }
}
struct {
  name: "_LUID"
  field {
    name: "LowPart"
    type: "UI"
  }
  field {
    name: "HighPart"
    type: "I"
  }
}
struct {
  name: "_LUID"
  field {
    name: "LowPart"
    type: "UI"
  }
  field {
    name: "HighPart"
    type: "I"
  }
}
struct {
  name: "_LUID_AND_ATTRIBUTES"
  field {
    name: "Luid"
    type: "R_LUID;"
  }
  field {
    name: "Attributes"
    type: "UI"
  }
}
struct {
  name: "_LUID_AND_ATTRIBUTES"
  field {
    name: "Luid"
    type: "R_LUID;"
  }
  field {
    name: "Attributes"
    type: "UI"
  }
}
struct {
  name: "_PRIVILEGE_SET"
  field {
    name: "PrivilegeCount"
    type: "UI"
  }
  field {
    name: "Control"
    type: "UI"
  }
  field {
    name: "Privilege"
    type: "X(ConstantArray.LUID_AND_ATTRIBUTES [1])"
  }
}
struct {
  name: "_PRIVILEGE_SET"
  field {
    name: "PrivilegeCount"
    type: "UI"
  }
  field {
    name: "Control"
    type: "UI"
  }
  field {
    name: "Privilege"
    type: "X(ConstantArray.LUID_AND_ATTRIBUTES [1])"
  }
}
struct {
  name: "_TOKEN_PRIVILEGES"
  field {
    name: "PrivilegeCount"
    type: "UI"
  }
  field {
    name: "Privileges"
    type: "X(ConstantArray.LUID_AND_ATTRIBUTES [1])"
  }
}
struct {
  name: "_TOKEN_PRIVILEGES"
  field {
    name: "PrivilegeCount"
    type: "UI"
  }
  field {
    name: "Privileges"
    type: "X(ConstantArray.LUID_AND_ATTRIBUTES [1])"
  }
}
struct {
  name: "_TOKEN_OWNER"
  field {
    name: "Owner"
    type: "*V;"
  }
}
struct {
  name: "_TOKEN_OWNER"
  field {
    name: "Owner"
    type: "*V;"
  }
}
struct {
  name: "_TOKEN_PRIMARY_GROUP"
  field {
    name: "PrimaryGroup"
    type: "*V;"
  }
}
struct {
  name: "_TOKEN_PRIMARY_GROUP"
  field {
    name: "PrimaryGroup"
    type: "*V;"
  }
}
struct {
  name: "_TOKEN_DEFAULT_DACL"
  field {
    name: "DefaultDacl"
    type: "*R_ACL;;"
  }
}
struct {
  name: "_TOKEN_DEFAULT_DACL"
  field {
    name: "DefaultDacl"
    type: "*R_ACL;;"
  }
}
struct {
  name: "_TOKEN_SOURCE"
  field {
    name: "SourceName"
    type: "X(ConstantArray.char [8])"
  }
  field {
    name: "SourceIdentifier"
    type: "R_LUID;"
  }
}
struct {
  name: "_TOKEN_SOURCE"
  field {
    name: "SourceName"
    type: "X(ConstantArray.char [8])"
  }
  field {
    name: "SourceIdentifier"
    type: "R_LUID;"
  }
}
struct {
  name: "_SECURITY_QUALITY_OF_SERVICE"
  field {
    name: "Length"
    type: "UI"
  }
  field {
    name: "ImpersonationLevel"
    type: "X(Enum.enum _SECURITY_IMPERSONATION_LEVEL)"
  }
  field {
    name: "ContextTrackingMode"
    type: "UB"
  }
  field {
    name: "EffectiveOnly"
    type: "UB"
  }
}
struct {
  name: "_SECURITY_QUALITY_OF_SERVICE"
  field {
    name: "Length"
    type: "UI"
  }
  field {
    name: "ImpersonationLevel"
    type: "X(Enum.enum _SECURITY_IMPERSONATION_LEVEL)"
  }
  field {
    name: "ContextTrackingMode"
    type: "UB"
  }
  field {
    name: "EffectiveOnly"
    type: "UB"
  }
}
struct {
  name: "_TOKEN_STATISTICS"
  field {
    name: "TokenId"
    type: "R_LUID;"
  }
  field {
    name: "AuthenticationId"
    type: "R_LUID;"
  }
  field {
    name: "ExpirationTime"
    type: "Runion _LARGE_INTEGER;"
  }
  field {
    name: "TokenType"
    type: "X(Enum.enum tagTOKEN_TYPE)"
  }
  field {
    name: "ImpersonationLevel"
    type: "X(Enum.enum _SECURITY_IMPERSONATION_LEVEL)"
  }
  field {
    name: "DynamicCharged"
    type: "UI"
  }
  field {
    name: "DynamicAvailable"
    type: "UI"
  }
  field {
    name: "GroupCount"
    type: "UI"
  }
  field {
    name: "PrivilegeCount"
    type: "UI"
  }
  field {
    name: "ModifiedId"
    type: "R_LUID;"
  }
}
struct {
  name: "_TOKEN_GROUPS_AND_PRIVILEGES"
  field {
    name: "SidCount"
    type: "UI"
  }
  field {
    name: "SidLength"
    type: "UI"
  }
  field {
    name: "Sids"
    type: "*R_SID_AND_ATTRIBUTES;;"
  }
  field {
    name: "RestrictedSidCount"
    type: "UI"
  }
  field {
    name: "RestrictedSidLength"
    type: "UI"
  }
  field {
    name: "RestrictedSids"
    type: "*R_SID_AND_ATTRIBUTES;;"
  }
  field {
    name: "PrivilegeCount"
    type: "UI"
  }
  field {
    name: "PrivilegeLength"
    type: "UI"
  }
  field {
    name: "Privileges"
    type: "*R_LUID_AND_ATTRIBUTES;;"
  }
  field {
    name: "AuthenticationId"
    type: "R_LUID;"
  }
}
struct {
  name: "_TOKEN_GROUPS_AND_PRIVILEGES"
  field {
    name: "SidCount"
    type: "UI"
  }
  field {
    name: "SidLength"
    type: "UI"
  }
  field {
    name: "Sids"
    type: "*R_SID_AND_ATTRIBUTES;;"
  }
  field {
    name: "RestrictedSidCount"
    type: "UI"
  }
  field {
    name: "RestrictedSidLength"
    type: "UI"
  }
  field {
    name: "RestrictedSids"
    type: "*R_SID_AND_ATTRIBUTES;;"
  }
  field {
    name: "PrivilegeCount"
    type: "UI"
  }
  field {
    name: "PrivilegeLength"
    type: "UI"
  }
  field {
    name: "Privileges"
    type: "*R_LUID_AND_ATTRIBUTES;;"
  }
  field {
    name: "AuthenticationId"
    type: "R_LUID;"
  }
}
struct {
  name: "_TOKEN_ORIGIN"
  field {
    name: "OriginatingLogonSession"
    type: "R_LUID;"
  }
}
struct {
  name: "_TOKEN_ORIGIN"
  field {
    name: "OriginatingLogonSession"
    type: "R_LUID;"
  }
}
struct {
  name: "_TOKEN_LINKED_TOKEN"
  field {
    name: "LinkedToken"
    type: "*V;"
  }
}
struct {
  name: "_TOKEN_LINKED_TOKEN"
  field {
    name: "LinkedToken"
    type: "*V;"
  }
}
struct {
  name: "_TOKEN_ELEVATION"
  field {
    name: "TokenIsElevated"
    type: "UI"
  }
}
struct {
  name: "_TOKEN_ELEVATION"
  field {
    name: "TokenIsElevated"
    type: "UI"
  }
}
struct {
  name: "_TOKEN_MANDATORY_LABEL"
  field {
    name: "Label"
    type: "R_SID_AND_ATTRIBUTES;"
  }
}
struct {
  name: "_TOKEN_MANDATORY_LABEL"
  field {
    name: "Label"
    type: "R_SID_AND_ATTRIBUTES;"
  }
}
struct {
  name: "_ACE_HEADER"
  field {
    name: "AceType"
    type: "UB"
  }
  field {
    name: "AceFlags"
    type: "UB"
  }
  field {
    name: "AceSize"
    type: "US"
  }
}
struct {
  name: "_ACE_HEADER"
  field {
    name: "AceType"
    type: "UB"
  }
  field {
    name: "AceFlags"
    type: "UB"
  }
  field {
    name: "AceSize"
    type: "US"
  }
}
struct {
  name: "_ACCESS_ALLOWED_ACE"
  field {
    name: "Header"
    type: "R_ACE_HEADER;"
  }
  field {
    name: "Mask"
    type: "UI"
  }
  field {
    name: "SidStart"
    type: "UI"
  }
}
struct {
  name: "_ACCESS_ALLOWED_ACE"
  field {
    name: "Header"
    type: "R_ACE_HEADER;"
  }
  field {
    name: "Mask"
    type: "UI"
  }
  field {
    name: "SidStart"
    type: "UI"
  }
}
struct {
  name: "_ACCESS_DENIED_ACE"
  field {
    name: "Header"
    type: "R_ACE_HEADER;"
  }
  field {
    name: "Mask"
    type: "UI"
  }
  field {
    name: "SidStart"
    type: "UI"
  }
}
struct {
  name: "_ACCESS_DENIED_ACE"
  field {
    name: "Header"
    type: "R_ACE_HEADER;"
  }
  field {
    name: "Mask"
    type: "UI"
  }
  field {
    name: "SidStart"
    type: "UI"
  }
}
struct {
  name: "_SYSTEM_AUDIT_ACE"
  field {
    name: "Header"
    type: "R_ACE_HEADER;"
  }
  field {
    name: "Mask"
    type: "UI"
  }
  field {
    name: "SidStart"
    type: "UI"
  }
}
struct {
  name: "_SYSTEM_AUDIT_ACE"
  field {
    name: "Header"
    type: "R_ACE_HEADER;"
  }
  field {
    name: "Mask"
    type: "UI"
  }
  field {
    name: "SidStart"
    type: "UI"
  }
}
struct {
  name: "_SYSTEM_ALARM_ACE"
  field {
    name: "Header"
    type: "R_ACE_HEADER;"
  }
  field {
    name: "Mask"
    type: "UI"
  }
  field {
    name: "SidStart"
    type: "UI"
  }
}
struct {
  name: "_SYSTEM_ALARM_ACE"
  field {
    name: "Header"
    type: "R_ACE_HEADER;"
  }
  field {
    name: "Mask"
    type: "UI"
  }
  field {
    name: "SidStart"
    type: "UI"
  }
}
struct {
  name: "_QUOTA_LIMITS"
  field {
    name: "PagedPoolLimit"
    type: "UI"
  }
  field {
    name: "NonPagedPoolLimit"
    type: "UI"
  }
  field {
    name: "MinimumWorkingSetSize"
    type: "UI"
  }
  field {
    name: "MaximumWorkingSetSize"
    type: "UI"
  }
  field {
    name: "PagefileLimit"
    type: "UI"
  }
  field {
    name: "TimeLimit"
    type: "Runion _LARGE_INTEGER;"
  }
}
struct {
  name: "_QUOTA_LIMITS"
  field {
    name: "PagedPoolLimit"
    type: "UI"
  }
  field {
    name: "NonPagedPoolLimit"
    type: "UI"
  }
  field {
    name: "MinimumWorkingSetSize"
    type: "UI"
  }
  field {
    name: "MaximumWorkingSetSize"
    type: "UI"
  }
  field {
    name: "PagefileLimit"
    type: "UI"
  }
  field {
    name: "TimeLimit"
    type: "Runion _LARGE_INTEGER;"
  }
}
struct {
  name: "_QUOTA_LIMITS_EX"
  field {
    name: "PagedPoolLimit"
    type: "UI"
  }
  field {
    name: "NonPagedPoolLimit"
    type: "UI"
  }
  field {
    name: "MinimumWorkingSetSize"
    type: "UI"
  }
  field {
    name: "MaximumWorkingSetSize"
    type: "UI"
  }
  field {
    name: "PagefileLimit"
    type: "UI"
  }
  field {
    name: "TimeLimit"
    type: "Runion _LARGE_INTEGER;"
  }
  field {
    name: "Reserved1"
    type: "UI"
  }
  field {
    name: "Reserved2"
    type: "UI"
  }
  field {
    name: "Reserved3"
    type: "UI"
  }
  field {
    name: "Reserved4"
    type: "UI"
  }
  field {
    name: "Flags"
    type: "UI"
  }
  field {
    name: "Reserved5"
    type: "UI"
  }
}
struct {
  name: "_QUOTA_LIMITS_EX"
  field {
    name: "PagedPoolLimit"
    type: "UI"
  }
  field {
    name: "NonPagedPoolLimit"
    type: "UI"
  }
  field {
    name: "MinimumWorkingSetSize"
    type: "UI"
  }
  field {
    name: "MaximumWorkingSetSize"
    type: "UI"
  }
  field {
    name: "PagefileLimit"
    type: "UI"
  }
  field {
    name: "TimeLimit"
    type: "Runion _LARGE_INTEGER;"
  }
  field {
    name: "Reserved1"
    type: "UI"
  }
  field {
    name: "Reserved2"
    type: "UI"
  }
  field {
    name: "Reserved3"
    type: "UI"
  }
  field {
    name: "Reserved4"
    type: "UI"
  }
  field {
    name: "Flags"
    type: "UI"
  }
  field {
    name: "Reserved5"
    type: "UI"
  }
}
struct {
  name: "_ADMINISTRATOR_POWER_POLICY"
  field {
    name: "MinSleep"
    type: "X(Enum.enum _SYSTEM_POWER_STATE)"
  }
  field {
    name: "MaxSleep"
    type: "X(Enum.enum _SYSTEM_POWER_STATE)"
  }
  field {
    name: "MinVideoTimeout"
    type: "UI"
  }
  field {
    name: "MaxVideoTimeout"
    type: "UI"
  }
  field {
    name: "MinSpindownTimeout"
    type: "UI"
  }
  field {
    name: "MaxSpindownTimeout"
    type: "UI"
  }
}
struct {
  name: "_ADMINISTRATOR_POWER_POLICY"
  field {
    name: "MinSleep"
    type: "X(Enum.enum _SYSTEM_POWER_STATE)"
  }
  field {
    name: "MaxSleep"
    type: "X(Enum.enum _SYSTEM_POWER_STATE)"
  }
  field {
    name: "MinVideoTimeout"
    type: "UI"
  }
  field {
    name: "MaxVideoTimeout"
    type: "UI"
  }
  field {
    name: "MinSpindownTimeout"
    type: "UI"
  }
  field {
    name: "MaxSpindownTimeout"
    type: "UI"
  }
}
struct {
  name: "BATTERY_REPORTING_SCALE"
  field {
    name: "Granularity"
    type: "UI"
  }
  field {
    name: "Capacity"
    type: "UI"
  }
}
struct {
  name: "BATTERY_REPORTING_SCALE"
  field {
    name: "Granularity"
    type: "UI"
  }
  field {
    name: "Capacity"
    type: "UI"
  }
}
struct {
  name: "POWER_ACTION_POLICY"
  field {
    name: "Action"
    type: "X(Enum.enum _POWER_ACTION)"
  }
  field {
    name: "Flags"
    type: "UI"
  }
  field {
    name: "EventCode"
    type: "UI"
  }
}
struct {
  name: "POWER_ACTION_POLICY"
  field {
    name: "Action"
    type: "X(Enum.enum _POWER_ACTION)"
  }
  field {
    name: "Flags"
    type: "UI"
  }
  field {
    name: "EventCode"
    type: "UI"
  }
}
struct {
  name: "_PROCESSOR_POWER_INFORMATION"
  field {
    name: "Number"
    type: "UI"
  }
  field {
    name: "MaxMhz"
    type: "UI"
  }
  field {
    name: "CurrentMhz"
    type: "UI"
  }
  field {
    name: "MhzLimit"
    type: "UI"
  }
  field {
    name: "MaxIdleState"
    type: "UI"
  }
  field {
    name: "CurrentIdleState"
    type: "UI"
  }
}
struct {
  name: "_PROCESSOR_POWER_INFORMATION"
  field {
    name: "Number"
    type: "UI"
  }
  field {
    name: "MaxMhz"
    type: "UI"
  }
  field {
    name: "CurrentMhz"
    type: "UI"
  }
  field {
    name: "MhzLimit"
    type: "UI"
  }
  field {
    name: "MaxIdleState"
    type: "UI"
  }
  field {
    name: "CurrentIdleState"
    type: "UI"
  }
}
struct {
  name: "_PROCESSOR_POWER_POLICY_INFO"
  field {
    name: "TimeCheck"
    type: "UI"
  }
  field {
    name: "DemoteLimit"
    type: "UI"
  }
  field {
    name: "PromoteLimit"
    type: "UI"
  }
  field {
    name: "DemotePercent"
    type: "UB"
  }
  field {
    name: "PromotePercent"
    type: "UB"
  }
  field {
    name: "Spare"
    type: "X(ConstantArray.UCHAR [2])"
  }
  field {
    name: "AllowDemotion"
    type: "UI"
  }
  field {
    name: "AllowPromotion"
    type: "UI"
  }
  field {
    name: "Reserved"
    type: "UI"
  }
}
struct {
  name: "_PROCESSOR_POWER_POLICY_INFO"
  field {
    name: "TimeCheck"
    type: "UI"
  }
  field {
    name: "DemoteLimit"
    type: "UI"
  }
  field {
    name: "PromoteLimit"
    type: "UI"
  }
  field {
    name: "DemotePercent"
    type: "UB"
  }
  field {
    name: "PromotePercent"
    type: "UB"
  }
  field {
    name: "Spare"
    type: "X(ConstantArray.UCHAR [2])"
  }
  field {
    name: "AllowDemotion"
    type: "UI"
  }
  field {
    name: "AllowPromotion"
    type: "UI"
  }
  field {
    name: "Reserved"
    type: "UI"
  }
}
struct {
  name: "_PROCESSOR_POWER_POLICY"
  field {
    name: "Revision"
    type: "UI"
  }
  field {
    name: "DynamicThrottle"
    type: "UB"
  }
  field {
    name: "Spare"
    type: "X(ConstantArray.BYTE [3])"
  }
  field {
    name: "DisableCStates"
    type: "UI"
  }
  field {
    name: "Reserved"
    type: "UI"
  }
  field {
    name: "PolicyCount"
    type: "UI"
  }
  field {
    name: "Policy"
    type: "X(ConstantArray.PROCESSOR_POWER_POLICY_INFO [3])"
  }
}
struct {
  name: "_PROCESSOR_POWER_POLICY"
  field {
    name: "Revision"
    type: "UI"
  }
  field {
    name: "DynamicThrottle"
    type: "UB"
  }
  field {
    name: "Spare"
    type: "X(ConstantArray.BYTE [3])"
  }
  field {
    name: "DisableCStates"
    type: "UI"
  }
  field {
    name: "Reserved"
    type: "UI"
  }
  field {
    name: "PolicyCount"
    type: "UI"
  }
  field {
    name: "Policy"
    type: "X(ConstantArray.PROCESSOR_POWER_POLICY_INFO [3])"
  }
}
struct {
  name: "SYSTEM_BATTERY_STATE"
  field {
    name: "AcOnLine"
    type: "UB"
  }
  field {
    name: "BatteryPresent"
    type: "UB"
  }
  field {
    name: "Charging"
    type: "UB"
  }
  field {
    name: "Discharging"
    type: "UB"
  }
  field {
    name: "Spare1"
    type: "X(ConstantArray.BOOLEAN [4])"
  }
  field {
    name: "MaxCapacity"
    type: "UI"
  }
  field {
    name: "RemainingCapacity"
    type: "UI"
  }
  field {
    name: "Rate"
    type: "UI"
  }
  field {
    name: "EstimatedTime"
    type: "UI"
  }
  field {
    name: "DefaultAlert1"
    type: "UI"
  }
  field {
    name: "DefaultAlert2"
    type: "UI"
  }
}
struct {
  name: "SYSTEM_BATTERY_STATE"
  field {
    name: "AcOnLine"
    type: "UB"
  }
  field {
    name: "BatteryPresent"
    type: "UB"
  }
  field {
    name: "Charging"
    type: "UB"
  }
  field {
    name: "Discharging"
    type: "UB"
  }
  field {
    name: "Spare1"
    type: "X(ConstantArray.BOOLEAN [4])"
  }
  field {
    name: "MaxCapacity"
    type: "UI"
  }
  field {
    name: "RemainingCapacity"
    type: "UI"
  }
  field {
    name: "Rate"
    type: "UI"
  }
  field {
    name: "EstimatedTime"
    type: "UI"
  }
  field {
    name: "DefaultAlert1"
    type: "UI"
  }
  field {
    name: "DefaultAlert2"
    type: "UI"
  }
}
struct {
  name: "SYSTEM_POWER_CAPABILITIES"
  field {
    name: "PowerButtonPresent"
    type: "UB"
  }
  field {
    name: "SleepButtonPresent"
    type: "UB"
  }
  field {
    name: "LidPresent"
    type: "UB"
  }
  field {
    name: "SystemS1"
    type: "UB"
  }
  field {
    name: "SystemS2"
    type: "UB"
  }
  field {
    name: "SystemS3"
    type: "UB"
  }
  field {
    name: "SystemS4"
    type: "UB"
  }
  field {
    name: "SystemS5"
    type: "UB"
  }
  field {
    name: "HiberFilePresent"
    type: "UB"
  }
  field {
    name: "FullWake"
    type: "UB"
  }
  field {
    name: "VideoDimPresent"
    type: "UB"
  }
  field {
    name: "ApmPresent"
    type: "UB"
  }
  field {
    name: "UpsPresent"
    type: "UB"
  }
  field {
    name: "ThermalControl"
    type: "UB"
  }
  field {
    name: "ProcessorThrottle"
    type: "UB"
  }
  field {
    name: "ProcessorMinThrottle"
    type: "UB"
  }
  field {
    name: "ProcessorMaxThrottle"
    type: "UB"
  }
  field {
    name: "spare2"
    type: "X(ConstantArray.UCHAR [4])"
  }
  field {
    name: "DiskSpinDown"
    type: "UB"
  }
  field {
    name: "spare3"
    type: "X(ConstantArray.UCHAR [8])"
  }
  field {
    name: "SystemBatteriesPresent"
    type: "UB"
  }
  field {
    name: "BatteriesAreShortTerm"
    type: "UB"
  }
  field {
    name: "BatteryScale"
    type: "X(ConstantArray.BATTERY_REPORTING_SCALE [3])"
  }
  field {
    name: "AcOnLineWake"
    type: "X(Enum.enum _SYSTEM_POWER_STATE)"
  }
  field {
    name: "SoftLidWake"
    type: "X(Enum.enum _SYSTEM_POWER_STATE)"
  }
  field {
    name: "RtcWake"
    type: "X(Enum.enum _SYSTEM_POWER_STATE)"
  }
  field {
    name: "MinDeviceWakeState"
    type: "X(Enum.enum _SYSTEM_POWER_STATE)"
  }
  field {
    name: "DefaultLowLatencyWake"
    type: "X(Enum.enum _SYSTEM_POWER_STATE)"
  }
}
struct {
  name: "SYSTEM_POWER_CAPABILITIES"
  field {
    name: "PowerButtonPresent"
    type: "UB"
  }
  field {
    name: "SleepButtonPresent"
    type: "UB"
  }
  field {
    name: "LidPresent"
    type: "UB"
  }
  field {
    name: "SystemS1"
    type: "UB"
  }
  field {
    name: "SystemS2"
    type: "UB"
  }
  field {
    name: "SystemS3"
    type: "UB"
  }
  field {
    name: "SystemS4"
    type: "UB"
  }
  field {
    name: "SystemS5"
    type: "UB"
  }
  field {
    name: "HiberFilePresent"
    type: "UB"
  }
  field {
    name: "FullWake"
    type: "UB"
  }
  field {
    name: "VideoDimPresent"
    type: "UB"
  }
  field {
    name: "ApmPresent"
    type: "UB"
  }
  field {
    name: "UpsPresent"
    type: "UB"
  }
  field {
    name: "ThermalControl"
    type: "UB"
  }
  field {
    name: "ProcessorThrottle"
    type: "UB"
  }
  field {
    name: "ProcessorMinThrottle"
    type: "UB"
  }
  field {
    name: "ProcessorMaxThrottle"
    type: "UB"
  }
  field {
    name: "spare2"
    type: "X(ConstantArray.UCHAR [4])"
  }
  field {
    name: "DiskSpinDown"
    type: "UB"
  }
  field {
    name: "spare3"
    type: "X(ConstantArray.UCHAR [8])"
  }
  field {
    name: "SystemBatteriesPresent"
    type: "UB"
  }
  field {
    name: "BatteriesAreShortTerm"
    type: "UB"
  }
  field {
    name: "BatteryScale"
    type: "X(ConstantArray.BATTERY_REPORTING_SCALE [3])"
  }
  field {
    name: "AcOnLineWake"
    type: "X(Enum.enum _SYSTEM_POWER_STATE)"
  }
  field {
    name: "SoftLidWake"
    type: "X(Enum.enum _SYSTEM_POWER_STATE)"
  }
  field {
    name: "RtcWake"
    type: "X(Enum.enum _SYSTEM_POWER_STATE)"
  }
  field {
    name: "MinDeviceWakeState"
    type: "X(Enum.enum _SYSTEM_POWER_STATE)"
  }
  field {
    name: "DefaultLowLatencyWake"
    type: "X(Enum.enum _SYSTEM_POWER_STATE)"
  }
}
struct {
  name: "_SYSTEM_POWER_INFORMATION"
  field {
    name: "MaxIdlenessAllowed"
    type: "UI"
  }
  field {
    name: "Idleness"
    type: "UI"
  }
  field {
    name: "TimeRemaining"
    type: "UI"
  }
  field {
    name: "CoolingMode"
    type: "UB"
  }
}
struct {
  name: "_SYSTEM_POWER_INFORMATION"
  field {
    name: "MaxIdlenessAllowed"
    type: "UI"
  }
  field {
    name: "Idleness"
    type: "UI"
  }
  field {
    name: "TimeRemaining"
    type: "UI"
  }
  field {
    name: "CoolingMode"
    type: "UB"
  }
}
struct {
  name: "_SYSTEM_POWER_LEVEL"
  field {
    name: "Enable"
    type: "UB"
  }
  field {
    name: "Spare"
    type: "X(ConstantArray.UCHAR [3])"
  }
  field {
    name: "BatteryLevel"
    type: "UI"
  }
  field {
    name: "PowerPolicy"
    type: "RPOWER_ACTION_POLICY;"
  }
  field {
    name: "MinSystemState"
    type: "X(Enum.enum _SYSTEM_POWER_STATE)"
  }
}
struct {
  name: "_SYSTEM_POWER_LEVEL"
  field {
    name: "Enable"
    type: "UB"
  }
  field {
    name: "Spare"
    type: "X(ConstantArray.UCHAR [3])"
  }
  field {
    name: "BatteryLevel"
    type: "UI"
  }
  field {
    name: "PowerPolicy"
    type: "RPOWER_ACTION_POLICY;"
  }
  field {
    name: "MinSystemState"
    type: "X(Enum.enum _SYSTEM_POWER_STATE)"
  }
}
struct {
  name: "_SYSTEM_POWER_POLICY"
  field {
    name: "Revision"
    type: "UI"
  }
  field {
    name: "PowerButton"
    type: "RPOWER_ACTION_POLICY;"
  }
  field {
    name: "SleepButton"
    type: "RPOWER_ACTION_POLICY;"
  }
  field {
    name: "LidClose"
    type: "RPOWER_ACTION_POLICY;"
  }
  field {
    name: "LidOpenWake"
    type: "X(Enum.enum _SYSTEM_POWER_STATE)"
  }
  field {
    name: "Reserved"
    type: "UI"
  }
  field {
    name: "Idle"
    type: "RPOWER_ACTION_POLICY;"
  }
  field {
    name: "IdleTimeout"
    type: "UI"
  }
  field {
    name: "IdleSensitivity"
    type: "UB"
  }
  field {
    name: "DynamicThrottle"
    type: "UB"
  }
  field {
    name: "Spare2"
    type: "X(ConstantArray.UCHAR [2])"
  }
  field {
    name: "MinSleep"
    type: "X(Enum.enum _SYSTEM_POWER_STATE)"
  }
  field {
    name: "MaxSleep"
    type: "X(Enum.enum _SYSTEM_POWER_STATE)"
  }
  field {
    name: "ReducedLatencySleep"
    type: "X(Enum.enum _SYSTEM_POWER_STATE)"
  }
  field {
    name: "WinLogonFlags"
    type: "UI"
  }
  field {
    name: "Spare3"
    type: "UI"
  }
  field {
    name: "DozeS4Timeout"
    type: "UI"
  }
  field {
    name: "BroadcastCapacityResolution"
    type: "UI"
  }
  field {
    name: "DischargePolicy"
    type: "X(ConstantArray.SYSTEM_POWER_LEVEL [4])"
  }
  field {
    name: "VideoTimeout"
    type: "UI"
  }
  field {
    name: "VideoDimDisplay"
    type: "UB"
  }
  field {
    name: "VideoReserved"
    type: "X(ConstantArray.ULONG [3])"
  }
  field {
    name: "SpindownTimeout"
    type: "UI"
  }
  field {
    name: "OptimizeForPower"
    type: "UB"
  }
  field {
    name: "FanThrottleTolerance"
    type: "UB"
  }
  field {
    name: "ForcedThrottle"
    type: "UB"
  }
  field {
    name: "MinThrottle"
    type: "UB"
  }
  field {
    name: "OverThrottled"
    type: "RPOWER_ACTION_POLICY;"
  }
}
struct {
  name: "_SYSTEM_POWER_POLICY"
  field {
    name: "Revision"
    type: "UI"
  }
  field {
    name: "PowerButton"
    type: "RPOWER_ACTION_POLICY;"
  }
  field {
    name: "SleepButton"
    type: "RPOWER_ACTION_POLICY;"
  }
  field {
    name: "LidClose"
    type: "RPOWER_ACTION_POLICY;"
  }
  field {
    name: "LidOpenWake"
    type: "X(Enum.enum _SYSTEM_POWER_STATE)"
  }
  field {
    name: "Reserved"
    type: "UI"
  }
  field {
    name: "Idle"
    type: "RPOWER_ACTION_POLICY;"
  }
  field {
    name: "IdleTimeout"
    type: "UI"
  }
  field {
    name: "IdleSensitivity"
    type: "UB"
  }
  field {
    name: "DynamicThrottle"
    type: "UB"
  }
  field {
    name: "Spare2"
    type: "X(ConstantArray.UCHAR [2])"
  }
  field {
    name: "MinSleep"
    type: "X(Enum.enum _SYSTEM_POWER_STATE)"
  }
  field {
    name: "MaxSleep"
    type: "X(Enum.enum _SYSTEM_POWER_STATE)"
  }
  field {
    name: "ReducedLatencySleep"
    type: "X(Enum.enum _SYSTEM_POWER_STATE)"
  }
  field {
    name: "WinLogonFlags"
    type: "UI"
  }
  field {
    name: "Spare3"
    type: "UI"
  }
  field {
    name: "DozeS4Timeout"
    type: "UI"
  }
  field {
    name: "BroadcastCapacityResolution"
    type: "UI"
  }
  field {
    name: "DischargePolicy"
    type: "X(ConstantArray.SYSTEM_POWER_LEVEL [4])"
  }
  field {
    name: "VideoTimeout"
    type: "UI"
  }
  field {
    name: "VideoDimDisplay"
    type: "UB"
  }
  field {
    name: "VideoReserved"
    type: "X(ConstantArray.ULONG [3])"
  }
  field {
    name: "SpindownTimeout"
    type: "UI"
  }
  field {
    name: "OptimizeForPower"
    type: "UB"
  }
  field {
    name: "FanThrottleTolerance"
    type: "UB"
  }
  field {
    name: "ForcedThrottle"
    type: "UB"
  }
  field {
    name: "MinThrottle"
    type: "UB"
  }
  field {
    name: "OverThrottled"
    type: "RPOWER_ACTION_POLICY;"
  }
}
struct {
  name: "_FILE_NOTIFY_INFORMATION"
  field {
    name: "NextEntryOffset"
    type: "UI"
  }
  field {
    name: "Action"
    type: "UI"
  }
  field {
    name: "FileNameLength"
    type: "UI"
  }
  field {
    name: "FileName"
    type: "X(ConstantArray.WCHAR [1])"
  }
}
struct {
  name: "_FILE_NOTIFY_INFORMATION"
  field {
    name: "NextEntryOffset"
    type: "UI"
  }
  field {
    name: "Action"
    type: "UI"
  }
  field {
    name: "FileNameLength"
    type: "UI"
  }
  field {
    name: "FileName"
    type: "X(ConstantArray.WCHAR [1])"
  }
}
struct {
  name: "_TAPE_CREATE_PARTITION"
  field {
    name: "Method"
    type: "UI"
  }
  field {
    name: "Count"
    type: "UI"
  }
  field {
    name: "Size"
    type: "UI"
  }
}
struct {
  name: "_TAPE_CREATE_PARTITION"
  field {
    name: "Method"
    type: "UI"
  }
  field {
    name: "Count"
    type: "UI"
  }
  field {
    name: "Size"
    type: "UI"
  }
}
struct {
  name: "_TAPE_ERASE"
  field {
    name: "Type"
    type: "UI"
  }
  field {
    name: "Immediate"
    type: "UB"
  }
}
struct {
  name: "_TAPE_ERASE"
  field {
    name: "Type"
    type: "UI"
  }
  field {
    name: "Immediate"
    type: "UB"
  }
}
struct {
  name: "_TAPE_PREPARE"
  field {
    name: "Operation"
    type: "UI"
  }
  field {
    name: "Immediate"
    type: "UB"
  }
}
struct {
  name: "_TAPE_PREPARE"
  field {
    name: "Operation"
    type: "UI"
  }
  field {
    name: "Immediate"
    type: "UB"
  }
}
struct {
  name: "_TAPE_SET_DRIVE_PARAMETERS"
  field {
    name: "ECC"
    type: "UB"
  }
  field {
    name: "Compression"
    type: "UB"
  }
  field {
    name: "DataPadding"
    type: "UB"
  }
  field {
    name: "ReportSetmarks"
    type: "UB"
  }
  field {
    name: "EOTWarningZoneSize"
    type: "UI"
  }
}
struct {
  name: "_TAPE_SET_DRIVE_PARAMETERS"
  field {
    name: "ECC"
    type: "UB"
  }
  field {
    name: "Compression"
    type: "UB"
  }
  field {
    name: "DataPadding"
    type: "UB"
  }
  field {
    name: "ReportSetmarks"
    type: "UB"
  }
  field {
    name: "EOTWarningZoneSize"
    type: "UI"
  }
}
struct {
  name: "_TAPE_SET_MEDIA_PARAMETERS"
  field {
    name: "BlockSize"
    type: "UI"
  }
}
struct {
  name: "_TAPE_SET_MEDIA_PARAMETERS"
  field {
    name: "BlockSize"
    type: "UI"
  }
}
struct {
  name: "_TAPE_WRITE_MARKS"
  field {
    name: "Type"
    type: "UI"
  }
  field {
    name: "Count"
    type: "UI"
  }
  field {
    name: "Immediate"
    type: "UB"
  }
}
struct {
  name: "_TAPE_WRITE_MARKS"
  field {
    name: "Type"
    type: "UI"
  }
  field {
    name: "Count"
    type: "UI"
  }
  field {
    name: "Immediate"
    type: "UB"
  }
}
struct {
  name: "_TAPE_GET_POSITION"
  field {
    name: "Type"
    type: "UI"
  }
  field {
    name: "Partition"
    type: "UI"
  }
  field {
    name: "OffsetLow"
    type: "UI"
  }
  field {
    name: "OffsetHigh"
    type: "UI"
  }
}
struct {
  name: "_TAPE_GET_POSITION"
  field {
    name: "Type"
    type: "UI"
  }
  field {
    name: "Partition"
    type: "UI"
  }
  field {
    name: "OffsetLow"
    type: "UI"
  }
  field {
    name: "OffsetHigh"
    type: "UI"
  }
}
struct {
  name: "_TAPE_SET_POSITION"
  field {
    name: "Method"
    type: "UI"
  }
  field {
    name: "Partition"
    type: "UI"
  }
  field {
    name: "Offset"
    type: "Runion _LARGE_INTEGER;"
  }
  field {
    name: "Immediate"
    type: "UB"
  }
}
struct {
  name: "_TAPE_SET_POSITION"
  field {
    name: "Method"
    type: "UI"
  }
  field {
    name: "Partition"
    type: "UI"
  }
  field {
    name: "Offset"
    type: "Runion _LARGE_INTEGER;"
  }
  field {
    name: "Immediate"
    type: "UB"
  }
}
struct {
  name: "_TAPE_GET_DRIVE_PARAMETERS"
  field {
    name: "ECC"
    type: "UB"
  }
  field {
    name: "Compression"
    type: "UB"
  }
  field {
    name: "DataPadding"
    type: "UB"
  }
  field {
    name: "ReportSetmarks"
    type: "UB"
  }
  field {
    name: "DefaultBlockSize"
    type: "UI"
  }
  field {
    name: "MaximumBlockSize"
    type: "UI"
  }
  field {
    name: "MinimumBlockSize"
    type: "UI"
  }
  field {
    name: "MaximumPartitionCount"
    type: "UI"
  }
  field {
    name: "FeaturesLow"
    type: "UI"
  }
  field {
    name: "FeaturesHigh"
    type: "UI"
  }
  field {
    name: "EOTWarningZoneSize"
    type: "UI"
  }
}
struct {
  name: "_TAPE_GET_DRIVE_PARAMETERS"
  field {
    name: "ECC"
    type: "UB"
  }
  field {
    name: "Compression"
    type: "UB"
  }
  field {
    name: "DataPadding"
    type: "UB"
  }
  field {
    name: "ReportSetmarks"
    type: "UB"
  }
  field {
    name: "DefaultBlockSize"
    type: "UI"
  }
  field {
    name: "MaximumBlockSize"
    type: "UI"
  }
  field {
    name: "MinimumBlockSize"
    type: "UI"
  }
  field {
    name: "MaximumPartitionCount"
    type: "UI"
  }
  field {
    name: "FeaturesLow"
    type: "UI"
  }
  field {
    name: "FeaturesHigh"
    type: "UI"
  }
  field {
    name: "EOTWarningZoneSize"
    type: "UI"
  }
}
struct {
  name: "_TAPE_GET_MEDIA_PARAMETERS"
  field {
    name: "Capacity"
    type: "Runion _LARGE_INTEGER;"
  }
  field {
    name: "Remaining"
    type: "Runion _LARGE_INTEGER;"
  }
  field {
    name: "BlockSize"
    type: "UI"
  }
  field {
    name: "PartitionCount"
    type: "UI"
  }
  field {
    name: "WriteProtected"
    type: "UB"
  }
}
struct {
  name: "_TAPE_GET_MEDIA_PARAMETERS"
  field {
    name: "Capacity"
    type: "Runion _LARGE_INTEGER;"
  }
  field {
    name: "Remaining"
    type: "Runion _LARGE_INTEGER;"
  }
  field {
    name: "BlockSize"
    type: "UI"
  }
  field {
    name: "PartitionCount"
    type: "UI"
  }
  field {
    name: "WriteProtected"
    type: "UB"
  }
}
struct {
  name: "_EVENTLOGRECORD"
  field {
    name: "Length"
    type: "UI"
  }
  field {
    name: "Reserved"
    type: "UI"
  }
  field {
    name: "RecordNumber"
    type: "UI"
  }
  field {
    name: "TimeGenerated"
    type: "UI"
  }
  field {
    name: "TimeWritten"
    type: "UI"
  }
  field {
    name: "EventID"
    type: "UI"
  }
  field {
    name: "EventType"
    type: "US"
  }
  field {
    name: "NumStrings"
    type: "US"
  }
  field {
    name: "EventCategory"
    type: "US"
  }
  field {
    name: "ReservedFlags"
    type: "US"
  }
  field {
    name: "ClosingRecordNumber"
    type: "UI"
  }
  field {
    name: "StringOffset"
    type: "UI"
  }
  field {
    name: "UserSidLength"
    type: "UI"
  }
  field {
    name: "UserSidOffset"
    type: "UI"
  }
  field {
    name: "DataLength"
    type: "UI"
  }
  field {
    name: "DataOffset"
    type: "UI"
  }
}
struct {
  name: "_EVENTLOGRECORD"
  field {
    name: "Length"
    type: "UI"
  }
  field {
    name: "Reserved"
    type: "UI"
  }
  field {
    name: "RecordNumber"
    type: "UI"
  }
  field {
    name: "TimeGenerated"
    type: "UI"
  }
  field {
    name: "TimeWritten"
    type: "UI"
  }
  field {
    name: "EventID"
    type: "UI"
  }
  field {
    name: "EventType"
    type: "US"
  }
  field {
    name: "NumStrings"
    type: "US"
  }
  field {
    name: "EventCategory"
    type: "US"
  }
  field {
    name: "ReservedFlags"
    type: "US"
  }
  field {
    name: "ClosingRecordNumber"
    type: "UI"
  }
  field {
    name: "StringOffset"
    type: "UI"
  }
  field {
    name: "UserSidLength"
    type: "UI"
  }
  field {
    name: "UserSidOffset"
    type: "UI"
  }
  field {
    name: "DataLength"
    type: "UI"
  }
  field {
    name: "DataOffset"
    type: "UI"
  }
}
struct {
  name: "_OBJECT_TYPE_LIST"
  field {
    name: "Level"
    type: "US"
  }
  field {
    name: "Sbz"
    type: "US"
  }
  field {
    name: "ObjectType"
    type: "*R_GUID;;"
  }
}
struct {
  name: "_OBJECT_TYPE_LIST"
  field {
    name: "Level"
    type: "US"
  }
  field {
    name: "Sbz"
    type: "US"
  }
  field {
    name: "ObjectType"
    type: "*R_GUID;;"
  }
}
struct {
  name: "_RTL_CRITICAL_SECTION_DEBUG"
  field {
    name: "Type"
    type: "US"
  }
  field {
    name: "CreatorBackTraceIndex"
    type: "US"
  }
  field {
    name: "CriticalSection"
    type: "*R_RTL_CRITICAL_SECTION;;"
  }
  field {
    name: "ProcessLocksList"
    type: "R_LIST_ENTRY;"
  }
  field {
    name: "EntryCount"
    type: "UI"
  }
  field {
    name: "ContentionCount"
    type: "UI"
  }
  field {
    name: "Spare"
    type: "X(ConstantArray.DWORD [2])"
  }
}
struct {
  name: "_RTL_CRITICAL_SECTION_DEBUG"
  field {
    name: "Type"
    type: "US"
  }
  field {
    name: "CreatorBackTraceIndex"
    type: "US"
  }
  field {
    name: "CriticalSection"
    type: "*R_RTL_CRITICAL_SECTION;;"
  }
  field {
    name: "ProcessLocksList"
    type: "R_LIST_ENTRY;"
  }
  field {
    name: "EntryCount"
    type: "UI"
  }
  field {
    name: "ContentionCount"
    type: "UI"
  }
  field {
    name: "Spare"
    type: "X(ConstantArray.DWORD [2])"
  }
}
struct {
  name: "_RTL_CRITICAL_SECTION_DEBUG"
  field {
    name: "Type"
    type: "US"
  }
  field {
    name: "CreatorBackTraceIndex"
    type: "US"
  }
  field {
    name: "CriticalSection"
    type: "*R_RTL_CRITICAL_SECTION;;"
  }
  field {
    name: "ProcessLocksList"
    type: "R_LIST_ENTRY;"
  }
  field {
    name: "EntryCount"
    type: "UI"
  }
  field {
    name: "ContentionCount"
    type: "UI"
  }
  field {
    name: "Spare"
    type: "X(ConstantArray.DWORD [2])"
  }
}
struct {
  name: "_RTL_CRITICAL_SECTION_DEBUG"
  field {
    name: "Type"
    type: "US"
  }
  field {
    name: "CreatorBackTraceIndex"
    type: "US"
  }
  field {
    name: "CriticalSection"
    type: "*R_RTL_CRITICAL_SECTION;;"
  }
  field {
    name: "ProcessLocksList"
    type: "R_LIST_ENTRY;"
  }
  field {
    name: "EntryCount"
    type: "UI"
  }
  field {
    name: "ContentionCount"
    type: "UI"
  }
  field {
    name: "Spare"
    type: "X(ConstantArray.DWORD [2])"
  }
}
struct {
  name: "_RTL_CRITICAL_SECTION"
  field {
    name: "DebugInfo"
    type: "*R_RTL_CRITICAL_SECTION_DEBUG;;"
  }
  field {
    name: "LockCount"
    type: "I"
  }
  field {
    name: "RecursionCount"
    type: "I"
  }
  field {
    name: "OwningThread"
    type: "*V;"
  }
  field {
    name: "LockSemaphore"
    type: "*V;"
  }
  field {
    name: "SpinCount"
    type: "UI"
  }
}
struct {
  name: "_RTL_CRITICAL_SECTION"
  field {
    name: "DebugInfo"
    type: "*R_RTL_CRITICAL_SECTION_DEBUG;;"
  }
  field {
    name: "LockCount"
    type: "I"
  }
  field {
    name: "RecursionCount"
    type: "I"
  }
  field {
    name: "OwningThread"
    type: "*V;"
  }
  field {
    name: "LockSemaphore"
    type: "*V;"
  }
  field {
    name: "SpinCount"
    type: "UI"
  }
}
struct {
  name: "_RTL_SRWLOCK"
  field {
    name: "Ptr"
    type: "*V;"
  }
}
struct {
  name: "_RTL_SRWLOCK"
  field {
    name: "Ptr"
    type: "*V;"
  }
}
struct {
  name: "_RTL_CONDITION_VARIABLE"
  field {
    name: "Ptr"
    type: "*V;"
  }
}
struct {
  name: "_RTL_CONDITION_VARIABLE"
  field {
    name: "Ptr"
    type: "*V;"
  }
}
struct {
  name: "_IO_COUNTERS"
  field {
    name: "ReadOperationCount"
    type: "UI"
  }
  field {
    name: "WriteOperationCount"
    type: "UI"
  }
  field {
    name: "OtherOperationCount"
    type: "UI"
  }
  field {
    name: "ReadTransferCount"
    type: "UI"
  }
  field {
    name: "WriteTransferCount"
    type: "UI"
  }
  field {
    name: "OtherTransferCount"
    type: "UI"
  }
}
struct {
  name: "_IO_COUNTERS"
  field {
    name: "ReadOperationCount"
    type: "UI"
  }
  field {
    name: "WriteOperationCount"
    type: "UI"
  }
  field {
    name: "OtherOperationCount"
    type: "UI"
  }
  field {
    name: "ReadTransferCount"
    type: "UI"
  }
  field {
    name: "WriteTransferCount"
    type: "UI"
  }
  field {
    name: "OtherTransferCount"
    type: "UI"
  }
}
struct {
  name: "OSVERSIONINFOA"
  field {
    name: "dwOSVersionInfoSize"
    type: "UI"
  }
  field {
    name: "dwMajorVersion"
    type: "UI"
  }
  field {
    name: "dwMinorVersion"
    type: "UI"
  }
  field {
    name: "dwBuildNumber"
    type: "UI"
  }
  field {
    name: "dwPlatformId"
    type: "UI"
  }
  field {
    name: "szCSDVersion"
    type: "X(ConstantArray.CHAR [128])"
  }
}
struct {
  name: "OSVERSIONINFOA"
  field {
    name: "dwOSVersionInfoSize"
    type: "UI"
  }
  field {
    name: "dwMajorVersion"
    type: "UI"
  }
  field {
    name: "dwMinorVersion"
    type: "UI"
  }
  field {
    name: "dwBuildNumber"
    type: "UI"
  }
  field {
    name: "dwPlatformId"
    type: "UI"
  }
  field {
    name: "szCSDVersion"
    type: "X(ConstantArray.CHAR [128])"
  }
}
struct {
  name: "OSVERSIONINFOA"
  field {
    name: "dwOSVersionInfoSize"
    type: "UI"
  }
  field {
    name: "dwMajorVersion"
    type: "UI"
  }
  field {
    name: "dwMinorVersion"
    type: "UI"
  }
  field {
    name: "dwBuildNumber"
    type: "UI"
  }
  field {
    name: "dwPlatformId"
    type: "UI"
  }
  field {
    name: "szCSDVersion"
    type: "X(ConstantArray.CHAR [128])"
  }
}
struct {
  name: "OSVERSIONINFOW"
  field {
    name: "dwOSVersionInfoSize"
    type: "UI"
  }
  field {
    name: "dwMajorVersion"
    type: "UI"
  }
  field {
    name: "dwMinorVersion"
    type: "UI"
  }
  field {
    name: "dwBuildNumber"
    type: "UI"
  }
  field {
    name: "dwPlatformId"
    type: "UI"
  }
  field {
    name: "szCSDVersion"
    type: "X(ConstantArray.WCHAR [128])"
  }
}
struct {
  name: "OSVERSIONINFOW"
  field {
    name: "dwOSVersionInfoSize"
    type: "UI"
  }
  field {
    name: "dwMajorVersion"
    type: "UI"
  }
  field {
    name: "dwMinorVersion"
    type: "UI"
  }
  field {
    name: "dwBuildNumber"
    type: "UI"
  }
  field {
    name: "dwPlatformId"
    type: "UI"
  }
  field {
    name: "szCSDVersion"
    type: "X(ConstantArray.WCHAR [128])"
  }
}
struct {
  name: "OSVERSIONINFOW"
  field {
    name: "dwOSVersionInfoSize"
    type: "UI"
  }
  field {
    name: "dwMajorVersion"
    type: "UI"
  }
  field {
    name: "dwMinorVersion"
    type: "UI"
  }
  field {
    name: "dwBuildNumber"
    type: "UI"
  }
  field {
    name: "dwPlatformId"
    type: "UI"
  }
  field {
    name: "szCSDVersion"
    type: "X(ConstantArray.WCHAR [128])"
  }
}
struct {
  name: "OSVERSIONINFOW"
  field {
    name: "dwOSVersionInfoSize"
    type: "UI"
  }
  field {
    name: "dwMajorVersion"
    type: "UI"
  }
  field {
    name: "dwMinorVersion"
    type: "UI"
  }
  field {
    name: "dwBuildNumber"
    type: "UI"
  }
  field {
    name: "dwPlatformId"
    type: "UI"
  }
  field {
    name: "szCSDVersion"
    type: "X(ConstantArray.WCHAR [128])"
  }
}
struct {
  name: "OSVERSIONINFOW"
  field {
    name: "dwOSVersionInfoSize"
    type: "UI"
  }
  field {
    name: "dwMajorVersion"
    type: "UI"
  }
  field {
    name: "dwMinorVersion"
    type: "UI"
  }
  field {
    name: "dwBuildNumber"
    type: "UI"
  }
  field {
    name: "dwPlatformId"
    type: "UI"
  }
  field {
    name: "szCSDVersion"
    type: "X(ConstantArray.WCHAR [128])"
  }
}
struct {
  name: "OSVERSIONINFOEXA"
  field {
    name: "dwOSVersionInfoSize"
    type: "UI"
  }
  field {
    name: "dwMajorVersion"
    type: "UI"
  }
  field {
    name: "dwMinorVersion"
    type: "UI"
  }
  field {
    name: "dwBuildNumber"
    type: "UI"
  }
  field {
    name: "dwPlatformId"
    type: "UI"
  }
  field {
    name: "szCSDVersion"
    type: "X(ConstantArray.CHAR [128])"
  }
  field {
    name: "wServicePackMajor"
    type: "US"
  }
  field {
    name: "wServicePackMinor"
    type: "US"
  }
  field {
    name: "wSuiteMask"
    type: "US"
  }
  field {
    name: "wProductType"
    type: "UB"
  }
  field {
    name: "wReserved"
    type: "UB"
  }
}
struct {
  name: "OSVERSIONINFOEXA"
  field {
    name: "dwOSVersionInfoSize"
    type: "UI"
  }
  field {
    name: "dwMajorVersion"
    type: "UI"
  }
  field {
    name: "dwMinorVersion"
    type: "UI"
  }
  field {
    name: "dwBuildNumber"
    type: "UI"
  }
  field {
    name: "dwPlatformId"
    type: "UI"
  }
  field {
    name: "szCSDVersion"
    type: "X(ConstantArray.CHAR [128])"
  }
  field {
    name: "wServicePackMajor"
    type: "US"
  }
  field {
    name: "wServicePackMinor"
    type: "US"
  }
  field {
    name: "wSuiteMask"
    type: "US"
  }
  field {
    name: "wProductType"
    type: "UB"
  }
  field {
    name: "wReserved"
    type: "UB"
  }
}
struct {
  name: "OSVERSIONINFOEXA"
  field {
    name: "dwOSVersionInfoSize"
    type: "UI"
  }
  field {
    name: "dwMajorVersion"
    type: "UI"
  }
  field {
    name: "dwMinorVersion"
    type: "UI"
  }
  field {
    name: "dwBuildNumber"
    type: "UI"
  }
  field {
    name: "dwPlatformId"
    type: "UI"
  }
  field {
    name: "szCSDVersion"
    type: "X(ConstantArray.CHAR [128])"
  }
  field {
    name: "wServicePackMajor"
    type: "US"
  }
  field {
    name: "wServicePackMinor"
    type: "US"
  }
  field {
    name: "wSuiteMask"
    type: "US"
  }
  field {
    name: "wProductType"
    type: "UB"
  }
  field {
    name: "wReserved"
    type: "UB"
  }
}
struct {
  name: "OSVERSIONINFOEXW"
  field {
    name: "dwOSVersionInfoSize"
    type: "UI"
  }
  field {
    name: "dwMajorVersion"
    type: "UI"
  }
  field {
    name: "dwMinorVersion"
    type: "UI"
  }
  field {
    name: "dwBuildNumber"
    type: "UI"
  }
  field {
    name: "dwPlatformId"
    type: "UI"
  }
  field {
    name: "szCSDVersion"
    type: "X(ConstantArray.WCHAR [128])"
  }
  field {
    name: "wServicePackMajor"
    type: "US"
  }
  field {
    name: "wServicePackMinor"
    type: "US"
  }
  field {
    name: "wSuiteMask"
    type: "US"
  }
  field {
    name: "wProductType"
    type: "UB"
  }
  field {
    name: "wReserved"
    type: "UB"
  }
}
struct {
  name: "OSVERSIONINFOEXW"
  field {
    name: "dwOSVersionInfoSize"
    type: "UI"
  }
  field {
    name: "dwMajorVersion"
    type: "UI"
  }
  field {
    name: "dwMinorVersion"
    type: "UI"
  }
  field {
    name: "dwBuildNumber"
    type: "UI"
  }
  field {
    name: "dwPlatformId"
    type: "UI"
  }
  field {
    name: "szCSDVersion"
    type: "X(ConstantArray.WCHAR [128])"
  }
  field {
    name: "wServicePackMajor"
    type: "US"
  }
  field {
    name: "wServicePackMinor"
    type: "US"
  }
  field {
    name: "wSuiteMask"
    type: "US"
  }
  field {
    name: "wProductType"
    type: "UB"
  }
  field {
    name: "wReserved"
    type: "UB"
  }
}
struct {
  name: "OSVERSIONINFOEXW"
  field {
    name: "dwOSVersionInfoSize"
    type: "UI"
  }
  field {
    name: "dwMajorVersion"
    type: "UI"
  }
  field {
    name: "dwMinorVersion"
    type: "UI"
  }
  field {
    name: "dwBuildNumber"
    type: "UI"
  }
  field {
    name: "dwPlatformId"
    type: "UI"
  }
  field {
    name: "szCSDVersion"
    type: "X(ConstantArray.WCHAR [128])"
  }
  field {
    name: "wServicePackMajor"
    type: "US"
  }
  field {
    name: "wServicePackMinor"
    type: "US"
  }
  field {
    name: "wSuiteMask"
    type: "US"
  }
  field {
    name: "wProductType"
    type: "UB"
  }
  field {
    name: "wReserved"
    type: "UB"
  }
}
struct {
  name: "OSVERSIONINFOEXW"
  field {
    name: "dwOSVersionInfoSize"
    type: "UI"
  }
  field {
    name: "dwMajorVersion"
    type: "UI"
  }
  field {
    name: "dwMinorVersion"
    type: "UI"
  }
  field {
    name: "dwBuildNumber"
    type: "UI"
  }
  field {
    name: "dwPlatformId"
    type: "UI"
  }
  field {
    name: "szCSDVersion"
    type: "X(ConstantArray.WCHAR [128])"
  }
  field {
    name: "wServicePackMajor"
    type: "US"
  }
  field {
    name: "wServicePackMinor"
    type: "US"
  }
  field {
    name: "wSuiteMask"
    type: "US"
  }
  field {
    name: "wProductType"
    type: "UB"
  }
  field {
    name: "wReserved"
    type: "UB"
  }
}
struct {
  name: "OSVERSIONINFOEXW"
  field {
    name: "dwOSVersionInfoSize"
    type: "UI"
  }
  field {
    name: "dwMajorVersion"
    type: "UI"
  }
  field {
    name: "dwMinorVersion"
    type: "UI"
  }
  field {
    name: "dwBuildNumber"
    type: "UI"
  }
  field {
    name: "dwPlatformId"
    type: "UI"
  }
  field {
    name: "szCSDVersion"
    type: "X(ConstantArray.WCHAR [128])"
  }
  field {
    name: "wServicePackMajor"
    type: "US"
  }
  field {
    name: "wServicePackMinor"
    type: "US"
  }
  field {
    name: "wSuiteMask"
    type: "US"
  }
  field {
    name: "wProductType"
    type: "UB"
  }
  field {
    name: "wReserved"
    type: "UB"
  }
}
struct {
  name: "_ACTIVATION_CONTEXT_DETAILED_INFORMATION"
  field {
    name: "dwFlags"
    type: "UI"
  }
  field {
    name: "ulFormatVersion"
    type: "UI"
  }
  field {
    name: "ulAssemblyCount"
    type: "UI"
  }
  field {
    name: "ulRootManifestPathType"
    type: "UI"
  }
  field {
    name: "ulRootManifestPathChars"
    type: "UI"
  }
  field {
    name: "ulRootConfigurationPathType"
    type: "UI"
  }
  field {
    name: "ulRootConfigurationPathChars"
    type: "UI"
  }
  field {
    name: "ulAppDirPathType"
    type: "UI"
  }
  field {
    name: "ulAppDirPathChars"
    type: "UI"
  }
  field {
    name: "lpRootManifestPath"
    type: "*cUS;"
  }
  field {
    name: "lpRootConfigurationPath"
    type: "*cUS;"
  }
  field {
    name: "lpAppDirPath"
    type: "*cUS;"
  }
}
struct {
  name: "_ACTIVATION_CONTEXT_DETAILED_INFORMATION"
  field {
    name: "dwFlags"
    type: "UI"
  }
  field {
    name: "ulFormatVersion"
    type: "UI"
  }
  field {
    name: "ulAssemblyCount"
    type: "UI"
  }
  field {
    name: "ulRootManifestPathType"
    type: "UI"
  }
  field {
    name: "ulRootManifestPathChars"
    type: "UI"
  }
  field {
    name: "ulRootConfigurationPathType"
    type: "UI"
  }
  field {
    name: "ulRootConfigurationPathChars"
    type: "UI"
  }
  field {
    name: "ulAppDirPathType"
    type: "UI"
  }
  field {
    name: "ulAppDirPathChars"
    type: "UI"
  }
  field {
    name: "lpRootManifestPath"
    type: "*cUS;"
  }
  field {
    name: "lpRootConfigurationPath"
    type: "*cUS;"
  }
  field {
    name: "lpAppDirPath"
    type: "*cUS;"
  }
}
struct {
  name: "_ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION"
  field {
    name: "ulFlags"
    type: "UI"
  }
  field {
    name: "ulEncodedAssemblyIdentityLength"
    type: "UI"
  }
  field {
    name: "ulManifestPathType"
    type: "UI"
  }
  field {
    name: "ulManifestPathLength"
    type: "UI"
  }
  field {
    name: "liManifestLastWriteTime"
    type: "Runion _LARGE_INTEGER;"
  }
  field {
    name: "ulPolicyPathType"
    type: "UI"
  }
  field {
    name: "ulPolicyPathLength"
    type: "UI"
  }
  field {
    name: "liPolicyLastWriteTime"
    type: "Runion _LARGE_INTEGER;"
  }
  field {
    name: "ulMetadataSatelliteRosterIndex"
    type: "UI"
  }
  field {
    name: "ulManifestVersionMajor"
    type: "UI"
  }
  field {
    name: "ulManifestVersionMinor"
    type: "UI"
  }
  field {
    name: "ulPolicyVersionMajor"
    type: "UI"
  }
  field {
    name: "ulPolicyVersionMinor"
    type: "UI"
  }
  field {
    name: "ulAssemblyDirectoryNameLength"
    type: "UI"
  }
  field {
    name: "lpAssemblyEncodedAssemblyIdentity"
    type: "*cUS;"
  }
  field {
    name: "lpAssemblyManifestPath"
    type: "*cUS;"
  }
  field {
    name: "lpAssemblyPolicyPath"
    type: "*cUS;"
  }
  field {
    name: "lpAssemblyDirectoryName"
    type: "*cUS;"
  }
  field {
    name: "ulFileCount"
    type: "UI"
  }
}
struct {
  name: "_ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION"
  field {
    name: "ulFlags"
    type: "UI"
  }
  field {
    name: "ulEncodedAssemblyIdentityLength"
    type: "UI"
  }
  field {
    name: "ulManifestPathType"
    type: "UI"
  }
  field {
    name: "ulManifestPathLength"
    type: "UI"
  }
  field {
    name: "liManifestLastWriteTime"
    type: "Runion _LARGE_INTEGER;"
  }
  field {
    name: "ulPolicyPathType"
    type: "UI"
  }
  field {
    name: "ulPolicyPathLength"
    type: "UI"
  }
  field {
    name: "liPolicyLastWriteTime"
    type: "Runion _LARGE_INTEGER;"
  }
  field {
    name: "ulMetadataSatelliteRosterIndex"
    type: "UI"
  }
  field {
    name: "ulManifestVersionMajor"
    type: "UI"
  }
  field {
    name: "ulManifestVersionMinor"
    type: "UI"
  }
  field {
    name: "ulPolicyVersionMajor"
    type: "UI"
  }
  field {
    name: "ulPolicyVersionMinor"
    type: "UI"
  }
  field {
    name: "ulAssemblyDirectoryNameLength"
    type: "UI"
  }
  field {
    name: "lpAssemblyEncodedAssemblyIdentity"
    type: "*cUS;"
  }
  field {
    name: "lpAssemblyManifestPath"
    type: "*cUS;"
  }
  field {
    name: "lpAssemblyPolicyPath"
    type: "*cUS;"
  }
  field {
    name: "lpAssemblyDirectoryName"
    type: "*cUS;"
  }
  field {
    name: "ulFileCount"
    type: "UI"
  }
}
struct {
  name: "_ACTIVATION_CONTEXT_QUERY_INDEX"
  field {
    name: "ulAssemblyIndex"
    type: "UI"
  }
  field {
    name: "ulFileIndexInAssembly"
    type: "UI"
  }
}
struct {
  name: "_ACTIVATION_CONTEXT_QUERY_INDEX"
  field {
    name: "ulAssemblyIndex"
    type: "UI"
  }
  field {
    name: "ulFileIndexInAssembly"
    type: "UI"
  }
}
struct {
  name: "_ASSEMBLY_FILE_DETAILED_INFORMATION"
  field {
    name: "ulFlags"
    type: "UI"
  }
  field {
    name: "ulFilenameLength"
    type: "UI"
  }
  field {
    name: "ulPathLength"
    type: "UI"
  }
  field {
    name: "lpFileName"
    type: "*cUS;"
  }
  field {
    name: "lpFilePath"
    type: "*cUS;"
  }
}
struct {
  name: "_ASSEMBLY_FILE_DETAILED_INFORMATION"
  field {
    name: "ulFlags"
    type: "UI"
  }
  field {
    name: "ulFilenameLength"
    type: "UI"
  }
  field {
    name: "ulPathLength"
    type: "UI"
  }
  field {
    name: "lpFileName"
    type: "*cUS;"
  }
  field {
    name: "lpFilePath"
    type: "*cUS;"
  }
}
struct {
  name: "_PROCESSOR_GROUP_INFO"
  field {
    name: "MaximumProcessorCount"
    type: "UB"
  }
  field {
    name: "ActiveProcessorCount"
    type: "UB"
  }
  field {
    name: "Reserved"
    type: "X(ConstantArray.BYTE [38])"
  }
  field {
    name: "ActiveProcessorMask"
    type: "UI"
  }
}
struct {
  name: "_PROCESSOR_GROUP_INFO"
  field {
    name: "MaximumProcessorCount"
    type: "UB"
  }
  field {
    name: "ActiveProcessorCount"
    type: "UB"
  }
  field {
    name: "Reserved"
    type: "X(ConstantArray.BYTE [38])"
  }
  field {
    name: "ActiveProcessorMask"
    type: "UI"
  }
}
struct {
  name: "_CACHE_DESCRIPTOR"
  field {
    name: "Level"
    type: "UB"
  }
  field {
    name: "Associativity"
    type: "UB"
  }
  field {
    name: "LineSize"
    type: "US"
  }
  field {
    name: "Size"
    type: "UI"
  }
  field {
    name: "Type"
    type: "X(Enum.enum _PROCESSOR_CACHE_TYPE)"
  }
}
struct {
  name: "_CACHE_DESCRIPTOR"
  field {
    name: "Level"
    type: "UB"
  }
  field {
    name: "Associativity"
    type: "UB"
  }
  field {
    name: "LineSize"
    type: "US"
  }
  field {
    name: "Size"
    type: "UI"
  }
  field {
    name: "Type"
    type: "X(Enum.enum _PROCESSOR_CACHE_TYPE)"
  }
}
struct {
  name: "_GROUP_AFFINITY"
  field {
    name: "Mask"
    type: "UI"
  }
  field {
    name: "Group"
    type: "US"
  }
  field {
    name: "Reserved"
    type: "X(ConstantArray.WORD [3])"
  }
}
struct {
  name: "_GROUP_AFFINITY"
  field {
    name: "Mask"
    type: "UI"
  }
  field {
    name: "Group"
    type: "US"
  }
  field {
    name: "Reserved"
    type: "X(ConstantArray.WORD [3])"
  }
}
struct {
  name: "_PROCESSOR_NUMBER"
  field {
    name: "Group"
    type: "US"
  }
  field {
    name: "Number"
    type: "UB"
  }
  field {
    name: "Reserved"
    type: "UB"
  }
}
struct {
  name: "_PROCESSOR_NUMBER"
  field {
    name: "Group"
    type: "US"
  }
  field {
    name: "Number"
    type: "UB"
  }
  field {
    name: "Reserved"
    type: "UB"
  }
}
struct {
  name: "_PROCESSOR_RELATIONSHIP"
  field {
    name: "Flags"
    type: "UB"
  }
  field {
    name: "Reserved"
    type: "X(ConstantArray.BYTE [21])"
  }
  field {
    name: "GroupCount"
    type: "US"
  }
  field {
    name: "GroupMask"
    type: "X(ConstantArray.GROUP_AFFINITY [1])"
  }
}
struct {
  name: "_PROCESSOR_RELATIONSHIP"
  field {
    name: "Flags"
    type: "UB"
  }
  field {
    name: "Reserved"
    type: "X(ConstantArray.BYTE [21])"
  }
  field {
    name: "GroupCount"
    type: "US"
  }
  field {
    name: "GroupMask"
    type: "X(ConstantArray.GROUP_AFFINITY [1])"
  }
}
struct {
  name: "_NUMA_NODE_RELATIONSHIP"
  field {
    name: "NodeNumber"
    type: "UI"
  }
  field {
    name: "Reserved"
    type: "X(ConstantArray.BYTE [20])"
  }
  field {
    name: "GroupMask"
    type: "R_GROUP_AFFINITY;"
  }
}
struct {
  name: "_NUMA_NODE_RELATIONSHIP"
  field {
    name: "NodeNumber"
    type: "UI"
  }
  field {
    name: "Reserved"
    type: "X(ConstantArray.BYTE [20])"
  }
  field {
    name: "GroupMask"
    type: "R_GROUP_AFFINITY;"
  }
}
struct {
  name: "_CACHE_RELATIONSHIP"
  field {
    name: "Level"
    type: "UB"
  }
  field {
    name: "Associativity"
    type: "UB"
  }
  field {
    name: "LineSize"
    type: "US"
  }
  field {
    name: "Type"
    type: "X(Enum.enum _PROCESSOR_CACHE_TYPE)"
  }
  field {
    name: "Reserved"
    type: "X(ConstantArray.BYTE [20])"
  }
  field {
    name: "GroupMask"
    type: "R_GROUP_AFFINITY;"
  }
}
struct {
  name: "_CACHE_RELATIONSHIP"
  field {
    name: "Level"
    type: "UB"
  }
  field {
    name: "Associativity"
    type: "UB"
  }
  field {
    name: "LineSize"
    type: "US"
  }
  field {
    name: "Type"
    type: "X(Enum.enum _PROCESSOR_CACHE_TYPE)"
  }
  field {
    name: "Reserved"
    type: "X(ConstantArray.BYTE [20])"
  }
  field {
    name: "GroupMask"
    type: "R_GROUP_AFFINITY;"
  }
}
struct {
  name: "_GROUP_RELATIONSHIP"
  field {
    name: "MaximumGroupCount"
    type: "US"
  }
  field {
    name: "ActiveGroupCount"
    type: "US"
  }
  field {
    name: "Reserved"
    type: "X(ConstantArray.BYTE [20])"
  }
  field {
    name: "GroupInfo"
    type: "X(ConstantArray.PROCESSOR_GROUP_INFO [1])"
  }
}
struct {
  name: "_GROUP_RELATIONSHIP"
  field {
    name: "MaximumGroupCount"
    type: "US"
  }
  field {
    name: "ActiveGroupCount"
    type: "US"
  }
  field {
    name: "Reserved"
    type: "X(ConstantArray.BYTE [20])"
  }
  field {
    name: "GroupInfo"
    type: "X(ConstantArray.PROCESSOR_GROUP_INFO [1])"
  }
}
struct {
  name: "_SYSTEM_LOGICAL_PROCESSOR_INFORMATION"
  field {
    name: "ProcessorMask"
    type: "UI"
  }
  field {
    name: "Relationship"
    type: "X(Enum.enum _LOGICAL_PROCESSOR_RELATIONSHIP)"
  }
}
struct {
  name: "struct _SYSTEM_LOGICAL_PROCESSOR_INFORMATION::(anonymous at /usr/local/include/wine/windows/winnt.h:5558:9)"
  field {
    name: "Flags"
    type: "UB"
  }
}
struct {
  name: "struct _SYSTEM_LOGICAL_PROCESSOR_INFORMATION::(anonymous at /usr/local/include/wine/windows/winnt.h:5562:9)"
  field {
    name: "NodeNumber"
    type: "UI"
  }
}
struct {
  name: "_SYSTEM_LOGICAL_PROCESSOR_INFORMATION"
  field {
    name: "ProcessorMask"
    type: "UI"
  }
  field {
    name: "Relationship"
    type: "X(Enum.enum _LOGICAL_PROCESSOR_RELATIONSHIP)"
  }
}
struct {
  name: "struct _SYSTEM_LOGICAL_PROCESSOR_INFORMATION::(anonymous at /usr/local/include/wine/windows/winnt.h:5558:9)"
  field {
    name: "Flags"
    type: "UB"
  }
}
struct {
  name: "struct _SYSTEM_LOGICAL_PROCESSOR_INFORMATION::(anonymous at /usr/local/include/wine/windows/winnt.h:5562:9)"
  field {
    name: "NodeNumber"
    type: "UI"
  }
}
struct {
  name: "_SYSTEM_LOGICAL_PROCESSOR_INFORMATION_EX"
  field {
    name: "Relationship"
    type: "X(Enum.enum _LOGICAL_PROCESSOR_RELATIONSHIP)"
  }
  field {
    name: "Size"
    type: "UI"
  }
}
struct {
  name: "_SYSTEM_LOGICAL_PROCESSOR_INFORMATION_EX"
  field {
    name: "Relationship"
    type: "X(Enum.enum _LOGICAL_PROCESSOR_RELATIONSHIP)"
  }
  field {
    name: "Size"
    type: "UI"
  }
}
struct {
  name: "HACCEL__"
  field {
    name: "unused"
    type: "I"
  }
}
struct {
  name: "HBITMAP__"
  field {
    name: "unused"
    type: "I"
  }
}
struct {
  name: "HBRUSH__"
  field {
    name: "unused"
    type: "I"
  }
}
struct {
  name: "HCOLORSPACE__"
  field {
    name: "unused"
    type: "I"
  }
}
struct {
  name: "HDC__"
  field {
    name: "unused"
    type: "I"
  }
}
struct {
  name: "HDESK__"
  field {
    name: "unused"
    type: "I"
  }
}
struct {
  name: "HENHMETAFILE__"
  field {
    name: "unused"
    type: "I"
  }
}
struct {
  name: "HFONT__"
  field {
    name: "unused"
    type: "I"
  }
}
struct {
  name: "HGLRC__"
  field {
    name: "unused"
    type: "I"
  }
}
struct {
  name: "HHOOK__"
  field {
    name: "unused"
    type: "I"
  }
}
struct {
  name: "HICON__"
  field {
    name: "unused"
    type: "I"
  }
}
struct {
  name: "HINSTANCE__"
  field {
    name: "unused"
    type: "I"
  }
}
struct {
  name: "HKEY__"
  field {
    name: "unused"
    type: "I"
  }
}
struct {
  name: "HKL__"
  field {
    name: "unused"
    type: "I"
  }
}
struct {
  name: "HMENU__"
  field {
    name: "unused"
    type: "I"
  }
}
struct {
  name: "HMETAFILE__"
  field {
    name: "unused"
    type: "I"
  }
}
struct {
  name: "HMONITOR__"
  field {
    name: "unused"
    type: "I"
  }
}
struct {
  name: "HPALETTE__"
  field {
    name: "unused"
    type: "I"
  }
}
struct {
  name: "HPEN__"
  field {
    name: "unused"
    type: "I"
  }
}
struct {
  name: "HRGN__"
  field {
    name: "unused"
    type: "I"
  }
}
struct {
  name: "HRSRC__"
  field {
    name: "unused"
    type: "I"
  }
}
struct {
  name: "HTASK__"
  field {
    name: "unused"
    type: "I"
  }
}
struct {
  name: "HWINEVENTHOOK__"
  field {
    name: "unused"
    type: "I"
  }
}
struct {
  name: "HWINSTA__"
  field {
    name: "unused"
    type: "I"
  }
}
struct {
  name: "HWND__"
  field {
    name: "unused"
    type: "I"
  }
}
struct {
  name: "tagSIZE"
  field {
    name: "cx"
    type: "I"
  }
  field {
    name: "cy"
    type: "I"
  }
}
struct {
  name: "tagSIZE"
  field {
    name: "cx"
    type: "I"
  }
  field {
    name: "cy"
    type: "I"
  }
}
struct {
  name: "tagSIZE"
  field {
    name: "cx"
    type: "I"
  }
  field {
    name: "cy"
    type: "I"
  }
}
struct {
  name: "tagPOINT"
  field {
    name: "x"
    type: "I"
  }
  field {
    name: "y"
    type: "I"
  }
}
struct {
  name: "tagPOINT"
  field {
    name: "x"
    type: "I"
  }
  field {
    name: "y"
    type: "I"
  }
}
struct {
  name: "tagPOINT"
  field {
    name: "x"
    type: "I"
  }
  field {
    name: "y"
    type: "I"
  }
}
struct {
  name: "_POINTL"
  field {
    name: "x"
    type: "I"
  }
  field {
    name: "y"
    type: "I"
  }
}
struct {
  name: "_POINTL"
  field {
    name: "x"
    type: "I"
  }
  field {
    name: "y"
    type: "I"
  }
}
struct {
  name: "tagPOINTS"
  field {
    name: "x"
    type: "S"
  }
  field {
    name: "y"
    type: "S"
  }
}
struct {
  name: "tagPOINTS"
  field {
    name: "x"
    type: "S"
  }
  field {
    name: "y"
    type: "S"
  }
}
struct {
  name: "tagPOINTS"
  field {
    name: "x"
    type: "S"
  }
  field {
    name: "y"
    type: "S"
  }
}
struct {
  name: "_FILETIME"
  field {
    name: "dwLowDateTime"
    type: "UI"
  }
  field {
    name: "dwHighDateTime"
    type: "UI"
  }
}
struct {
  name: "_FILETIME"
  field {
    name: "dwLowDateTime"
    type: "UI"
  }
  field {
    name: "dwHighDateTime"
    type: "UI"
  }
}
struct {
  name: "_FILETIME"
  field {
    name: "dwLowDateTime"
    type: "UI"
  }
  field {
    name: "dwHighDateTime"
    type: "UI"
  }
}
struct {
  name: "tagRECT"
  field {
    name: "left"
    type: "I"
  }
  field {
    name: "top"
    type: "I"
  }
  field {
    name: "right"
    type: "I"
  }
  field {
    name: "bottom"
    type: "I"
  }
}
struct {
  name: "tagRECT"
  field {
    name: "left"
    type: "I"
  }
  field {
    name: "top"
    type: "I"
  }
  field {
    name: "right"
    type: "I"
  }
  field {
    name: "bottom"
    type: "I"
  }
}
struct {
  name: "tagRECT"
  field {
    name: "left"
    type: "I"
  }
  field {
    name: "top"
    type: "I"
  }
  field {
    name: "right"
    type: "I"
  }
  field {
    name: "bottom"
    type: "I"
  }
}
struct {
  name: "_RECTL"
  field {
    name: "left"
    type: "I"
  }
  field {
    name: "top"
    type: "I"
  }
  field {
    name: "right"
    type: "I"
  }
  field {
    name: "bottom"
    type: "I"
  }
}
struct {
  name: "_RECTL"
  field {
    name: "left"
    type: "I"
  }
  field {
    name: "top"
    type: "I"
  }
  field {
    name: "right"
    type: "I"
  }
  field {
    name: "bottom"
    type: "I"
  }
}
struct {
  name: "_RECTL"
  field {
    name: "left"
    type: "I"
  }
  field {
    name: "top"
    type: "I"
  }
  field {
    name: "right"
    type: "I"
  }
  field {
    name: "bottom"
    type: "I"
  }
}
struct {
  name: "_EXCEPTION_DEBUG_INFO"
  field {
    name: "ExceptionRecord"
    type: "R_EXCEPTION_RECORD;"
  }
  field {
    name: "dwFirstChance"
    type: "UI"
  }
}
struct {
  name: "_CREATE_THREAD_DEBUG_INFO"
  field {
    name: "hThread"
    type: "*V;"
  }
  field {
    name: "lpThreadLocalBase"
    type: "*V;"
  }
  field {
    name: "lpStartAddress"
    type: "*(*V;)UI;"
  }
}
struct {
  name: "_CREATE_PROCESS_DEBUG_INFO"
  field {
    name: "hFile"
    type: "*V;"
  }
  field {
    name: "hProcess"
    type: "*V;"
  }
  field {
    name: "hThread"
    type: "*V;"
  }
  field {
    name: "lpBaseOfImage"
    type: "*V;"
  }
  field {
    name: "dwDebugInfoFileOffset"
    type: "UI"
  }
  field {
    name: "nDebugInfoSize"
    type: "UI"
  }
  field {
    name: "lpThreadLocalBase"
    type: "*V;"
  }
  field {
    name: "lpStartAddress"
    type: "*(*V;)UI;"
  }
  field {
    name: "lpImageName"
    type: "*V;"
  }
  field {
    name: "fUnicode"
    type: "US"
  }
}
struct {
  name: "_EXIT_THREAD_DEBUG_INFO"
  field {
    name: "dwExitCode"
    type: "UI"
  }
}
struct {
  name: "_EXIT_PROCESS_DEBUG_INFO"
  field {
    name: "dwExitCode"
    type: "UI"
  }
}
struct {
  name: "_LOAD_DLL_DEBUG_INFO"
  field {
    name: "hFile"
    type: "*V;"
  }
  field {
    name: "lpBaseOfDll"
    type: "*V;"
  }
  field {
    name: "dwDebugInfoFileOffset"
    type: "UI"
  }
  field {
    name: "nDebugInfoSize"
    type: "UI"
  }
  field {
    name: "lpImageName"
    type: "*V;"
  }
  field {
    name: "fUnicode"
    type: "US"
  }
}
struct {
  name: "_UNLOAD_DLL_DEBUG_INFO"
  field {
    name: "lpBaseOfDll"
    type: "*V;"
  }
}
struct {
  name: "_OUTPUT_DEBUG_STRING_INFO"
  field {
    name: "lpDebugStringData"
    type: "*C;"
  }
  field {
    name: "fUnicode"
    type: "US"
  }
  field {
    name: "nDebugStringLength"
    type: "US"
  }
}
struct {
  name: "_RIP_INFO"
  field {
    name: "dwError"
    type: "UI"
  }
  field {
    name: "dwType"
    type: "UI"
  }
}
struct {
  name: "_DEBUG_EVENT"
  field {
    name: "dwDebugEventCode"
    type: "UI"
  }
  field {
    name: "dwProcessId"
    type: "UI"
  }
  field {
    name: "dwThreadId"
    type: "UI"
  }
  field {
    name: "u"
    type: "Runion _DEBUG_EVENT::(anonymous at /usr/local/include/wine/windows/winbase.h:140:5);"
  }
}
struct {
  name: "_DEBUG_EVENT"
  field {
    name: "dwDebugEventCode"
    type: "UI"
  }
  field {
    name: "dwProcessId"
    type: "UI"
  }
  field {
    name: "dwThreadId"
    type: "UI"
  }
  field {
    name: "u"
    type: "Runion _DEBUG_EVENT::(anonymous at /usr/local/include/wine/windows/winbase.h:140:5);"
  }
}
struct {
  name: "_OFSTRUCT"
  field {
    name: "cBytes"
    type: "UB"
  }
  field {
    name: "fFixedDisk"
    type: "UB"
  }
  field {
    name: "nErrCode"
    type: "US"
  }
  field {
    name: "Reserved1"
    type: "US"
  }
  field {
    name: "Reserved2"
    type: "US"
  }
  field {
    name: "szPathName"
    type: "X(ConstantArray.CHAR [128])"
  }
}
struct {
  name: "_OFSTRUCT"
  field {
    name: "cBytes"
    type: "UB"
  }
  field {
    name: "fFixedDisk"
    type: "UB"
  }
  field {
    name: "nErrCode"
    type: "US"
  }
  field {
    name: "Reserved1"
    type: "US"
  }
  field {
    name: "Reserved2"
    type: "US"
  }
  field {
    name: "szPathName"
    type: "X(ConstantArray.CHAR [128])"
  }
}
struct {
  name: "_OFSTRUCT"
  field {
    name: "cBytes"
    type: "UB"
  }
  field {
    name: "fFixedDisk"
    type: "UB"
  }
  field {
    name: "nErrCode"
    type: "US"
  }
  field {
    name: "Reserved1"
    type: "US"
  }
  field {
    name: "Reserved2"
    type: "US"
  }
  field {
    name: "szPathName"
    type: "X(ConstantArray.CHAR [128])"
  }
}
struct {
  name: "_SECURITY_ATTRIBUTES"
  field {
    name: "nLength"
    type: "UI"
  }
  field {
    name: "lpSecurityDescriptor"
    type: "*V;"
  }
  field {
    name: "bInheritHandle"
    type: "I"
  }
}
struct {
  name: "_SECURITY_ATTRIBUTES"
  field {
    name: "nLength"
    type: "UI"
  }
  field {
    name: "lpSecurityDescriptor"
    type: "*V;"
  }
  field {
    name: "bInheritHandle"
    type: "I"
  }
}
struct {
  name: "_SECURITY_ATTRIBUTES"
  field {
    name: "nLength"
    type: "UI"
  }
  field {
    name: "lpSecurityDescriptor"
    type: "*V;"
  }
  field {
    name: "bInheritHandle"
    type: "I"
  }
}
struct {
  name: "_WIN32_FIND_DATAA"
  field {
    name: "dwFileAttributes"
    type: "UI"
  }
  field {
    name: "ftCreationTime"
    type: "R_FILETIME;"
  }
  field {
    name: "ftLastAccessTime"
    type: "R_FILETIME;"
  }
  field {
    name: "ftLastWriteTime"
    type: "R_FILETIME;"
  }
  field {
    name: "nFileSizeHigh"
    type: "UI"
  }
  field {
    name: "nFileSizeLow"
    type: "UI"
  }
  field {
    name: "dwReserved0"
    type: "UI"
  }
  field {
    name: "dwReserved1"
    type: "UI"
  }
  field {
    name: "cFileName"
    type: "X(ConstantArray.CHAR [260])"
  }
  field {
    name: "cAlternateFileName"
    type: "X(ConstantArray.CHAR [14])"
  }
}
struct {
  name: "_WIN32_FIND_DATAA"
  field {
    name: "dwFileAttributes"
    type: "UI"
  }
  field {
    name: "ftCreationTime"
    type: "R_FILETIME;"
  }
  field {
    name: "ftLastAccessTime"
    type: "R_FILETIME;"
  }
  field {
    name: "ftLastWriteTime"
    type: "R_FILETIME;"
  }
  field {
    name: "nFileSizeHigh"
    type: "UI"
  }
  field {
    name: "nFileSizeLow"
    type: "UI"
  }
  field {
    name: "dwReserved0"
    type: "UI"
  }
  field {
    name: "dwReserved1"
    type: "UI"
  }
  field {
    name: "cFileName"
    type: "X(ConstantArray.CHAR [260])"
  }
  field {
    name: "cAlternateFileName"
    type: "X(ConstantArray.CHAR [14])"
  }
}
struct {
  name: "_WIN32_FIND_DATAA"
  field {
    name: "dwFileAttributes"
    type: "UI"
  }
  field {
    name: "ftCreationTime"
    type: "R_FILETIME;"
  }
  field {
    name: "ftLastAccessTime"
    type: "R_FILETIME;"
  }
  field {
    name: "ftLastWriteTime"
    type: "R_FILETIME;"
  }
  field {
    name: "nFileSizeHigh"
    type: "UI"
  }
  field {
    name: "nFileSizeLow"
    type: "UI"
  }
  field {
    name: "dwReserved0"
    type: "UI"
  }
  field {
    name: "dwReserved1"
    type: "UI"
  }
  field {
    name: "cFileName"
    type: "X(ConstantArray.CHAR [260])"
  }
  field {
    name: "cAlternateFileName"
    type: "X(ConstantArray.CHAR [14])"
  }
}
struct {
  name: "_WIN32_FIND_DATAW"
  field {
    name: "dwFileAttributes"
    type: "UI"
  }
  field {
    name: "ftCreationTime"
    type: "R_FILETIME;"
  }
  field {
    name: "ftLastAccessTime"
    type: "R_FILETIME;"
  }
  field {
    name: "ftLastWriteTime"
    type: "R_FILETIME;"
  }
  field {
    name: "nFileSizeHigh"
    type: "UI"
  }
  field {
    name: "nFileSizeLow"
    type: "UI"
  }
  field {
    name: "dwReserved0"
    type: "UI"
  }
  field {
    name: "dwReserved1"
    type: "UI"
  }
  field {
    name: "cFileName"
    type: "X(ConstantArray.WCHAR [260])"
  }
  field {
    name: "cAlternateFileName"
    type: "X(ConstantArray.WCHAR [14])"
  }
}
struct {
  name: "_WIN32_FIND_DATAW"
  field {
    name: "dwFileAttributes"
    type: "UI"
  }
  field {
    name: "ftCreationTime"
    type: "R_FILETIME;"
  }
  field {
    name: "ftLastAccessTime"
    type: "R_FILETIME;"
  }
  field {
    name: "ftLastWriteTime"
    type: "R_FILETIME;"
  }
  field {
    name: "nFileSizeHigh"
    type: "UI"
  }
  field {
    name: "nFileSizeLow"
    type: "UI"
  }
  field {
    name: "dwReserved0"
    type: "UI"
  }
  field {
    name: "dwReserved1"
    type: "UI"
  }
  field {
    name: "cFileName"
    type: "X(ConstantArray.WCHAR [260])"
  }
  field {
    name: "cAlternateFileName"
    type: "X(ConstantArray.WCHAR [14])"
  }
}
struct {
  name: "_WIN32_FIND_DATAW"
  field {
    name: "dwFileAttributes"
    type: "UI"
  }
  field {
    name: "ftCreationTime"
    type: "R_FILETIME;"
  }
  field {
    name: "ftLastAccessTime"
    type: "R_FILETIME;"
  }
  field {
    name: "ftLastWriteTime"
    type: "R_FILETIME;"
  }
  field {
    name: "nFileSizeHigh"
    type: "UI"
  }
  field {
    name: "nFileSizeLow"
    type: "UI"
  }
  field {
    name: "dwReserved0"
    type: "UI"
  }
  field {
    name: "dwReserved1"
    type: "UI"
  }
  field {
    name: "cFileName"
    type: "X(ConstantArray.WCHAR [260])"
  }
  field {
    name: "cAlternateFileName"
    type: "X(ConstantArray.WCHAR [14])"
  }
}
struct {
  name: "_PROCESS_HEAP_ENTRY"
  field {
    name: "lpData"
    type: "*V;"
  }
  field {
    name: "cbData"
    type: "UI"
  }
  field {
    name: "cbOverhead"
    type: "UB"
  }
  field {
    name: "iRegionIndex"
    type: "UB"
  }
  field {
    name: "wFlags"
    type: "US"
  }
}
struct {
  name: "struct _PROCESS_HEAP_ENTRY::(anonymous at /usr/local/include/wine/windows/winbase.h:305:9)"
  field {
    name: "hMem"
    type: "*V;"
  }
  field {
    name: "dwReserved"
    type: "X(ConstantArray.DWORD [3])"
  }
}
struct {
  name: "struct _PROCESS_HEAP_ENTRY::(anonymous at /usr/local/include/wine/windows/winbase.h:309:9)"
  field {
    name: "dwCommittedSize"
    type: "UI"
  }
  field {
    name: "dwUnCommittedSize"
    type: "UI"
  }
  field {
    name: "lpFirstBlock"
    type: "*V;"
  }
  field {
    name: "lpLastBlock"
    type: "*V;"
  }
}
struct {
  name: "_PROCESS_HEAP_ENTRY"
  field {
    name: "lpData"
    type: "*V;"
  }
  field {
    name: "cbData"
    type: "UI"
  }
  field {
    name: "cbOverhead"
    type: "UB"
  }
  field {
    name: "iRegionIndex"
    type: "UB"
  }
  field {
    name: "wFlags"
    type: "US"
  }
}
struct {
  name: "struct _PROCESS_HEAP_ENTRY::(anonymous at /usr/local/include/wine/windows/winbase.h:305:9)"
  field {
    name: "hMem"
    type: "*V;"
  }
  field {
    name: "dwReserved"
    type: "X(ConstantArray.DWORD [3])"
  }
}
struct {
  name: "struct _PROCESS_HEAP_ENTRY::(anonymous at /usr/local/include/wine/windows/winbase.h:309:9)"
  field {
    name: "dwCommittedSize"
    type: "UI"
  }
  field {
    name: "dwUnCommittedSize"
    type: "UI"
  }
  field {
    name: "lpFirstBlock"
    type: "*V;"
  }
  field {
    name: "lpLastBlock"
    type: "*V;"
  }
}
struct {
  name: "_PROCESS_HEAP_ENTRY"
  field {
    name: "lpData"
    type: "*V;"
  }
  field {
    name: "cbData"
    type: "UI"
  }
  field {
    name: "cbOverhead"
    type: "UB"
  }
  field {
    name: "iRegionIndex"
    type: "UB"
  }
  field {
    name: "wFlags"
    type: "US"
  }
}
struct {
  name: "struct _PROCESS_HEAP_ENTRY::(anonymous at /usr/local/include/wine/windows/winbase.h:305:9)"
  field {
    name: "hMem"
    type: "*V;"
  }
  field {
    name: "dwReserved"
    type: "X(ConstantArray.DWORD [3])"
  }
}
struct {
  name: "struct _PROCESS_HEAP_ENTRY::(anonymous at /usr/local/include/wine/windows/winbase.h:309:9)"
  field {
    name: "dwCommittedSize"
    type: "UI"
  }
  field {
    name: "dwUnCommittedSize"
    type: "UI"
  }
  field {
    name: "lpFirstBlock"
    type: "*V;"
  }
  field {
    name: "lpLastBlock"
    type: "*V;"
  }
}
struct {
  name: "tagMEMORYSTATUS"
  field {
    name: "dwLength"
    type: "UI"
  }
  field {
    name: "dwMemoryLoad"
    type: "UI"
  }
  field {
    name: "dwTotalPhys"
    type: "UI"
  }
  field {
    name: "dwAvailPhys"
    type: "UI"
  }
  field {
    name: "dwTotalPageFile"
    type: "UI"
  }
  field {
    name: "dwAvailPageFile"
    type: "UI"
  }
  field {
    name: "dwTotalVirtual"
    type: "UI"
  }
  field {
    name: "dwAvailVirtual"
    type: "UI"
  }
}
struct {
  name: "tagMEMORYSTATUS"
  field {
    name: "dwLength"
    type: "UI"
  }
  field {
    name: "dwMemoryLoad"
    type: "UI"
  }
  field {
    name: "dwTotalPhys"
    type: "UI"
  }
  field {
    name: "dwAvailPhys"
    type: "UI"
  }
  field {
    name: "dwTotalPageFile"
    type: "UI"
  }
  field {
    name: "dwAvailPageFile"
    type: "UI"
  }
  field {
    name: "dwTotalVirtual"
    type: "UI"
  }
  field {
    name: "dwAvailVirtual"
    type: "UI"
  }
}
struct {
  name: "tagMEMORYSTATUSEX"
  field {
    name: "dwLength"
    type: "UI"
  }
  field {
    name: "dwMemoryLoad"
    type: "UI"
  }
  field {
    name: "ullTotalPhys"
    type: "UI"
  }
  field {
    name: "ullAvailPhys"
    type: "UI"
  }
  field {
    name: "ullTotalPageFile"
    type: "UI"
  }
  field {
    name: "ullAvailPageFile"
    type: "UI"
  }
  field {
    name: "ullTotalVirtual"
    type: "UI"
  }
  field {
    name: "ullAvailVirtual"
    type: "UI"
  }
  field {
    name: "ullAvailExtendedVirtual"
    type: "UI"
  }
}
struct {
  name: "tagMEMORYSTATUSEX"
  field {
    name: "dwLength"
    type: "UI"
  }
  field {
    name: "dwMemoryLoad"
    type: "UI"
  }
  field {
    name: "ullTotalPhys"
    type: "UI"
  }
  field {
    name: "ullAvailPhys"
    type: "UI"
  }
  field {
    name: "ullTotalPageFile"
    type: "UI"
  }
  field {
    name: "ullAvailPageFile"
    type: "UI"
  }
  field {
    name: "ullTotalVirtual"
    type: "UI"
  }
  field {
    name: "ullAvailVirtual"
    type: "UI"
  }
  field {
    name: "ullAvailExtendedVirtual"
    type: "UI"
  }
}
struct {
  name: "_SYSTEMTIME"
  field {
    name: "wYear"
    type: "US"
  }
  field {
    name: "wMonth"
    type: "US"
  }
  field {
    name: "wDayOfWeek"
    type: "US"
  }
  field {
    name: "wDay"
    type: "US"
  }
  field {
    name: "wHour"
    type: "US"
  }
  field {
    name: "wMinute"
    type: "US"
  }
  field {
    name: "wSecond"
    type: "US"
  }
  field {
    name: "wMilliseconds"
    type: "US"
  }
}
struct {
  name: "_SYSTEMTIME"
  field {
    name: "wYear"
    type: "US"
  }
  field {
    name: "wMonth"
    type: "US"
  }
  field {
    name: "wDayOfWeek"
    type: "US"
  }
  field {
    name: "wDay"
    type: "US"
  }
  field {
    name: "wHour"
    type: "US"
  }
  field {
    name: "wMinute"
    type: "US"
  }
  field {
    name: "wSecond"
    type: "US"
  }
  field {
    name: "wMilliseconds"
    type: "US"
  }
}
struct {
  name: "_SYSTEMTIME"
  field {
    name: "wYear"
    type: "US"
  }
  field {
    name: "wMonth"
    type: "US"
  }
  field {
    name: "wDayOfWeek"
    type: "US"
  }
  field {
    name: "wDay"
    type: "US"
  }
  field {
    name: "wHour"
    type: "US"
  }
  field {
    name: "wMinute"
    type: "US"
  }
  field {
    name: "wSecond"
    type: "US"
  }
  field {
    name: "wMilliseconds"
    type: "US"
  }
}
struct {
  name: "_OVERLAPPED"
  field {
    name: "Internal"
    type: "UI"
  }
  field {
    name: "InternalHigh"
    type: "UI"
  }
  field {
    name: "hEvent"
    type: "*V;"
  }
}
struct {
  name: "struct _OVERLAPPED::(anonymous at /usr/local/include/wine/windows/winbase.h:546:13)"
  field {
    name: "Offset"
    type: "UI"
  }
  field {
    name: "OffsetHigh"
    type: "UI"
  }
}
struct {
  name: "_OVERLAPPED"
  field {
    name: "Internal"
    type: "UI"
  }
  field {
    name: "InternalHigh"
    type: "UI"
  }
  field {
    name: "hEvent"
    type: "*V;"
  }
}
struct {
  name: "struct _OVERLAPPED::(anonymous at /usr/local/include/wine/windows/winbase.h:546:13)"
  field {
    name: "Offset"
    type: "UI"
  }
  field {
    name: "OffsetHigh"
    type: "UI"
  }
}
struct {
  name: "_STARTUPINFOA"
  field {
    name: "cb"
    type: "UI"
  }
  field {
    name: "lpReserved"
    type: "*C;"
  }
  field {
    name: "lpDesktop"
    type: "*C;"
  }
  field {
    name: "lpTitle"
    type: "*C;"
  }
  field {
    name: "dwX"
    type: "UI"
  }
  field {
    name: "dwY"
    type: "UI"
  }
  field {
    name: "dwXSize"
    type: "UI"
  }
  field {
    name: "dwYSize"
    type: "UI"
  }
  field {
    name: "dwXCountChars"
    type: "UI"
  }
  field {
    name: "dwYCountChars"
    type: "UI"
  }
  field {
    name: "dwFillAttribute"
    type: "UI"
  }
  field {
    name: "dwFlags"
    type: "UI"
  }
  field {
    name: "wShowWindow"
    type: "US"
  }
  field {
    name: "cbReserved2"
    type: "US"
  }
  field {
    name: "lpReserved2"
    type: "*UB;"
  }
  field {
    name: "hStdInput"
    type: "*V;"
  }
  field {
    name: "hStdOutput"
    type: "*V;"
  }
  field {
    name: "hStdError"
    type: "*V;"
  }
}
struct {
  name: "_STARTUPINFOA"
  field {
    name: "cb"
    type: "UI"
  }
  field {
    name: "lpReserved"
    type: "*C;"
  }
  field {
    name: "lpDesktop"
    type: "*C;"
  }
  field {
    name: "lpTitle"
    type: "*C;"
  }
  field {
    name: "dwX"
    type: "UI"
  }
  field {
    name: "dwY"
    type: "UI"
  }
  field {
    name: "dwXSize"
    type: "UI"
  }
  field {
    name: "dwYSize"
    type: "UI"
  }
  field {
    name: "dwXCountChars"
    type: "UI"
  }
  field {
    name: "dwYCountChars"
    type: "UI"
  }
  field {
    name: "dwFillAttribute"
    type: "UI"
  }
  field {
    name: "dwFlags"
    type: "UI"
  }
  field {
    name: "wShowWindow"
    type: "US"
  }
  field {
    name: "cbReserved2"
    type: "US"
  }
  field {
    name: "lpReserved2"
    type: "*UB;"
  }
  field {
    name: "hStdInput"
    type: "*V;"
  }
  field {
    name: "hStdOutput"
    type: "*V;"
  }
  field {
    name: "hStdError"
    type: "*V;"
  }
}
struct {
  name: "_STARTUPINFOW"
  field {
    name: "cb"
    type: "UI"
  }
  field {
    name: "lpReserved"
    type: "*US;"
  }
  field {
    name: "lpDesktop"
    type: "*US;"
  }
  field {
    name: "lpTitle"
    type: "*US;"
  }
  field {
    name: "dwX"
    type: "UI"
  }
  field {
    name: "dwY"
    type: "UI"
  }
  field {
    name: "dwXSize"
    type: "UI"
  }
  field {
    name: "dwYSize"
    type: "UI"
  }
  field {
    name: "dwXCountChars"
    type: "UI"
  }
  field {
    name: "dwYCountChars"
    type: "UI"
  }
  field {
    name: "dwFillAttribute"
    type: "UI"
  }
  field {
    name: "dwFlags"
    type: "UI"
  }
  field {
    name: "wShowWindow"
    type: "US"
  }
  field {
    name: "cbReserved2"
    type: "US"
  }
  field {
    name: "lpReserved2"
    type: "*UB;"
  }
  field {
    name: "hStdInput"
    type: "*V;"
  }
  field {
    name: "hStdOutput"
    type: "*V;"
  }
  field {
    name: "hStdError"
    type: "*V;"
  }
}
struct {
  name: "_STARTUPINFOW"
  field {
    name: "cb"
    type: "UI"
  }
  field {
    name: "lpReserved"
    type: "*US;"
  }
  field {
    name: "lpDesktop"
    type: "*US;"
  }
  field {
    name: "lpTitle"
    type: "*US;"
  }
  field {
    name: "dwX"
    type: "UI"
  }
  field {
    name: "dwY"
    type: "UI"
  }
  field {
    name: "dwXSize"
    type: "UI"
  }
  field {
    name: "dwYSize"
    type: "UI"
  }
  field {
    name: "dwXCountChars"
    type: "UI"
  }
  field {
    name: "dwYCountChars"
    type: "UI"
  }
  field {
    name: "dwFillAttribute"
    type: "UI"
  }
  field {
    name: "dwFlags"
    type: "UI"
  }
  field {
    name: "wShowWindow"
    type: "US"
  }
  field {
    name: "cbReserved2"
    type: "US"
  }
  field {
    name: "lpReserved2"
    type: "*UB;"
  }
  field {
    name: "hStdInput"
    type: "*V;"
  }
  field {
    name: "hStdOutput"
    type: "*V;"
  }
  field {
    name: "hStdError"
    type: "*V;"
  }
}
struct {
  name: "_PROCESS_INFORMATION"
  field {
    name: "hProcess"
    type: "*V;"
  }
  field {
    name: "hThread"
    type: "*V;"
  }
  field {
    name: "dwProcessId"
    type: "UI"
  }
  field {
    name: "dwThreadId"
    type: "UI"
  }
}
struct {
  name: "_PROCESS_INFORMATION"
  field {
    name: "hProcess"
    type: "*V;"
  }
  field {
    name: "hThread"
    type: "*V;"
  }
  field {
    name: "dwProcessId"
    type: "UI"
  }
  field {
    name: "dwThreadId"
    type: "UI"
  }
}
struct {
  name: "_PROCESS_INFORMATION"
  field {
    name: "hProcess"
    type: "*V;"
  }
  field {
    name: "hThread"
    type: "*V;"
  }
  field {
    name: "dwProcessId"
    type: "UI"
  }
  field {
    name: "dwThreadId"
    type: "UI"
  }
}
struct {
  name: "_TIME_DYNAMIC_ZONE_INFORMATION"
  field {
    name: "Bias"
    type: "I"
  }
  field {
    name: "StandardName"
    type: "X(ConstantArray.WCHAR [32])"
  }
  field {
    name: "StandardDate"
    type: "R_SYSTEMTIME;"
  }
  field {
    name: "StandardBias"
    type: "I"
  }
  field {
    name: "DaylightName"
    type: "X(ConstantArray.WCHAR [32])"
  }
  field {
    name: "DaylightDate"
    type: "R_SYSTEMTIME;"
  }
  field {
    name: "DaylightBias"
    type: "I"
  }
  field {
    name: "TimeZoneKeyName"
    type: "X(ConstantArray.WCHAR [128])"
  }
  field {
    name: "DynamicDaylightTimeDisabled"
    type: "UB"
  }
}
struct {
  name: "_TIME_DYNAMIC_ZONE_INFORMATION"
  field {
    name: "Bias"
    type: "I"
  }
  field {
    name: "StandardName"
    type: "X(ConstantArray.WCHAR [32])"
  }
  field {
    name: "StandardDate"
    type: "R_SYSTEMTIME;"
  }
  field {
    name: "StandardBias"
    type: "I"
  }
  field {
    name: "DaylightName"
    type: "X(ConstantArray.WCHAR [32])"
  }
  field {
    name: "DaylightDate"
    type: "R_SYSTEMTIME;"
  }
  field {
    name: "DaylightBias"
    type: "I"
  }
  field {
    name: "TimeZoneKeyName"
    type: "X(ConstantArray.WCHAR [128])"
  }
  field {
    name: "DynamicDaylightTimeDisabled"
    type: "UB"
  }
}
struct {
  name: "_TIME_ZONE_INFORMATION"
  field {
    name: "Bias"
    type: "I"
  }
  field {
    name: "StandardName"
    type: "X(ConstantArray.WCHAR [32])"
  }
  field {
    name: "StandardDate"
    type: "R_SYSTEMTIME;"
  }
  field {
    name: "StandardBias"
    type: "I"
  }
  field {
    name: "DaylightName"
    type: "X(ConstantArray.WCHAR [32])"
  }
  field {
    name: "DaylightDate"
    type: "R_SYSTEMTIME;"
  }
  field {
    name: "DaylightBias"
    type: "I"
  }
}
struct {
  name: "_TIME_ZONE_INFORMATION"
  field {
    name: "Bias"
    type: "I"
  }
  field {
    name: "StandardName"
    type: "X(ConstantArray.WCHAR [32])"
  }
  field {
    name: "StandardDate"
    type: "R_SYSTEMTIME;"
  }
  field {
    name: "StandardBias"
    type: "I"
  }
  field {
    name: "DaylightName"
    type: "X(ConstantArray.WCHAR [32])"
  }
  field {
    name: "DaylightDate"
    type: "R_SYSTEMTIME;"
  }
  field {
    name: "DaylightBias"
    type: "I"
  }
}
struct {
  name: "_TIME_ZONE_INFORMATION"
  field {
    name: "Bias"
    type: "I"
  }
  field {
    name: "StandardName"
    type: "X(ConstantArray.WCHAR [32])"
  }
  field {
    name: "StandardDate"
    type: "R_SYSTEMTIME;"
  }
  field {
    name: "StandardBias"
    type: "I"
  }
  field {
    name: "DaylightName"
    type: "X(ConstantArray.WCHAR [32])"
  }
  field {
    name: "DaylightDate"
    type: "R_SYSTEMTIME;"
  }
  field {
    name: "DaylightBias"
    type: "I"
  }
}
struct {
  name: "_BY_HANDLE_FILE_INFORMATION"
  field {
    name: "dwFileAttributes"
    type: "UI"
  }
  field {
    name: "ftCreationTime"
    type: "R_FILETIME;"
  }
  field {
    name: "ftLastAccessTime"
    type: "R_FILETIME;"
  }
  field {
    name: "ftLastWriteTime"
    type: "R_FILETIME;"
  }
  field {
    name: "dwVolumeSerialNumber"
    type: "UI"
  }
  field {
    name: "nFileSizeHigh"
    type: "UI"
  }
  field {
    name: "nFileSizeLow"
    type: "UI"
  }
  field {
    name: "nNumberOfLinks"
    type: "UI"
  }
  field {
    name: "nFileIndexHigh"
    type: "UI"
  }
  field {
    name: "nFileIndexLow"
    type: "UI"
  }
}
struct {
  name: "_BY_HANDLE_FILE_INFORMATION"
  field {
    name: "dwFileAttributes"
    type: "UI"
  }
  field {
    name: "ftCreationTime"
    type: "R_FILETIME;"
  }
  field {
    name: "ftLastAccessTime"
    type: "R_FILETIME;"
  }
  field {
    name: "ftLastWriteTime"
    type: "R_FILETIME;"
  }
  field {
    name: "dwVolumeSerialNumber"
    type: "UI"
  }
  field {
    name: "nFileSizeHigh"
    type: "UI"
  }
  field {
    name: "nFileSizeLow"
    type: "UI"
  }
  field {
    name: "nNumberOfLinks"
    type: "UI"
  }
  field {
    name: "nFileIndexHigh"
    type: "UI"
  }
  field {
    name: "nFileIndexLow"
    type: "UI"
  }
}
struct {
  name: "_BY_HANDLE_FILE_INFORMATION"
  field {
    name: "dwFileAttributes"
    type: "UI"
  }
  field {
    name: "ftCreationTime"
    type: "R_FILETIME;"
  }
  field {
    name: "ftLastAccessTime"
    type: "R_FILETIME;"
  }
  field {
    name: "ftLastWriteTime"
    type: "R_FILETIME;"
  }
  field {
    name: "dwVolumeSerialNumber"
    type: "UI"
  }
  field {
    name: "nFileSizeHigh"
    type: "UI"
  }
  field {
    name: "nFileSizeLow"
    type: "UI"
  }
  field {
    name: "nNumberOfLinks"
    type: "UI"
  }
  field {
    name: "nFileIndexHigh"
    type: "UI"
  }
  field {
    name: "nFileIndexLow"
    type: "UI"
  }
}
struct {
  name: "_FILE_ID_DESCRIPTOR"
  field {
    name: "dwSize"
    type: "UI"
  }
  field {
    name: "Type"
    type: "X(Enum.enum _FILE_ID_TYPE)"
  }
}
struct {
  name: "_FILE_ID_DESCRIPTOR"
  field {
    name: "dwSize"
    type: "UI"
  }
  field {
    name: "Type"
    type: "X(Enum.enum _FILE_ID_TYPE)"
  }
}
struct {
  name: "_FILE_ID_BOTH_DIR_INFO"
  field {
    name: "NextEntryOffset"
    type: "UI"
  }
  field {
    name: "FileIndex"
    type: "UI"
  }
  field {
    name: "CreationTime"
    type: "Runion _LARGE_INTEGER;"
  }
  field {
    name: "LastAccessTime"
    type: "Runion _LARGE_INTEGER;"
  }
  field {
    name: "LastWriteTime"
    type: "Runion _LARGE_INTEGER;"
  }
  field {
    name: "ChangeTime"
    type: "Runion _LARGE_INTEGER;"
  }
  field {
    name: "EndOfFile"
    type: "Runion _LARGE_INTEGER;"
  }
  field {
    name: "AllocationSize"
    type: "Runion _LARGE_INTEGER;"
  }
  field {
    name: "FileAttributes"
    type: "UI"
  }
  field {
    name: "FileNameLength"
    type: "UI"
  }
  field {
    name: "EaSize"
    type: "UI"
  }
  field {
    name: "ShortNameLength"
    type: "C"
  }
  field {
    name: "ShortName"
    type: "X(ConstantArray.WCHAR [12])"
  }
  field {
    name: "FileId"
    type: "Runion _LARGE_INTEGER;"
  }
  field {
    name: "FileName"
    type: "X(ConstantArray.WCHAR [1])"
  }
}
struct {
  name: "_FILE_ID_BOTH_DIR_INFO"
  field {
    name: "NextEntryOffset"
    type: "UI"
  }
  field {
    name: "FileIndex"
    type: "UI"
  }
  field {
    name: "CreationTime"
    type: "Runion _LARGE_INTEGER;"
  }
  field {
    name: "LastAccessTime"
    type: "Runion _LARGE_INTEGER;"
  }
  field {
    name: "LastWriteTime"
    type: "Runion _LARGE_INTEGER;"
  }
  field {
    name: "ChangeTime"
    type: "Runion _LARGE_INTEGER;"
  }
  field {
    name: "EndOfFile"
    type: "Runion _LARGE_INTEGER;"
  }
  field {
    name: "AllocationSize"
    type: "Runion _LARGE_INTEGER;"
  }
  field {
    name: "FileAttributes"
    type: "UI"
  }
  field {
    name: "FileNameLength"
    type: "UI"
  }
  field {
    name: "EaSize"
    type: "UI"
  }
  field {
    name: "ShortNameLength"
    type: "C"
  }
  field {
    name: "ShortName"
    type: "X(ConstantArray.WCHAR [12])"
  }
  field {
    name: "FileId"
    type: "Runion _LARGE_INTEGER;"
  }
  field {
    name: "FileName"
    type: "X(ConstantArray.WCHAR [1])"
  }
}
struct {
  name: "_SYSTEM_POWER_STATUS"
  field {
    name: "ACLineStatus"
    type: "UB"
  }
  field {
    name: "BatteryFlag"
    type: "UB"
  }
  field {
    name: "BatteryLifePercent"
    type: "UB"
  }
  field {
    name: "Reserved1"
    type: "UB"
  }
  field {
    name: "BatteryLifeTime"
    type: "UI"
  }
  field {
    name: "BatteryFullLifeTime"
    type: "UI"
  }
}
struct {
  name: "_SYSTEM_POWER_STATUS"
  field {
    name: "ACLineStatus"
    type: "UB"
  }
  field {
    name: "BatteryFlag"
    type: "UB"
  }
  field {
    name: "BatteryLifePercent"
    type: "UB"
  }
  field {
    name: "Reserved1"
    type: "UB"
  }
  field {
    name: "BatteryLifeTime"
    type: "UI"
  }
  field {
    name: "BatteryFullLifeTime"
    type: "UI"
  }
}
struct {
  name: "_SYSTEM_INFO"
  field {
    name: "dwPageSize"
    type: "UI"
  }
  field {
    name: "lpMinimumApplicationAddress"
    type: "*V;"
  }
  field {
    name: "lpMaximumApplicationAddress"
    type: "*V;"
  }
  field {
    name: "dwActiveProcessorMask"
    type: "UI"
  }
  field {
    name: "dwNumberOfProcessors"
    type: "UI"
  }
  field {
    name: "dwProcessorType"
    type: "UI"
  }
  field {
    name: "dwAllocationGranularity"
    type: "UI"
  }
  field {
    name: "wProcessorLevel"
    type: "US"
  }
  field {
    name: "wProcessorRevision"
    type: "US"
  }
}
struct {
  name: "struct _SYSTEM_INFO::(anonymous at /usr/local/include/wine/windows/winbase.h:849:2)"
  field {
    name: "wProcessorArchitecture"
    type: "US"
  }
  field {
    name: "wReserved"
    type: "US"
  }
}
struct {
  name: "_SYSTEM_INFO"
  field {
    name: "dwPageSize"
    type: "UI"
  }
  field {
    name: "lpMinimumApplicationAddress"
    type: "*V;"
  }
  field {
    name: "lpMaximumApplicationAddress"
    type: "*V;"
  }
  field {
    name: "dwActiveProcessorMask"
    type: "UI"
  }
  field {
    name: "dwNumberOfProcessors"
    type: "UI"
  }
  field {
    name: "dwProcessorType"
    type: "UI"
  }
  field {
    name: "dwAllocationGranularity"
    type: "UI"
  }
  field {
    name: "wProcessorLevel"
    type: "US"
  }
  field {
    name: "wProcessorRevision"
    type: "US"
  }
}
struct {
  name: "struct _SYSTEM_INFO::(anonymous at /usr/local/include/wine/windows/winbase.h:849:2)"
  field {
    name: "wProcessorArchitecture"
    type: "US"
  }
  field {
    name: "wReserved"
    type: "US"
  }
}
struct {
  name: "_WIN32_FILE_ATTRIBUTES_DATA"
  field {
    name: "dwFileAttributes"
    type: "UI"
  }
  field {
    name: "ftCreationTime"
    type: "R_FILETIME;"
  }
  field {
    name: "ftLastAccessTime"
    type: "R_FILETIME;"
  }
  field {
    name: "ftLastWriteTime"
    type: "R_FILETIME;"
  }
  field {
    name: "nFileSizeHigh"
    type: "UI"
  }
  field {
    name: "nFileSizeLow"
    type: "UI"
  }
}
struct {
  name: "_WIN32_FILE_ATTRIBUTES_DATA"
  field {
    name: "dwFileAttributes"
    type: "UI"
  }
  field {
    name: "ftCreationTime"
    type: "R_FILETIME;"
  }
  field {
    name: "ftLastAccessTime"
    type: "R_FILETIME;"
  }
  field {
    name: "ftLastWriteTime"
    type: "R_FILETIME;"
  }
  field {
    name: "nFileSizeHigh"
    type: "UI"
  }
  field {
    name: "nFileSizeLow"
    type: "UI"
  }
}
struct {
  name: "tagACTCTXA"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "dwFlags"
    type: "UI"
  }
  field {
    name: "lpSource"
    type: "*cC;"
  }
  field {
    name: "wProcessorArchitecture"
    type: "US"
  }
  field {
    name: "wLangId"
    type: "US"
  }
  field {
    name: "lpAssemblyDirectory"
    type: "*cC;"
  }
  field {
    name: "lpResourceName"
    type: "*cC;"
  }
  field {
    name: "lpApplicationName"
    type: "*cC;"
  }
  field {
    name: "hModule"
    type: "*RHINSTANCE__;;"
  }
}
struct {
  name: "tagACTCTXA"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "dwFlags"
    type: "UI"
  }
  field {
    name: "lpSource"
    type: "*cC;"
  }
  field {
    name: "wProcessorArchitecture"
    type: "US"
  }
  field {
    name: "wLangId"
    type: "US"
  }
  field {
    name: "lpAssemblyDirectory"
    type: "*cC;"
  }
  field {
    name: "lpResourceName"
    type: "*cC;"
  }
  field {
    name: "lpApplicationName"
    type: "*cC;"
  }
  field {
    name: "hModule"
    type: "*RHINSTANCE__;;"
  }
}
struct {
  name: "tagACTCTXW"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "dwFlags"
    type: "UI"
  }
  field {
    name: "lpSource"
    type: "*cUS;"
  }
  field {
    name: "wProcessorArchitecture"
    type: "US"
  }
  field {
    name: "wLangId"
    type: "US"
  }
  field {
    name: "lpAssemblyDirectory"
    type: "*cUS;"
  }
  field {
    name: "lpResourceName"
    type: "*cUS;"
  }
  field {
    name: "lpApplicationName"
    type: "*cUS;"
  }
  field {
    name: "hModule"
    type: "*RHINSTANCE__;;"
  }
}
struct {
  name: "tagACTCTXW"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "dwFlags"
    type: "UI"
  }
  field {
    name: "lpSource"
    type: "*cUS;"
  }
  field {
    name: "wProcessorArchitecture"
    type: "US"
  }
  field {
    name: "wLangId"
    type: "US"
  }
  field {
    name: "lpAssemblyDirectory"
    type: "*cUS;"
  }
  field {
    name: "lpResourceName"
    type: "*cUS;"
  }
  field {
    name: "lpApplicationName"
    type: "*cUS;"
  }
  field {
    name: "hModule"
    type: "*RHINSTANCE__;;"
  }
}
struct {
  name: "tagACTCTX_SECTION_KEYED_DATA_2600"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "ulDataFormatVersion"
    type: "UI"
  }
  field {
    name: "lpData"
    type: "*V;"
  }
  field {
    name: "ulLength"
    type: "UI"
  }
  field {
    name: "lpSectionGlobalData"
    type: "*V;"
  }
  field {
    name: "ulSectionGlobalDataLength"
    type: "UI"
  }
  field {
    name: "lpSectionBase"
    type: "*V;"
  }
  field {
    name: "ulSectionTotalLength"
    type: "UI"
  }
  field {
    name: "hActCtx"
    type: "*V;"
  }
  field {
    name: "ulAssemblyRosterIndex"
    type: "UI"
  }
}
struct {
  name: "tagACTCTX_SECTION_KEYED_DATA_2600"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "ulDataFormatVersion"
    type: "UI"
  }
  field {
    name: "lpData"
    type: "*V;"
  }
  field {
    name: "ulLength"
    type: "UI"
  }
  field {
    name: "lpSectionGlobalData"
    type: "*V;"
  }
  field {
    name: "ulSectionGlobalDataLength"
    type: "UI"
  }
  field {
    name: "lpSectionBase"
    type: "*V;"
  }
  field {
    name: "ulSectionTotalLength"
    type: "UI"
  }
  field {
    name: "hActCtx"
    type: "*V;"
  }
  field {
    name: "ulAssemblyRosterIndex"
    type: "UI"
  }
}
struct {
  name: "tagACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA"
  field {
    name: "lpInformation"
    type: "*V;"
  }
  field {
    name: "lpSectionBase"
    type: "*V;"
  }
  field {
    name: "ulSectionLength"
    type: "UI"
  }
  field {
    name: "lpSectionGlobalDataBase"
    type: "*V;"
  }
  field {
    name: "ulSectionGlobalDataLength"
    type: "UI"
  }
}
struct {
  name: "tagACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA"
  field {
    name: "lpInformation"
    type: "*V;"
  }
  field {
    name: "lpSectionBase"
    type: "*V;"
  }
  field {
    name: "ulSectionLength"
    type: "UI"
  }
  field {
    name: "lpSectionGlobalDataBase"
    type: "*V;"
  }
  field {
    name: "ulSectionGlobalDataLength"
    type: "UI"
  }
}
struct {
  name: "tagACTCTX_SECTION_KEYED_DATA"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "ulDataFormatVersion"
    type: "UI"
  }
  field {
    name: "lpData"
    type: "*V;"
  }
  field {
    name: "ulLength"
    type: "UI"
  }
  field {
    name: "lpSectionGlobalData"
    type: "*V;"
  }
  field {
    name: "ulSectionGlobalDataLength"
    type: "UI"
  }
  field {
    name: "lpSectionBase"
    type: "*V;"
  }
  field {
    name: "ulSectionTotalLength"
    type: "UI"
  }
  field {
    name: "hActCtx"
    type: "*V;"
  }
  field {
    name: "ulAssemblyRosterIndex"
    type: "UI"
  }
  field {
    name: "ulFlags"
    type: "UI"
  }
  field {
    name: "AssemblyMetadata"
    type: "RtagACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA;"
  }
}
struct {
  name: "tagACTCTX_SECTION_KEYED_DATA"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "ulDataFormatVersion"
    type: "UI"
  }
  field {
    name: "lpData"
    type: "*V;"
  }
  field {
    name: "ulLength"
    type: "UI"
  }
  field {
    name: "lpSectionGlobalData"
    type: "*V;"
  }
  field {
    name: "ulSectionGlobalDataLength"
    type: "UI"
  }
  field {
    name: "lpSectionBase"
    type: "*V;"
  }
  field {
    name: "ulSectionTotalLength"
    type: "UI"
  }
  field {
    name: "hActCtx"
    type: "*V;"
  }
  field {
    name: "ulAssemblyRosterIndex"
    type: "UI"
  }
  field {
    name: "ulFlags"
    type: "UI"
  }
  field {
    name: "AssemblyMetadata"
    type: "RtagACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA;"
  }
}
struct {
  name: "_ACTIVATION_CONTEXT_BASIC_INFORMATION"
  field {
    name: "hActCtx"
    type: "*V;"
  }
  field {
    name: "dwFlags"
    type: "UI"
  }
}
struct {
  name: "_ACTIVATION_CONTEXT_BASIC_INFORMATION"
  field {
    name: "hActCtx"
    type: "*V;"
  }
  field {
    name: "dwFlags"
    type: "UI"
  }
}
struct {
  name: "tagCOMSTAT"
  field {
    name: "fCtsHold"
    type: "UI"
  }
  field {
    name: "fDsrHold"
    type: "UI"
  }
  field {
    name: "fRlsdHold"
    type: "UI"
  }
  field {
    name: "fXoffHold"
    type: "UI"
  }
  field {
    name: "fXoffSent"
    type: "UI"
  }
  field {
    name: "fEof"
    type: "UI"
  }
  field {
    name: "fTxim"
    type: "UI"
  }
  field {
    name: "fReserved"
    type: "UI"
  }
  field {
    name: "cbInQue"
    type: "UI"
  }
  field {
    name: "cbOutQue"
    type: "UI"
  }
}
struct {
  name: "tagCOMSTAT"
  field {
    name: "fCtsHold"
    type: "UI"
  }
  field {
    name: "fDsrHold"
    type: "UI"
  }
  field {
    name: "fRlsdHold"
    type: "UI"
  }
  field {
    name: "fXoffHold"
    type: "UI"
  }
  field {
    name: "fXoffSent"
    type: "UI"
  }
  field {
    name: "fEof"
    type: "UI"
  }
  field {
    name: "fTxim"
    type: "UI"
  }
  field {
    name: "fReserved"
    type: "UI"
  }
  field {
    name: "cbInQue"
    type: "UI"
  }
  field {
    name: "cbOutQue"
    type: "UI"
  }
}
struct {
  name: "tagDCB"
  field {
    name: "DCBlength"
    type: "UI"
  }
  field {
    name: "BaudRate"
    type: "UI"
  }
  field {
    name: "fBinary"
    type: "UI"
  }
  field {
    name: "fParity"
    type: "UI"
  }
  field {
    name: "fOutxCtsFlow"
    type: "UI"
  }
  field {
    name: "fOutxDsrFlow"
    type: "UI"
  }
  field {
    name: "fDtrControl"
    type: "UI"
  }
  field {
    name: "fDsrSensitivity"
    type: "UI"
  }
  field {
    name: "fTXContinueOnXoff"
    type: "UI"
  }
  field {
    name: "fOutX"
    type: "UI"
  }
  field {
    name: "fInX"
    type: "UI"
  }
  field {
    name: "fErrorChar"
    type: "UI"
  }
  field {
    name: "fNull"
    type: "UI"
  }
  field {
    name: "fRtsControl"
    type: "UI"
  }
  field {
    name: "fAbortOnError"
    type: "UI"
  }
  field {
    name: "fDummy2"
    type: "UI"
  }
  field {
    name: "wReserved"
    type: "US"
  }
  field {
    name: "XonLim"
    type: "US"
  }
  field {
    name: "XoffLim"
    type: "US"
  }
  field {
    name: "ByteSize"
    type: "UB"
  }
  field {
    name: "Parity"
    type: "UB"
  }
  field {
    name: "StopBits"
    type: "UB"
  }
  field {
    name: "XonChar"
    type: "C"
  }
  field {
    name: "XoffChar"
    type: "C"
  }
  field {
    name: "ErrorChar"
    type: "C"
  }
  field {
    name: "EofChar"
    type: "C"
  }
  field {
    name: "EvtChar"
    type: "C"
  }
  field {
    name: "wReserved1"
    type: "US"
  }
}
struct {
  name: "tagDCB"
  field {
    name: "DCBlength"
    type: "UI"
  }
  field {
    name: "BaudRate"
    type: "UI"
  }
  field {
    name: "fBinary"
    type: "UI"
  }
  field {
    name: "fParity"
    type: "UI"
  }
  field {
    name: "fOutxCtsFlow"
    type: "UI"
  }
  field {
    name: "fOutxDsrFlow"
    type: "UI"
  }
  field {
    name: "fDtrControl"
    type: "UI"
  }
  field {
    name: "fDsrSensitivity"
    type: "UI"
  }
  field {
    name: "fTXContinueOnXoff"
    type: "UI"
  }
  field {
    name: "fOutX"
    type: "UI"
  }
  field {
    name: "fInX"
    type: "UI"
  }
  field {
    name: "fErrorChar"
    type: "UI"
  }
  field {
    name: "fNull"
    type: "UI"
  }
  field {
    name: "fRtsControl"
    type: "UI"
  }
  field {
    name: "fAbortOnError"
    type: "UI"
  }
  field {
    name: "fDummy2"
    type: "UI"
  }
  field {
    name: "wReserved"
    type: "US"
  }
  field {
    name: "XonLim"
    type: "US"
  }
  field {
    name: "XoffLim"
    type: "US"
  }
  field {
    name: "ByteSize"
    type: "UB"
  }
  field {
    name: "Parity"
    type: "UB"
  }
  field {
    name: "StopBits"
    type: "UB"
  }
  field {
    name: "XonChar"
    type: "C"
  }
  field {
    name: "XoffChar"
    type: "C"
  }
  field {
    name: "ErrorChar"
    type: "C"
  }
  field {
    name: "EofChar"
    type: "C"
  }
  field {
    name: "EvtChar"
    type: "C"
  }
  field {
    name: "wReserved1"
    type: "US"
  }
}
struct {
  name: "tagCOMMCONFIG"
  field {
    name: "dwSize"
    type: "UI"
  }
  field {
    name: "wVersion"
    type: "US"
  }
  field {
    name: "wReserved"
    type: "US"
  }
  field {
    name: "dcb"
    type: "RtagDCB;"
  }
  field {
    name: "dwProviderSubType"
    type: "UI"
  }
  field {
    name: "dwProviderOffset"
    type: "UI"
  }
  field {
    name: "dwProviderSize"
    type: "UI"
  }
  field {
    name: "wcProviderData"
    type: "X(ConstantArray.DWORD [1])"
  }
}
struct {
  name: "tagCOMMCONFIG"
  field {
    name: "dwSize"
    type: "UI"
  }
  field {
    name: "wVersion"
    type: "US"
  }
  field {
    name: "wReserved"
    type: "US"
  }
  field {
    name: "dcb"
    type: "RtagDCB;"
  }
  field {
    name: "dwProviderSubType"
    type: "UI"
  }
  field {
    name: "dwProviderOffset"
    type: "UI"
  }
  field {
    name: "dwProviderSize"
    type: "UI"
  }
  field {
    name: "wcProviderData"
    type: "X(ConstantArray.DWORD [1])"
  }
}
struct {
  name: "tagCOMMPROP"
  field {
    name: "wPacketLength"
    type: "US"
  }
  field {
    name: "wPacketVersion"
    type: "US"
  }
  field {
    name: "dwServiceMask"
    type: "UI"
  }
  field {
    name: "dwReserved1"
    type: "UI"
  }
  field {
    name: "dwMaxTxQueue"
    type: "UI"
  }
  field {
    name: "dwMaxRxQueue"
    type: "UI"
  }
  field {
    name: "dwMaxBaud"
    type: "UI"
  }
  field {
    name: "dwProvSubType"
    type: "UI"
  }
  field {
    name: "dwProvCapabilities"
    type: "UI"
  }
  field {
    name: "dwSettableParams"
    type: "UI"
  }
  field {
    name: "dwSettableBaud"
    type: "UI"
  }
  field {
    name: "wSettableData"
    type: "US"
  }
  field {
    name: "wSettableStopParity"
    type: "US"
  }
  field {
    name: "dwCurrentTxQueue"
    type: "UI"
  }
  field {
    name: "dwCurrentRxQueue"
    type: "UI"
  }
  field {
    name: "dwProvSpec1"
    type: "UI"
  }
  field {
    name: "dwProvSpec2"
    type: "UI"
  }
  field {
    name: "wcProvChar"
    type: "X(ConstantArray.WCHAR [1])"
  }
}
struct {
  name: "tagCOMMPROP"
  field {
    name: "wPacketLength"
    type: "US"
  }
  field {
    name: "wPacketVersion"
    type: "US"
  }
  field {
    name: "dwServiceMask"
    type: "UI"
  }
  field {
    name: "dwReserved1"
    type: "UI"
  }
  field {
    name: "dwMaxTxQueue"
    type: "UI"
  }
  field {
    name: "dwMaxRxQueue"
    type: "UI"
  }
  field {
    name: "dwMaxBaud"
    type: "UI"
  }
  field {
    name: "dwProvSubType"
    type: "UI"
  }
  field {
    name: "dwProvCapabilities"
    type: "UI"
  }
  field {
    name: "dwSettableParams"
    type: "UI"
  }
  field {
    name: "dwSettableBaud"
    type: "UI"
  }
  field {
    name: "wSettableData"
    type: "US"
  }
  field {
    name: "wSettableStopParity"
    type: "US"
  }
  field {
    name: "dwCurrentTxQueue"
    type: "UI"
  }
  field {
    name: "dwCurrentRxQueue"
    type: "UI"
  }
  field {
    name: "dwProvSpec1"
    type: "UI"
  }
  field {
    name: "dwProvSpec2"
    type: "UI"
  }
  field {
    name: "wcProvChar"
    type: "X(ConstantArray.WCHAR [1])"
  }
}
struct {
  name: "tagCOMMTIMEOUTS"
  field {
    name: "ReadIntervalTimeout"
    type: "UI"
  }
  field {
    name: "ReadTotalTimeoutMultiplier"
    type: "UI"
  }
  field {
    name: "ReadTotalTimeoutConstant"
    type: "UI"
  }
  field {
    name: "WriteTotalTimeoutMultiplier"
    type: "UI"
  }
  field {
    name: "WriteTotalTimeoutConstant"
    type: "UI"
  }
}
struct {
  name: "tagCOMMTIMEOUTS"
  field {
    name: "ReadIntervalTimeout"
    type: "UI"
  }
  field {
    name: "ReadTotalTimeoutMultiplier"
    type: "UI"
  }
  field {
    name: "ReadTotalTimeoutConstant"
    type: "UI"
  }
  field {
    name: "WriteTotalTimeoutMultiplier"
    type: "UI"
  }
  field {
    name: "WriteTotalTimeoutConstant"
    type: "UI"
  }
}
struct {
  name: "tagHW_PROFILE_INFOA"
  field {
    name: "dwDockInfo"
    type: "UI"
  }
  field {
    name: "szHwProfileGuid"
    type: "X(ConstantArray.CHAR [39])"
  }
  field {
    name: "szHwProfileName"
    type: "X(ConstantArray.CHAR [80])"
  }
}
struct {
  name: "tagHW_PROFILE_INFOA"
  field {
    name: "dwDockInfo"
    type: "UI"
  }
  field {
    name: "szHwProfileGuid"
    type: "X(ConstantArray.CHAR [39])"
  }
  field {
    name: "szHwProfileName"
    type: "X(ConstantArray.CHAR [80])"
  }
}
struct {
  name: "tagHW_PROFILE_INFOW"
  field {
    name: "dwDockInfo"
    type: "UI"
  }
  field {
    name: "szHwProfileGuid"
    type: "X(ConstantArray.WCHAR [39])"
  }
  field {
    name: "szHwProfileName"
    type: "X(ConstantArray.WCHAR [80])"
  }
}
struct {
  name: "tagHW_PROFILE_INFOW"
  field {
    name: "dwDockInfo"
    type: "UI"
  }
  field {
    name: "szHwProfileGuid"
    type: "X(ConstantArray.WCHAR [39])"
  }
  field {
    name: "szHwProfileName"
    type: "X(ConstantArray.WCHAR [80])"
  }
}
struct {
  name: "_EVENTLOG_FULL_INFORMATION"
  field {
    name: "dwFull"
    type: "UI"
  }
}
struct {
  name: "_EVENTLOG_FULL_INFORMATION"
  field {
    name: "dwFull"
    type: "UI"
  }
}
struct {
  name: "_WIN32_STREAM_ID"
  field {
    name: "dwStreamId"
    type: "UI"
  }
  field {
    name: "dwStreamAttributes"
    type: "UI"
  }
  field {
    name: "Size"
    type: "Runion _LARGE_INTEGER;"
  }
  field {
    name: "dwStreamNameSize"
    type: "UI"
  }
  field {
    name: "cStreamName"
    type: "X(ConstantArray.WCHAR [1])"
  }
}
struct {
  name: "_WIN32_STREAM_ID"
  field {
    name: "dwStreamId"
    type: "UI"
  }
  field {
    name: "dwStreamAttributes"
    type: "UI"
  }
  field {
    name: "Size"
    type: "Runion _LARGE_INTEGER;"
  }
  field {
    name: "dwStreamNameSize"
    type: "UI"
  }
  field {
    name: "cStreamName"
    type: "X(ConstantArray.WCHAR [1])"
  }
}
struct {
  name: "_ABCFLOAT"
  field {
    name: "abcfA"
    type: "F"
  }
  field {
    name: "abcfB"
    type: "F"
  }
  field {
    name: "abcfC"
    type: "F"
  }
}
struct {
  name: "_ABCFLOAT"
  field {
    name: "abcfA"
    type: "F"
  }
  field {
    name: "abcfB"
    type: "F"
  }
  field {
    name: "abcfC"
    type: "F"
  }
}
struct {
  name: "_ABCFLOAT"
  field {
    name: "abcfA"
    type: "F"
  }
  field {
    name: "abcfB"
    type: "F"
  }
  field {
    name: "abcfC"
    type: "F"
  }
}
struct {
  name: "KERNINGPAIR"
  field {
    name: "wFirst"
    type: "US"
  }
  field {
    name: "wSecond"
    type: "US"
  }
  field {
    name: "iKernAmount"
    type: "I"
  }
}
struct {
  name: "KERNINGPAIR"
  field {
    name: "wFirst"
    type: "US"
  }
  field {
    name: "wSecond"
    type: "US"
  }
  field {
    name: "iKernAmount"
    type: "I"
  }
}
struct {
  name: "tagPIXELFORMATDESCRIPTOR"
  field {
    name: "nSize"
    type: "US"
  }
  field {
    name: "nVersion"
    type: "US"
  }
  field {
    name: "dwFlags"
    type: "UI"
  }
  field {
    name: "iPixelType"
    type: "UB"
  }
  field {
    name: "cColorBits"
    type: "UB"
  }
  field {
    name: "cRedBits"
    type: "UB"
  }
  field {
    name: "cRedShift"
    type: "UB"
  }
  field {
    name: "cGreenBits"
    type: "UB"
  }
  field {
    name: "cGreenShift"
    type: "UB"
  }
  field {
    name: "cBlueBits"
    type: "UB"
  }
  field {
    name: "cBlueShift"
    type: "UB"
  }
  field {
    name: "cAlphaBits"
    type: "UB"
  }
  field {
    name: "cAlphaShift"
    type: "UB"
  }
  field {
    name: "cAccumBits"
    type: "UB"
  }
  field {
    name: "cAccumRedBits"
    type: "UB"
  }
  field {
    name: "cAccumGreenBits"
    type: "UB"
  }
  field {
    name: "cAccumBlueBits"
    type: "UB"
  }
  field {
    name: "cAccumAlphaBits"
    type: "UB"
  }
  field {
    name: "cDepthBits"
    type: "UB"
  }
  field {
    name: "cStencilBits"
    type: "UB"
  }
  field {
    name: "cAuxBuffers"
    type: "UB"
  }
  field {
    name: "iLayerType"
    type: "UB"
  }
  field {
    name: "bReserved"
    type: "UB"
  }
  field {
    name: "dwLayerMask"
    type: "UI"
  }
  field {
    name: "dwVisibleMask"
    type: "UI"
  }
  field {
    name: "dwDamageMask"
    type: "UI"
  }
}
struct {
  name: "tagPIXELFORMATDESCRIPTOR"
  field {
    name: "nSize"
    type: "US"
  }
  field {
    name: "nVersion"
    type: "US"
  }
  field {
    name: "dwFlags"
    type: "UI"
  }
  field {
    name: "iPixelType"
    type: "UB"
  }
  field {
    name: "cColorBits"
    type: "UB"
  }
  field {
    name: "cRedBits"
    type: "UB"
  }
  field {
    name: "cRedShift"
    type: "UB"
  }
  field {
    name: "cGreenBits"
    type: "UB"
  }
  field {
    name: "cGreenShift"
    type: "UB"
  }
  field {
    name: "cBlueBits"
    type: "UB"
  }
  field {
    name: "cBlueShift"
    type: "UB"
  }
  field {
    name: "cAlphaBits"
    type: "UB"
  }
  field {
    name: "cAlphaShift"
    type: "UB"
  }
  field {
    name: "cAccumBits"
    type: "UB"
  }
  field {
    name: "cAccumRedBits"
    type: "UB"
  }
  field {
    name: "cAccumGreenBits"
    type: "UB"
  }
  field {
    name: "cAccumBlueBits"
    type: "UB"
  }
  field {
    name: "cAccumAlphaBits"
    type: "UB"
  }
  field {
    name: "cDepthBits"
    type: "UB"
  }
  field {
    name: "cStencilBits"
    type: "UB"
  }
  field {
    name: "cAuxBuffers"
    type: "UB"
  }
  field {
    name: "iLayerType"
    type: "UB"
  }
  field {
    name: "bReserved"
    type: "UB"
  }
  field {
    name: "dwLayerMask"
    type: "UI"
  }
  field {
    name: "dwVisibleMask"
    type: "UI"
  }
  field {
    name: "dwDamageMask"
    type: "UI"
  }
}
struct {
  name: "tagPIXELFORMATDESCRIPTOR"
  field {
    name: "nSize"
    type: "US"
  }
  field {
    name: "nVersion"
    type: "US"
  }
  field {
    name: "dwFlags"
    type: "UI"
  }
  field {
    name: "iPixelType"
    type: "UB"
  }
  field {
    name: "cColorBits"
    type: "UB"
  }
  field {
    name: "cRedBits"
    type: "UB"
  }
  field {
    name: "cRedShift"
    type: "UB"
  }
  field {
    name: "cGreenBits"
    type: "UB"
  }
  field {
    name: "cGreenShift"
    type: "UB"
  }
  field {
    name: "cBlueBits"
    type: "UB"
  }
  field {
    name: "cBlueShift"
    type: "UB"
  }
  field {
    name: "cAlphaBits"
    type: "UB"
  }
  field {
    name: "cAlphaShift"
    type: "UB"
  }
  field {
    name: "cAccumBits"
    type: "UB"
  }
  field {
    name: "cAccumRedBits"
    type: "UB"
  }
  field {
    name: "cAccumGreenBits"
    type: "UB"
  }
  field {
    name: "cAccumBlueBits"
    type: "UB"
  }
  field {
    name: "cAccumAlphaBits"
    type: "UB"
  }
  field {
    name: "cDepthBits"
    type: "UB"
  }
  field {
    name: "cStencilBits"
    type: "UB"
  }
  field {
    name: "cAuxBuffers"
    type: "UB"
  }
  field {
    name: "iLayerType"
    type: "UB"
  }
  field {
    name: "bReserved"
    type: "UB"
  }
  field {
    name: "dwLayerMask"
    type: "UI"
  }
  field {
    name: "dwVisibleMask"
    type: "UI"
  }
  field {
    name: "dwDamageMask"
    type: "UI"
  }
}
struct {
  name: "tagCOLORADJUSTMENT"
  field {
    name: "caSize"
    type: "US"
  }
  field {
    name: "caFlags"
    type: "US"
  }
  field {
    name: "caIlluminantIndex"
    type: "US"
  }
  field {
    name: "caRedGamma"
    type: "US"
  }
  field {
    name: "caGreenGamma"
    type: "US"
  }
  field {
    name: "caBlueGamma"
    type: "US"
  }
  field {
    name: "caReferenceBlack"
    type: "US"
  }
  field {
    name: "caReferenceWhite"
    type: "US"
  }
  field {
    name: "caContrast"
    type: "S"
  }
  field {
    name: "caBrightness"
    type: "S"
  }
  field {
    name: "caColorfulness"
    type: "S"
  }
  field {
    name: "caRedGreenTint"
    type: "S"
  }
}
struct {
  name: "tagCOLORADJUSTMENT"
  field {
    name: "caSize"
    type: "US"
  }
  field {
    name: "caFlags"
    type: "US"
  }
  field {
    name: "caIlluminantIndex"
    type: "US"
  }
  field {
    name: "caRedGamma"
    type: "US"
  }
  field {
    name: "caGreenGamma"
    type: "US"
  }
  field {
    name: "caBlueGamma"
    type: "US"
  }
  field {
    name: "caReferenceBlack"
    type: "US"
  }
  field {
    name: "caReferenceWhite"
    type: "US"
  }
  field {
    name: "caContrast"
    type: "S"
  }
  field {
    name: "caBrightness"
    type: "S"
  }
  field {
    name: "caColorfulness"
    type: "S"
  }
  field {
    name: "caRedGreenTint"
    type: "S"
  }
}
struct {
  name: "tagCOLORADJUSTMENT"
  field {
    name: "caSize"
    type: "US"
  }
  field {
    name: "caFlags"
    type: "US"
  }
  field {
    name: "caIlluminantIndex"
    type: "US"
  }
  field {
    name: "caRedGamma"
    type: "US"
  }
  field {
    name: "caGreenGamma"
    type: "US"
  }
  field {
    name: "caBlueGamma"
    type: "US"
  }
  field {
    name: "caReferenceBlack"
    type: "US"
  }
  field {
    name: "caReferenceWhite"
    type: "US"
  }
  field {
    name: "caContrast"
    type: "S"
  }
  field {
    name: "caBrightness"
    type: "S"
  }
  field {
    name: "caColorfulness"
    type: "S"
  }
  field {
    name: "caRedGreenTint"
    type: "S"
  }
}
struct {
  name: "tagCIEXYZ"
  field {
    name: "ciexyzX"
    type: "I"
  }
  field {
    name: "ciexyzY"
    type: "I"
  }
  field {
    name: "ciexyzZ"
    type: "I"
  }
}
struct {
  name: "tagCIEXYZ"
  field {
    name: "ciexyzX"
    type: "I"
  }
  field {
    name: "ciexyzY"
    type: "I"
  }
  field {
    name: "ciexyzZ"
    type: "I"
  }
}
struct {
  name: "tagCIEXYZTRIPLE"
  field {
    name: "ciexyzRed"
    type: "RtagCIEXYZ;"
  }
  field {
    name: "ciexyzGreen"
    type: "RtagCIEXYZ;"
  }
  field {
    name: "ciexyzBlue"
    type: "RtagCIEXYZ;"
  }
}
struct {
  name: "tagCIEXYZTRIPLE"
  field {
    name: "ciexyzRed"
    type: "RtagCIEXYZ;"
  }
  field {
    name: "ciexyzGreen"
    type: "RtagCIEXYZ;"
  }
  field {
    name: "ciexyzBlue"
    type: "RtagCIEXYZ;"
  }
}
struct {
  name: "tagLOGCOLORSPACEA"
  field {
    name: "lcsSignature"
    type: "UI"
  }
  field {
    name: "lcsVersion"
    type: "UI"
  }
  field {
    name: "lcsSize"
    type: "UI"
  }
  field {
    name: "lcsCSType"
    type: "I"
  }
  field {
    name: "lcsIntent"
    type: "I"
  }
  field {
    name: "lcsEndpoints"
    type: "RtagCIEXYZTRIPLE;"
  }
  field {
    name: "lcsGammaRed"
    type: "UI"
  }
  field {
    name: "lcsGammaGreen"
    type: "UI"
  }
  field {
    name: "lcsGammaBlue"
    type: "UI"
  }
  field {
    name: "lcsFilename"
    type: "X(ConstantArray.CHAR [260])"
  }
}
struct {
  name: "tagLOGCOLORSPACEA"
  field {
    name: "lcsSignature"
    type: "UI"
  }
  field {
    name: "lcsVersion"
    type: "UI"
  }
  field {
    name: "lcsSize"
    type: "UI"
  }
  field {
    name: "lcsCSType"
    type: "I"
  }
  field {
    name: "lcsIntent"
    type: "I"
  }
  field {
    name: "lcsEndpoints"
    type: "RtagCIEXYZTRIPLE;"
  }
  field {
    name: "lcsGammaRed"
    type: "UI"
  }
  field {
    name: "lcsGammaGreen"
    type: "UI"
  }
  field {
    name: "lcsGammaBlue"
    type: "UI"
  }
  field {
    name: "lcsFilename"
    type: "X(ConstantArray.CHAR [260])"
  }
}
struct {
  name: "tagLOGCOLORSPACEW"
  field {
    name: "lcsSignature"
    type: "UI"
  }
  field {
    name: "lcsVersion"
    type: "UI"
  }
  field {
    name: "lcsSize"
    type: "UI"
  }
  field {
    name: "lcsCSType"
    type: "I"
  }
  field {
    name: "lcsIntent"
    type: "I"
  }
  field {
    name: "lcsEndpoints"
    type: "RtagCIEXYZTRIPLE;"
  }
  field {
    name: "lcsGammaRed"
    type: "UI"
  }
  field {
    name: "lcsGammaGreen"
    type: "UI"
  }
  field {
    name: "lcsGammaBlue"
    type: "UI"
  }
  field {
    name: "lcsFilename"
    type: "X(ConstantArray.WCHAR [260])"
  }
}
struct {
  name: "tagLOGCOLORSPACEW"
  field {
    name: "lcsSignature"
    type: "UI"
  }
  field {
    name: "lcsVersion"
    type: "UI"
  }
  field {
    name: "lcsSize"
    type: "UI"
  }
  field {
    name: "lcsCSType"
    type: "I"
  }
  field {
    name: "lcsIntent"
    type: "I"
  }
  field {
    name: "lcsEndpoints"
    type: "RtagCIEXYZTRIPLE;"
  }
  field {
    name: "lcsGammaRed"
    type: "UI"
  }
  field {
    name: "lcsGammaGreen"
    type: "UI"
  }
  field {
    name: "lcsGammaBlue"
    type: "UI"
  }
  field {
    name: "lcsFilename"
    type: "X(ConstantArray.WCHAR [260])"
  }
}
struct {
  name: "PELARRAY"
  field {
    name: "paXCount"
    type: "I"
  }
  field {
    name: "paYCount"
    type: "I"
  }
  field {
    name: "paXExt"
    type: "I"
  }
  field {
    name: "paYExt"
    type: "I"
  }
  field {
    name: "paRGBs"
    type: "UB"
  }
}
struct {
  name: "PELARRAY"
  field {
    name: "paXCount"
    type: "I"
  }
  field {
    name: "paYCount"
    type: "I"
  }
  field {
    name: "paXExt"
    type: "I"
  }
  field {
    name: "paYExt"
    type: "I"
  }
  field {
    name: "paRGBs"
    type: "UB"
  }
}
struct {
  name: "PELARRAY"
  field {
    name: "paXCount"
    type: "I"
  }
  field {
    name: "paYCount"
    type: "I"
  }
  field {
    name: "paXExt"
    type: "I"
  }
  field {
    name: "paYExt"
    type: "I"
  }
  field {
    name: "paRGBs"
    type: "UB"
  }
}
struct {
  name: "BITMAP"
  field {
    name: "bmType"
    type: "I"
  }
  field {
    name: "bmWidth"
    type: "I"
  }
  field {
    name: "bmHeight"
    type: "I"
  }
  field {
    name: "bmWidthBytes"
    type: "I"
  }
  field {
    name: "bmPlanes"
    type: "US"
  }
  field {
    name: "bmBitsPixel"
    type: "US"
  }
  field {
    name: "bmBits"
    type: "*V;"
  }
}
struct {
  name: "BITMAP"
  field {
    name: "bmType"
    type: "I"
  }
  field {
    name: "bmWidth"
    type: "I"
  }
  field {
    name: "bmHeight"
    type: "I"
  }
  field {
    name: "bmWidthBytes"
    type: "I"
  }
  field {
    name: "bmPlanes"
    type: "US"
  }
  field {
    name: "bmBitsPixel"
    type: "US"
  }
  field {
    name: "bmBits"
    type: "*V;"
  }
}
struct {
  name: "BITMAP"
  field {
    name: "bmType"
    type: "I"
  }
  field {
    name: "bmWidth"
    type: "I"
  }
  field {
    name: "bmHeight"
    type: "I"
  }
  field {
    name: "bmWidthBytes"
    type: "I"
  }
  field {
    name: "bmPlanes"
    type: "US"
  }
  field {
    name: "bmBitsPixel"
    type: "US"
  }
  field {
    name: "bmBits"
    type: "*V;"
  }
}
struct {
  name: "LOGBRUSH"
  field {
    name: "lbStyle"
    type: "UI"
  }
  field {
    name: "lbColor"
    type: "UI"
  }
  field {
    name: "lbHatch"
    type: "UI"
  }
}
struct {
  name: "LOGBRUSH"
  field {
    name: "lbStyle"
    type: "UI"
  }
  field {
    name: "lbColor"
    type: "UI"
  }
  field {
    name: "lbHatch"
    type: "UI"
  }
}
struct {
  name: "LOGBRUSH"
  field {
    name: "lbStyle"
    type: "UI"
  }
  field {
    name: "lbColor"
    type: "UI"
  }
  field {
    name: "lbHatch"
    type: "UI"
  }
}
struct {
  name: "LOGBRUSH32"
  field {
    name: "lbStyle"
    type: "UI"
  }
  field {
    name: "lbColor"
    type: "UI"
  }
  field {
    name: "lbHatch"
    type: "UI"
  }
}
struct {
  name: "LOGBRUSH32"
  field {
    name: "lbStyle"
    type: "UI"
  }
  field {
    name: "lbColor"
    type: "UI"
  }
  field {
    name: "lbHatch"
    type: "UI"
  }
}
struct {
  name: "LOGBRUSH32"
  field {
    name: "lbStyle"
    type: "UI"
  }
  field {
    name: "lbColor"
    type: "UI"
  }
  field {
    name: "lbHatch"
    type: "UI"
  }
}
struct {
  name: "tagLOGFONTA"
  field {
    name: "lfHeight"
    type: "I"
  }
  field {
    name: "lfWidth"
    type: "I"
  }
  field {
    name: "lfEscapement"
    type: "I"
  }
  field {
    name: "lfOrientation"
    type: "I"
  }
  field {
    name: "lfWeight"
    type: "I"
  }
  field {
    name: "lfItalic"
    type: "UB"
  }
  field {
    name: "lfUnderline"
    type: "UB"
  }
  field {
    name: "lfStrikeOut"
    type: "UB"
  }
  field {
    name: "lfCharSet"
    type: "UB"
  }
  field {
    name: "lfOutPrecision"
    type: "UB"
  }
  field {
    name: "lfClipPrecision"
    type: "UB"
  }
  field {
    name: "lfQuality"
    type: "UB"
  }
  field {
    name: "lfPitchAndFamily"
    type: "UB"
  }
  field {
    name: "lfFaceName"
    type: "X(ConstantArray.CHAR [32])"
  }
}
struct {
  name: "tagLOGFONTA"
  field {
    name: "lfHeight"
    type: "I"
  }
  field {
    name: "lfWidth"
    type: "I"
  }
  field {
    name: "lfEscapement"
    type: "I"
  }
  field {
    name: "lfOrientation"
    type: "I"
  }
  field {
    name: "lfWeight"
    type: "I"
  }
  field {
    name: "lfItalic"
    type: "UB"
  }
  field {
    name: "lfUnderline"
    type: "UB"
  }
  field {
    name: "lfStrikeOut"
    type: "UB"
  }
  field {
    name: "lfCharSet"
    type: "UB"
  }
  field {
    name: "lfOutPrecision"
    type: "UB"
  }
  field {
    name: "lfClipPrecision"
    type: "UB"
  }
  field {
    name: "lfQuality"
    type: "UB"
  }
  field {
    name: "lfPitchAndFamily"
    type: "UB"
  }
  field {
    name: "lfFaceName"
    type: "X(ConstantArray.CHAR [32])"
  }
}
struct {
  name: "tagLOGFONTA"
  field {
    name: "lfHeight"
    type: "I"
  }
  field {
    name: "lfWidth"
    type: "I"
  }
  field {
    name: "lfEscapement"
    type: "I"
  }
  field {
    name: "lfOrientation"
    type: "I"
  }
  field {
    name: "lfWeight"
    type: "I"
  }
  field {
    name: "lfItalic"
    type: "UB"
  }
  field {
    name: "lfUnderline"
    type: "UB"
  }
  field {
    name: "lfStrikeOut"
    type: "UB"
  }
  field {
    name: "lfCharSet"
    type: "UB"
  }
  field {
    name: "lfOutPrecision"
    type: "UB"
  }
  field {
    name: "lfClipPrecision"
    type: "UB"
  }
  field {
    name: "lfQuality"
    type: "UB"
  }
  field {
    name: "lfPitchAndFamily"
    type: "UB"
  }
  field {
    name: "lfFaceName"
    type: "X(ConstantArray.CHAR [32])"
  }
}
struct {
  name: "tagLOGFONTW"
  field {
    name: "lfHeight"
    type: "I"
  }
  field {
    name: "lfWidth"
    type: "I"
  }
  field {
    name: "lfEscapement"
    type: "I"
  }
  field {
    name: "lfOrientation"
    type: "I"
  }
  field {
    name: "lfWeight"
    type: "I"
  }
  field {
    name: "lfItalic"
    type: "UB"
  }
  field {
    name: "lfUnderline"
    type: "UB"
  }
  field {
    name: "lfStrikeOut"
    type: "UB"
  }
  field {
    name: "lfCharSet"
    type: "UB"
  }
  field {
    name: "lfOutPrecision"
    type: "UB"
  }
  field {
    name: "lfClipPrecision"
    type: "UB"
  }
  field {
    name: "lfQuality"
    type: "UB"
  }
  field {
    name: "lfPitchAndFamily"
    type: "UB"
  }
  field {
    name: "lfFaceName"
    type: "X(ConstantArray.WCHAR [32])"
  }
}
struct {
  name: "tagLOGFONTW"
  field {
    name: "lfHeight"
    type: "I"
  }
  field {
    name: "lfWidth"
    type: "I"
  }
  field {
    name: "lfEscapement"
    type: "I"
  }
  field {
    name: "lfOrientation"
    type: "I"
  }
  field {
    name: "lfWeight"
    type: "I"
  }
  field {
    name: "lfItalic"
    type: "UB"
  }
  field {
    name: "lfUnderline"
    type: "UB"
  }
  field {
    name: "lfStrikeOut"
    type: "UB"
  }
  field {
    name: "lfCharSet"
    type: "UB"
  }
  field {
    name: "lfOutPrecision"
    type: "UB"
  }
  field {
    name: "lfClipPrecision"
    type: "UB"
  }
  field {
    name: "lfQuality"
    type: "UB"
  }
  field {
    name: "lfPitchAndFamily"
    type: "UB"
  }
  field {
    name: "lfFaceName"
    type: "X(ConstantArray.WCHAR [32])"
  }
}
struct {
  name: "tagLOGFONTW"
  field {
    name: "lfHeight"
    type: "I"
  }
  field {
    name: "lfWidth"
    type: "I"
  }
  field {
    name: "lfEscapement"
    type: "I"
  }
  field {
    name: "lfOrientation"
    type: "I"
  }
  field {
    name: "lfWeight"
    type: "I"
  }
  field {
    name: "lfItalic"
    type: "UB"
  }
  field {
    name: "lfUnderline"
    type: "UB"
  }
  field {
    name: "lfStrikeOut"
    type: "UB"
  }
  field {
    name: "lfCharSet"
    type: "UB"
  }
  field {
    name: "lfOutPrecision"
    type: "UB"
  }
  field {
    name: "lfClipPrecision"
    type: "UB"
  }
  field {
    name: "lfQuality"
    type: "UB"
  }
  field {
    name: "lfPitchAndFamily"
    type: "UB"
  }
  field {
    name: "lfFaceName"
    type: "X(ConstantArray.WCHAR [32])"
  }
}
struct {
  name: "ENUMLOGFONTA"
  field {
    name: "elfLogFont"
    type: "RtagLOGFONTA;"
  }
  field {
    name: "elfFullName"
    type: "X(ConstantArray.BYTE [64])"
  }
  field {
    name: "elfStyle"
    type: "X(ConstantArray.BYTE [32])"
  }
}
struct {
  name: "ENUMLOGFONTA"
  field {
    name: "elfLogFont"
    type: "RtagLOGFONTA;"
  }
  field {
    name: "elfFullName"
    type: "X(ConstantArray.BYTE [64])"
  }
  field {
    name: "elfStyle"
    type: "X(ConstantArray.BYTE [32])"
  }
}
struct {
  name: "ENUMLOGFONTW"
  field {
    name: "elfLogFont"
    type: "RtagLOGFONTW;"
  }
  field {
    name: "elfFullName"
    type: "X(ConstantArray.WCHAR [64])"
  }
  field {
    name: "elfStyle"
    type: "X(ConstantArray.WCHAR [32])"
  }
}
struct {
  name: "ENUMLOGFONTW"
  field {
    name: "elfLogFont"
    type: "RtagLOGFONTW;"
  }
  field {
    name: "elfFullName"
    type: "X(ConstantArray.WCHAR [64])"
  }
  field {
    name: "elfStyle"
    type: "X(ConstantArray.WCHAR [32])"
  }
}
struct {
  name: "ENUMLOGFONTEXA"
  field {
    name: "elfLogFont"
    type: "RtagLOGFONTA;"
  }
  field {
    name: "elfFullName"
    type: "X(ConstantArray.BYTE [64])"
  }
  field {
    name: "elfStyle"
    type: "X(ConstantArray.BYTE [32])"
  }
  field {
    name: "elfScript"
    type: "X(ConstantArray.BYTE [32])"
  }
}
struct {
  name: "ENUMLOGFONTEXA"
  field {
    name: "elfLogFont"
    type: "RtagLOGFONTA;"
  }
  field {
    name: "elfFullName"
    type: "X(ConstantArray.BYTE [64])"
  }
  field {
    name: "elfStyle"
    type: "X(ConstantArray.BYTE [32])"
  }
  field {
    name: "elfScript"
    type: "X(ConstantArray.BYTE [32])"
  }
}
struct {
  name: "ENUMLOGFONTEXW"
  field {
    name: "elfLogFont"
    type: "RtagLOGFONTW;"
  }
  field {
    name: "elfFullName"
    type: "X(ConstantArray.WCHAR [64])"
  }
  field {
    name: "elfStyle"
    type: "X(ConstantArray.WCHAR [32])"
  }
  field {
    name: "elfScript"
    type: "X(ConstantArray.WCHAR [32])"
  }
}
struct {
  name: "ENUMLOGFONTEXW"
  field {
    name: "elfLogFont"
    type: "RtagLOGFONTW;"
  }
  field {
    name: "elfFullName"
    type: "X(ConstantArray.WCHAR [64])"
  }
  field {
    name: "elfStyle"
    type: "X(ConstantArray.WCHAR [32])"
  }
  field {
    name: "elfScript"
    type: "X(ConstantArray.WCHAR [32])"
  }
}
struct {
  name: "DESIGNVECTOR"
  field {
    name: "dvReserved"
    type: "UI"
  }
  field {
    name: "dvNumAxes"
    type: "UI"
  }
  field {
    name: "dvValues"
    type: "X(ConstantArray.LONG [16])"
  }
}
struct {
  name: "DESIGNVECTOR"
  field {
    name: "dvReserved"
    type: "UI"
  }
  field {
    name: "dvNumAxes"
    type: "UI"
  }
  field {
    name: "dvValues"
    type: "X(ConstantArray.LONG [16])"
  }
}
struct {
  name: "ENUMLOGFONTEXDVA"
  field {
    name: "elfEnumLogfontEx"
    type: "RENUMLOGFONTEXA;"
  }
  field {
    name: "elfDesignVector"
    type: "RDESIGNVECTOR;"
  }
}
struct {
  name: "ENUMLOGFONTEXDVA"
  field {
    name: "elfEnumLogfontEx"
    type: "RENUMLOGFONTEXA;"
  }
  field {
    name: "elfDesignVector"
    type: "RDESIGNVECTOR;"
  }
}
struct {
  name: "ENUMLOGFONTEXDVW"
  field {
    name: "elfEnumLogfontEx"
    type: "RENUMLOGFONTEXW;"
  }
  field {
    name: "elfDesignVector"
    type: "RDESIGNVECTOR;"
  }
}
struct {
  name: "ENUMLOGFONTEXDVW"
  field {
    name: "elfEnumLogfontEx"
    type: "RENUMLOGFONTEXW;"
  }
  field {
    name: "elfDesignVector"
    type: "RDESIGNVECTOR;"
  }
}
struct {
  name: "FONTSIGNATURE"
  field {
    name: "fsUsb"
    type: "X(ConstantArray.DWORD [4])"
  }
  field {
    name: "fsCsb"
    type: "X(ConstantArray.DWORD [2])"
  }
}
struct {
  name: "FONTSIGNATURE"
  field {
    name: "fsUsb"
    type: "X(ConstantArray.DWORD [4])"
  }
  field {
    name: "fsCsb"
    type: "X(ConstantArray.DWORD [2])"
  }
}
struct {
  name: "FONTSIGNATURE"
  field {
    name: "fsUsb"
    type: "X(ConstantArray.DWORD [4])"
  }
  field {
    name: "fsCsb"
    type: "X(ConstantArray.DWORD [2])"
  }
}
struct {
  name: "CHARSETINFO"
  field {
    name: "ciCharset"
    type: "UI"
  }
  field {
    name: "ciACP"
    type: "UI"
  }
  field {
    name: "fs"
    type: "RFONTSIGNATURE;"
  }
}
struct {
  name: "CHARSETINFO"
  field {
    name: "ciCharset"
    type: "UI"
  }
  field {
    name: "ciACP"
    type: "UI"
  }
  field {
    name: "fs"
    type: "RFONTSIGNATURE;"
  }
}
struct {
  name: "CHARSETINFO"
  field {
    name: "ciCharset"
    type: "UI"
  }
  field {
    name: "ciACP"
    type: "UI"
  }
  field {
    name: "fs"
    type: "RFONTSIGNATURE;"
  }
}
struct {
  name: "LOCALESIGNATURE"
  field {
    name: "lsUsb"
    type: "X(ConstantArray.DWORD [4])"
  }
  field {
    name: "lsCsbDefault"
    type: "X(ConstantArray.DWORD [2])"
  }
  field {
    name: "lsCsbSupported"
    type: "X(ConstantArray.DWORD [2])"
  }
}
struct {
  name: "LOCALESIGNATURE"
  field {
    name: "lsUsb"
    type: "X(ConstantArray.DWORD [4])"
  }
  field {
    name: "lsCsbDefault"
    type: "X(ConstantArray.DWORD [2])"
  }
  field {
    name: "lsCsbSupported"
    type: "X(ConstantArray.DWORD [2])"
  }
}
struct {
  name: "LOCALESIGNATURE"
  field {
    name: "lsUsb"
    type: "X(ConstantArray.DWORD [4])"
  }
  field {
    name: "lsCsbDefault"
    type: "X(ConstantArray.DWORD [2])"
  }
  field {
    name: "lsCsbSupported"
    type: "X(ConstantArray.DWORD [2])"
  }
}
struct {
  name: "tagXFORM"
  field {
    name: "eM11"
    type: "F"
  }
  field {
    name: "eM12"
    type: "F"
  }
  field {
    name: "eM21"
    type: "F"
  }
  field {
    name: "eM22"
    type: "F"
  }
  field {
    name: "eDx"
    type: "F"
  }
  field {
    name: "eDy"
    type: "F"
  }
}
struct {
  name: "tagXFORM"
  field {
    name: "eM11"
    type: "F"
  }
  field {
    name: "eM12"
    type: "F"
  }
  field {
    name: "eM21"
    type: "F"
  }
  field {
    name: "eM22"
    type: "F"
  }
  field {
    name: "eDx"
    type: "F"
  }
  field {
    name: "eDy"
    type: "F"
  }
}
struct {
  name: "tagXFORM"
  field {
    name: "eM11"
    type: "F"
  }
  field {
    name: "eM12"
    type: "F"
  }
  field {
    name: "eM21"
    type: "F"
  }
  field {
    name: "eM22"
    type: "F"
  }
  field {
    name: "eDx"
    type: "F"
  }
  field {
    name: "eDy"
    type: "F"
  }
}
struct {
  name: "tagTEXTMETRICA"
  field {
    name: "tmHeight"
    type: "I"
  }
  field {
    name: "tmAscent"
    type: "I"
  }
  field {
    name: "tmDescent"
    type: "I"
  }
  field {
    name: "tmInternalLeading"
    type: "I"
  }
  field {
    name: "tmExternalLeading"
    type: "I"
  }
  field {
    name: "tmAveCharWidth"
    type: "I"
  }
  field {
    name: "tmMaxCharWidth"
    type: "I"
  }
  field {
    name: "tmWeight"
    type: "I"
  }
  field {
    name: "tmOverhang"
    type: "I"
  }
  field {
    name: "tmDigitizedAspectX"
    type: "I"
  }
  field {
    name: "tmDigitizedAspectY"
    type: "I"
  }
  field {
    name: "tmFirstChar"
    type: "UB"
  }
  field {
    name: "tmLastChar"
    type: "UB"
  }
  field {
    name: "tmDefaultChar"
    type: "UB"
  }
  field {
    name: "tmBreakChar"
    type: "UB"
  }
  field {
    name: "tmItalic"
    type: "UB"
  }
  field {
    name: "tmUnderlined"
    type: "UB"
  }
  field {
    name: "tmStruckOut"
    type: "UB"
  }
  field {
    name: "tmPitchAndFamily"
    type: "UB"
  }
  field {
    name: "tmCharSet"
    type: "UB"
  }
}
struct {
  name: "tagTEXTMETRICA"
  field {
    name: "tmHeight"
    type: "I"
  }
  field {
    name: "tmAscent"
    type: "I"
  }
  field {
    name: "tmDescent"
    type: "I"
  }
  field {
    name: "tmInternalLeading"
    type: "I"
  }
  field {
    name: "tmExternalLeading"
    type: "I"
  }
  field {
    name: "tmAveCharWidth"
    type: "I"
  }
  field {
    name: "tmMaxCharWidth"
    type: "I"
  }
  field {
    name: "tmWeight"
    type: "I"
  }
  field {
    name: "tmOverhang"
    type: "I"
  }
  field {
    name: "tmDigitizedAspectX"
    type: "I"
  }
  field {
    name: "tmDigitizedAspectY"
    type: "I"
  }
  field {
    name: "tmFirstChar"
    type: "UB"
  }
  field {
    name: "tmLastChar"
    type: "UB"
  }
  field {
    name: "tmDefaultChar"
    type: "UB"
  }
  field {
    name: "tmBreakChar"
    type: "UB"
  }
  field {
    name: "tmItalic"
    type: "UB"
  }
  field {
    name: "tmUnderlined"
    type: "UB"
  }
  field {
    name: "tmStruckOut"
    type: "UB"
  }
  field {
    name: "tmPitchAndFamily"
    type: "UB"
  }
  field {
    name: "tmCharSet"
    type: "UB"
  }
}
struct {
  name: "tagTEXTMETRICA"
  field {
    name: "tmHeight"
    type: "I"
  }
  field {
    name: "tmAscent"
    type: "I"
  }
  field {
    name: "tmDescent"
    type: "I"
  }
  field {
    name: "tmInternalLeading"
    type: "I"
  }
  field {
    name: "tmExternalLeading"
    type: "I"
  }
  field {
    name: "tmAveCharWidth"
    type: "I"
  }
  field {
    name: "tmMaxCharWidth"
    type: "I"
  }
  field {
    name: "tmWeight"
    type: "I"
  }
  field {
    name: "tmOverhang"
    type: "I"
  }
  field {
    name: "tmDigitizedAspectX"
    type: "I"
  }
  field {
    name: "tmDigitizedAspectY"
    type: "I"
  }
  field {
    name: "tmFirstChar"
    type: "UB"
  }
  field {
    name: "tmLastChar"
    type: "UB"
  }
  field {
    name: "tmDefaultChar"
    type: "UB"
  }
  field {
    name: "tmBreakChar"
    type: "UB"
  }
  field {
    name: "tmItalic"
    type: "UB"
  }
  field {
    name: "tmUnderlined"
    type: "UB"
  }
  field {
    name: "tmStruckOut"
    type: "UB"
  }
  field {
    name: "tmPitchAndFamily"
    type: "UB"
  }
  field {
    name: "tmCharSet"
    type: "UB"
  }
}
struct {
  name: "tagTEXTMETRICW"
  field {
    name: "tmHeight"
    type: "I"
  }
  field {
    name: "tmAscent"
    type: "I"
  }
  field {
    name: "tmDescent"
    type: "I"
  }
  field {
    name: "tmInternalLeading"
    type: "I"
  }
  field {
    name: "tmExternalLeading"
    type: "I"
  }
  field {
    name: "tmAveCharWidth"
    type: "I"
  }
  field {
    name: "tmMaxCharWidth"
    type: "I"
  }
  field {
    name: "tmWeight"
    type: "I"
  }
  field {
    name: "tmOverhang"
    type: "I"
  }
  field {
    name: "tmDigitizedAspectX"
    type: "I"
  }
  field {
    name: "tmDigitizedAspectY"
    type: "I"
  }
  field {
    name: "tmFirstChar"
    type: "US"
  }
  field {
    name: "tmLastChar"
    type: "US"
  }
  field {
    name: "tmDefaultChar"
    type: "US"
  }
  field {
    name: "tmBreakChar"
    type: "US"
  }
  field {
    name: "tmItalic"
    type: "UB"
  }
  field {
    name: "tmUnderlined"
    type: "UB"
  }
  field {
    name: "tmStruckOut"
    type: "UB"
  }
  field {
    name: "tmPitchAndFamily"
    type: "UB"
  }
  field {
    name: "tmCharSet"
    type: "UB"
  }
}
struct {
  name: "tagTEXTMETRICW"
  field {
    name: "tmHeight"
    type: "I"
  }
  field {
    name: "tmAscent"
    type: "I"
  }
  field {
    name: "tmDescent"
    type: "I"
  }
  field {
    name: "tmInternalLeading"
    type: "I"
  }
  field {
    name: "tmExternalLeading"
    type: "I"
  }
  field {
    name: "tmAveCharWidth"
    type: "I"
  }
  field {
    name: "tmMaxCharWidth"
    type: "I"
  }
  field {
    name: "tmWeight"
    type: "I"
  }
  field {
    name: "tmOverhang"
    type: "I"
  }
  field {
    name: "tmDigitizedAspectX"
    type: "I"
  }
  field {
    name: "tmDigitizedAspectY"
    type: "I"
  }
  field {
    name: "tmFirstChar"
    type: "US"
  }
  field {
    name: "tmLastChar"
    type: "US"
  }
  field {
    name: "tmDefaultChar"
    type: "US"
  }
  field {
    name: "tmBreakChar"
    type: "US"
  }
  field {
    name: "tmItalic"
    type: "UB"
  }
  field {
    name: "tmUnderlined"
    type: "UB"
  }
  field {
    name: "tmStruckOut"
    type: "UB"
  }
  field {
    name: "tmPitchAndFamily"
    type: "UB"
  }
  field {
    name: "tmCharSet"
    type: "UB"
  }
}
struct {
  name: "tagTEXTMETRICW"
  field {
    name: "tmHeight"
    type: "I"
  }
  field {
    name: "tmAscent"
    type: "I"
  }
  field {
    name: "tmDescent"
    type: "I"
  }
  field {
    name: "tmInternalLeading"
    type: "I"
  }
  field {
    name: "tmExternalLeading"
    type: "I"
  }
  field {
    name: "tmAveCharWidth"
    type: "I"
  }
  field {
    name: "tmMaxCharWidth"
    type: "I"
  }
  field {
    name: "tmWeight"
    type: "I"
  }
  field {
    name: "tmOverhang"
    type: "I"
  }
  field {
    name: "tmDigitizedAspectX"
    type: "I"
  }
  field {
    name: "tmDigitizedAspectY"
    type: "I"
  }
  field {
    name: "tmFirstChar"
    type: "US"
  }
  field {
    name: "tmLastChar"
    type: "US"
  }
  field {
    name: "tmDefaultChar"
    type: "US"
  }
  field {
    name: "tmBreakChar"
    type: "US"
  }
  field {
    name: "tmItalic"
    type: "UB"
  }
  field {
    name: "tmUnderlined"
    type: "UB"
  }
  field {
    name: "tmStruckOut"
    type: "UB"
  }
  field {
    name: "tmPitchAndFamily"
    type: "UB"
  }
  field {
    name: "tmCharSet"
    type: "UB"
  }
}
struct {
  name: "tagPANOSE"
  field {
    name: "bFamilyType"
    type: "UB"
  }
  field {
    name: "bSerifStyle"
    type: "UB"
  }
  field {
    name: "bWeight"
    type: "UB"
  }
  field {
    name: "bProportion"
    type: "UB"
  }
  field {
    name: "bContrast"
    type: "UB"
  }
  field {
    name: "bStrokeVariation"
    type: "UB"
  }
  field {
    name: "bArmStyle"
    type: "UB"
  }
  field {
    name: "bLetterform"
    type: "UB"
  }
  field {
    name: "bMidline"
    type: "UB"
  }
  field {
    name: "bXHeight"
    type: "UB"
  }
}
struct {
  name: "tagPANOSE"
  field {
    name: "bFamilyType"
    type: "UB"
  }
  field {
    name: "bSerifStyle"
    type: "UB"
  }
  field {
    name: "bWeight"
    type: "UB"
  }
  field {
    name: "bProportion"
    type: "UB"
  }
  field {
    name: "bContrast"
    type: "UB"
  }
  field {
    name: "bStrokeVariation"
    type: "UB"
  }
  field {
    name: "bArmStyle"
    type: "UB"
  }
  field {
    name: "bLetterform"
    type: "UB"
  }
  field {
    name: "bMidline"
    type: "UB"
  }
  field {
    name: "bXHeight"
    type: "UB"
  }
}
struct {
  name: "EXTLOGFONTA"
  field {
    name: "elfLogFont"
    type: "RtagLOGFONTA;"
  }
  field {
    name: "elfFullName"
    type: "X(ConstantArray.BYTE [64])"
  }
  field {
    name: "elfStyle"
    type: "X(ConstantArray.BYTE [32])"
  }
  field {
    name: "elfVersion"
    type: "UI"
  }
  field {
    name: "elfStyleSize"
    type: "UI"
  }
  field {
    name: "elfMatch"
    type: "UI"
  }
  field {
    name: "elfReserved"
    type: "UI"
  }
  field {
    name: "elfVendorId"
    type: "X(ConstantArray.BYTE [4])"
  }
  field {
    name: "elfCulture"
    type: "UI"
  }
  field {
    name: "elfPanose"
    type: "RtagPANOSE;"
  }
}
struct {
  name: "EXTLOGFONTA"
  field {
    name: "elfLogFont"
    type: "RtagLOGFONTA;"
  }
  field {
    name: "elfFullName"
    type: "X(ConstantArray.BYTE [64])"
  }
  field {
    name: "elfStyle"
    type: "X(ConstantArray.BYTE [32])"
  }
  field {
    name: "elfVersion"
    type: "UI"
  }
  field {
    name: "elfStyleSize"
    type: "UI"
  }
  field {
    name: "elfMatch"
    type: "UI"
  }
  field {
    name: "elfReserved"
    type: "UI"
  }
  field {
    name: "elfVendorId"
    type: "X(ConstantArray.BYTE [4])"
  }
  field {
    name: "elfCulture"
    type: "UI"
  }
  field {
    name: "elfPanose"
    type: "RtagPANOSE;"
  }
}
struct {
  name: "EXTLOGFONTA"
  field {
    name: "elfLogFont"
    type: "RtagLOGFONTA;"
  }
  field {
    name: "elfFullName"
    type: "X(ConstantArray.BYTE [64])"
  }
  field {
    name: "elfStyle"
    type: "X(ConstantArray.BYTE [32])"
  }
  field {
    name: "elfVersion"
    type: "UI"
  }
  field {
    name: "elfStyleSize"
    type: "UI"
  }
  field {
    name: "elfMatch"
    type: "UI"
  }
  field {
    name: "elfReserved"
    type: "UI"
  }
  field {
    name: "elfVendorId"
    type: "X(ConstantArray.BYTE [4])"
  }
  field {
    name: "elfCulture"
    type: "UI"
  }
  field {
    name: "elfPanose"
    type: "RtagPANOSE;"
  }
}
struct {
  name: "EXTLOGFONTW"
  field {
    name: "elfLogFont"
    type: "RtagLOGFONTW;"
  }
  field {
    name: "elfFullName"
    type: "X(ConstantArray.WCHAR [64])"
  }
  field {
    name: "elfStyle"
    type: "X(ConstantArray.WCHAR [32])"
  }
  field {
    name: "elfVersion"
    type: "UI"
  }
  field {
    name: "elfStyleSize"
    type: "UI"
  }
  field {
    name: "elfMatch"
    type: "UI"
  }
  field {
    name: "elfReserved"
    type: "UI"
  }
  field {
    name: "elfVendorId"
    type: "X(ConstantArray.BYTE [4])"
  }
  field {
    name: "elfCulture"
    type: "UI"
  }
  field {
    name: "elfPanose"
    type: "RtagPANOSE;"
  }
}
struct {
  name: "EXTLOGFONTW"
  field {
    name: "elfLogFont"
    type: "RtagLOGFONTW;"
  }
  field {
    name: "elfFullName"
    type: "X(ConstantArray.WCHAR [64])"
  }
  field {
    name: "elfStyle"
    type: "X(ConstantArray.WCHAR [32])"
  }
  field {
    name: "elfVersion"
    type: "UI"
  }
  field {
    name: "elfStyleSize"
    type: "UI"
  }
  field {
    name: "elfMatch"
    type: "UI"
  }
  field {
    name: "elfReserved"
    type: "UI"
  }
  field {
    name: "elfVendorId"
    type: "X(ConstantArray.BYTE [4])"
  }
  field {
    name: "elfCulture"
    type: "UI"
  }
  field {
    name: "elfPanose"
    type: "RtagPANOSE;"
  }
}
struct {
  name: "EXTLOGFONTW"
  field {
    name: "elfLogFont"
    type: "RtagLOGFONTW;"
  }
  field {
    name: "elfFullName"
    type: "X(ConstantArray.WCHAR [64])"
  }
  field {
    name: "elfStyle"
    type: "X(ConstantArray.WCHAR [32])"
  }
  field {
    name: "elfVersion"
    type: "UI"
  }
  field {
    name: "elfStyleSize"
    type: "UI"
  }
  field {
    name: "elfMatch"
    type: "UI"
  }
  field {
    name: "elfReserved"
    type: "UI"
  }
  field {
    name: "elfVendorId"
    type: "X(ConstantArray.BYTE [4])"
  }
  field {
    name: "elfCulture"
    type: "UI"
  }
  field {
    name: "elfPanose"
    type: "RtagPANOSE;"
  }
}
struct {
  name: "_OUTLINETEXTMETRICA"
  field {
    name: "otmSize"
    type: "UI"
  }
  field {
    name: "otmTextMetrics"
    type: "RtagTEXTMETRICA;"
  }
  field {
    name: "otmFiller"
    type: "UB"
  }
  field {
    name: "otmPanoseNumber"
    type: "RtagPANOSE;"
  }
  field {
    name: "otmfsSelection"
    type: "UI"
  }
  field {
    name: "otmfsType"
    type: "UI"
  }
  field {
    name: "otmsCharSlopeRise"
    type: "I"
  }
  field {
    name: "otmsCharSlopeRun"
    type: "I"
  }
  field {
    name: "otmItalicAngle"
    type: "I"
  }
  field {
    name: "otmEMSquare"
    type: "UI"
  }
  field {
    name: "otmAscent"
    type: "I"
  }
  field {
    name: "otmDescent"
    type: "I"
  }
  field {
    name: "otmLineGap"
    type: "UI"
  }
  field {
    name: "otmsCapEmHeight"
    type: "UI"
  }
  field {
    name: "otmsXHeight"
    type: "UI"
  }
  field {
    name: "otmrcFontBox"
    type: "RtagRECT;"
  }
  field {
    name: "otmMacAscent"
    type: "I"
  }
  field {
    name: "otmMacDescent"
    type: "I"
  }
  field {
    name: "otmMacLineGap"
    type: "UI"
  }
  field {
    name: "otmusMinimumPPEM"
    type: "UI"
  }
  field {
    name: "otmptSubscriptSize"
    type: "RtagPOINT;"
  }
  field {
    name: "otmptSubscriptOffset"
    type: "RtagPOINT;"
  }
  field {
    name: "otmptSuperscriptSize"
    type: "RtagPOINT;"
  }
  field {
    name: "otmptSuperscriptOffset"
    type: "RtagPOINT;"
  }
  field {
    name: "otmsStrikeoutSize"
    type: "UI"
  }
  field {
    name: "otmsStrikeoutPosition"
    type: "I"
  }
  field {
    name: "otmsUnderscoreSize"
    type: "I"
  }
  field {
    name: "otmsUnderscorePosition"
    type: "I"
  }
  field {
    name: "otmpFamilyName"
    type: "*C;"
  }
  field {
    name: "otmpFaceName"
    type: "*C;"
  }
  field {
    name: "otmpStyleName"
    type: "*C;"
  }
  field {
    name: "otmpFullName"
    type: "*C;"
  }
}
struct {
  name: "_OUTLINETEXTMETRICA"
  field {
    name: "otmSize"
    type: "UI"
  }
  field {
    name: "otmTextMetrics"
    type: "RtagTEXTMETRICA;"
  }
  field {
    name: "otmFiller"
    type: "UB"
  }
  field {
    name: "otmPanoseNumber"
    type: "RtagPANOSE;"
  }
  field {
    name: "otmfsSelection"
    type: "UI"
  }
  field {
    name: "otmfsType"
    type: "UI"
  }
  field {
    name: "otmsCharSlopeRise"
    type: "I"
  }
  field {
    name: "otmsCharSlopeRun"
    type: "I"
  }
  field {
    name: "otmItalicAngle"
    type: "I"
  }
  field {
    name: "otmEMSquare"
    type: "UI"
  }
  field {
    name: "otmAscent"
    type: "I"
  }
  field {
    name: "otmDescent"
    type: "I"
  }
  field {
    name: "otmLineGap"
    type: "UI"
  }
  field {
    name: "otmsCapEmHeight"
    type: "UI"
  }
  field {
    name: "otmsXHeight"
    type: "UI"
  }
  field {
    name: "otmrcFontBox"
    type: "RtagRECT;"
  }
  field {
    name: "otmMacAscent"
    type: "I"
  }
  field {
    name: "otmMacDescent"
    type: "I"
  }
  field {
    name: "otmMacLineGap"
    type: "UI"
  }
  field {
    name: "otmusMinimumPPEM"
    type: "UI"
  }
  field {
    name: "otmptSubscriptSize"
    type: "RtagPOINT;"
  }
  field {
    name: "otmptSubscriptOffset"
    type: "RtagPOINT;"
  }
  field {
    name: "otmptSuperscriptSize"
    type: "RtagPOINT;"
  }
  field {
    name: "otmptSuperscriptOffset"
    type: "RtagPOINT;"
  }
  field {
    name: "otmsStrikeoutSize"
    type: "UI"
  }
  field {
    name: "otmsStrikeoutPosition"
    type: "I"
  }
  field {
    name: "otmsUnderscoreSize"
    type: "I"
  }
  field {
    name: "otmsUnderscorePosition"
    type: "I"
  }
  field {
    name: "otmpFamilyName"
    type: "*C;"
  }
  field {
    name: "otmpFaceName"
    type: "*C;"
  }
  field {
    name: "otmpStyleName"
    type: "*C;"
  }
  field {
    name: "otmpFullName"
    type: "*C;"
  }
}
struct {
  name: "_OUTLINETEXTMETRICA"
  field {
    name: "otmSize"
    type: "UI"
  }
  field {
    name: "otmTextMetrics"
    type: "RtagTEXTMETRICA;"
  }
  field {
    name: "otmFiller"
    type: "UB"
  }
  field {
    name: "otmPanoseNumber"
    type: "RtagPANOSE;"
  }
  field {
    name: "otmfsSelection"
    type: "UI"
  }
  field {
    name: "otmfsType"
    type: "UI"
  }
  field {
    name: "otmsCharSlopeRise"
    type: "I"
  }
  field {
    name: "otmsCharSlopeRun"
    type: "I"
  }
  field {
    name: "otmItalicAngle"
    type: "I"
  }
  field {
    name: "otmEMSquare"
    type: "UI"
  }
  field {
    name: "otmAscent"
    type: "I"
  }
  field {
    name: "otmDescent"
    type: "I"
  }
  field {
    name: "otmLineGap"
    type: "UI"
  }
  field {
    name: "otmsCapEmHeight"
    type: "UI"
  }
  field {
    name: "otmsXHeight"
    type: "UI"
  }
  field {
    name: "otmrcFontBox"
    type: "RtagRECT;"
  }
  field {
    name: "otmMacAscent"
    type: "I"
  }
  field {
    name: "otmMacDescent"
    type: "I"
  }
  field {
    name: "otmMacLineGap"
    type: "UI"
  }
  field {
    name: "otmusMinimumPPEM"
    type: "UI"
  }
  field {
    name: "otmptSubscriptSize"
    type: "RtagPOINT;"
  }
  field {
    name: "otmptSubscriptOffset"
    type: "RtagPOINT;"
  }
  field {
    name: "otmptSuperscriptSize"
    type: "RtagPOINT;"
  }
  field {
    name: "otmptSuperscriptOffset"
    type: "RtagPOINT;"
  }
  field {
    name: "otmsStrikeoutSize"
    type: "UI"
  }
  field {
    name: "otmsStrikeoutPosition"
    type: "I"
  }
  field {
    name: "otmsUnderscoreSize"
    type: "I"
  }
  field {
    name: "otmsUnderscorePosition"
    type: "I"
  }
  field {
    name: "otmpFamilyName"
    type: "*C;"
  }
  field {
    name: "otmpFaceName"
    type: "*C;"
  }
  field {
    name: "otmpStyleName"
    type: "*C;"
  }
  field {
    name: "otmpFullName"
    type: "*C;"
  }
}
struct {
  name: "_OUTLINETEXTMETRICW"
  field {
    name: "otmSize"
    type: "UI"
  }
  field {
    name: "otmTextMetrics"
    type: "RtagTEXTMETRICW;"
  }
  field {
    name: "otmFiller"
    type: "UB"
  }
  field {
    name: "otmPanoseNumber"
    type: "RtagPANOSE;"
  }
  field {
    name: "otmfsSelection"
    type: "UI"
  }
  field {
    name: "otmfsType"
    type: "UI"
  }
  field {
    name: "otmsCharSlopeRise"
    type: "I"
  }
  field {
    name: "otmsCharSlopeRun"
    type: "I"
  }
  field {
    name: "otmItalicAngle"
    type: "I"
  }
  field {
    name: "otmEMSquare"
    type: "UI"
  }
  field {
    name: "otmAscent"
    type: "I"
  }
  field {
    name: "otmDescent"
    type: "I"
  }
  field {
    name: "otmLineGap"
    type: "UI"
  }
  field {
    name: "otmsCapEmHeight"
    type: "UI"
  }
  field {
    name: "otmsXHeight"
    type: "UI"
  }
  field {
    name: "otmrcFontBox"
    type: "RtagRECT;"
  }
  field {
    name: "otmMacAscent"
    type: "I"
  }
  field {
    name: "otmMacDescent"
    type: "I"
  }
  field {
    name: "otmMacLineGap"
    type: "UI"
  }
  field {
    name: "otmusMinimumPPEM"
    type: "UI"
  }
  field {
    name: "otmptSubscriptSize"
    type: "RtagPOINT;"
  }
  field {
    name: "otmptSubscriptOffset"
    type: "RtagPOINT;"
  }
  field {
    name: "otmptSuperscriptSize"
    type: "RtagPOINT;"
  }
  field {
    name: "otmptSuperscriptOffset"
    type: "RtagPOINT;"
  }
  field {
    name: "otmsStrikeoutSize"
    type: "UI"
  }
  field {
    name: "otmsStrikeoutPosition"
    type: "I"
  }
  field {
    name: "otmsUnderscoreSize"
    type: "I"
  }
  field {
    name: "otmsUnderscorePosition"
    type: "I"
  }
  field {
    name: "otmpFamilyName"
    type: "*C;"
  }
  field {
    name: "otmpFaceName"
    type: "*C;"
  }
  field {
    name: "otmpStyleName"
    type: "*C;"
  }
  field {
    name: "otmpFullName"
    type: "*C;"
  }
}
struct {
  name: "_OUTLINETEXTMETRICW"
  field {
    name: "otmSize"
    type: "UI"
  }
  field {
    name: "otmTextMetrics"
    type: "RtagTEXTMETRICW;"
  }
  field {
    name: "otmFiller"
    type: "UB"
  }
  field {
    name: "otmPanoseNumber"
    type: "RtagPANOSE;"
  }
  field {
    name: "otmfsSelection"
    type: "UI"
  }
  field {
    name: "otmfsType"
    type: "UI"
  }
  field {
    name: "otmsCharSlopeRise"
    type: "I"
  }
  field {
    name: "otmsCharSlopeRun"
    type: "I"
  }
  field {
    name: "otmItalicAngle"
    type: "I"
  }
  field {
    name: "otmEMSquare"
    type: "UI"
  }
  field {
    name: "otmAscent"
    type: "I"
  }
  field {
    name: "otmDescent"
    type: "I"
  }
  field {
    name: "otmLineGap"
    type: "UI"
  }
  field {
    name: "otmsCapEmHeight"
    type: "UI"
  }
  field {
    name: "otmsXHeight"
    type: "UI"
  }
  field {
    name: "otmrcFontBox"
    type: "RtagRECT;"
  }
  field {
    name: "otmMacAscent"
    type: "I"
  }
  field {
    name: "otmMacDescent"
    type: "I"
  }
  field {
    name: "otmMacLineGap"
    type: "UI"
  }
  field {
    name: "otmusMinimumPPEM"
    type: "UI"
  }
  field {
    name: "otmptSubscriptSize"
    type: "RtagPOINT;"
  }
  field {
    name: "otmptSubscriptOffset"
    type: "RtagPOINT;"
  }
  field {
    name: "otmptSuperscriptSize"
    type: "RtagPOINT;"
  }
  field {
    name: "otmptSuperscriptOffset"
    type: "RtagPOINT;"
  }
  field {
    name: "otmsStrikeoutSize"
    type: "UI"
  }
  field {
    name: "otmsStrikeoutPosition"
    type: "I"
  }
  field {
    name: "otmsUnderscoreSize"
    type: "I"
  }
  field {
    name: "otmsUnderscorePosition"
    type: "I"
  }
  field {
    name: "otmpFamilyName"
    type: "*C;"
  }
  field {
    name: "otmpFaceName"
    type: "*C;"
  }
  field {
    name: "otmpStyleName"
    type: "*C;"
  }
  field {
    name: "otmpFullName"
    type: "*C;"
  }
}
struct {
  name: "_OUTLINETEXTMETRICW"
  field {
    name: "otmSize"
    type: "UI"
  }
  field {
    name: "otmTextMetrics"
    type: "RtagTEXTMETRICW;"
  }
  field {
    name: "otmFiller"
    type: "UB"
  }
  field {
    name: "otmPanoseNumber"
    type: "RtagPANOSE;"
  }
  field {
    name: "otmfsSelection"
    type: "UI"
  }
  field {
    name: "otmfsType"
    type: "UI"
  }
  field {
    name: "otmsCharSlopeRise"
    type: "I"
  }
  field {
    name: "otmsCharSlopeRun"
    type: "I"
  }
  field {
    name: "otmItalicAngle"
    type: "I"
  }
  field {
    name: "otmEMSquare"
    type: "UI"
  }
  field {
    name: "otmAscent"
    type: "I"
  }
  field {
    name: "otmDescent"
    type: "I"
  }
  field {
    name: "otmLineGap"
    type: "UI"
  }
  field {
    name: "otmsCapEmHeight"
    type: "UI"
  }
  field {
    name: "otmsXHeight"
    type: "UI"
  }
  field {
    name: "otmrcFontBox"
    type: "RtagRECT;"
  }
  field {
    name: "otmMacAscent"
    type: "I"
  }
  field {
    name: "otmMacDescent"
    type: "I"
  }
  field {
    name: "otmMacLineGap"
    type: "UI"
  }
  field {
    name: "otmusMinimumPPEM"
    type: "UI"
  }
  field {
    name: "otmptSubscriptSize"
    type: "RtagPOINT;"
  }
  field {
    name: "otmptSubscriptOffset"
    type: "RtagPOINT;"
  }
  field {
    name: "otmptSuperscriptSize"
    type: "RtagPOINT;"
  }
  field {
    name: "otmptSuperscriptOffset"
    type: "RtagPOINT;"
  }
  field {
    name: "otmsStrikeoutSize"
    type: "UI"
  }
  field {
    name: "otmsStrikeoutPosition"
    type: "I"
  }
  field {
    name: "otmsUnderscoreSize"
    type: "I"
  }
  field {
    name: "otmsUnderscorePosition"
    type: "I"
  }
  field {
    name: "otmpFamilyName"
    type: "*C;"
  }
  field {
    name: "otmpFaceName"
    type: "*C;"
  }
  field {
    name: "otmpStyleName"
    type: "*C;"
  }
  field {
    name: "otmpFullName"
    type: "*C;"
  }
}
struct {
  name: "POLYTEXTA"
  field {
    name: "x"
    type: "I"
  }
  field {
    name: "y"
    type: "I"
  }
  field {
    name: "n"
    type: "UI"
  }
  field {
    name: "lpstr"
    type: "*cC;"
  }
  field {
    name: "uiFlags"
    type: "UI"
  }
  field {
    name: "rcl"
    type: "RtagRECT;"
  }
  field {
    name: "pdx"
    type: "*I;"
  }
}
struct {
  name: "POLYTEXTA"
  field {
    name: "x"
    type: "I"
  }
  field {
    name: "y"
    type: "I"
  }
  field {
    name: "n"
    type: "UI"
  }
  field {
    name: "lpstr"
    type: "*cC;"
  }
  field {
    name: "uiFlags"
    type: "UI"
  }
  field {
    name: "rcl"
    type: "RtagRECT;"
  }
  field {
    name: "pdx"
    type: "*I;"
  }
}
struct {
  name: "POLYTEXTA"
  field {
    name: "x"
    type: "I"
  }
  field {
    name: "y"
    type: "I"
  }
  field {
    name: "n"
    type: "UI"
  }
  field {
    name: "lpstr"
    type: "*cC;"
  }
  field {
    name: "uiFlags"
    type: "UI"
  }
  field {
    name: "rcl"
    type: "RtagRECT;"
  }
  field {
    name: "pdx"
    type: "*I;"
  }
}
struct {
  name: "POLYTEXTW"
  field {
    name: "x"
    type: "I"
  }
  field {
    name: "y"
    type: "I"
  }
  field {
    name: "n"
    type: "UI"
  }
  field {
    name: "lpstr"
    type: "*cUS;"
  }
  field {
    name: "uiFlags"
    type: "UI"
  }
  field {
    name: "rcl"
    type: "RtagRECT;"
  }
  field {
    name: "pdx"
    type: "*I;"
  }
}
struct {
  name: "POLYTEXTW"
  field {
    name: "x"
    type: "I"
  }
  field {
    name: "y"
    type: "I"
  }
  field {
    name: "n"
    type: "UI"
  }
  field {
    name: "lpstr"
    type: "*cUS;"
  }
  field {
    name: "uiFlags"
    type: "UI"
  }
  field {
    name: "rcl"
    type: "RtagRECT;"
  }
  field {
    name: "pdx"
    type: "*I;"
  }
}
struct {
  name: "POLYTEXTW"
  field {
    name: "x"
    type: "I"
  }
  field {
    name: "y"
    type: "I"
  }
  field {
    name: "n"
    type: "UI"
  }
  field {
    name: "lpstr"
    type: "*cUS;"
  }
  field {
    name: "uiFlags"
    type: "UI"
  }
  field {
    name: "rcl"
    type: "RtagRECT;"
  }
  field {
    name: "pdx"
    type: "*I;"
  }
}
struct {
  name: "NEWTEXTMETRICA"
  field {
    name: "tmHeight"
    type: "I"
  }
  field {
    name: "tmAscent"
    type: "I"
  }
  field {
    name: "tmDescent"
    type: "I"
  }
  field {
    name: "tmInternalLeading"
    type: "I"
  }
  field {
    name: "tmExternalLeading"
    type: "I"
  }
  field {
    name: "tmAveCharWidth"
    type: "I"
  }
  field {
    name: "tmMaxCharWidth"
    type: "I"
  }
  field {
    name: "tmWeight"
    type: "I"
  }
  field {
    name: "tmOverhang"
    type: "I"
  }
  field {
    name: "tmDigitizedAspectX"
    type: "I"
  }
  field {
    name: "tmDigitizedAspectY"
    type: "I"
  }
  field {
    name: "tmFirstChar"
    type: "UB"
  }
  field {
    name: "tmLastChar"
    type: "UB"
  }
  field {
    name: "tmDefaultChar"
    type: "UB"
  }
  field {
    name: "tmBreakChar"
    type: "UB"
  }
  field {
    name: "tmItalic"
    type: "UB"
  }
  field {
    name: "tmUnderlined"
    type: "UB"
  }
  field {
    name: "tmStruckOut"
    type: "UB"
  }
  field {
    name: "tmPitchAndFamily"
    type: "UB"
  }
  field {
    name: "tmCharSet"
    type: "UB"
  }
  field {
    name: "ntmFlags"
    type: "UI"
  }
  field {
    name: "ntmSizeEM"
    type: "UI"
  }
  field {
    name: "ntmCellHeight"
    type: "UI"
  }
  field {
    name: "ntmAvgWidth"
    type: "UI"
  }
}
struct {
  name: "NEWTEXTMETRICA"
  field {
    name: "tmHeight"
    type: "I"
  }
  field {
    name: "tmAscent"
    type: "I"
  }
  field {
    name: "tmDescent"
    type: "I"
  }
  field {
    name: "tmInternalLeading"
    type: "I"
  }
  field {
    name: "tmExternalLeading"
    type: "I"
  }
  field {
    name: "tmAveCharWidth"
    type: "I"
  }
  field {
    name: "tmMaxCharWidth"
    type: "I"
  }
  field {
    name: "tmWeight"
    type: "I"
  }
  field {
    name: "tmOverhang"
    type: "I"
  }
  field {
    name: "tmDigitizedAspectX"
    type: "I"
  }
  field {
    name: "tmDigitizedAspectY"
    type: "I"
  }
  field {
    name: "tmFirstChar"
    type: "UB"
  }
  field {
    name: "tmLastChar"
    type: "UB"
  }
  field {
    name: "tmDefaultChar"
    type: "UB"
  }
  field {
    name: "tmBreakChar"
    type: "UB"
  }
  field {
    name: "tmItalic"
    type: "UB"
  }
  field {
    name: "tmUnderlined"
    type: "UB"
  }
  field {
    name: "tmStruckOut"
    type: "UB"
  }
  field {
    name: "tmPitchAndFamily"
    type: "UB"
  }
  field {
    name: "tmCharSet"
    type: "UB"
  }
  field {
    name: "ntmFlags"
    type: "UI"
  }
  field {
    name: "ntmSizeEM"
    type: "UI"
  }
  field {
    name: "ntmCellHeight"
    type: "UI"
  }
  field {
    name: "ntmAvgWidth"
    type: "UI"
  }
}
struct {
  name: "NEWTEXTMETRICA"
  field {
    name: "tmHeight"
    type: "I"
  }
  field {
    name: "tmAscent"
    type: "I"
  }
  field {
    name: "tmDescent"
    type: "I"
  }
  field {
    name: "tmInternalLeading"
    type: "I"
  }
  field {
    name: "tmExternalLeading"
    type: "I"
  }
  field {
    name: "tmAveCharWidth"
    type: "I"
  }
  field {
    name: "tmMaxCharWidth"
    type: "I"
  }
  field {
    name: "tmWeight"
    type: "I"
  }
  field {
    name: "tmOverhang"
    type: "I"
  }
  field {
    name: "tmDigitizedAspectX"
    type: "I"
  }
  field {
    name: "tmDigitizedAspectY"
    type: "I"
  }
  field {
    name: "tmFirstChar"
    type: "UB"
  }
  field {
    name: "tmLastChar"
    type: "UB"
  }
  field {
    name: "tmDefaultChar"
    type: "UB"
  }
  field {
    name: "tmBreakChar"
    type: "UB"
  }
  field {
    name: "tmItalic"
    type: "UB"
  }
  field {
    name: "tmUnderlined"
    type: "UB"
  }
  field {
    name: "tmStruckOut"
    type: "UB"
  }
  field {
    name: "tmPitchAndFamily"
    type: "UB"
  }
  field {
    name: "tmCharSet"
    type: "UB"
  }
  field {
    name: "ntmFlags"
    type: "UI"
  }
  field {
    name: "ntmSizeEM"
    type: "UI"
  }
  field {
    name: "ntmCellHeight"
    type: "UI"
  }
  field {
    name: "ntmAvgWidth"
    type: "UI"
  }
}
struct {
  name: "NEWTEXTMETRICW"
  field {
    name: "tmHeight"
    type: "I"
  }
  field {
    name: "tmAscent"
    type: "I"
  }
  field {
    name: "tmDescent"
    type: "I"
  }
  field {
    name: "tmInternalLeading"
    type: "I"
  }
  field {
    name: "tmExternalLeading"
    type: "I"
  }
  field {
    name: "tmAveCharWidth"
    type: "I"
  }
  field {
    name: "tmMaxCharWidth"
    type: "I"
  }
  field {
    name: "tmWeight"
    type: "I"
  }
  field {
    name: "tmOverhang"
    type: "I"
  }
  field {
    name: "tmDigitizedAspectX"
    type: "I"
  }
  field {
    name: "tmDigitizedAspectY"
    type: "I"
  }
  field {
    name: "tmFirstChar"
    type: "US"
  }
  field {
    name: "tmLastChar"
    type: "US"
  }
  field {
    name: "tmDefaultChar"
    type: "US"
  }
  field {
    name: "tmBreakChar"
    type: "US"
  }
  field {
    name: "tmItalic"
    type: "UB"
  }
  field {
    name: "tmUnderlined"
    type: "UB"
  }
  field {
    name: "tmStruckOut"
    type: "UB"
  }
  field {
    name: "tmPitchAndFamily"
    type: "UB"
  }
  field {
    name: "tmCharSet"
    type: "UB"
  }
  field {
    name: "ntmFlags"
    type: "UI"
  }
  field {
    name: "ntmSizeEM"
    type: "UI"
  }
  field {
    name: "ntmCellHeight"
    type: "UI"
  }
  field {
    name: "ntmAvgWidth"
    type: "UI"
  }
}
struct {
  name: "NEWTEXTMETRICW"
  field {
    name: "tmHeight"
    type: "I"
  }
  field {
    name: "tmAscent"
    type: "I"
  }
  field {
    name: "tmDescent"
    type: "I"
  }
  field {
    name: "tmInternalLeading"
    type: "I"
  }
  field {
    name: "tmExternalLeading"
    type: "I"
  }
  field {
    name: "tmAveCharWidth"
    type: "I"
  }
  field {
    name: "tmMaxCharWidth"
    type: "I"
  }
  field {
    name: "tmWeight"
    type: "I"
  }
  field {
    name: "tmOverhang"
    type: "I"
  }
  field {
    name: "tmDigitizedAspectX"
    type: "I"
  }
  field {
    name: "tmDigitizedAspectY"
    type: "I"
  }
  field {
    name: "tmFirstChar"
    type: "US"
  }
  field {
    name: "tmLastChar"
    type: "US"
  }
  field {
    name: "tmDefaultChar"
    type: "US"
  }
  field {
    name: "tmBreakChar"
    type: "US"
  }
  field {
    name: "tmItalic"
    type: "UB"
  }
  field {
    name: "tmUnderlined"
    type: "UB"
  }
  field {
    name: "tmStruckOut"
    type: "UB"
  }
  field {
    name: "tmPitchAndFamily"
    type: "UB"
  }
  field {
    name: "tmCharSet"
    type: "UB"
  }
  field {
    name: "ntmFlags"
    type: "UI"
  }
  field {
    name: "ntmSizeEM"
    type: "UI"
  }
  field {
    name: "ntmCellHeight"
    type: "UI"
  }
  field {
    name: "ntmAvgWidth"
    type: "UI"
  }
}
struct {
  name: "NEWTEXTMETRICW"
  field {
    name: "tmHeight"
    type: "I"
  }
  field {
    name: "tmAscent"
    type: "I"
  }
  field {
    name: "tmDescent"
    type: "I"
  }
  field {
    name: "tmInternalLeading"
    type: "I"
  }
  field {
    name: "tmExternalLeading"
    type: "I"
  }
  field {
    name: "tmAveCharWidth"
    type: "I"
  }
  field {
    name: "tmMaxCharWidth"
    type: "I"
  }
  field {
    name: "tmWeight"
    type: "I"
  }
  field {
    name: "tmOverhang"
    type: "I"
  }
  field {
    name: "tmDigitizedAspectX"
    type: "I"
  }
  field {
    name: "tmDigitizedAspectY"
    type: "I"
  }
  field {
    name: "tmFirstChar"
    type: "US"
  }
  field {
    name: "tmLastChar"
    type: "US"
  }
  field {
    name: "tmDefaultChar"
    type: "US"
  }
  field {
    name: "tmBreakChar"
    type: "US"
  }
  field {
    name: "tmItalic"
    type: "UB"
  }
  field {
    name: "tmUnderlined"
    type: "UB"
  }
  field {
    name: "tmStruckOut"
    type: "UB"
  }
  field {
    name: "tmPitchAndFamily"
    type: "UB"
  }
  field {
    name: "tmCharSet"
    type: "UB"
  }
  field {
    name: "ntmFlags"
    type: "UI"
  }
  field {
    name: "ntmSizeEM"
    type: "UI"
  }
  field {
    name: "ntmCellHeight"
    type: "UI"
  }
  field {
    name: "ntmAvgWidth"
    type: "UI"
  }
}
struct {
  name: "NEWTEXTMETRICEXA"
  field {
    name: "ntmTm"
    type: "RNEWTEXTMETRICA;"
  }
  field {
    name: "ntmFontSig"
    type: "RFONTSIGNATURE;"
  }
}
struct {
  name: "NEWTEXTMETRICEXW"
  field {
    name: "ntmTm"
    type: "RNEWTEXTMETRICW;"
  }
  field {
    name: "ntmFontSig"
    type: "RFONTSIGNATURE;"
  }
}
struct {
  name: "GLYPHMETRICS"
  field {
    name: "gmBlackBoxX"
    type: "UI"
  }
  field {
    name: "gmBlackBoxY"
    type: "UI"
  }
  field {
    name: "gmptGlyphOrigin"
    type: "RtagPOINT;"
  }
  field {
    name: "gmCellIncX"
    type: "S"
  }
  field {
    name: "gmCellIncY"
    type: "S"
  }
}
struct {
  name: "GLYPHMETRICS"
  field {
    name: "gmBlackBoxX"
    type: "UI"
  }
  field {
    name: "gmBlackBoxY"
    type: "UI"
  }
  field {
    name: "gmptGlyphOrigin"
    type: "RtagPOINT;"
  }
  field {
    name: "gmCellIncX"
    type: "S"
  }
  field {
    name: "gmCellIncY"
    type: "S"
  }
}
struct {
  name: "FIXED"
  field {
    name: "fract"
    type: "US"
  }
  field {
    name: "value"
    type: "S"
  }
}
struct {
  name: "tagPOINTFX"
  field {
    name: "x"
    type: "RFIXED;"
  }
  field {
    name: "y"
    type: "RFIXED;"
  }
}
struct {
  name: "tagPOINTFX"
  field {
    name: "x"
    type: "RFIXED;"
  }
  field {
    name: "y"
    type: "RFIXED;"
  }
}
struct {
  name: "tagTTPOLYCURVE"
  field {
    name: "wType"
    type: "US"
  }
  field {
    name: "cpfx"
    type: "US"
  }
  field {
    name: "apfx"
    type: "X(ConstantArray.POINTFX [1])"
  }
}
struct {
  name: "tagTTPOLYCURVE"
  field {
    name: "wType"
    type: "US"
  }
  field {
    name: "cpfx"
    type: "US"
  }
  field {
    name: "apfx"
    type: "X(ConstantArray.POINTFX [1])"
  }
}
struct {
  name: "tagTTPOLYGONHEADER"
  field {
    name: "cb"
    type: "UI"
  }
  field {
    name: "dwType"
    type: "UI"
  }
  field {
    name: "pfxStart"
    type: "RtagPOINTFX;"
  }
}
struct {
  name: "tagTTPOLYGONHEADER"
  field {
    name: "cb"
    type: "UI"
  }
  field {
    name: "dwType"
    type: "UI"
  }
  field {
    name: "pfxStart"
    type: "RtagPOINTFX;"
  }
}
struct {
  name: "MAT2"
  field {
    name: "eM11"
    type: "RFIXED;"
  }
  field {
    name: "eM12"
    type: "RFIXED;"
  }
  field {
    name: "eM21"
    type: "RFIXED;"
  }
  field {
    name: "eM22"
    type: "RFIXED;"
  }
}
struct {
  name: "MAT2"
  field {
    name: "eM11"
    type: "RFIXED;"
  }
  field {
    name: "eM12"
    type: "RFIXED;"
  }
  field {
    name: "eM21"
    type: "RFIXED;"
  }
  field {
    name: "eM22"
    type: "RFIXED;"
  }
}
struct {
  name: "ABC"
  field {
    name: "abcA"
    type: "I"
  }
  field {
    name: "abcB"
    type: "UI"
  }
  field {
    name: "abcC"
    type: "I"
  }
}
struct {
  name: "ABC"
  field {
    name: "abcA"
    type: "I"
  }
  field {
    name: "abcB"
    type: "UI"
  }
  field {
    name: "abcC"
    type: "I"
  }
}
struct {
  name: "ABC"
  field {
    name: "abcA"
    type: "I"
  }
  field {
    name: "abcB"
    type: "UI"
  }
  field {
    name: "abcC"
    type: "I"
  }
}
struct {
  name: "tagGCP_RESULTSA"
  field {
    name: "lStructSize"
    type: "UI"
  }
  field {
    name: "lpOutString"
    type: "*C;"
  }
  field {
    name: "lpOrder"
    type: "*UI;"
  }
  field {
    name: "lpDx"
    type: "*I;"
  }
  field {
    name: "lpCaretPos"
    type: "*I;"
  }
  field {
    name: "lpClass"
    type: "*C;"
  }
  field {
    name: "lpGlyphs"
    type: "*US;"
  }
  field {
    name: "nGlyphs"
    type: "UI"
  }
  field {
    name: "nMaxFit"
    type: "UI"
  }
}
struct {
  name: "tagGCP_RESULTSA"
  field {
    name: "lStructSize"
    type: "UI"
  }
  field {
    name: "lpOutString"
    type: "*C;"
  }
  field {
    name: "lpOrder"
    type: "*UI;"
  }
  field {
    name: "lpDx"
    type: "*I;"
  }
  field {
    name: "lpCaretPos"
    type: "*I;"
  }
  field {
    name: "lpClass"
    type: "*C;"
  }
  field {
    name: "lpGlyphs"
    type: "*US;"
  }
  field {
    name: "nGlyphs"
    type: "UI"
  }
  field {
    name: "nMaxFit"
    type: "UI"
  }
}
struct {
  name: "tagGCP_RESULTSW"
  field {
    name: "lStructSize"
    type: "UI"
  }
  field {
    name: "lpOutString"
    type: "*US;"
  }
  field {
    name: "lpOrder"
    type: "*UI;"
  }
  field {
    name: "lpDx"
    type: "*I;"
  }
  field {
    name: "lpCaretPos"
    type: "*I;"
  }
  field {
    name: "lpClass"
    type: "*C;"
  }
  field {
    name: "lpGlyphs"
    type: "*US;"
  }
  field {
    name: "nGlyphs"
    type: "UI"
  }
  field {
    name: "nMaxFit"
    type: "UI"
  }
}
struct {
  name: "tagGCP_RESULTSW"
  field {
    name: "lStructSize"
    type: "UI"
  }
  field {
    name: "lpOutString"
    type: "*US;"
  }
  field {
    name: "lpOrder"
    type: "*UI;"
  }
  field {
    name: "lpDx"
    type: "*I;"
  }
  field {
    name: "lpCaretPos"
    type: "*I;"
  }
  field {
    name: "lpClass"
    type: "*C;"
  }
  field {
    name: "lpGlyphs"
    type: "*US;"
  }
  field {
    name: "nGlyphs"
    type: "UI"
  }
  field {
    name: "nMaxFit"
    type: "UI"
  }
}
struct {
  name: "RASTERIZER_STATUS"
  field {
    name: "nSize"
    type: "S"
  }
  field {
    name: "wFlags"
    type: "S"
  }
  field {
    name: "nLanguageID"
    type: "S"
  }
}
struct {
  name: "RASTERIZER_STATUS"
  field {
    name: "nSize"
    type: "S"
  }
  field {
    name: "wFlags"
    type: "S"
  }
  field {
    name: "nLanguageID"
    type: "S"
  }
}
struct {
  name: "POINTFLOAT"
  field {
    name: "x"
    type: "F"
  }
  field {
    name: "y"
    type: "F"
  }
}
struct {
  name: "POINTFLOAT"
  field {
    name: "x"
    type: "F"
  }
  field {
    name: "y"
    type: "F"
  }
}
struct {
  name: "GLYPHMETRICSFLOAT"
  field {
    name: "gmfBlackBoxX"
    type: "F"
  }
  field {
    name: "gmfBlackBoxY"
    type: "F"
  }
  field {
    name: "gmfptGlyphOrigin"
    type: "RPOINTFLOAT;"
  }
  field {
    name: "gmfCellIncX"
    type: "F"
  }
  field {
    name: "gmfCellIncY"
    type: "F"
  }
}
struct {
  name: "GLYPHMETRICSFLOAT"
  field {
    name: "gmfBlackBoxX"
    type: "F"
  }
  field {
    name: "gmfBlackBoxY"
    type: "F"
  }
  field {
    name: "gmfptGlyphOrigin"
    type: "RPOINTFLOAT;"
  }
  field {
    name: "gmfCellIncX"
    type: "F"
  }
  field {
    name: "gmfCellIncY"
    type: "F"
  }
}
struct {
  name: "GLYPHMETRICSFLOAT"
  field {
    name: "gmfBlackBoxX"
    type: "F"
  }
  field {
    name: "gmfBlackBoxY"
    type: "F"
  }
  field {
    name: "gmfptGlyphOrigin"
    type: "RPOINTFLOAT;"
  }
  field {
    name: "gmfCellIncX"
    type: "F"
  }
  field {
    name: "gmfCellIncY"
    type: "F"
  }
}
struct {
  name: "LAYERPLANEDESCRIPTOR"
  field {
    name: "nSize"
    type: "US"
  }
  field {
    name: "nVersion"
    type: "US"
  }
  field {
    name: "dwFlags"
    type: "UI"
  }
  field {
    name: "iPixelType"
    type: "UB"
  }
  field {
    name: "cColorBits"
    type: "UB"
  }
  field {
    name: "cRedBits"
    type: "UB"
  }
  field {
    name: "cRedShift"
    type: "UB"
  }
  field {
    name: "cGreenBits"
    type: "UB"
  }
  field {
    name: "cGreenShift"
    type: "UB"
  }
  field {
    name: "cBlueBits"
    type: "UB"
  }
  field {
    name: "cBlueShift"
    type: "UB"
  }
  field {
    name: "cAlphaBits"
    type: "UB"
  }
  field {
    name: "cAlphaShift"
    type: "UB"
  }
  field {
    name: "cAccumBits"
    type: "UB"
  }
  field {
    name: "cAccumRedBits"
    type: "UB"
  }
  field {
    name: "cAccumGreenBits"
    type: "UB"
  }
  field {
    name: "cAccumBlueBits"
    type: "UB"
  }
  field {
    name: "cAccumAlphaBits"
    type: "UB"
  }
  field {
    name: "cDepthBits"
    type: "UB"
  }
  field {
    name: "cStencilBits"
    type: "UB"
  }
  field {
    name: "cAuxBuffers"
    type: "UB"
  }
  field {
    name: "iLayerPlane"
    type: "UB"
  }
  field {
    name: "bReserved"
    type: "UB"
  }
  field {
    name: "crTransparent"
    type: "UI"
  }
}
struct {
  name: "LAYERPLANEDESCRIPTOR"
  field {
    name: "nSize"
    type: "US"
  }
  field {
    name: "nVersion"
    type: "US"
  }
  field {
    name: "dwFlags"
    type: "UI"
  }
  field {
    name: "iPixelType"
    type: "UB"
  }
  field {
    name: "cColorBits"
    type: "UB"
  }
  field {
    name: "cRedBits"
    type: "UB"
  }
  field {
    name: "cRedShift"
    type: "UB"
  }
  field {
    name: "cGreenBits"
    type: "UB"
  }
  field {
    name: "cGreenShift"
    type: "UB"
  }
  field {
    name: "cBlueBits"
    type: "UB"
  }
  field {
    name: "cBlueShift"
    type: "UB"
  }
  field {
    name: "cAlphaBits"
    type: "UB"
  }
  field {
    name: "cAlphaShift"
    type: "UB"
  }
  field {
    name: "cAccumBits"
    type: "UB"
  }
  field {
    name: "cAccumRedBits"
    type: "UB"
  }
  field {
    name: "cAccumGreenBits"
    type: "UB"
  }
  field {
    name: "cAccumBlueBits"
    type: "UB"
  }
  field {
    name: "cAccumAlphaBits"
    type: "UB"
  }
  field {
    name: "cDepthBits"
    type: "UB"
  }
  field {
    name: "cStencilBits"
    type: "UB"
  }
  field {
    name: "cAuxBuffers"
    type: "UB"
  }
  field {
    name: "iLayerPlane"
    type: "UB"
  }
  field {
    name: "bReserved"
    type: "UB"
  }
  field {
    name: "crTransparent"
    type: "UI"
  }
}
struct {
  name: "LAYERPLANEDESCRIPTOR"
  field {
    name: "nSize"
    type: "US"
  }
  field {
    name: "nVersion"
    type: "US"
  }
  field {
    name: "dwFlags"
    type: "UI"
  }
  field {
    name: "iPixelType"
    type: "UB"
  }
  field {
    name: "cColorBits"
    type: "UB"
  }
  field {
    name: "cRedBits"
    type: "UB"
  }
  field {
    name: "cRedShift"
    type: "UB"
  }
  field {
    name: "cGreenBits"
    type: "UB"
  }
  field {
    name: "cGreenShift"
    type: "UB"
  }
  field {
    name: "cBlueBits"
    type: "UB"
  }
  field {
    name: "cBlueShift"
    type: "UB"
  }
  field {
    name: "cAlphaBits"
    type: "UB"
  }
  field {
    name: "cAlphaShift"
    type: "UB"
  }
  field {
    name: "cAccumBits"
    type: "UB"
  }
  field {
    name: "cAccumRedBits"
    type: "UB"
  }
  field {
    name: "cAccumGreenBits"
    type: "UB"
  }
  field {
    name: "cAccumBlueBits"
    type: "UB"
  }
  field {
    name: "cAccumAlphaBits"
    type: "UB"
  }
  field {
    name: "cDepthBits"
    type: "UB"
  }
  field {
    name: "cStencilBits"
    type: "UB"
  }
  field {
    name: "cAuxBuffers"
    type: "UB"
  }
  field {
    name: "iLayerPlane"
    type: "UB"
  }
  field {
    name: "bReserved"
    type: "UB"
  }
  field {
    name: "crTransparent"
    type: "UI"
  }
}
struct {
  name: "tagPALETTEENTRY"
  field {
    name: "peRed"
    type: "UB"
  }
  field {
    name: "peGreen"
    type: "UB"
  }
  field {
    name: "peBlue"
    type: "UB"
  }
  field {
    name: "peFlags"
    type: "UB"
  }
}
struct {
  name: "tagPALETTEENTRY"
  field {
    name: "peRed"
    type: "UB"
  }
  field {
    name: "peGreen"
    type: "UB"
  }
  field {
    name: "peBlue"
    type: "UB"
  }
  field {
    name: "peFlags"
    type: "UB"
  }
}
struct {
  name: "tagPALETTEENTRY"
  field {
    name: "peRed"
    type: "UB"
  }
  field {
    name: "peGreen"
    type: "UB"
  }
  field {
    name: "peBlue"
    type: "UB"
  }
  field {
    name: "peFlags"
    type: "UB"
  }
}
struct {
  name: "tagLOGPALETTE"
  field {
    name: "palVersion"
    type: "US"
  }
  field {
    name: "palNumEntries"
    type: "US"
  }
  field {
    name: "palPalEntry"
    type: "X(ConstantArray.PALETTEENTRY [1])"
  }
}
struct {
  name: "tagLOGPALETTE"
  field {
    name: "palVersion"
    type: "US"
  }
  field {
    name: "palNumEntries"
    type: "US"
  }
  field {
    name: "palPalEntry"
    type: "X(ConstantArray.PALETTEENTRY [1])"
  }
}
struct {
  name: "tagLOGPALETTE"
  field {
    name: "palVersion"
    type: "US"
  }
  field {
    name: "palNumEntries"
    type: "US"
  }
  field {
    name: "palPalEntry"
    type: "X(ConstantArray.PALETTEENTRY [1])"
  }
}
struct {
  name: "tagLOGPALETTE"
  field {
    name: "palVersion"
    type: "US"
  }
  field {
    name: "palNumEntries"
    type: "US"
  }
  field {
    name: "palPalEntry"
    type: "X(ConstantArray.PALETTEENTRY [1])"
  }
}
struct {
  name: "LOGPEN"
  field {
    name: "lopnStyle"
    type: "UI"
  }
  field {
    name: "lopnWidth"
    type: "RtagPOINT;"
  }
  field {
    name: "lopnColor"
    type: "UI"
  }
}
struct {
  name: "LOGPEN"
  field {
    name: "lopnStyle"
    type: "UI"
  }
  field {
    name: "lopnWidth"
    type: "RtagPOINT;"
  }
  field {
    name: "lopnColor"
    type: "UI"
  }
}
struct {
  name: "tagEXTLOGPEN"
  field {
    name: "elpPenStyle"
    type: "UI"
  }
  field {
    name: "elpWidth"
    type: "UI"
  }
  field {
    name: "elpBrushStyle"
    type: "UI"
  }
  field {
    name: "elpColor"
    type: "UI"
  }
  field {
    name: "elpHatch"
    type: "UI"
  }
  field {
    name: "elpNumEntries"
    type: "UI"
  }
  field {
    name: "elpStyleEntry"
    type: "X(ConstantArray.DWORD [1])"
  }
}
struct {
  name: "tagEXTLOGPEN"
  field {
    name: "elpPenStyle"
    type: "UI"
  }
  field {
    name: "elpWidth"
    type: "UI"
  }
  field {
    name: "elpBrushStyle"
    type: "UI"
  }
  field {
    name: "elpColor"
    type: "UI"
  }
  field {
    name: "elpHatch"
    type: "UI"
  }
  field {
    name: "elpNumEntries"
    type: "UI"
  }
  field {
    name: "elpStyleEntry"
    type: "X(ConstantArray.DWORD [1])"
  }
}
struct {
  name: "tagEXTLOGPEN"
  field {
    name: "elpPenStyle"
    type: "UI"
  }
  field {
    name: "elpWidth"
    type: "UI"
  }
  field {
    name: "elpBrushStyle"
    type: "UI"
  }
  field {
    name: "elpColor"
    type: "UI"
  }
  field {
    name: "elpHatch"
    type: "UI"
  }
  field {
    name: "elpNumEntries"
    type: "UI"
  }
  field {
    name: "elpStyleEntry"
    type: "X(ConstantArray.DWORD [1])"
  }
}
struct {
  name: "tagEXTLOGPEN"
  field {
    name: "elpPenStyle"
    type: "UI"
  }
  field {
    name: "elpWidth"
    type: "UI"
  }
  field {
    name: "elpBrushStyle"
    type: "UI"
  }
  field {
    name: "elpColor"
    type: "UI"
  }
  field {
    name: "elpHatch"
    type: "UI"
  }
  field {
    name: "elpNumEntries"
    type: "UI"
  }
  field {
    name: "elpStyleEntry"
    type: "X(ConstantArray.DWORD [1])"
  }
}
struct {
  name: "tagRGBQUAD"
  field {
    name: "rgbBlue"
    type: "UB"
  }
  field {
    name: "rgbGreen"
    type: "UB"
  }
  field {
    name: "rgbRed"
    type: "UB"
  }
  field {
    name: "rgbReserved"
    type: "UB"
  }
}
struct {
  name: "tagRGBQUAD"
  field {
    name: "rgbBlue"
    type: "UB"
  }
  field {
    name: "rgbGreen"
    type: "UB"
  }
  field {
    name: "rgbRed"
    type: "UB"
  }
  field {
    name: "rgbReserved"
    type: "UB"
  }
}
struct {
  name: "tagRGBTRIPLE"
  field {
    name: "rgbtBlue"
    type: "UB"
  }
  field {
    name: "rgbtGreen"
    type: "UB"
  }
  field {
    name: "rgbtRed"
    type: "UB"
  }
}
struct {
  name: "BITMAPFILEHEADER"
  field {
    name: "bfType"
    type: "US"
  }
  field {
    name: "bfSize"
    type: "UI"
  }
  field {
    name: "bfReserved1"
    type: "US"
  }
  field {
    name: "bfReserved2"
    type: "US"
  }
  field {
    name: "bfOffBits"
    type: "UI"
  }
}
struct {
  name: "BITMAPFILEHEADER"
  field {
    name: "bfType"
    type: "US"
  }
  field {
    name: "bfSize"
    type: "UI"
  }
  field {
    name: "bfReserved1"
    type: "US"
  }
  field {
    name: "bfReserved2"
    type: "US"
  }
  field {
    name: "bfOffBits"
    type: "UI"
  }
}
struct {
  name: "BITMAPFILEHEADER"
  field {
    name: "bfType"
    type: "US"
  }
  field {
    name: "bfSize"
    type: "UI"
  }
  field {
    name: "bfReserved1"
    type: "US"
  }
  field {
    name: "bfReserved2"
    type: "US"
  }
  field {
    name: "bfOffBits"
    type: "UI"
  }
}
struct {
  name: "BITMAPINFOHEADER"
  field {
    name: "biSize"
    type: "UI"
  }
  field {
    name: "biWidth"
    type: "I"
  }
  field {
    name: "biHeight"
    type: "I"
  }
  field {
    name: "biPlanes"
    type: "US"
  }
  field {
    name: "biBitCount"
    type: "US"
  }
  field {
    name: "biCompression"
    type: "UI"
  }
  field {
    name: "biSizeImage"
    type: "UI"
  }
  field {
    name: "biXPelsPerMeter"
    type: "I"
  }
  field {
    name: "biYPelsPerMeter"
    type: "I"
  }
  field {
    name: "biClrUsed"
    type: "UI"
  }
  field {
    name: "biClrImportant"
    type: "UI"
  }
}
struct {
  name: "BITMAPINFOHEADER"
  field {
    name: "biSize"
    type: "UI"
  }
  field {
    name: "biWidth"
    type: "I"
  }
  field {
    name: "biHeight"
    type: "I"
  }
  field {
    name: "biPlanes"
    type: "US"
  }
  field {
    name: "biBitCount"
    type: "US"
  }
  field {
    name: "biCompression"
    type: "UI"
  }
  field {
    name: "biSizeImage"
    type: "UI"
  }
  field {
    name: "biXPelsPerMeter"
    type: "I"
  }
  field {
    name: "biYPelsPerMeter"
    type: "I"
  }
  field {
    name: "biClrUsed"
    type: "UI"
  }
  field {
    name: "biClrImportant"
    type: "UI"
  }
}
struct {
  name: "BITMAPINFOHEADER"
  field {
    name: "biSize"
    type: "UI"
  }
  field {
    name: "biWidth"
    type: "I"
  }
  field {
    name: "biHeight"
    type: "I"
  }
  field {
    name: "biPlanes"
    type: "US"
  }
  field {
    name: "biBitCount"
    type: "US"
  }
  field {
    name: "biCompression"
    type: "UI"
  }
  field {
    name: "biSizeImage"
    type: "UI"
  }
  field {
    name: "biXPelsPerMeter"
    type: "I"
  }
  field {
    name: "biYPelsPerMeter"
    type: "I"
  }
  field {
    name: "biClrUsed"
    type: "UI"
  }
  field {
    name: "biClrImportant"
    type: "UI"
  }
}
struct {
  name: "BITMAPV4HEADER"
  field {
    name: "bV4Size"
    type: "UI"
  }
  field {
    name: "bV4Width"
    type: "I"
  }
  field {
    name: "bV4Height"
    type: "I"
  }
  field {
    name: "bV4Planes"
    type: "US"
  }
  field {
    name: "bV4BitCount"
    type: "US"
  }
  field {
    name: "bV4V4Compression"
    type: "UI"
  }
  field {
    name: "bV4SizeImage"
    type: "UI"
  }
  field {
    name: "bV4XPelsPerMeter"
    type: "I"
  }
  field {
    name: "bV4YPelsPerMeter"
    type: "I"
  }
  field {
    name: "bV4ClrUsed"
    type: "UI"
  }
  field {
    name: "bV4ClrImportant"
    type: "UI"
  }
  field {
    name: "bV4RedMask"
    type: "UI"
  }
  field {
    name: "bV4GreenMask"
    type: "UI"
  }
  field {
    name: "bV4BlueMask"
    type: "UI"
  }
  field {
    name: "bV4AlphaMask"
    type: "UI"
  }
  field {
    name: "bV4CSType"
    type: "UI"
  }
  field {
    name: "bV4Endpoints"
    type: "RtagCIEXYZTRIPLE;"
  }
  field {
    name: "bV4GammaRed"
    type: "UI"
  }
  field {
    name: "bV4GammaGreen"
    type: "UI"
  }
  field {
    name: "bV4GammaBlue"
    type: "UI"
  }
}
struct {
  name: "BITMAPV4HEADER"
  field {
    name: "bV4Size"
    type: "UI"
  }
  field {
    name: "bV4Width"
    type: "I"
  }
  field {
    name: "bV4Height"
    type: "I"
  }
  field {
    name: "bV4Planes"
    type: "US"
  }
  field {
    name: "bV4BitCount"
    type: "US"
  }
  field {
    name: "bV4V4Compression"
    type: "UI"
  }
  field {
    name: "bV4SizeImage"
    type: "UI"
  }
  field {
    name: "bV4XPelsPerMeter"
    type: "I"
  }
  field {
    name: "bV4YPelsPerMeter"
    type: "I"
  }
  field {
    name: "bV4ClrUsed"
    type: "UI"
  }
  field {
    name: "bV4ClrImportant"
    type: "UI"
  }
  field {
    name: "bV4RedMask"
    type: "UI"
  }
  field {
    name: "bV4GreenMask"
    type: "UI"
  }
  field {
    name: "bV4BlueMask"
    type: "UI"
  }
  field {
    name: "bV4AlphaMask"
    type: "UI"
  }
  field {
    name: "bV4CSType"
    type: "UI"
  }
  field {
    name: "bV4Endpoints"
    type: "RtagCIEXYZTRIPLE;"
  }
  field {
    name: "bV4GammaRed"
    type: "UI"
  }
  field {
    name: "bV4GammaGreen"
    type: "UI"
  }
  field {
    name: "bV4GammaBlue"
    type: "UI"
  }
}
struct {
  name: "BITMAPV5HEADER"
  field {
    name: "bV5Size"
    type: "UI"
  }
  field {
    name: "bV5Width"
    type: "I"
  }
  field {
    name: "bV5Height"
    type: "I"
  }
  field {
    name: "bV5Planes"
    type: "US"
  }
  field {
    name: "bV5BitCount"
    type: "US"
  }
  field {
    name: "bV5Compression"
    type: "UI"
  }
  field {
    name: "bV5SizeImage"
    type: "UI"
  }
  field {
    name: "bV5XPelsPerMeter"
    type: "I"
  }
  field {
    name: "bV5YPelsPerMeter"
    type: "I"
  }
  field {
    name: "bV5ClrUsed"
    type: "UI"
  }
  field {
    name: "bV5ClrImportant"
    type: "UI"
  }
  field {
    name: "bV5RedMask"
    type: "UI"
  }
  field {
    name: "bV5GreenMask"
    type: "UI"
  }
  field {
    name: "bV5BlueMask"
    type: "UI"
  }
  field {
    name: "bV5AlphaMask"
    type: "UI"
  }
  field {
    name: "bV5CSType"
    type: "UI"
  }
  field {
    name: "bV5Endpoints"
    type: "RtagCIEXYZTRIPLE;"
  }
  field {
    name: "bV5GammaRed"
    type: "UI"
  }
  field {
    name: "bV5GammaGreen"
    type: "UI"
  }
  field {
    name: "bV5GammaBlue"
    type: "UI"
  }
  field {
    name: "bV5Intent"
    type: "UI"
  }
  field {
    name: "bV5ProfileData"
    type: "UI"
  }
  field {
    name: "bV5ProfileSize"
    type: "UI"
  }
  field {
    name: "bV5Reserved"
    type: "UI"
  }
}
struct {
  name: "BITMAPV5HEADER"
  field {
    name: "bV5Size"
    type: "UI"
  }
  field {
    name: "bV5Width"
    type: "I"
  }
  field {
    name: "bV5Height"
    type: "I"
  }
  field {
    name: "bV5Planes"
    type: "US"
  }
  field {
    name: "bV5BitCount"
    type: "US"
  }
  field {
    name: "bV5Compression"
    type: "UI"
  }
  field {
    name: "bV5SizeImage"
    type: "UI"
  }
  field {
    name: "bV5XPelsPerMeter"
    type: "I"
  }
  field {
    name: "bV5YPelsPerMeter"
    type: "I"
  }
  field {
    name: "bV5ClrUsed"
    type: "UI"
  }
  field {
    name: "bV5ClrImportant"
    type: "UI"
  }
  field {
    name: "bV5RedMask"
    type: "UI"
  }
  field {
    name: "bV5GreenMask"
    type: "UI"
  }
  field {
    name: "bV5BlueMask"
    type: "UI"
  }
  field {
    name: "bV5AlphaMask"
    type: "UI"
  }
  field {
    name: "bV5CSType"
    type: "UI"
  }
  field {
    name: "bV5Endpoints"
    type: "RtagCIEXYZTRIPLE;"
  }
  field {
    name: "bV5GammaRed"
    type: "UI"
  }
  field {
    name: "bV5GammaGreen"
    type: "UI"
  }
  field {
    name: "bV5GammaBlue"
    type: "UI"
  }
  field {
    name: "bV5Intent"
    type: "UI"
  }
  field {
    name: "bV5ProfileData"
    type: "UI"
  }
  field {
    name: "bV5ProfileSize"
    type: "UI"
  }
  field {
    name: "bV5Reserved"
    type: "UI"
  }
}
struct {
  name: "BITMAPV5HEADER"
  field {
    name: "bV5Size"
    type: "UI"
  }
  field {
    name: "bV5Width"
    type: "I"
  }
  field {
    name: "bV5Height"
    type: "I"
  }
  field {
    name: "bV5Planes"
    type: "US"
  }
  field {
    name: "bV5BitCount"
    type: "US"
  }
  field {
    name: "bV5Compression"
    type: "UI"
  }
  field {
    name: "bV5SizeImage"
    type: "UI"
  }
  field {
    name: "bV5XPelsPerMeter"
    type: "I"
  }
  field {
    name: "bV5YPelsPerMeter"
    type: "I"
  }
  field {
    name: "bV5ClrUsed"
    type: "UI"
  }
  field {
    name: "bV5ClrImportant"
    type: "UI"
  }
  field {
    name: "bV5RedMask"
    type: "UI"
  }
  field {
    name: "bV5GreenMask"
    type: "UI"
  }
  field {
    name: "bV5BlueMask"
    type: "UI"
  }
  field {
    name: "bV5AlphaMask"
    type: "UI"
  }
  field {
    name: "bV5CSType"
    type: "UI"
  }
  field {
    name: "bV5Endpoints"
    type: "RtagCIEXYZTRIPLE;"
  }
  field {
    name: "bV5GammaRed"
    type: "UI"
  }
  field {
    name: "bV5GammaGreen"
    type: "UI"
  }
  field {
    name: "bV5GammaBlue"
    type: "UI"
  }
  field {
    name: "bV5Intent"
    type: "UI"
  }
  field {
    name: "bV5ProfileData"
    type: "UI"
  }
  field {
    name: "bV5ProfileSize"
    type: "UI"
  }
  field {
    name: "bV5Reserved"
    type: "UI"
  }
}
struct {
  name: "tagBITMAPINFO"
  field {
    name: "bmiHeader"
    type: "RBITMAPINFOHEADER;"
  }
  field {
    name: "bmiColors"
    type: "X(ConstantArray.RGBQUAD [1])"
  }
}
struct {
  name: "tagBITMAPINFO"
  field {
    name: "bmiHeader"
    type: "RBITMAPINFOHEADER;"
  }
  field {
    name: "bmiColors"
    type: "X(ConstantArray.RGBQUAD [1])"
  }
}
struct {
  name: "tagBITMAPINFO"
  field {
    name: "bmiHeader"
    type: "RBITMAPINFOHEADER;"
  }
  field {
    name: "bmiColors"
    type: "X(ConstantArray.RGBQUAD [1])"
  }
}
struct {
  name: "BITMAPCOREHEADER"
  field {
    name: "bcSize"
    type: "UI"
  }
  field {
    name: "bcWidth"
    type: "US"
  }
  field {
    name: "bcHeight"
    type: "US"
  }
  field {
    name: "bcPlanes"
    type: "US"
  }
  field {
    name: "bcBitCount"
    type: "US"
  }
}
struct {
  name: "BITMAPCOREHEADER"
  field {
    name: "bcSize"
    type: "UI"
  }
  field {
    name: "bcWidth"
    type: "US"
  }
  field {
    name: "bcHeight"
    type: "US"
  }
  field {
    name: "bcPlanes"
    type: "US"
  }
  field {
    name: "bcBitCount"
    type: "US"
  }
}
struct {
  name: "BITMAPCOREHEADER"
  field {
    name: "bcSize"
    type: "UI"
  }
  field {
    name: "bcWidth"
    type: "US"
  }
  field {
    name: "bcHeight"
    type: "US"
  }
  field {
    name: "bcPlanes"
    type: "US"
  }
  field {
    name: "bcBitCount"
    type: "US"
  }
}
struct {
  name: "BITMAPCOREINFO"
  field {
    name: "bmciHeader"
    type: "RBITMAPCOREHEADER;"
  }
  field {
    name: "bmciColors"
    type: "X(ConstantArray.RGBTRIPLE [1])"
  }
}
struct {
  name: "BITMAPCOREINFO"
  field {
    name: "bmciHeader"
    type: "RBITMAPCOREHEADER;"
  }
  field {
    name: "bmciColors"
    type: "X(ConstantArray.RGBTRIPLE [1])"
  }
}
struct {
  name: "BITMAPCOREINFO"
  field {
    name: "bmciHeader"
    type: "RBITMAPCOREHEADER;"
  }
  field {
    name: "bmciColors"
    type: "X(ConstantArray.RGBTRIPLE [1])"
  }
}
struct {
  name: "DIBSECTION"
  field {
    name: "dsBm"
    type: "RBITMAP;"
  }
  field {
    name: "dsBmih"
    type: "RBITMAPINFOHEADER;"
  }
  field {
    name: "dsBitfields"
    type: "X(ConstantArray.DWORD [3])"
  }
  field {
    name: "dshSection"
    type: "*V;"
  }
  field {
    name: "dsOffset"
    type: "UI"
  }
}
struct {
  name: "DIBSECTION"
  field {
    name: "dsBm"
    type: "RBITMAP;"
  }
  field {
    name: "dsBmih"
    type: "RBITMAPINFOHEADER;"
  }
  field {
    name: "dsBitfields"
    type: "X(ConstantArray.DWORD [3])"
  }
  field {
    name: "dshSection"
    type: "*V;"
  }
  field {
    name: "dsOffset"
    type: "UI"
  }
}
struct {
  name: "DIBSECTION"
  field {
    name: "dsBm"
    type: "RBITMAP;"
  }
  field {
    name: "dsBmih"
    type: "RBITMAPINFOHEADER;"
  }
  field {
    name: "dsBitfields"
    type: "X(ConstantArray.DWORD [3])"
  }
  field {
    name: "dshSection"
    type: "*V;"
  }
  field {
    name: "dsOffset"
    type: "UI"
  }
}
struct {
  name: "_TRIVERTEX"
  field {
    name: "x"
    type: "I"
  }
  field {
    name: "y"
    type: "I"
  }
  field {
    name: "Red"
    type: "US"
  }
  field {
    name: "Green"
    type: "US"
  }
  field {
    name: "Blue"
    type: "US"
  }
  field {
    name: "Alpha"
    type: "US"
  }
}
struct {
  name: "_TRIVERTEX"
  field {
    name: "x"
    type: "I"
  }
  field {
    name: "y"
    type: "I"
  }
  field {
    name: "Red"
    type: "US"
  }
  field {
    name: "Green"
    type: "US"
  }
  field {
    name: "Blue"
    type: "US"
  }
  field {
    name: "Alpha"
    type: "US"
  }
}
struct {
  name: "_TRIVERTEX"
  field {
    name: "x"
    type: "I"
  }
  field {
    name: "y"
    type: "I"
  }
  field {
    name: "Red"
    type: "US"
  }
  field {
    name: "Green"
    type: "US"
  }
  field {
    name: "Blue"
    type: "US"
  }
  field {
    name: "Alpha"
    type: "US"
  }
}
struct {
  name: "_GRADIENT_TRIANGLE"
  field {
    name: "Vertex1"
    type: "UI"
  }
  field {
    name: "Vertex2"
    type: "UI"
  }
  field {
    name: "Vertex3"
    type: "UI"
  }
}
struct {
  name: "_GRADIENT_TRIANGLE"
  field {
    name: "Vertex1"
    type: "UI"
  }
  field {
    name: "Vertex2"
    type: "UI"
  }
  field {
    name: "Vertex3"
    type: "UI"
  }
}
struct {
  name: "_GRADIENT_TRIANGLE"
  field {
    name: "Vertex1"
    type: "UI"
  }
  field {
    name: "Vertex2"
    type: "UI"
  }
  field {
    name: "Vertex3"
    type: "UI"
  }
}
struct {
  name: "_GRADIENT_RECT"
  field {
    name: "UpperLeft"
    type: "UI"
  }
  field {
    name: "LowerRight"
    type: "UI"
  }
}
struct {
  name: "_GRADIENT_RECT"
  field {
    name: "UpperLeft"
    type: "UI"
  }
  field {
    name: "LowerRight"
    type: "UI"
  }
}
struct {
  name: "_GRADIENT_RECT"
  field {
    name: "UpperLeft"
    type: "UI"
  }
  field {
    name: "LowerRight"
    type: "UI"
  }
}
struct {
  name: "_BLENDFUNCTION"
  field {
    name: "BlendOp"
    type: "UB"
  }
  field {
    name: "BlendFlags"
    type: "UB"
  }
  field {
    name: "SourceConstantAlpha"
    type: "UB"
  }
  field {
    name: "AlphaFormat"
    type: "UB"
  }
}
struct {
  name: "_BLENDFUNCTION"
  field {
    name: "BlendOp"
    type: "UB"
  }
  field {
    name: "BlendFlags"
    type: "UB"
  }
  field {
    name: "SourceConstantAlpha"
    type: "UB"
  }
  field {
    name: "AlphaFormat"
    type: "UB"
  }
}
struct {
  name: "METAHEADER"
  field {
    name: "mtType"
    type: "US"
  }
  field {
    name: "mtHeaderSize"
    type: "US"
  }
  field {
    name: "mtVersion"
    type: "US"
  }
  field {
    name: "mtSize"
    type: "UI"
  }
  field {
    name: "mtNoObjects"
    type: "US"
  }
  field {
    name: "mtMaxRecord"
    type: "UI"
  }
  field {
    name: "mtNoParameters"
    type: "US"
  }
}
struct {
  name: "METAHEADER"
  field {
    name: "mtType"
    type: "US"
  }
  field {
    name: "mtHeaderSize"
    type: "US"
  }
  field {
    name: "mtVersion"
    type: "US"
  }
  field {
    name: "mtSize"
    type: "UI"
  }
  field {
    name: "mtNoObjects"
    type: "US"
  }
  field {
    name: "mtMaxRecord"
    type: "UI"
  }
  field {
    name: "mtNoParameters"
    type: "US"
  }
}
struct {
  name: "METAHEADER"
  field {
    name: "mtType"
    type: "US"
  }
  field {
    name: "mtHeaderSize"
    type: "US"
  }
  field {
    name: "mtVersion"
    type: "US"
  }
  field {
    name: "mtSize"
    type: "UI"
  }
  field {
    name: "mtNoObjects"
    type: "US"
  }
  field {
    name: "mtMaxRecord"
    type: "UI"
  }
  field {
    name: "mtNoParameters"
    type: "US"
  }
}
struct {
  name: "METARECORD"
  field {
    name: "rdSize"
    type: "UI"
  }
  field {
    name: "rdFunction"
    type: "US"
  }
  field {
    name: "rdParm"
    type: "X(ConstantArray.WORD [1])"
  }
}
struct {
  name: "METARECORD"
  field {
    name: "rdSize"
    type: "UI"
  }
  field {
    name: "rdFunction"
    type: "US"
  }
  field {
    name: "rdParm"
    type: "X(ConstantArray.WORD [1])"
  }
}
struct {
  name: "METARECORD"
  field {
    name: "rdSize"
    type: "UI"
  }
  field {
    name: "rdFunction"
    type: "US"
  }
  field {
    name: "rdParm"
    type: "X(ConstantArray.WORD [1])"
  }
}
struct {
  name: "HANDLETABLE"
  field {
    name: "objectHandle"
    type: "X(ConstantArray.HGDIOBJ [1])"
  }
}
struct {
  name: "HANDLETABLE"
  field {
    name: "objectHandle"
    type: "X(ConstantArray.HGDIOBJ [1])"
  }
}
struct {
  name: "HANDLETABLE"
  field {
    name: "objectHandle"
    type: "X(ConstantArray.HGDIOBJ [1])"
  }
}
struct {
  name: "METAFILEPICT"
  field {
    name: "mm"
    type: "I"
  }
  field {
    name: "xExt"
    type: "I"
  }
  field {
    name: "yExt"
    type: "I"
  }
  field {
    name: "hMF"
    type: "*RHMETAFILE__;;"
  }
}
struct {
  name: "METAFILEPICT"
  field {
    name: "mm"
    type: "I"
  }
  field {
    name: "xExt"
    type: "I"
  }
  field {
    name: "yExt"
    type: "I"
  }
  field {
    name: "hMF"
    type: "*RHMETAFILE__;;"
  }
}
struct {
  name: "ENHMETAHEADER"
  field {
    name: "iType"
    type: "UI"
  }
  field {
    name: "nSize"
    type: "UI"
  }
  field {
    name: "rclBounds"
    type: "R_RECTL;"
  }
  field {
    name: "rclFrame"
    type: "R_RECTL;"
  }
  field {
    name: "dSignature"
    type: "UI"
  }
  field {
    name: "nVersion"
    type: "UI"
  }
  field {
    name: "nBytes"
    type: "UI"
  }
  field {
    name: "nRecords"
    type: "UI"
  }
  field {
    name: "nHandles"
    type: "US"
  }
  field {
    name: "sReserved"
    type: "US"
  }
  field {
    name: "nDescription"
    type: "UI"
  }
  field {
    name: "offDescription"
    type: "UI"
  }
  field {
    name: "nPalEntries"
    type: "UI"
  }
  field {
    name: "szlDevice"
    type: "RtagSIZE;"
  }
  field {
    name: "szlMillimeters"
    type: "RtagSIZE;"
  }
  field {
    name: "cbPixelFormat"
    type: "UI"
  }
  field {
    name: "offPixelFormat"
    type: "UI"
  }
  field {
    name: "bOpenGL"
    type: "UI"
  }
  field {
    name: "szlMicrometers"
    type: "RtagSIZE;"
  }
}
struct {
  name: "ENHMETAHEADER"
  field {
    name: "iType"
    type: "UI"
  }
  field {
    name: "nSize"
    type: "UI"
  }
  field {
    name: "rclBounds"
    type: "R_RECTL;"
  }
  field {
    name: "rclFrame"
    type: "R_RECTL;"
  }
  field {
    name: "dSignature"
    type: "UI"
  }
  field {
    name: "nVersion"
    type: "UI"
  }
  field {
    name: "nBytes"
    type: "UI"
  }
  field {
    name: "nRecords"
    type: "UI"
  }
  field {
    name: "nHandles"
    type: "US"
  }
  field {
    name: "sReserved"
    type: "US"
  }
  field {
    name: "nDescription"
    type: "UI"
  }
  field {
    name: "offDescription"
    type: "UI"
  }
  field {
    name: "nPalEntries"
    type: "UI"
  }
  field {
    name: "szlDevice"
    type: "RtagSIZE;"
  }
  field {
    name: "szlMillimeters"
    type: "RtagSIZE;"
  }
  field {
    name: "cbPixelFormat"
    type: "UI"
  }
  field {
    name: "offPixelFormat"
    type: "UI"
  }
  field {
    name: "bOpenGL"
    type: "UI"
  }
  field {
    name: "szlMicrometers"
    type: "RtagSIZE;"
  }
}
struct {
  name: "ENHMETAHEADER"
  field {
    name: "iType"
    type: "UI"
  }
  field {
    name: "nSize"
    type: "UI"
  }
  field {
    name: "rclBounds"
    type: "R_RECTL;"
  }
  field {
    name: "rclFrame"
    type: "R_RECTL;"
  }
  field {
    name: "dSignature"
    type: "UI"
  }
  field {
    name: "nVersion"
    type: "UI"
  }
  field {
    name: "nBytes"
    type: "UI"
  }
  field {
    name: "nRecords"
    type: "UI"
  }
  field {
    name: "nHandles"
    type: "US"
  }
  field {
    name: "sReserved"
    type: "US"
  }
  field {
    name: "nDescription"
    type: "UI"
  }
  field {
    name: "offDescription"
    type: "UI"
  }
  field {
    name: "nPalEntries"
    type: "UI"
  }
  field {
    name: "szlDevice"
    type: "RtagSIZE;"
  }
  field {
    name: "szlMillimeters"
    type: "RtagSIZE;"
  }
  field {
    name: "cbPixelFormat"
    type: "UI"
  }
  field {
    name: "offPixelFormat"
    type: "UI"
  }
  field {
    name: "bOpenGL"
    type: "UI"
  }
  field {
    name: "szlMicrometers"
    type: "RtagSIZE;"
  }
}
struct {
  name: "ENHMETARECORD"
  field {
    name: "iType"
    type: "UI"
  }
  field {
    name: "nSize"
    type: "UI"
  }
  field {
    name: "dParm"
    type: "X(ConstantArray.DWORD [1])"
  }
}
struct {
  name: "ENHMETARECORD"
  field {
    name: "iType"
    type: "UI"
  }
  field {
    name: "nSize"
    type: "UI"
  }
  field {
    name: "dParm"
    type: "X(ConstantArray.DWORD [1])"
  }
}
struct {
  name: "EMR"
  field {
    name: "iType"
    type: "UI"
  }
  field {
    name: "nSize"
    type: "UI"
  }
}
struct {
  name: "EMR"
  field {
    name: "iType"
    type: "UI"
  }
  field {
    name: "nSize"
    type: "UI"
  }
}
struct {
  name: "EMRTEXT"
  field {
    name: "ptlReference"
    type: "R_POINTL;"
  }
  field {
    name: "nChars"
    type: "UI"
  }
  field {
    name: "offString"
    type: "UI"
  }
  field {
    name: "fOptions"
    type: "UI"
  }
  field {
    name: "rcl"
    type: "R_RECTL;"
  }
  field {
    name: "offDx"
    type: "UI"
  }
}
struct {
  name: "EMRTEXT"
  field {
    name: "ptlReference"
    type: "R_POINTL;"
  }
  field {
    name: "nChars"
    type: "UI"
  }
  field {
    name: "offString"
    type: "UI"
  }
  field {
    name: "fOptions"
    type: "UI"
  }
  field {
    name: "rcl"
    type: "R_RECTL;"
  }
  field {
    name: "offDx"
    type: "UI"
  }
}
struct {
  name: "EMRABORTPATH"
  field {
    name: "emr"
    type: "REMR;"
  }
}
struct {
  name: "EMRABORTPATH"
  field {
    name: "emr"
    type: "REMR;"
  }
}
struct {
  name: "EMRABORTPATH"
  field {
    name: "emr"
    type: "REMR;"
  }
}
struct {
  name: "EMRABORTPATH"
  field {
    name: "emr"
    type: "REMR;"
  }
}
struct {
  name: "EMRABORTPATH"
  field {
    name: "emr"
    type: "REMR;"
  }
}
struct {
  name: "EMRABORTPATH"
  field {
    name: "emr"
    type: "REMR;"
  }
}
struct {
  name: "EMRABORTPATH"
  field {
    name: "emr"
    type: "REMR;"
  }
}
struct {
  name: "EMRABORTPATH"
  field {
    name: "emr"
    type: "REMR;"
  }
}
struct {
  name: "EMRABORTPATH"
  field {
    name: "emr"
    type: "REMR;"
  }
}
struct {
  name: "EMRABORTPATH"
  field {
    name: "emr"
    type: "REMR;"
  }
}
struct {
  name: "EMRABORTPATH"
  field {
    name: "emr"
    type: "REMR;"
  }
}
struct {
  name: "EMRABORTPATH"
  field {
    name: "emr"
    type: "REMR;"
  }
}
struct {
  name: "EMRABORTPATH"
  field {
    name: "emr"
    type: "REMR;"
  }
}
struct {
  name: "EMRABORTPATH"
  field {
    name: "emr"
    type: "REMR;"
  }
}
struct {
  name: "EMRABORTPATH"
  field {
    name: "emr"
    type: "REMR;"
  }
}
struct {
  name: "EMRABORTPATH"
  field {
    name: "emr"
    type: "REMR;"
  }
}
struct {
  name: "EMRABORTPATH"
  field {
    name: "emr"
    type: "REMR;"
  }
}
struct {
  name: "EMRABORTPATH"
  field {
    name: "emr"
    type: "REMR;"
  }
}
struct {
  name: "EMRANGLEARC"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "ptlCenter"
    type: "R_POINTL;"
  }
  field {
    name: "nRadius"
    type: "UI"
  }
  field {
    name: "eStartAngle"
    type: "F"
  }
  field {
    name: "eSweepAngle"
    type: "F"
  }
}
struct {
  name: "EMRANGLEARC"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "ptlCenter"
    type: "R_POINTL;"
  }
  field {
    name: "nRadius"
    type: "UI"
  }
  field {
    name: "eStartAngle"
    type: "F"
  }
  field {
    name: "eSweepAngle"
    type: "F"
  }
}
struct {
  name: "EMRARC"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "rclBox"
    type: "R_RECTL;"
  }
  field {
    name: "ptlStart"
    type: "R_POINTL;"
  }
  field {
    name: "ptlEnd"
    type: "R_POINTL;"
  }
}
struct {
  name: "EMRARC"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "rclBox"
    type: "R_RECTL;"
  }
  field {
    name: "ptlStart"
    type: "R_POINTL;"
  }
  field {
    name: "ptlEnd"
    type: "R_POINTL;"
  }
}
struct {
  name: "EMRARC"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "rclBox"
    type: "R_RECTL;"
  }
  field {
    name: "ptlStart"
    type: "R_POINTL;"
  }
  field {
    name: "ptlEnd"
    type: "R_POINTL;"
  }
}
struct {
  name: "EMRARC"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "rclBox"
    type: "R_RECTL;"
  }
  field {
    name: "ptlStart"
    type: "R_POINTL;"
  }
  field {
    name: "ptlEnd"
    type: "R_POINTL;"
  }
}
struct {
  name: "EMRARC"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "rclBox"
    type: "R_RECTL;"
  }
  field {
    name: "ptlStart"
    type: "R_POINTL;"
  }
  field {
    name: "ptlEnd"
    type: "R_POINTL;"
  }
}
struct {
  name: "EMRARC"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "rclBox"
    type: "R_RECTL;"
  }
  field {
    name: "ptlStart"
    type: "R_POINTL;"
  }
  field {
    name: "ptlEnd"
    type: "R_POINTL;"
  }
}
struct {
  name: "EMRARC"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "rclBox"
    type: "R_RECTL;"
  }
  field {
    name: "ptlStart"
    type: "R_POINTL;"
  }
  field {
    name: "ptlEnd"
    type: "R_POINTL;"
  }
}
struct {
  name: "EMRARC"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "rclBox"
    type: "R_RECTL;"
  }
  field {
    name: "ptlStart"
    type: "R_POINTL;"
  }
  field {
    name: "ptlEnd"
    type: "R_POINTL;"
  }
}
struct {
  name: "EMRBITBLT"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "rclBounds"
    type: "R_RECTL;"
  }
  field {
    name: "xDest"
    type: "I"
  }
  field {
    name: "yDest"
    type: "I"
  }
  field {
    name: "cxDest"
    type: "I"
  }
  field {
    name: "cyDest"
    type: "I"
  }
  field {
    name: "dwRop"
    type: "UI"
  }
  field {
    name: "xSrc"
    type: "I"
  }
  field {
    name: "ySrc"
    type: "I"
  }
  field {
    name: "xformSrc"
    type: "RtagXFORM;"
  }
  field {
    name: "crBkColorSrc"
    type: "UI"
  }
  field {
    name: "iUsageSrc"
    type: "UI"
  }
  field {
    name: "offBmiSrc"
    type: "UI"
  }
  field {
    name: "cbBmiSrc"
    type: "UI"
  }
  field {
    name: "offBitsSrc"
    type: "UI"
  }
  field {
    name: "cbBitsSrc"
    type: "UI"
  }
}
struct {
  name: "EMRBITBLT"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "rclBounds"
    type: "R_RECTL;"
  }
  field {
    name: "xDest"
    type: "I"
  }
  field {
    name: "yDest"
    type: "I"
  }
  field {
    name: "cxDest"
    type: "I"
  }
  field {
    name: "cyDest"
    type: "I"
  }
  field {
    name: "dwRop"
    type: "UI"
  }
  field {
    name: "xSrc"
    type: "I"
  }
  field {
    name: "ySrc"
    type: "I"
  }
  field {
    name: "xformSrc"
    type: "RtagXFORM;"
  }
  field {
    name: "crBkColorSrc"
    type: "UI"
  }
  field {
    name: "iUsageSrc"
    type: "UI"
  }
  field {
    name: "offBmiSrc"
    type: "UI"
  }
  field {
    name: "cbBmiSrc"
    type: "UI"
  }
  field {
    name: "offBitsSrc"
    type: "UI"
  }
  field {
    name: "cbBitsSrc"
    type: "UI"
  }
}
struct {
  name: "EMRCREATEBRUSHINDIRECT"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "ihBrush"
    type: "UI"
  }
  field {
    name: "lb"
    type: "RLOGBRUSH32;"
  }
}
struct {
  name: "EMRCREATEBRUSHINDIRECT"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "ihBrush"
    type: "UI"
  }
  field {
    name: "lb"
    type: "RLOGBRUSH32;"
  }
}
struct {
  name: "EMRCREATECOLORSPACE"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "ihCS"
    type: "UI"
  }
  field {
    name: "lcs"
    type: "RtagLOGCOLORSPACEA;"
  }
}
struct {
  name: "EMRCREATECOLORSPACE"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "ihCS"
    type: "UI"
  }
  field {
    name: "lcs"
    type: "RtagLOGCOLORSPACEA;"
  }
}
struct {
  name: "EMRCREATECOLORSPACEW"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "ihCS"
    type: "UI"
  }
  field {
    name: "lcs"
    type: "RtagLOGCOLORSPACEW;"
  }
  field {
    name: "dwFlags"
    type: "UI"
  }
  field {
    name: "cbData"
    type: "UI"
  }
  field {
    name: "Data"
    type: "X(ConstantArray.BYTE [1])"
  }
}
struct {
  name: "EMRCREATECOLORSPACEW"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "ihCS"
    type: "UI"
  }
  field {
    name: "lcs"
    type: "RtagLOGCOLORSPACEW;"
  }
  field {
    name: "dwFlags"
    type: "UI"
  }
  field {
    name: "cbData"
    type: "UI"
  }
  field {
    name: "Data"
    type: "X(ConstantArray.BYTE [1])"
  }
}
struct {
  name: "EMRCREATEDIBPATTERNBRUSHPT"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "ihBrush"
    type: "UI"
  }
  field {
    name: "iUsage"
    type: "UI"
  }
  field {
    name: "offBmi"
    type: "UI"
  }
  field {
    name: "cbBmi"
    type: "UI"
  }
  field {
    name: "offBits"
    type: "UI"
  }
  field {
    name: "cbBits"
    type: "UI"
  }
}
struct {
  name: "EMRCREATEDIBPATTERNBRUSHPT"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "ihBrush"
    type: "UI"
  }
  field {
    name: "iUsage"
    type: "UI"
  }
  field {
    name: "offBmi"
    type: "UI"
  }
  field {
    name: "cbBmi"
    type: "UI"
  }
  field {
    name: "offBits"
    type: "UI"
  }
  field {
    name: "cbBits"
    type: "UI"
  }
}
struct {
  name: "EMRCREATEMONOBRUSH"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "ihBrush"
    type: "UI"
  }
  field {
    name: "iUsage"
    type: "UI"
  }
  field {
    name: "offBmi"
    type: "UI"
  }
  field {
    name: "cbBmi"
    type: "UI"
  }
  field {
    name: "offBits"
    type: "UI"
  }
  field {
    name: "cbBits"
    type: "UI"
  }
}
struct {
  name: "EMRCREATEMONOBRUSH"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "ihBrush"
    type: "UI"
  }
  field {
    name: "iUsage"
    type: "UI"
  }
  field {
    name: "offBmi"
    type: "UI"
  }
  field {
    name: "cbBmi"
    type: "UI"
  }
  field {
    name: "offBits"
    type: "UI"
  }
  field {
    name: "cbBits"
    type: "UI"
  }
}
struct {
  name: "EMRCREATEPALETTE"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "ihPal"
    type: "UI"
  }
  field {
    name: "lgpl"
    type: "RtagLOGPALETTE;"
  }
}
struct {
  name: "EMRCREATEPALETTE"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "ihPal"
    type: "UI"
  }
  field {
    name: "lgpl"
    type: "RtagLOGPALETTE;"
  }
}
struct {
  name: "EMRCREATEPEN"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "ihPen"
    type: "UI"
  }
  field {
    name: "lopn"
    type: "RLOGPEN;"
  }
}
struct {
  name: "EMRCREATEPEN"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "ihPen"
    type: "UI"
  }
  field {
    name: "lopn"
    type: "RLOGPEN;"
  }
}
struct {
  name: "EMRDELETECOLORSPACE"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "ihCS"
    type: "UI"
  }
}
struct {
  name: "EMRDELETECOLORSPACE"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "ihCS"
    type: "UI"
  }
}
struct {
  name: "EMRDELETECOLORSPACE"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "ihCS"
    type: "UI"
  }
}
struct {
  name: "EMRDELETECOLORSPACE"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "ihCS"
    type: "UI"
  }
}
struct {
  name: "EMRDELETECOLORSPACE"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "ihCS"
    type: "UI"
  }
}
struct {
  name: "EMRDELETECOLORSPACE"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "ihCS"
    type: "UI"
  }
}
struct {
  name: "EMRDELETEOBJECT"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "ihObject"
    type: "UI"
  }
}
struct {
  name: "EMRDELETEOBJECT"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "ihObject"
    type: "UI"
  }
}
struct {
  name: "EMRDELETEOBJECT"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "ihObject"
    type: "UI"
  }
}
struct {
  name: "EMRDELETEOBJECT"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "ihObject"
    type: "UI"
  }
}
struct {
  name: "EMRELLIPSE"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "rclBox"
    type: "R_RECTL;"
  }
}
struct {
  name: "EMRELLIPSE"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "rclBox"
    type: "R_RECTL;"
  }
}
struct {
  name: "EMRELLIPSE"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "rclBox"
    type: "R_RECTL;"
  }
}
struct {
  name: "EMRELLIPSE"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "rclBox"
    type: "R_RECTL;"
  }
}
struct {
  name: "EMREOF"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "nPalEntries"
    type: "UI"
  }
  field {
    name: "offPalEntries"
    type: "UI"
  }
  field {
    name: "nSizeLast"
    type: "UI"
  }
}
struct {
  name: "EMREOF"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "nPalEntries"
    type: "UI"
  }
  field {
    name: "offPalEntries"
    type: "UI"
  }
  field {
    name: "nSizeLast"
    type: "UI"
  }
}
struct {
  name: "EMREXCLUDECLIPRECT"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "rclClip"
    type: "R_RECTL;"
  }
}
struct {
  name: "EMREXCLUDECLIPRECT"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "rclClip"
    type: "R_RECTL;"
  }
}
struct {
  name: "EMREXCLUDECLIPRECT"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "rclClip"
    type: "R_RECTL;"
  }
}
struct {
  name: "EMREXCLUDECLIPRECT"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "rclClip"
    type: "R_RECTL;"
  }
}
struct {
  name: "EMREXTCREATEFONTINDIRECTW"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "ihFont"
    type: "UI"
  }
  field {
    name: "elfw"
    type: "REXTLOGFONTW;"
  }
}
struct {
  name: "EMREXTCREATEFONTINDIRECTW"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "ihFont"
    type: "UI"
  }
  field {
    name: "elfw"
    type: "REXTLOGFONTW;"
  }
}
struct {
  name: "EMREXTCREATEPEN"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "ihPen"
    type: "UI"
  }
  field {
    name: "offBmi"
    type: "UI"
  }
  field {
    name: "cbBmi"
    type: "UI"
  }
  field {
    name: "offBits"
    type: "UI"
  }
  field {
    name: "cbBits"
    type: "UI"
  }
  field {
    name: "elp"
    type: "RtagEXTLOGPEN;"
  }
}
struct {
  name: "EMREXTCREATEPEN"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "ihPen"
    type: "UI"
  }
  field {
    name: "offBmi"
    type: "UI"
  }
  field {
    name: "cbBmi"
    type: "UI"
  }
  field {
    name: "offBits"
    type: "UI"
  }
  field {
    name: "cbBits"
    type: "UI"
  }
  field {
    name: "elp"
    type: "RtagEXTLOGPEN;"
  }
}
struct {
  name: "EMREXTFLOODFILL"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "ptlStart"
    type: "R_POINTL;"
  }
  field {
    name: "crColor"
    type: "UI"
  }
  field {
    name: "iMode"
    type: "UI"
  }
}
struct {
  name: "EMREXTFLOODFILL"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "ptlStart"
    type: "R_POINTL;"
  }
  field {
    name: "crColor"
    type: "UI"
  }
  field {
    name: "iMode"
    type: "UI"
  }
}
struct {
  name: "EMREXTSELECTCLIPRGN"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "cbRgnData"
    type: "UI"
  }
  field {
    name: "iMode"
    type: "UI"
  }
  field {
    name: "RgnData"
    type: "X(ConstantArray.BYTE [1])"
  }
}
struct {
  name: "EMREXTSELECTCLIPRGN"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "cbRgnData"
    type: "UI"
  }
  field {
    name: "iMode"
    type: "UI"
  }
  field {
    name: "RgnData"
    type: "X(ConstantArray.BYTE [1])"
  }
}
struct {
  name: "EMREXTTEXTOUTA"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "rclBounds"
    type: "R_RECTL;"
  }
  field {
    name: "iGraphicsMode"
    type: "UI"
  }
  field {
    name: "exScale"
    type: "F"
  }
  field {
    name: "eyScale"
    type: "F"
  }
  field {
    name: "emrtext"
    type: "REMRTEXT;"
  }
}
struct {
  name: "EMREXTTEXTOUTA"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "rclBounds"
    type: "R_RECTL;"
  }
  field {
    name: "iGraphicsMode"
    type: "UI"
  }
  field {
    name: "exScale"
    type: "F"
  }
  field {
    name: "eyScale"
    type: "F"
  }
  field {
    name: "emrtext"
    type: "REMRTEXT;"
  }
}
struct {
  name: "EMREXTTEXTOUTA"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "rclBounds"
    type: "R_RECTL;"
  }
  field {
    name: "iGraphicsMode"
    type: "UI"
  }
  field {
    name: "exScale"
    type: "F"
  }
  field {
    name: "eyScale"
    type: "F"
  }
  field {
    name: "emrtext"
    type: "REMRTEXT;"
  }
}
struct {
  name: "EMREXTTEXTOUTA"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "rclBounds"
    type: "R_RECTL;"
  }
  field {
    name: "iGraphicsMode"
    type: "UI"
  }
  field {
    name: "exScale"
    type: "F"
  }
  field {
    name: "eyScale"
    type: "F"
  }
  field {
    name: "emrtext"
    type: "REMRTEXT;"
  }
}
struct {
  name: "EMRFILLPATH"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "rclBounds"
    type: "R_RECTL;"
  }
}
struct {
  name: "EMRFILLPATH"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "rclBounds"
    type: "R_RECTL;"
  }
}
struct {
  name: "EMRFILLPATH"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "rclBounds"
    type: "R_RECTL;"
  }
}
struct {
  name: "EMRFILLPATH"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "rclBounds"
    type: "R_RECTL;"
  }
}
struct {
  name: "EMRFILLPATH"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "rclBounds"
    type: "R_RECTL;"
  }
}
struct {
  name: "EMRFILLPATH"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "rclBounds"
    type: "R_RECTL;"
  }
}
struct {
  name: "EMRFILLRGN"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "rclBounds"
    type: "R_RECTL;"
  }
  field {
    name: "cbRgnData"
    type: "UI"
  }
  field {
    name: "ihBrush"
    type: "UI"
  }
  field {
    name: "RgnData"
    type: "X(ConstantArray.BYTE [1])"
  }
}
struct {
  name: "EMRFILLRGN"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "rclBounds"
    type: "R_RECTL;"
  }
  field {
    name: "cbRgnData"
    type: "UI"
  }
  field {
    name: "ihBrush"
    type: "UI"
  }
  field {
    name: "RgnData"
    type: "X(ConstantArray.BYTE [1])"
  }
}
struct {
  name: "EMRFORMAT"
  field {
    name: "dSignature"
    type: "UI"
  }
  field {
    name: "nVersion"
    type: "UI"
  }
  field {
    name: "cbData"
    type: "UI"
  }
  field {
    name: "offData"
    type: "UI"
  }
}
struct {
  name: "EMRFORMAT"
  field {
    name: "dSignature"
    type: "UI"
  }
  field {
    name: "nVersion"
    type: "UI"
  }
  field {
    name: "cbData"
    type: "UI"
  }
  field {
    name: "offData"
    type: "UI"
  }
}
struct {
  name: "EMRFRAMERGN"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "rclBounds"
    type: "R_RECTL;"
  }
  field {
    name: "cbRgnData"
    type: "UI"
  }
  field {
    name: "ihBrush"
    type: "UI"
  }
  field {
    name: "szlStroke"
    type: "RtagSIZE;"
  }
  field {
    name: "RgnData"
    type: "X(ConstantArray.BYTE [1])"
  }
}
struct {
  name: "EMRFRAMERGN"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "rclBounds"
    type: "R_RECTL;"
  }
  field {
    name: "cbRgnData"
    type: "UI"
  }
  field {
    name: "ihBrush"
    type: "UI"
  }
  field {
    name: "szlStroke"
    type: "RtagSIZE;"
  }
  field {
    name: "RgnData"
    type: "X(ConstantArray.BYTE [1])"
  }
}
struct {
  name: "EMRGDICOMMENT"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "cbData"
    type: "UI"
  }
  field {
    name: "Data"
    type: "X(ConstantArray.BYTE [1])"
  }
}
struct {
  name: "EMRGDICOMMENT"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "cbData"
    type: "UI"
  }
  field {
    name: "Data"
    type: "X(ConstantArray.BYTE [1])"
  }
}
struct {
  name: "EMRGRADIENTFILL"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "rclBounds"
    type: "R_RECTL;"
  }
  field {
    name: "nVer"
    type: "UI"
  }
  field {
    name: "nTri"
    type: "UI"
  }
  field {
    name: "ulMode"
    type: "UI"
  }
  field {
    name: "Ver"
    type: "X(ConstantArray.TRIVERTEX [1])"
  }
}
struct {
  name: "EMRGRADIENTFILL"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "rclBounds"
    type: "R_RECTL;"
  }
  field {
    name: "nVer"
    type: "UI"
  }
  field {
    name: "nTri"
    type: "UI"
  }
  field {
    name: "ulMode"
    type: "UI"
  }
  field {
    name: "Ver"
    type: "X(ConstantArray.TRIVERTEX [1])"
  }
}
struct {
  name: "EMRINVERTRGN"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "rclBounds"
    type: "R_RECTL;"
  }
  field {
    name: "cbRgnData"
    type: "UI"
  }
  field {
    name: "RgnData"
    type: "X(ConstantArray.BYTE [1])"
  }
}
struct {
  name: "EMRINVERTRGN"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "rclBounds"
    type: "R_RECTL;"
  }
  field {
    name: "cbRgnData"
    type: "UI"
  }
  field {
    name: "RgnData"
    type: "X(ConstantArray.BYTE [1])"
  }
}
struct {
  name: "EMRINVERTRGN"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "rclBounds"
    type: "R_RECTL;"
  }
  field {
    name: "cbRgnData"
    type: "UI"
  }
  field {
    name: "RgnData"
    type: "X(ConstantArray.BYTE [1])"
  }
}
struct {
  name: "EMRINVERTRGN"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "rclBounds"
    type: "R_RECTL;"
  }
  field {
    name: "cbRgnData"
    type: "UI"
  }
  field {
    name: "RgnData"
    type: "X(ConstantArray.BYTE [1])"
  }
}
struct {
  name: "EMRLINETO"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "ptl"
    type: "R_POINTL;"
  }
}
struct {
  name: "EMRLINETO"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "ptl"
    type: "R_POINTL;"
  }
}
struct {
  name: "EMRLINETO"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "ptl"
    type: "R_POINTL;"
  }
}
struct {
  name: "EMRLINETO"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "ptl"
    type: "R_POINTL;"
  }
}
struct {
  name: "EMRMASKBLT"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "rclBounds"
    type: "R_RECTL;"
  }
  field {
    name: "xDest"
    type: "I"
  }
  field {
    name: "yDest"
    type: "I"
  }
  field {
    name: "cxDest"
    type: "I"
  }
  field {
    name: "cyDest"
    type: "I"
  }
  field {
    name: "dwRop"
    type: "UI"
  }
  field {
    name: "xSrc"
    type: "I"
  }
  field {
    name: "ySrc"
    type: "I"
  }
  field {
    name: "xformSrc"
    type: "RtagXFORM;"
  }
  field {
    name: "crBkColorSrc"
    type: "UI"
  }
  field {
    name: "iUsageSrc"
    type: "UI"
  }
  field {
    name: "offBmiSrc"
    type: "UI"
  }
  field {
    name: "cbBmiSrc"
    type: "UI"
  }
  field {
    name: "offBitsSrc"
    type: "UI"
  }
  field {
    name: "cbBitsSrc"
    type: "UI"
  }
  field {
    name: "xMask"
    type: "I"
  }
  field {
    name: "yMask"
    type: "I"
  }
  field {
    name: "iUsageMask"
    type: "UI"
  }
  field {
    name: "offBmiMask"
    type: "UI"
  }
  field {
    name: "cbBmiMask"
    type: "UI"
  }
  field {
    name: "offBitsMask"
    type: "UI"
  }
  field {
    name: "cbBitsMask"
    type: "UI"
  }
}
struct {
  name: "EMRMASKBLT"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "rclBounds"
    type: "R_RECTL;"
  }
  field {
    name: "xDest"
    type: "I"
  }
  field {
    name: "yDest"
    type: "I"
  }
  field {
    name: "cxDest"
    type: "I"
  }
  field {
    name: "cyDest"
    type: "I"
  }
  field {
    name: "dwRop"
    type: "UI"
  }
  field {
    name: "xSrc"
    type: "I"
  }
  field {
    name: "ySrc"
    type: "I"
  }
  field {
    name: "xformSrc"
    type: "RtagXFORM;"
  }
  field {
    name: "crBkColorSrc"
    type: "UI"
  }
  field {
    name: "iUsageSrc"
    type: "UI"
  }
  field {
    name: "offBmiSrc"
    type: "UI"
  }
  field {
    name: "cbBmiSrc"
    type: "UI"
  }
  field {
    name: "offBitsSrc"
    type: "UI"
  }
  field {
    name: "cbBitsSrc"
    type: "UI"
  }
  field {
    name: "xMask"
    type: "I"
  }
  field {
    name: "yMask"
    type: "I"
  }
  field {
    name: "iUsageMask"
    type: "UI"
  }
  field {
    name: "offBmiMask"
    type: "UI"
  }
  field {
    name: "cbBmiMask"
    type: "UI"
  }
  field {
    name: "offBitsMask"
    type: "UI"
  }
  field {
    name: "cbBitsMask"
    type: "UI"
  }
}
struct {
  name: "EMRMODIFYWORLDTRANSFORM"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "xform"
    type: "RtagXFORM;"
  }
  field {
    name: "iMode"
    type: "UI"
  }
}
struct {
  name: "EMRMODIFYWORLDTRANSFORM"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "xform"
    type: "RtagXFORM;"
  }
  field {
    name: "iMode"
    type: "UI"
  }
}
struct {
  name: "EMROFFSETCLIPRGN"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "ptlOffset"
    type: "R_POINTL;"
  }
}
struct {
  name: "EMROFFSETCLIPRGN"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "ptlOffset"
    type: "R_POINTL;"
  }
}
struct {
  name: "EMRPLGBLT"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "rclBounds"
    type: "R_RECTL;"
  }
  field {
    name: "aptlDest"
    type: "X(ConstantArray.POINTL [3])"
  }
  field {
    name: "xSrc"
    type: "I"
  }
  field {
    name: "ySrc"
    type: "I"
  }
  field {
    name: "cxSrc"
    type: "I"
  }
  field {
    name: "cySrc"
    type: "I"
  }
  field {
    name: "xformSrc"
    type: "RtagXFORM;"
  }
  field {
    name: "crBkColorSrc"
    type: "UI"
  }
  field {
    name: "iUsageSrc"
    type: "UI"
  }
  field {
    name: "offBmiSrc"
    type: "UI"
  }
  field {
    name: "cbBmiSrc"
    type: "UI"
  }
  field {
    name: "offBitsSrc"
    type: "UI"
  }
  field {
    name: "cbBitsSrc"
    type: "UI"
  }
  field {
    name: "xMask"
    type: "I"
  }
  field {
    name: "yMask"
    type: "I"
  }
  field {
    name: "iUsageMask"
    type: "UI"
  }
  field {
    name: "offBmiMask"
    type: "UI"
  }
  field {
    name: "cbBmiMask"
    type: "UI"
  }
  field {
    name: "offBitsMask"
    type: "UI"
  }
  field {
    name: "cbBitsMask"
    type: "UI"
  }
}
struct {
  name: "EMRPLGBLT"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "rclBounds"
    type: "R_RECTL;"
  }
  field {
    name: "aptlDest"
    type: "X(ConstantArray.POINTL [3])"
  }
  field {
    name: "xSrc"
    type: "I"
  }
  field {
    name: "ySrc"
    type: "I"
  }
  field {
    name: "cxSrc"
    type: "I"
  }
  field {
    name: "cySrc"
    type: "I"
  }
  field {
    name: "xformSrc"
    type: "RtagXFORM;"
  }
  field {
    name: "crBkColorSrc"
    type: "UI"
  }
  field {
    name: "iUsageSrc"
    type: "UI"
  }
  field {
    name: "offBmiSrc"
    type: "UI"
  }
  field {
    name: "cbBmiSrc"
    type: "UI"
  }
  field {
    name: "offBitsSrc"
    type: "UI"
  }
  field {
    name: "cbBitsSrc"
    type: "UI"
  }
  field {
    name: "xMask"
    type: "I"
  }
  field {
    name: "yMask"
    type: "I"
  }
  field {
    name: "iUsageMask"
    type: "UI"
  }
  field {
    name: "offBmiMask"
    type: "UI"
  }
  field {
    name: "cbBmiMask"
    type: "UI"
  }
  field {
    name: "offBitsMask"
    type: "UI"
  }
  field {
    name: "cbBitsMask"
    type: "UI"
  }
}
struct {
  name: "EMRPOLYLINE"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "rclBounds"
    type: "R_RECTL;"
  }
  field {
    name: "cptl"
    type: "UI"
  }
  field {
    name: "aptl"
    type: "X(ConstantArray.POINTL [1])"
  }
}
struct {
  name: "EMRPOLYLINE"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "rclBounds"
    type: "R_RECTL;"
  }
  field {
    name: "cptl"
    type: "UI"
  }
  field {
    name: "aptl"
    type: "X(ConstantArray.POINTL [1])"
  }
}
struct {
  name: "EMRPOLYLINE"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "rclBounds"
    type: "R_RECTL;"
  }
  field {
    name: "cptl"
    type: "UI"
  }
  field {
    name: "aptl"
    type: "X(ConstantArray.POINTL [1])"
  }
}
struct {
  name: "EMRPOLYLINE"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "rclBounds"
    type: "R_RECTL;"
  }
  field {
    name: "cptl"
    type: "UI"
  }
  field {
    name: "aptl"
    type: "X(ConstantArray.POINTL [1])"
  }
}
struct {
  name: "EMRPOLYLINE"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "rclBounds"
    type: "R_RECTL;"
  }
  field {
    name: "cptl"
    type: "UI"
  }
  field {
    name: "aptl"
    type: "X(ConstantArray.POINTL [1])"
  }
}
struct {
  name: "EMRPOLYLINE"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "rclBounds"
    type: "R_RECTL;"
  }
  field {
    name: "cptl"
    type: "UI"
  }
  field {
    name: "aptl"
    type: "X(ConstantArray.POINTL [1])"
  }
}
struct {
  name: "EMRPOLYLINE"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "rclBounds"
    type: "R_RECTL;"
  }
  field {
    name: "cptl"
    type: "UI"
  }
  field {
    name: "aptl"
    type: "X(ConstantArray.POINTL [1])"
  }
}
struct {
  name: "EMRPOLYLINE"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "rclBounds"
    type: "R_RECTL;"
  }
  field {
    name: "cptl"
    type: "UI"
  }
  field {
    name: "aptl"
    type: "X(ConstantArray.POINTL [1])"
  }
}
struct {
  name: "EMRPOLYLINE"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "rclBounds"
    type: "R_RECTL;"
  }
  field {
    name: "cptl"
    type: "UI"
  }
  field {
    name: "aptl"
    type: "X(ConstantArray.POINTL [1])"
  }
}
struct {
  name: "EMRPOLYLINE"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "rclBounds"
    type: "R_RECTL;"
  }
  field {
    name: "cptl"
    type: "UI"
  }
  field {
    name: "aptl"
    type: "X(ConstantArray.POINTL [1])"
  }
}
struct {
  name: "EMRPOLYLINE16"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "rclBounds"
    type: "R_RECTL;"
  }
  field {
    name: "cpts"
    type: "UI"
  }
  field {
    name: "apts"
    type: "X(ConstantArray.POINTS [1])"
  }
}
struct {
  name: "EMRPOLYLINE16"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "rclBounds"
    type: "R_RECTL;"
  }
  field {
    name: "cpts"
    type: "UI"
  }
  field {
    name: "apts"
    type: "X(ConstantArray.POINTS [1])"
  }
}
struct {
  name: "EMRPOLYLINE16"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "rclBounds"
    type: "R_RECTL;"
  }
  field {
    name: "cpts"
    type: "UI"
  }
  field {
    name: "apts"
    type: "X(ConstantArray.POINTS [1])"
  }
}
struct {
  name: "EMRPOLYLINE16"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "rclBounds"
    type: "R_RECTL;"
  }
  field {
    name: "cpts"
    type: "UI"
  }
  field {
    name: "apts"
    type: "X(ConstantArray.POINTS [1])"
  }
}
struct {
  name: "EMRPOLYLINE16"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "rclBounds"
    type: "R_RECTL;"
  }
  field {
    name: "cpts"
    type: "UI"
  }
  field {
    name: "apts"
    type: "X(ConstantArray.POINTS [1])"
  }
}
struct {
  name: "EMRPOLYLINE16"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "rclBounds"
    type: "R_RECTL;"
  }
  field {
    name: "cpts"
    type: "UI"
  }
  field {
    name: "apts"
    type: "X(ConstantArray.POINTS [1])"
  }
}
struct {
  name: "EMRPOLYLINE16"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "rclBounds"
    type: "R_RECTL;"
  }
  field {
    name: "cpts"
    type: "UI"
  }
  field {
    name: "apts"
    type: "X(ConstantArray.POINTS [1])"
  }
}
struct {
  name: "EMRPOLYLINE16"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "rclBounds"
    type: "R_RECTL;"
  }
  field {
    name: "cpts"
    type: "UI"
  }
  field {
    name: "apts"
    type: "X(ConstantArray.POINTS [1])"
  }
}
struct {
  name: "EMRPOLYLINE16"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "rclBounds"
    type: "R_RECTL;"
  }
  field {
    name: "cpts"
    type: "UI"
  }
  field {
    name: "apts"
    type: "X(ConstantArray.POINTS [1])"
  }
}
struct {
  name: "EMRPOLYLINE16"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "rclBounds"
    type: "R_RECTL;"
  }
  field {
    name: "cpts"
    type: "UI"
  }
  field {
    name: "apts"
    type: "X(ConstantArray.POINTS [1])"
  }
}
struct {
  name: "EMRPOLYDRAW16"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "rclBounds"
    type: "R_RECTL;"
  }
  field {
    name: "cpts"
    type: "UI"
  }
  field {
    name: "apts"
    type: "X(ConstantArray.POINTS [1])"
  }
  field {
    name: "abTypes"
    type: "X(ConstantArray.BYTE [1])"
  }
}
struct {
  name: "EMRPOLYDRAW16"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "rclBounds"
    type: "R_RECTL;"
  }
  field {
    name: "cpts"
    type: "UI"
  }
  field {
    name: "apts"
    type: "X(ConstantArray.POINTS [1])"
  }
  field {
    name: "abTypes"
    type: "X(ConstantArray.BYTE [1])"
  }
}
struct {
  name: "EMRPOLYPOLYLINE16"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "rclBounds"
    type: "R_RECTL;"
  }
  field {
    name: "nPolys"
    type: "UI"
  }
  field {
    name: "cpts"
    type: "UI"
  }
  field {
    name: "aPolyCounts"
    type: "X(ConstantArray.DWORD [1])"
  }
  field {
    name: "apts"
    type: "X(ConstantArray.POINTS [1])"
  }
}
struct {
  name: "EMRPOLYPOLYLINE16"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "rclBounds"
    type: "R_RECTL;"
  }
  field {
    name: "nPolys"
    type: "UI"
  }
  field {
    name: "cpts"
    type: "UI"
  }
  field {
    name: "aPolyCounts"
    type: "X(ConstantArray.DWORD [1])"
  }
  field {
    name: "apts"
    type: "X(ConstantArray.POINTS [1])"
  }
}
struct {
  name: "EMRPOLYPOLYLINE16"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "rclBounds"
    type: "R_RECTL;"
  }
  field {
    name: "nPolys"
    type: "UI"
  }
  field {
    name: "cpts"
    type: "UI"
  }
  field {
    name: "aPolyCounts"
    type: "X(ConstantArray.DWORD [1])"
  }
  field {
    name: "apts"
    type: "X(ConstantArray.POINTS [1])"
  }
}
struct {
  name: "EMRPOLYPOLYLINE16"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "rclBounds"
    type: "R_RECTL;"
  }
  field {
    name: "nPolys"
    type: "UI"
  }
  field {
    name: "cpts"
    type: "UI"
  }
  field {
    name: "aPolyCounts"
    type: "X(ConstantArray.DWORD [1])"
  }
  field {
    name: "apts"
    type: "X(ConstantArray.POINTS [1])"
  }
}
struct {
  name: "EMRPOLYDRAW"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "rclBounds"
    type: "R_RECTL;"
  }
  field {
    name: "cptl"
    type: "UI"
  }
  field {
    name: "aptl"
    type: "X(ConstantArray.POINTL [1])"
  }
  field {
    name: "abTypes"
    type: "X(ConstantArray.BYTE [1])"
  }
}
struct {
  name: "EMRPOLYDRAW"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "rclBounds"
    type: "R_RECTL;"
  }
  field {
    name: "cptl"
    type: "UI"
  }
  field {
    name: "aptl"
    type: "X(ConstantArray.POINTL [1])"
  }
  field {
    name: "abTypes"
    type: "X(ConstantArray.BYTE [1])"
  }
}
struct {
  name: "EMRPOLYPOLYLINE"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "rclBounds"
    type: "R_RECTL;"
  }
  field {
    name: "nPolys"
    type: "UI"
  }
  field {
    name: "cptl"
    type: "UI"
  }
  field {
    name: "aPolyCounts"
    type: "X(ConstantArray.DWORD [1])"
  }
  field {
    name: "aptl"
    type: "X(ConstantArray.POINTL [1])"
  }
}
struct {
  name: "EMRPOLYPOLYLINE"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "rclBounds"
    type: "R_RECTL;"
  }
  field {
    name: "nPolys"
    type: "UI"
  }
  field {
    name: "cptl"
    type: "UI"
  }
  field {
    name: "aPolyCounts"
    type: "X(ConstantArray.DWORD [1])"
  }
  field {
    name: "aptl"
    type: "X(ConstantArray.POINTL [1])"
  }
}
struct {
  name: "EMRPOLYPOLYLINE"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "rclBounds"
    type: "R_RECTL;"
  }
  field {
    name: "nPolys"
    type: "UI"
  }
  field {
    name: "cptl"
    type: "UI"
  }
  field {
    name: "aPolyCounts"
    type: "X(ConstantArray.DWORD [1])"
  }
  field {
    name: "aptl"
    type: "X(ConstantArray.POINTL [1])"
  }
}
struct {
  name: "EMRPOLYPOLYLINE"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "rclBounds"
    type: "R_RECTL;"
  }
  field {
    name: "nPolys"
    type: "UI"
  }
  field {
    name: "cptl"
    type: "UI"
  }
  field {
    name: "aPolyCounts"
    type: "X(ConstantArray.DWORD [1])"
  }
  field {
    name: "aptl"
    type: "X(ConstantArray.POINTL [1])"
  }
}
struct {
  name: "EMRPOLYTEXTOUTA"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "rclBounds"
    type: "R_RECTL;"
  }
  field {
    name: "iGraphicsMode"
    type: "UI"
  }
  field {
    name: "exScale"
    type: "F"
  }
  field {
    name: "eyScale"
    type: "F"
  }
  field {
    name: "cStrings"
    type: "I"
  }
  field {
    name: "aemrtext"
    type: "X(ConstantArray.EMRTEXT [1])"
  }
}
struct {
  name: "EMRPOLYTEXTOUTA"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "rclBounds"
    type: "R_RECTL;"
  }
  field {
    name: "iGraphicsMode"
    type: "UI"
  }
  field {
    name: "exScale"
    type: "F"
  }
  field {
    name: "eyScale"
    type: "F"
  }
  field {
    name: "cStrings"
    type: "I"
  }
  field {
    name: "aemrtext"
    type: "X(ConstantArray.EMRTEXT [1])"
  }
}
struct {
  name: "EMRPOLYTEXTOUTA"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "rclBounds"
    type: "R_RECTL;"
  }
  field {
    name: "iGraphicsMode"
    type: "UI"
  }
  field {
    name: "exScale"
    type: "F"
  }
  field {
    name: "eyScale"
    type: "F"
  }
  field {
    name: "cStrings"
    type: "I"
  }
  field {
    name: "aemrtext"
    type: "X(ConstantArray.EMRTEXT [1])"
  }
}
struct {
  name: "EMRPOLYTEXTOUTA"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "rclBounds"
    type: "R_RECTL;"
  }
  field {
    name: "iGraphicsMode"
    type: "UI"
  }
  field {
    name: "exScale"
    type: "F"
  }
  field {
    name: "eyScale"
    type: "F"
  }
  field {
    name: "cStrings"
    type: "I"
  }
  field {
    name: "aemrtext"
    type: "X(ConstantArray.EMRTEXT [1])"
  }
}
struct {
  name: "EMRRESIZEPALETTE"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "ihPal"
    type: "UI"
  }
  field {
    name: "cEntries"
    type: "UI"
  }
}
struct {
  name: "EMRRESIZEPALETTE"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "ihPal"
    type: "UI"
  }
  field {
    name: "cEntries"
    type: "UI"
  }
}
struct {
  name: "EMRRESTOREDC"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "iRelative"
    type: "I"
  }
}
struct {
  name: "EMRRESTOREDC"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "iRelative"
    type: "I"
  }
}
struct {
  name: "EMRROUNDRECT"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "rclBox"
    type: "R_RECTL;"
  }
  field {
    name: "szlCorner"
    type: "RtagSIZE;"
  }
}
struct {
  name: "EMRROUNDRECT"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "rclBox"
    type: "R_RECTL;"
  }
  field {
    name: "szlCorner"
    type: "RtagSIZE;"
  }
}
struct {
  name: "EMRSCALEVIEWPORTEXTEX"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "xNum"
    type: "I"
  }
  field {
    name: "xDenom"
    type: "I"
  }
  field {
    name: "yNum"
    type: "I"
  }
  field {
    name: "yDenom"
    type: "I"
  }
}
struct {
  name: "EMRSCALEVIEWPORTEXTEX"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "xNum"
    type: "I"
  }
  field {
    name: "xDenom"
    type: "I"
  }
  field {
    name: "yNum"
    type: "I"
  }
  field {
    name: "yDenom"
    type: "I"
  }
}
struct {
  name: "EMRSCALEVIEWPORTEXTEX"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "xNum"
    type: "I"
  }
  field {
    name: "xDenom"
    type: "I"
  }
  field {
    name: "yNum"
    type: "I"
  }
  field {
    name: "yDenom"
    type: "I"
  }
}
struct {
  name: "EMRSCALEVIEWPORTEXTEX"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "xNum"
    type: "I"
  }
  field {
    name: "xDenom"
    type: "I"
  }
  field {
    name: "yNum"
    type: "I"
  }
  field {
    name: "yDenom"
    type: "I"
  }
}
struct {
  name: "EMRSELECTCLIPPATH"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "iMode"
    type: "UI"
  }
}
struct {
  name: "EMRSELECTCLIPPATH"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "iMode"
    type: "UI"
  }
}
struct {
  name: "EMRSELECTCLIPPATH"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "iMode"
    type: "UI"
  }
}
struct {
  name: "EMRSELECTCLIPPATH"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "iMode"
    type: "UI"
  }
}
struct {
  name: "EMRSELECTCLIPPATH"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "iMode"
    type: "UI"
  }
}
struct {
  name: "EMRSELECTCLIPPATH"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "iMode"
    type: "UI"
  }
}
struct {
  name: "EMRSELECTCLIPPATH"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "iMode"
    type: "UI"
  }
}
struct {
  name: "EMRSELECTCLIPPATH"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "iMode"
    type: "UI"
  }
}
struct {
  name: "EMRSELECTCLIPPATH"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "iMode"
    type: "UI"
  }
}
struct {
  name: "EMRSELECTCLIPPATH"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "iMode"
    type: "UI"
  }
}
struct {
  name: "EMRSELECTCLIPPATH"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "iMode"
    type: "UI"
  }
}
struct {
  name: "EMRSELECTCLIPPATH"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "iMode"
    type: "UI"
  }
}
struct {
  name: "EMRSELECTCLIPPATH"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "iMode"
    type: "UI"
  }
}
struct {
  name: "EMRSELECTCLIPPATH"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "iMode"
    type: "UI"
  }
}
struct {
  name: "EMRSELECTCLIPPATH"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "iMode"
    type: "UI"
  }
}
struct {
  name: "EMRSELECTCLIPPATH"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "iMode"
    type: "UI"
  }
}
struct {
  name: "EMRSELECTCLIPPATH"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "iMode"
    type: "UI"
  }
}
struct {
  name: "EMRSELECTCLIPPATH"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "iMode"
    type: "UI"
  }
}
struct {
  name: "EMRSELECTPALETTE"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "ihPal"
    type: "UI"
  }
}
struct {
  name: "EMRSELECTPALETTE"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "ihPal"
    type: "UI"
  }
}
struct {
  name: "EMRSETARCDIRECTION"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "iArcDirection"
    type: "UI"
  }
}
struct {
  name: "EMRSETARCDIRECTION"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "iArcDirection"
    type: "UI"
  }
}
struct {
  name: "EMRSETBKCOLOR"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "crColor"
    type: "UI"
  }
}
struct {
  name: "EMRSETBKCOLOR"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "crColor"
    type: "UI"
  }
}
struct {
  name: "EMRSETBKCOLOR"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "crColor"
    type: "UI"
  }
}
struct {
  name: "EMRSETBKCOLOR"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "crColor"
    type: "UI"
  }
}
struct {
  name: "EMRSETBRUSHORGEX"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "ptlOrigin"
    type: "R_POINTL;"
  }
}
struct {
  name: "EMRSETBRUSHORGEX"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "ptlOrigin"
    type: "R_POINTL;"
  }
}
struct {
  name: "EMRSETBRUSHORGEX"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "ptlOrigin"
    type: "R_POINTL;"
  }
}
struct {
  name: "EMRSETBRUSHORGEX"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "ptlOrigin"
    type: "R_POINTL;"
  }
}
struct {
  name: "EMRSETBRUSHORGEX"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "ptlOrigin"
    type: "R_POINTL;"
  }
}
struct {
  name: "EMRSETBRUSHORGEX"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "ptlOrigin"
    type: "R_POINTL;"
  }
}
struct {
  name: "EMRSETCOLORADJUSTMENT"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "ColorAdjustment"
    type: "RtagCOLORADJUSTMENT;"
  }
}
struct {
  name: "EMRSETCOLORADJUSTMENT"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "ColorAdjustment"
    type: "RtagCOLORADJUSTMENT;"
  }
}
struct {
  name: "EMRSETDIBITSTODEVICE"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "rclBounds"
    type: "R_RECTL;"
  }
  field {
    name: "xDest"
    type: "I"
  }
  field {
    name: "yDest"
    type: "I"
  }
  field {
    name: "xSrc"
    type: "I"
  }
  field {
    name: "ySrc"
    type: "I"
  }
  field {
    name: "cxSrc"
    type: "I"
  }
  field {
    name: "cySrc"
    type: "I"
  }
  field {
    name: "offBmiSrc"
    type: "UI"
  }
  field {
    name: "cbBmiSrc"
    type: "UI"
  }
  field {
    name: "offBitsSrc"
    type: "UI"
  }
  field {
    name: "cbBitsSrc"
    type: "UI"
  }
  field {
    name: "iUsageSrc"
    type: "UI"
  }
  field {
    name: "iStartScan"
    type: "UI"
  }
  field {
    name: "cScans"
    type: "UI"
  }
}
struct {
  name: "EMRSETDIBITSTODEVICE"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "rclBounds"
    type: "R_RECTL;"
  }
  field {
    name: "xDest"
    type: "I"
  }
  field {
    name: "yDest"
    type: "I"
  }
  field {
    name: "xSrc"
    type: "I"
  }
  field {
    name: "ySrc"
    type: "I"
  }
  field {
    name: "cxSrc"
    type: "I"
  }
  field {
    name: "cySrc"
    type: "I"
  }
  field {
    name: "offBmiSrc"
    type: "UI"
  }
  field {
    name: "cbBmiSrc"
    type: "UI"
  }
  field {
    name: "offBitsSrc"
    type: "UI"
  }
  field {
    name: "cbBitsSrc"
    type: "UI"
  }
  field {
    name: "iUsageSrc"
    type: "UI"
  }
  field {
    name: "iStartScan"
    type: "UI"
  }
  field {
    name: "cScans"
    type: "UI"
  }
}
struct {
  name: "EMRSETMAPPERFLAGS"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "dwFlags"
    type: "UI"
  }
}
struct {
  name: "EMRSETMAPPERFLAGS"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "dwFlags"
    type: "UI"
  }
}
struct {
  name: "EMRSETMITERLIMIT"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "eMiterLimit"
    type: "F"
  }
}
struct {
  name: "EMRSETMITERLIMIT"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "eMiterLimit"
    type: "F"
  }
}
struct {
  name: "EMRSETPALETTEENTRIES"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "ihPal"
    type: "UI"
  }
  field {
    name: "iStart"
    type: "UI"
  }
  field {
    name: "cEntries"
    type: "UI"
  }
  field {
    name: "aPalEntries"
    type: "X(ConstantArray.PALETTEENTRY [1])"
  }
}
struct {
  name: "EMRSETPALETTEENTRIES"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "ihPal"
    type: "UI"
  }
  field {
    name: "iStart"
    type: "UI"
  }
  field {
    name: "cEntries"
    type: "UI"
  }
  field {
    name: "aPalEntries"
    type: "X(ConstantArray.PALETTEENTRY [1])"
  }
}
struct {
  name: "EMRSETPIXELV"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "ptlPixel"
    type: "R_POINTL;"
  }
  field {
    name: "crColor"
    type: "UI"
  }
}
struct {
  name: "EMRSETPIXELV"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "ptlPixel"
    type: "R_POINTL;"
  }
  field {
    name: "crColor"
    type: "UI"
  }
}
struct {
  name: "EMRSETVIEWPORTEXTEX"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "szlExtent"
    type: "RtagSIZE;"
  }
}
struct {
  name: "EMRSETVIEWPORTEXTEX"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "szlExtent"
    type: "RtagSIZE;"
  }
}
struct {
  name: "EMRSETVIEWPORTEXTEX"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "szlExtent"
    type: "RtagSIZE;"
  }
}
struct {
  name: "EMRSETVIEWPORTEXTEX"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "szlExtent"
    type: "RtagSIZE;"
  }
}
struct {
  name: "EMRSETWORLDTRANSFORM"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "xform"
    type: "RtagXFORM;"
  }
}
struct {
  name: "EMRSETWORLDTRANSFORM"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "xform"
    type: "RtagXFORM;"
  }
}
struct {
  name: "EMRSTRETCHBLT"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "rclBounds"
    type: "R_RECTL;"
  }
  field {
    name: "xDest"
    type: "I"
  }
  field {
    name: "yDest"
    type: "I"
  }
  field {
    name: "cxDest"
    type: "I"
  }
  field {
    name: "cyDest"
    type: "I"
  }
  field {
    name: "dwRop"
    type: "UI"
  }
  field {
    name: "xSrc"
    type: "I"
  }
  field {
    name: "ySrc"
    type: "I"
  }
  field {
    name: "xformSrc"
    type: "RtagXFORM;"
  }
  field {
    name: "crBkColorSrc"
    type: "UI"
  }
  field {
    name: "iUsageSrc"
    type: "UI"
  }
  field {
    name: "offBmiSrc"
    type: "UI"
  }
  field {
    name: "cbBmiSrc"
    type: "UI"
  }
  field {
    name: "offBitsSrc"
    type: "UI"
  }
  field {
    name: "cbBitsSrc"
    type: "UI"
  }
  field {
    name: "cxSrc"
    type: "I"
  }
  field {
    name: "cySrc"
    type: "I"
  }
}
struct {
  name: "EMRSTRETCHBLT"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "rclBounds"
    type: "R_RECTL;"
  }
  field {
    name: "xDest"
    type: "I"
  }
  field {
    name: "yDest"
    type: "I"
  }
  field {
    name: "cxDest"
    type: "I"
  }
  field {
    name: "cyDest"
    type: "I"
  }
  field {
    name: "dwRop"
    type: "UI"
  }
  field {
    name: "xSrc"
    type: "I"
  }
  field {
    name: "ySrc"
    type: "I"
  }
  field {
    name: "xformSrc"
    type: "RtagXFORM;"
  }
  field {
    name: "crBkColorSrc"
    type: "UI"
  }
  field {
    name: "iUsageSrc"
    type: "UI"
  }
  field {
    name: "offBmiSrc"
    type: "UI"
  }
  field {
    name: "cbBmiSrc"
    type: "UI"
  }
  field {
    name: "offBitsSrc"
    type: "UI"
  }
  field {
    name: "cbBitsSrc"
    type: "UI"
  }
  field {
    name: "cxSrc"
    type: "I"
  }
  field {
    name: "cySrc"
    type: "I"
  }
}
struct {
  name: "EMRALPHABLEND"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "rclBounds"
    type: "R_RECTL;"
  }
  field {
    name: "xDest"
    type: "I"
  }
  field {
    name: "yDest"
    type: "I"
  }
  field {
    name: "cxDest"
    type: "I"
  }
  field {
    name: "cyDest"
    type: "I"
  }
  field {
    name: "dwRop"
    type: "UI"
  }
  field {
    name: "xSrc"
    type: "I"
  }
  field {
    name: "ySrc"
    type: "I"
  }
  field {
    name: "xformSrc"
    type: "RtagXFORM;"
  }
  field {
    name: "crBkColorSrc"
    type: "UI"
  }
  field {
    name: "iUsageSrc"
    type: "UI"
  }
  field {
    name: "offBmiSrc"
    type: "UI"
  }
  field {
    name: "cbBmiSrc"
    type: "UI"
  }
  field {
    name: "offBitsSrc"
    type: "UI"
  }
  field {
    name: "cbBitsSrc"
    type: "UI"
  }
  field {
    name: "cxSrc"
    type: "I"
  }
  field {
    name: "cySrc"
    type: "I"
  }
}
struct {
  name: "EMRALPHABLEND"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "rclBounds"
    type: "R_RECTL;"
  }
  field {
    name: "xDest"
    type: "I"
  }
  field {
    name: "yDest"
    type: "I"
  }
  field {
    name: "cxDest"
    type: "I"
  }
  field {
    name: "cyDest"
    type: "I"
  }
  field {
    name: "dwRop"
    type: "UI"
  }
  field {
    name: "xSrc"
    type: "I"
  }
  field {
    name: "ySrc"
    type: "I"
  }
  field {
    name: "xformSrc"
    type: "RtagXFORM;"
  }
  field {
    name: "crBkColorSrc"
    type: "UI"
  }
  field {
    name: "iUsageSrc"
    type: "UI"
  }
  field {
    name: "offBmiSrc"
    type: "UI"
  }
  field {
    name: "cbBmiSrc"
    type: "UI"
  }
  field {
    name: "offBitsSrc"
    type: "UI"
  }
  field {
    name: "cbBitsSrc"
    type: "UI"
  }
  field {
    name: "cxSrc"
    type: "I"
  }
  field {
    name: "cySrc"
    type: "I"
  }
}
struct {
  name: "EMRSTRETCHDIBITS"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "rclBounds"
    type: "R_RECTL;"
  }
  field {
    name: "xDest"
    type: "I"
  }
  field {
    name: "yDest"
    type: "I"
  }
  field {
    name: "xSrc"
    type: "I"
  }
  field {
    name: "ySrc"
    type: "I"
  }
  field {
    name: "cxSrc"
    type: "I"
  }
  field {
    name: "cySrc"
    type: "I"
  }
  field {
    name: "offBmiSrc"
    type: "UI"
  }
  field {
    name: "cbBmiSrc"
    type: "UI"
  }
  field {
    name: "offBitsSrc"
    type: "UI"
  }
  field {
    name: "cbBitsSrc"
    type: "UI"
  }
  field {
    name: "iUsageSrc"
    type: "UI"
  }
  field {
    name: "dwRop"
    type: "UI"
  }
  field {
    name: "cxDest"
    type: "I"
  }
  field {
    name: "cyDest"
    type: "I"
  }
}
struct {
  name: "EMRSTRETCHDIBITS"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "rclBounds"
    type: "R_RECTL;"
  }
  field {
    name: "xDest"
    type: "I"
  }
  field {
    name: "yDest"
    type: "I"
  }
  field {
    name: "xSrc"
    type: "I"
  }
  field {
    name: "ySrc"
    type: "I"
  }
  field {
    name: "cxSrc"
    type: "I"
  }
  field {
    name: "cySrc"
    type: "I"
  }
  field {
    name: "offBmiSrc"
    type: "UI"
  }
  field {
    name: "cbBmiSrc"
    type: "UI"
  }
  field {
    name: "offBitsSrc"
    type: "UI"
  }
  field {
    name: "cbBitsSrc"
    type: "UI"
  }
  field {
    name: "iUsageSrc"
    type: "UI"
  }
  field {
    name: "dwRop"
    type: "UI"
  }
  field {
    name: "cxDest"
    type: "I"
  }
  field {
    name: "cyDest"
    type: "I"
  }
}
struct {
  name: "EMRPIXELFORMAT"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "pfd"
    type: "RtagPIXELFORMATDESCRIPTOR;"
  }
}
struct {
  name: "EMRPIXELFORMAT"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "pfd"
    type: "RtagPIXELFORMATDESCRIPTOR;"
  }
}
struct {
  name: "tagEMRGLSRECORD"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "cbData"
    type: "UI"
  }
  field {
    name: "Data"
    type: "X(ConstantArray.BYTE [1])"
  }
}
struct {
  name: "tagEMRGLSRECORD"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "cbData"
    type: "UI"
  }
  field {
    name: "Data"
    type: "X(ConstantArray.BYTE [1])"
  }
}
struct {
  name: "EMRGLSBOUNDEDRECORD"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "rclBounds"
    type: "R_RECTL;"
  }
  field {
    name: "cbData"
    type: "UI"
  }
  field {
    name: "Data"
    type: "X(ConstantArray.BYTE [1])"
  }
}
struct {
  name: "EMRGLSBOUNDEDRECORD"
  field {
    name: "emr"
    type: "REMR;"
  }
  field {
    name: "rclBounds"
    type: "R_RECTL;"
  }
  field {
    name: "cbData"
    type: "UI"
  }
  field {
    name: "Data"
    type: "X(ConstantArray.BYTE [1])"
  }
}
struct {
  name: "DEVMODEA"
  field {
    name: "dmDeviceName"
    type: "X(ConstantArray.BYTE [32])"
  }
  field {
    name: "dmSpecVersion"
    type: "US"
  }
  field {
    name: "dmDriverVersion"
    type: "US"
  }
  field {
    name: "dmSize"
    type: "US"
  }
  field {
    name: "dmDriverExtra"
    type: "US"
  }
  field {
    name: "dmFields"
    type: "UI"
  }
  field {
    name: "dmColor"
    type: "S"
  }
  field {
    name: "dmDuplex"
    type: "S"
  }
  field {
    name: "dmYResolution"
    type: "S"
  }
  field {
    name: "dmTTOption"
    type: "S"
  }
  field {
    name: "dmCollate"
    type: "S"
  }
  field {
    name: "dmFormName"
    type: "X(ConstantArray.BYTE [32])"
  }
  field {
    name: "dmLogPixels"
    type: "US"
  }
  field {
    name: "dmBitsPerPel"
    type: "UI"
  }
  field {
    name: "dmPelsWidth"
    type: "UI"
  }
  field {
    name: "dmPelsHeight"
    type: "UI"
  }
  field {
    name: "dmDisplayFrequency"
    type: "UI"
  }
  field {
    name: "dmICMMethod"
    type: "UI"
  }
  field {
    name: "dmICMIntent"
    type: "UI"
  }
  field {
    name: "dmMediaType"
    type: "UI"
  }
  field {
    name: "dmDitherType"
    type: "UI"
  }
  field {
    name: "dmReserved1"
    type: "UI"
  }
  field {
    name: "dmReserved2"
    type: "UI"
  }
  field {
    name: "dmPanningWidth"
    type: "UI"
  }
  field {
    name: "dmPanningHeight"
    type: "UI"
  }
}
struct {
  name: "struct DEVMODEA::(anonymous at /usr/local/include/wine/windows/wingdi.h:2895:7)"
  field {
    name: "dmOrientation"
    type: "S"
  }
  field {
    name: "dmPaperSize"
    type: "S"
  }
  field {
    name: "dmPaperLength"
    type: "S"
  }
  field {
    name: "dmPaperWidth"
    type: "S"
  }
  field {
    name: "dmScale"
    type: "S"
  }
  field {
    name: "dmCopies"
    type: "S"
  }
  field {
    name: "dmDefaultSource"
    type: "S"
  }
  field {
    name: "dmPrintQuality"
    type: "S"
  }
}
struct {
  name: "struct DEVMODEA::(anonymous at /usr/local/include/wine/windows/wingdi.h:2905:7)"
  field {
    name: "dmPosition"
    type: "R_POINTL;"
  }
  field {
    name: "dmDisplayOrientation"
    type: "UI"
  }
  field {
    name: "dmDisplayFixedOutput"
    type: "UI"
  }
}
struct {
  name: "DEVMODEA"
  field {
    name: "dmDeviceName"
    type: "X(ConstantArray.BYTE [32])"
  }
  field {
    name: "dmSpecVersion"
    type: "US"
  }
  field {
    name: "dmDriverVersion"
    type: "US"
  }
  field {
    name: "dmSize"
    type: "US"
  }
  field {
    name: "dmDriverExtra"
    type: "US"
  }
  field {
    name: "dmFields"
    type: "UI"
  }
  field {
    name: "dmColor"
    type: "S"
  }
  field {
    name: "dmDuplex"
    type: "S"
  }
  field {
    name: "dmYResolution"
    type: "S"
  }
  field {
    name: "dmTTOption"
    type: "S"
  }
  field {
    name: "dmCollate"
    type: "S"
  }
  field {
    name: "dmFormName"
    type: "X(ConstantArray.BYTE [32])"
  }
  field {
    name: "dmLogPixels"
    type: "US"
  }
  field {
    name: "dmBitsPerPel"
    type: "UI"
  }
  field {
    name: "dmPelsWidth"
    type: "UI"
  }
  field {
    name: "dmPelsHeight"
    type: "UI"
  }
  field {
    name: "dmDisplayFrequency"
    type: "UI"
  }
  field {
    name: "dmICMMethod"
    type: "UI"
  }
  field {
    name: "dmICMIntent"
    type: "UI"
  }
  field {
    name: "dmMediaType"
    type: "UI"
  }
  field {
    name: "dmDitherType"
    type: "UI"
  }
  field {
    name: "dmReserved1"
    type: "UI"
  }
  field {
    name: "dmReserved2"
    type: "UI"
  }
  field {
    name: "dmPanningWidth"
    type: "UI"
  }
  field {
    name: "dmPanningHeight"
    type: "UI"
  }
}
struct {
  name: "struct DEVMODEA::(anonymous at /usr/local/include/wine/windows/wingdi.h:2895:7)"
  field {
    name: "dmOrientation"
    type: "S"
  }
  field {
    name: "dmPaperSize"
    type: "S"
  }
  field {
    name: "dmPaperLength"
    type: "S"
  }
  field {
    name: "dmPaperWidth"
    type: "S"
  }
  field {
    name: "dmScale"
    type: "S"
  }
  field {
    name: "dmCopies"
    type: "S"
  }
  field {
    name: "dmDefaultSource"
    type: "S"
  }
  field {
    name: "dmPrintQuality"
    type: "S"
  }
}
struct {
  name: "struct DEVMODEA::(anonymous at /usr/local/include/wine/windows/wingdi.h:2905:7)"
  field {
    name: "dmPosition"
    type: "R_POINTL;"
  }
  field {
    name: "dmDisplayOrientation"
    type: "UI"
  }
  field {
    name: "dmDisplayFixedOutput"
    type: "UI"
  }
}
struct {
  name: "DEVMODEA"
  field {
    name: "dmDeviceName"
    type: "X(ConstantArray.BYTE [32])"
  }
  field {
    name: "dmSpecVersion"
    type: "US"
  }
  field {
    name: "dmDriverVersion"
    type: "US"
  }
  field {
    name: "dmSize"
    type: "US"
  }
  field {
    name: "dmDriverExtra"
    type: "US"
  }
  field {
    name: "dmFields"
    type: "UI"
  }
  field {
    name: "dmColor"
    type: "S"
  }
  field {
    name: "dmDuplex"
    type: "S"
  }
  field {
    name: "dmYResolution"
    type: "S"
  }
  field {
    name: "dmTTOption"
    type: "S"
  }
  field {
    name: "dmCollate"
    type: "S"
  }
  field {
    name: "dmFormName"
    type: "X(ConstantArray.BYTE [32])"
  }
  field {
    name: "dmLogPixels"
    type: "US"
  }
  field {
    name: "dmBitsPerPel"
    type: "UI"
  }
  field {
    name: "dmPelsWidth"
    type: "UI"
  }
  field {
    name: "dmPelsHeight"
    type: "UI"
  }
  field {
    name: "dmDisplayFrequency"
    type: "UI"
  }
  field {
    name: "dmICMMethod"
    type: "UI"
  }
  field {
    name: "dmICMIntent"
    type: "UI"
  }
  field {
    name: "dmMediaType"
    type: "UI"
  }
  field {
    name: "dmDitherType"
    type: "UI"
  }
  field {
    name: "dmReserved1"
    type: "UI"
  }
  field {
    name: "dmReserved2"
    type: "UI"
  }
  field {
    name: "dmPanningWidth"
    type: "UI"
  }
  field {
    name: "dmPanningHeight"
    type: "UI"
  }
}
struct {
  name: "struct DEVMODEA::(anonymous at /usr/local/include/wine/windows/wingdi.h:2895:7)"
  field {
    name: "dmOrientation"
    type: "S"
  }
  field {
    name: "dmPaperSize"
    type: "S"
  }
  field {
    name: "dmPaperLength"
    type: "S"
  }
  field {
    name: "dmPaperWidth"
    type: "S"
  }
  field {
    name: "dmScale"
    type: "S"
  }
  field {
    name: "dmCopies"
    type: "S"
  }
  field {
    name: "dmDefaultSource"
    type: "S"
  }
  field {
    name: "dmPrintQuality"
    type: "S"
  }
}
struct {
  name: "struct DEVMODEA::(anonymous at /usr/local/include/wine/windows/wingdi.h:2905:7)"
  field {
    name: "dmPosition"
    type: "R_POINTL;"
  }
  field {
    name: "dmDisplayOrientation"
    type: "UI"
  }
  field {
    name: "dmDisplayFixedOutput"
    type: "UI"
  }
}
struct {
  name: "DEVMODEW"
  field {
    name: "dmDeviceName"
    type: "X(ConstantArray.WCHAR [32])"
  }
  field {
    name: "dmSpecVersion"
    type: "US"
  }
  field {
    name: "dmDriverVersion"
    type: "US"
  }
  field {
    name: "dmSize"
    type: "US"
  }
  field {
    name: "dmDriverExtra"
    type: "US"
  }
  field {
    name: "dmFields"
    type: "UI"
  }
  field {
    name: "dmColor"
    type: "S"
  }
  field {
    name: "dmDuplex"
    type: "S"
  }
  field {
    name: "dmYResolution"
    type: "S"
  }
  field {
    name: "dmTTOption"
    type: "S"
  }
  field {
    name: "dmCollate"
    type: "S"
  }
  field {
    name: "dmFormName"
    type: "X(ConstantArray.WCHAR [32])"
  }
  field {
    name: "dmLogPixels"
    type: "US"
  }
  field {
    name: "dmBitsPerPel"
    type: "UI"
  }
  field {
    name: "dmPelsWidth"
    type: "UI"
  }
  field {
    name: "dmPelsHeight"
    type: "UI"
  }
  field {
    name: "dmDisplayFrequency"
    type: "UI"
  }
  field {
    name: "dmICMMethod"
    type: "UI"
  }
  field {
    name: "dmICMIntent"
    type: "UI"
  }
  field {
    name: "dmMediaType"
    type: "UI"
  }
  field {
    name: "dmDitherType"
    type: "UI"
  }
  field {
    name: "dmReserved1"
    type: "UI"
  }
  field {
    name: "dmReserved2"
    type: "UI"
  }
  field {
    name: "dmPanningWidth"
    type: "UI"
  }
  field {
    name: "dmPanningHeight"
    type: "UI"
  }
}
struct {
  name: "struct DEVMODEW::(anonymous at /usr/local/include/wine/windows/wingdi.h:2945:7)"
  field {
    name: "dmOrientation"
    type: "S"
  }
  field {
    name: "dmPaperSize"
    type: "S"
  }
  field {
    name: "dmPaperLength"
    type: "S"
  }
  field {
    name: "dmPaperWidth"
    type: "S"
  }
  field {
    name: "dmScale"
    type: "S"
  }
  field {
    name: "dmCopies"
    type: "S"
  }
  field {
    name: "dmDefaultSource"
    type: "S"
  }
  field {
    name: "dmPrintQuality"
    type: "S"
  }
}
struct {
  name: "struct DEVMODEW::(anonymous at /usr/local/include/wine/windows/wingdi.h:2955:7)"
  field {
    name: "dmPosition"
    type: "R_POINTL;"
  }
  field {
    name: "dmDisplayOrientation"
    type: "UI"
  }
  field {
    name: "dmDisplayFixedOutput"
    type: "UI"
  }
}
struct {
  name: "DEVMODEW"
  field {
    name: "dmDeviceName"
    type: "X(ConstantArray.WCHAR [32])"
  }
  field {
    name: "dmSpecVersion"
    type: "US"
  }
  field {
    name: "dmDriverVersion"
    type: "US"
  }
  field {
    name: "dmSize"
    type: "US"
  }
  field {
    name: "dmDriverExtra"
    type: "US"
  }
  field {
    name: "dmFields"
    type: "UI"
  }
  field {
    name: "dmColor"
    type: "S"
  }
  field {
    name: "dmDuplex"
    type: "S"
  }
  field {
    name: "dmYResolution"
    type: "S"
  }
  field {
    name: "dmTTOption"
    type: "S"
  }
  field {
    name: "dmCollate"
    type: "S"
  }
  field {
    name: "dmFormName"
    type: "X(ConstantArray.WCHAR [32])"
  }
  field {
    name: "dmLogPixels"
    type: "US"
  }
  field {
    name: "dmBitsPerPel"
    type: "UI"
  }
  field {
    name: "dmPelsWidth"
    type: "UI"
  }
  field {
    name: "dmPelsHeight"
    type: "UI"
  }
  field {
    name: "dmDisplayFrequency"
    type: "UI"
  }
  field {
    name: "dmICMMethod"
    type: "UI"
  }
  field {
    name: "dmICMIntent"
    type: "UI"
  }
  field {
    name: "dmMediaType"
    type: "UI"
  }
  field {
    name: "dmDitherType"
    type: "UI"
  }
  field {
    name: "dmReserved1"
    type: "UI"
  }
  field {
    name: "dmReserved2"
    type: "UI"
  }
  field {
    name: "dmPanningWidth"
    type: "UI"
  }
  field {
    name: "dmPanningHeight"
    type: "UI"
  }
}
struct {
  name: "struct DEVMODEW::(anonymous at /usr/local/include/wine/windows/wingdi.h:2945:7)"
  field {
    name: "dmOrientation"
    type: "S"
  }
  field {
    name: "dmPaperSize"
    type: "S"
  }
  field {
    name: "dmPaperLength"
    type: "S"
  }
  field {
    name: "dmPaperWidth"
    type: "S"
  }
  field {
    name: "dmScale"
    type: "S"
  }
  field {
    name: "dmCopies"
    type: "S"
  }
  field {
    name: "dmDefaultSource"
    type: "S"
  }
  field {
    name: "dmPrintQuality"
    type: "S"
  }
}
struct {
  name: "struct DEVMODEW::(anonymous at /usr/local/include/wine/windows/wingdi.h:2955:7)"
  field {
    name: "dmPosition"
    type: "R_POINTL;"
  }
  field {
    name: "dmDisplayOrientation"
    type: "UI"
  }
  field {
    name: "dmDisplayFixedOutput"
    type: "UI"
  }
}
struct {
  name: "DEVMODEW"
  field {
    name: "dmDeviceName"
    type: "X(ConstantArray.WCHAR [32])"
  }
  field {
    name: "dmSpecVersion"
    type: "US"
  }
  field {
    name: "dmDriverVersion"
    type: "US"
  }
  field {
    name: "dmSize"
    type: "US"
  }
  field {
    name: "dmDriverExtra"
    type: "US"
  }
  field {
    name: "dmFields"
    type: "UI"
  }
  field {
    name: "dmColor"
    type: "S"
  }
  field {
    name: "dmDuplex"
    type: "S"
  }
  field {
    name: "dmYResolution"
    type: "S"
  }
  field {
    name: "dmTTOption"
    type: "S"
  }
  field {
    name: "dmCollate"
    type: "S"
  }
  field {
    name: "dmFormName"
    type: "X(ConstantArray.WCHAR [32])"
  }
  field {
    name: "dmLogPixels"
    type: "US"
  }
  field {
    name: "dmBitsPerPel"
    type: "UI"
  }
  field {
    name: "dmPelsWidth"
    type: "UI"
  }
  field {
    name: "dmPelsHeight"
    type: "UI"
  }
  field {
    name: "dmDisplayFrequency"
    type: "UI"
  }
  field {
    name: "dmICMMethod"
    type: "UI"
  }
  field {
    name: "dmICMIntent"
    type: "UI"
  }
  field {
    name: "dmMediaType"
    type: "UI"
  }
  field {
    name: "dmDitherType"
    type: "UI"
  }
  field {
    name: "dmReserved1"
    type: "UI"
  }
  field {
    name: "dmReserved2"
    type: "UI"
  }
  field {
    name: "dmPanningWidth"
    type: "UI"
  }
  field {
    name: "dmPanningHeight"
    type: "UI"
  }
}
struct {
  name: "struct DEVMODEW::(anonymous at /usr/local/include/wine/windows/wingdi.h:2945:7)"
  field {
    name: "dmOrientation"
    type: "S"
  }
  field {
    name: "dmPaperSize"
    type: "S"
  }
  field {
    name: "dmPaperLength"
    type: "S"
  }
  field {
    name: "dmPaperWidth"
    type: "S"
  }
  field {
    name: "dmScale"
    type: "S"
  }
  field {
    name: "dmCopies"
    type: "S"
  }
  field {
    name: "dmDefaultSource"
    type: "S"
  }
  field {
    name: "dmPrintQuality"
    type: "S"
  }
}
struct {
  name: "struct DEVMODEW::(anonymous at /usr/local/include/wine/windows/wingdi.h:2955:7)"
  field {
    name: "dmPosition"
    type: "R_POINTL;"
  }
  field {
    name: "dmDisplayOrientation"
    type: "UI"
  }
  field {
    name: "dmDisplayFixedOutput"
    type: "UI"
  }
}
struct {
  name: "DOCINFOA"
  field {
    name: "cbSize"
    type: "I"
  }
  field {
    name: "lpszDocName"
    type: "*cC;"
  }
  field {
    name: "lpszOutput"
    type: "*cC;"
  }
  field {
    name: "lpszDatatype"
    type: "*cC;"
  }
  field {
    name: "fwType"
    type: "UI"
  }
}
struct {
  name: "DOCINFOA"
  field {
    name: "cbSize"
    type: "I"
  }
  field {
    name: "lpszDocName"
    type: "*cC;"
  }
  field {
    name: "lpszOutput"
    type: "*cC;"
  }
  field {
    name: "lpszDatatype"
    type: "*cC;"
  }
  field {
    name: "fwType"
    type: "UI"
  }
}
struct {
  name: "DOCINFOW"
  field {
    name: "cbSize"
    type: "I"
  }
  field {
    name: "lpszDocName"
    type: "*cUS;"
  }
  field {
    name: "lpszOutput"
    type: "*cUS;"
  }
  field {
    name: "lpszDatatype"
    type: "*cUS;"
  }
  field {
    name: "fwType"
    type: "UI"
  }
}
struct {
  name: "DOCINFOW"
  field {
    name: "cbSize"
    type: "I"
  }
  field {
    name: "lpszDocName"
    type: "*cUS;"
  }
  field {
    name: "lpszOutput"
    type: "*cUS;"
  }
  field {
    name: "lpszDatatype"
    type: "*cUS;"
  }
  field {
    name: "fwType"
    type: "UI"
  }
}
struct {
  name: "_RGNDATAHEADER"
  field {
    name: "dwSize"
    type: "UI"
  }
  field {
    name: "iType"
    type: "UI"
  }
  field {
    name: "nCount"
    type: "UI"
  }
  field {
    name: "nRgnSize"
    type: "UI"
  }
  field {
    name: "rcBound"
    type: "RtagRECT;"
  }
}
struct {
  name: "_RGNDATAHEADER"
  field {
    name: "dwSize"
    type: "UI"
  }
  field {
    name: "iType"
    type: "UI"
  }
  field {
    name: "nCount"
    type: "UI"
  }
  field {
    name: "nRgnSize"
    type: "UI"
  }
  field {
    name: "rcBound"
    type: "RtagRECT;"
  }
}
struct {
  name: "_RGNDATA"
  field {
    name: "rdh"
    type: "R_RGNDATAHEADER;"
  }
  field {
    name: "Buffer"
    type: "X(ConstantArray.char [1])"
  }
}
struct {
  name: "_RGNDATA"
  field {
    name: "rdh"
    type: "R_RGNDATAHEADER;"
  }
  field {
    name: "Buffer"
    type: "X(ConstantArray.char [1])"
  }
}
struct {
  name: "_RGNDATA"
  field {
    name: "rdh"
    type: "R_RGNDATAHEADER;"
  }
  field {
    name: "Buffer"
    type: "X(ConstantArray.char [1])"
  }
}
struct {
  name: "DISPLAY_DEVICEA"
  field {
    name: "cb"
    type: "UI"
  }
  field {
    name: "DeviceName"
    type: "X(ConstantArray.CHAR [32])"
  }
  field {
    name: "DeviceString"
    type: "X(ConstantArray.CHAR [128])"
  }
  field {
    name: "StateFlags"
    type: "UI"
  }
  field {
    name: "DeviceID"
    type: "X(ConstantArray.CHAR [128])"
  }
  field {
    name: "DeviceKey"
    type: "X(ConstantArray.CHAR [128])"
  }
}
struct {
  name: "DISPLAY_DEVICEA"
  field {
    name: "cb"
    type: "UI"
  }
  field {
    name: "DeviceName"
    type: "X(ConstantArray.CHAR [32])"
  }
  field {
    name: "DeviceString"
    type: "X(ConstantArray.CHAR [128])"
  }
  field {
    name: "StateFlags"
    type: "UI"
  }
  field {
    name: "DeviceID"
    type: "X(ConstantArray.CHAR [128])"
  }
  field {
    name: "DeviceKey"
    type: "X(ConstantArray.CHAR [128])"
  }
}
struct {
  name: "DISPLAY_DEVICEA"
  field {
    name: "cb"
    type: "UI"
  }
  field {
    name: "DeviceName"
    type: "X(ConstantArray.CHAR [32])"
  }
  field {
    name: "DeviceString"
    type: "X(ConstantArray.CHAR [128])"
  }
  field {
    name: "StateFlags"
    type: "UI"
  }
  field {
    name: "DeviceID"
    type: "X(ConstantArray.CHAR [128])"
  }
  field {
    name: "DeviceKey"
    type: "X(ConstantArray.CHAR [128])"
  }
}
struct {
  name: "DISPLAY_DEVICEW"
  field {
    name: "cb"
    type: "UI"
  }
  field {
    name: "DeviceName"
    type: "X(ConstantArray.WCHAR [32])"
  }
  field {
    name: "DeviceString"
    type: "X(ConstantArray.WCHAR [128])"
  }
  field {
    name: "StateFlags"
    type: "UI"
  }
  field {
    name: "DeviceID"
    type: "X(ConstantArray.WCHAR [128])"
  }
  field {
    name: "DeviceKey"
    type: "X(ConstantArray.WCHAR [128])"
  }
}
struct {
  name: "DISPLAY_DEVICEW"
  field {
    name: "cb"
    type: "UI"
  }
  field {
    name: "DeviceName"
    type: "X(ConstantArray.WCHAR [32])"
  }
  field {
    name: "DeviceString"
    type: "X(ConstantArray.WCHAR [128])"
  }
  field {
    name: "StateFlags"
    type: "UI"
  }
  field {
    name: "DeviceID"
    type: "X(ConstantArray.WCHAR [128])"
  }
  field {
    name: "DeviceKey"
    type: "X(ConstantArray.WCHAR [128])"
  }
}
struct {
  name: "DISPLAY_DEVICEW"
  field {
    name: "cb"
    type: "UI"
  }
  field {
    name: "DeviceName"
    type: "X(ConstantArray.WCHAR [32])"
  }
  field {
    name: "DeviceString"
    type: "X(ConstantArray.WCHAR [128])"
  }
  field {
    name: "StateFlags"
    type: "UI"
  }
  field {
    name: "DeviceID"
    type: "X(ConstantArray.WCHAR [128])"
  }
  field {
    name: "DeviceKey"
    type: "X(ConstantArray.WCHAR [128])"
  }
}
struct {
  name: "_DRAWPATRECT"
  field {
    name: "ptPosition"
    type: "RtagPOINT;"
  }
  field {
    name: "ptSize"
    type: "RtagPOINT;"
  }
  field {
    name: "wStyle"
    type: "US"
  }
  field {
    name: "wPattern"
    type: "US"
  }
}
struct {
  name: "_DRAWPATRECT"
  field {
    name: "ptPosition"
    type: "RtagPOINT;"
  }
  field {
    name: "ptSize"
    type: "RtagPOINT;"
  }
  field {
    name: "wStyle"
    type: "US"
  }
  field {
    name: "wPattern"
    type: "US"
  }
}
struct {
  name: "tagWCRANGE"
  field {
    name: "wcLow"
    type: "US"
  }
  field {
    name: "cGlyphs"
    type: "US"
  }
}
struct {
  name: "tagWCRANGE"
  field {
    name: "wcLow"
    type: "US"
  }
  field {
    name: "cGlyphs"
    type: "US"
  }
}
struct {
  name: "tagWCRANGE"
  field {
    name: "wcLow"
    type: "US"
  }
  field {
    name: "cGlyphs"
    type: "US"
  }
}
struct {
  name: "tagGLYPHSET"
  field {
    name: "cbThis"
    type: "UI"
  }
  field {
    name: "flAccel"
    type: "UI"
  }
  field {
    name: "cGlyphsSupported"
    type: "UI"
  }
  field {
    name: "cRanges"
    type: "UI"
  }
  field {
    name: "ranges"
    type: "X(ConstantArray.WCRANGE [1])"
  }
}
struct {
  name: "tagGLYPHSET"
  field {
    name: "cbThis"
    type: "UI"
  }
  field {
    name: "flAccel"
    type: "UI"
  }
  field {
    name: "cGlyphsSupported"
    type: "UI"
  }
  field {
    name: "cRanges"
    type: "UI"
  }
  field {
    name: "ranges"
    type: "X(ConstantArray.WCRANGE [1])"
  }
}
struct {
  name: "tagGLYPHSET"
  field {
    name: "cbThis"
    type: "UI"
  }
  field {
    name: "flAccel"
    type: "UI"
  }
  field {
    name: "cGlyphsSupported"
    type: "UI"
  }
  field {
    name: "cRanges"
    type: "UI"
  }
  field {
    name: "ranges"
    type: "X(ConstantArray.WCRANGE [1])"
  }
}
struct {
  name: "tagUSEROBJECTFLAGS"
  field {
    name: "fInherit"
    type: "I"
  }
  field {
    name: "fReserved"
    type: "I"
  }
  field {
    name: "dwFlags"
    type: "UI"
  }
}
struct {
  name: "tagUSEROBJECTFLAGS"
  field {
    name: "fInherit"
    type: "I"
  }
  field {
    name: "fReserved"
    type: "I"
  }
  field {
    name: "dwFlags"
    type: "UI"
  }
}
struct {
  name: "tagBSMINFO"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "hdesk"
    type: "*RHDESK__;;"
  }
  field {
    name: "hwnd"
    type: "*RHWND__;;"
  }
  field {
    name: "luid"
    type: "R_LUID;"
  }
}
struct {
  name: "tagBSMINFO"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "hdesk"
    type: "*RHDESK__;;"
  }
  field {
    name: "hwnd"
    type: "*RHWND__;;"
  }
  field {
    name: "luid"
    type: "R_LUID;"
  }
}
struct {
  name: "tagFILTERKEYS"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "dwFlags"
    type: "UI"
  }
  field {
    name: "iWaitMSec"
    type: "UI"
  }
  field {
    name: "iDelayMSec"
    type: "UI"
  }
  field {
    name: "iRepeatMSec"
    type: "UI"
  }
  field {
    name: "iBounceMSec"
    type: "UI"
  }
}
struct {
  name: "tagFILTERKEYS"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "dwFlags"
    type: "UI"
  }
  field {
    name: "iWaitMSec"
    type: "UI"
  }
  field {
    name: "iDelayMSec"
    type: "UI"
  }
  field {
    name: "iRepeatMSec"
    type: "UI"
  }
  field {
    name: "iBounceMSec"
    type: "UI"
  }
}
struct {
  name: "tagTOGGLEKEYS"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "dwFlags"
    type: "UI"
  }
}
struct {
  name: "tagTOGGLEKEYS"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "dwFlags"
    type: "UI"
  }
}
struct {
  name: "tagMOUSEKEYS"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "dwFlags"
    type: "UI"
  }
  field {
    name: "iMaxSpeed"
    type: "UI"
  }
  field {
    name: "iTimeToMaxSpeed"
    type: "UI"
  }
  field {
    name: "iCtrlSpeed"
    type: "UI"
  }
  field {
    name: "dwReserved1"
    type: "UI"
  }
  field {
    name: "dwReserved2"
    type: "UI"
  }
}
struct {
  name: "tagMOUSEKEYS"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "dwFlags"
    type: "UI"
  }
  field {
    name: "iMaxSpeed"
    type: "UI"
  }
  field {
    name: "iTimeToMaxSpeed"
    type: "UI"
  }
  field {
    name: "iCtrlSpeed"
    type: "UI"
  }
  field {
    name: "dwReserved1"
    type: "UI"
  }
  field {
    name: "dwReserved2"
    type: "UI"
  }
}
struct {
  name: "tagMOUSEMOVEPOINT"
  field {
    name: "x"
    type: "I"
  }
  field {
    name: "y"
    type: "I"
  }
  field {
    name: "time"
    type: "UI"
  }
  field {
    name: "dwExtraInfo"
    type: "UI"
  }
}
struct {
  name: "tagMOUSEMOVEPOINT"
  field {
    name: "x"
    type: "I"
  }
  field {
    name: "y"
    type: "I"
  }
  field {
    name: "time"
    type: "UI"
  }
  field {
    name: "dwExtraInfo"
    type: "UI"
  }
}
struct {
  name: "tagMOUSEMOVEPOINT"
  field {
    name: "x"
    type: "I"
  }
  field {
    name: "y"
    type: "I"
  }
  field {
    name: "time"
    type: "UI"
  }
  field {
    name: "dwExtraInfo"
    type: "UI"
  }
}
struct {
  name: "tagSTICKYKEYS"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "dwFlags"
    type: "UI"
  }
}
struct {
  name: "tagSTICKYKEYS"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "dwFlags"
    type: "UI"
  }
}
struct {
  name: "tagACCESSTIMEOUT"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "dwFlags"
    type: "UI"
  }
  field {
    name: "iTimeOutMSec"
    type: "UI"
  }
}
struct {
  name: "tagACCESSTIMEOUT"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "dwFlags"
    type: "UI"
  }
  field {
    name: "iTimeOutMSec"
    type: "UI"
  }
}
struct {
  name: "tagSERIALKEYSA"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "dwFlags"
    type: "UI"
  }
  field {
    name: "lpszActivePort"
    type: "*C;"
  }
  field {
    name: "lpszPort"
    type: "*C;"
  }
  field {
    name: "iBaudRate"
    type: "UI"
  }
  field {
    name: "iPortState"
    type: "UI"
  }
  field {
    name: "iActive"
    type: "UI"
  }
}
struct {
  name: "tagSERIALKEYSA"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "dwFlags"
    type: "UI"
  }
  field {
    name: "lpszActivePort"
    type: "*C;"
  }
  field {
    name: "lpszPort"
    type: "*C;"
  }
  field {
    name: "iBaudRate"
    type: "UI"
  }
  field {
    name: "iPortState"
    type: "UI"
  }
  field {
    name: "iActive"
    type: "UI"
  }
}
struct {
  name: "tagSERIALKEYSW"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "dwFlags"
    type: "UI"
  }
  field {
    name: "lpszActivePort"
    type: "*US;"
  }
  field {
    name: "lpszPort"
    type: "*US;"
  }
  field {
    name: "iBaudRate"
    type: "UI"
  }
  field {
    name: "iPortState"
    type: "UI"
  }
  field {
    name: "iActive"
    type: "UI"
  }
}
struct {
  name: "tagSERIALKEYSW"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "dwFlags"
    type: "UI"
  }
  field {
    name: "lpszActivePort"
    type: "*US;"
  }
  field {
    name: "lpszPort"
    type: "*US;"
  }
  field {
    name: "iBaudRate"
    type: "UI"
  }
  field {
    name: "iPortState"
    type: "UI"
  }
  field {
    name: "iActive"
    type: "UI"
  }
}
struct {
  name: "tagSOUNDSENTRYA"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "dwFlags"
    type: "UI"
  }
  field {
    name: "iFSTextEffect"
    type: "UI"
  }
  field {
    name: "iFSTextEffectMSec"
    type: "UI"
  }
  field {
    name: "iFSTextEffectColorBits"
    type: "UI"
  }
  field {
    name: "iFSGrafEffect"
    type: "UI"
  }
  field {
    name: "iFSGrafEffectMSec"
    type: "UI"
  }
  field {
    name: "iFSGrafEffectColor"
    type: "UI"
  }
  field {
    name: "iWindowsEffect"
    type: "UI"
  }
  field {
    name: "iWindowsEffectMSec"
    type: "UI"
  }
  field {
    name: "lpszWindowsEffectDLL"
    type: "*C;"
  }
  field {
    name: "iWindowsEffectOrdinal"
    type: "UI"
  }
}
struct {
  name: "tagSOUNDSENTRYA"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "dwFlags"
    type: "UI"
  }
  field {
    name: "iFSTextEffect"
    type: "UI"
  }
  field {
    name: "iFSTextEffectMSec"
    type: "UI"
  }
  field {
    name: "iFSTextEffectColorBits"
    type: "UI"
  }
  field {
    name: "iFSGrafEffect"
    type: "UI"
  }
  field {
    name: "iFSGrafEffectMSec"
    type: "UI"
  }
  field {
    name: "iFSGrafEffectColor"
    type: "UI"
  }
  field {
    name: "iWindowsEffect"
    type: "UI"
  }
  field {
    name: "iWindowsEffectMSec"
    type: "UI"
  }
  field {
    name: "lpszWindowsEffectDLL"
    type: "*C;"
  }
  field {
    name: "iWindowsEffectOrdinal"
    type: "UI"
  }
}
struct {
  name: "tagSOUNDSENTRYW"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "dwFlags"
    type: "UI"
  }
  field {
    name: "iFSTextEffect"
    type: "UI"
  }
  field {
    name: "iFSTextEffectMSec"
    type: "UI"
  }
  field {
    name: "iFSTextEffectColorBits"
    type: "UI"
  }
  field {
    name: "iFSGrafEffect"
    type: "UI"
  }
  field {
    name: "iFSGrafEffectMSec"
    type: "UI"
  }
  field {
    name: "iFSGrafEffectColor"
    type: "UI"
  }
  field {
    name: "iWindowsEffect"
    type: "UI"
  }
  field {
    name: "iWindowsEffectMSec"
    type: "UI"
  }
  field {
    name: "lpszWindowsEffectDLL"
    type: "*US;"
  }
  field {
    name: "iWindowsEffectOrdinal"
    type: "UI"
  }
}
struct {
  name: "tagSOUNDSENTRYW"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "dwFlags"
    type: "UI"
  }
  field {
    name: "iFSTextEffect"
    type: "UI"
  }
  field {
    name: "iFSTextEffectMSec"
    type: "UI"
  }
  field {
    name: "iFSTextEffectColorBits"
    type: "UI"
  }
  field {
    name: "iFSGrafEffect"
    type: "UI"
  }
  field {
    name: "iFSGrafEffectMSec"
    type: "UI"
  }
  field {
    name: "iFSGrafEffectColor"
    type: "UI"
  }
  field {
    name: "iWindowsEffect"
    type: "UI"
  }
  field {
    name: "iWindowsEffectMSec"
    type: "UI"
  }
  field {
    name: "lpszWindowsEffectDLL"
    type: "*US;"
  }
  field {
    name: "iWindowsEffectOrdinal"
    type: "UI"
  }
}
struct {
  name: "tagHIGHCONTRASTA"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "dwFlags"
    type: "UI"
  }
  field {
    name: "lpszDefaultScheme"
    type: "*C;"
  }
}
struct {
  name: "tagHIGHCONTRASTA"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "dwFlags"
    type: "UI"
  }
  field {
    name: "lpszDefaultScheme"
    type: "*C;"
  }
}
struct {
  name: "tagHIGHCONTRASTW"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "dwFlags"
    type: "UI"
  }
  field {
    name: "lpszDefaultScheme"
    type: "*US;"
  }
}
struct {
  name: "tagHIGHCONTRASTW"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "dwFlags"
    type: "UI"
  }
  field {
    name: "lpszDefaultScheme"
    type: "*US;"
  }
}
struct {
  name: "tagEVENTMSG"
  field {
    name: "message"
    type: "UI"
  }
  field {
    name: "paramL"
    type: "UI"
  }
  field {
    name: "paramH"
    type: "UI"
  }
  field {
    name: "time"
    type: "UI"
  }
  field {
    name: "hwnd"
    type: "*RHWND__;;"
  }
}
struct {
  name: "tagEVENTMSG"
  field {
    name: "message"
    type: "UI"
  }
  field {
    name: "paramL"
    type: "UI"
  }
  field {
    name: "paramH"
    type: "UI"
  }
  field {
    name: "time"
    type: "UI"
  }
  field {
    name: "hwnd"
    type: "*RHWND__;;"
  }
}
struct {
  name: "tagEVENTMSG"
  field {
    name: "message"
    type: "UI"
  }
  field {
    name: "paramL"
    type: "UI"
  }
  field {
    name: "paramH"
    type: "UI"
  }
  field {
    name: "time"
    type: "UI"
  }
  field {
    name: "hwnd"
    type: "*RHWND__;;"
  }
}
struct {
  name: "tagKBDLLHOOKSTRUCT"
  field {
    name: "vkCode"
    type: "UI"
  }
  field {
    name: "scanCode"
    type: "UI"
  }
  field {
    name: "flags"
    type: "UI"
  }
  field {
    name: "time"
    type: "UI"
  }
  field {
    name: "dwExtraInfo"
    type: "UI"
  }
}
struct {
  name: "tagKBDLLHOOKSTRUCT"
  field {
    name: "vkCode"
    type: "UI"
  }
  field {
    name: "scanCode"
    type: "UI"
  }
  field {
    name: "flags"
    type: "UI"
  }
  field {
    name: "time"
    type: "UI"
  }
  field {
    name: "dwExtraInfo"
    type: "UI"
  }
}
struct {
  name: "tagKBDLLHOOKSTRUCT"
  field {
    name: "vkCode"
    type: "UI"
  }
  field {
    name: "scanCode"
    type: "UI"
  }
  field {
    name: "flags"
    type: "UI"
  }
  field {
    name: "time"
    type: "UI"
  }
  field {
    name: "dwExtraInfo"
    type: "UI"
  }
}
struct {
  name: "tagMSLLHOOKSTRUCT"
  field {
    name: "pt"
    type: "RtagPOINT;"
  }
  field {
    name: "mouseData"
    type: "UI"
  }
  field {
    name: "flags"
    type: "UI"
  }
  field {
    name: "time"
    type: "UI"
  }
  field {
    name: "dwExtraInfo"
    type: "UI"
  }
}
struct {
  name: "tagMSLLHOOKSTRUCT"
  field {
    name: "pt"
    type: "RtagPOINT;"
  }
  field {
    name: "mouseData"
    type: "UI"
  }
  field {
    name: "flags"
    type: "UI"
  }
  field {
    name: "time"
    type: "UI"
  }
  field {
    name: "dwExtraInfo"
    type: "UI"
  }
}
struct {
  name: "tagMSLLHOOKSTRUCT"
  field {
    name: "pt"
    type: "RtagPOINT;"
  }
  field {
    name: "mouseData"
    type: "UI"
  }
  field {
    name: "flags"
    type: "UI"
  }
  field {
    name: "time"
    type: "UI"
  }
  field {
    name: "dwExtraInfo"
    type: "UI"
  }
}
struct {
  name: "MOUSEHOOKSTRUCT"
  field {
    name: "pt"
    type: "RtagPOINT;"
  }
  field {
    name: "hwnd"
    type: "*RHWND__;;"
  }
  field {
    name: "wHitTestCode"
    type: "UI"
  }
  field {
    name: "dwExtraInfo"
    type: "UI"
  }
}
struct {
  name: "MOUSEHOOKSTRUCT"
  field {
    name: "pt"
    type: "RtagPOINT;"
  }
  field {
    name: "hwnd"
    type: "*RHWND__;;"
  }
  field {
    name: "wHitTestCode"
    type: "UI"
  }
  field {
    name: "dwExtraInfo"
    type: "UI"
  }
}
struct {
  name: "MOUSEHOOKSTRUCT"
  field {
    name: "pt"
    type: "RtagPOINT;"
  }
  field {
    name: "hwnd"
    type: "*RHWND__;;"
  }
  field {
    name: "wHitTestCode"
    type: "UI"
  }
  field {
    name: "dwExtraInfo"
    type: "UI"
  }
}
struct {
  name: "HARDWAREHOOKSTRUCT"
  field {
    name: "hwnd"
    type: "*RHWND__;;"
  }
  field {
    name: "message"
    type: "UI"
  }
  field {
    name: "wParam"
    type: "UI"
  }
  field {
    name: "lParam"
    type: "I"
  }
}
struct {
  name: "HARDWAREHOOKSTRUCT"
  field {
    name: "hwnd"
    type: "*RHWND__;;"
  }
  field {
    name: "message"
    type: "UI"
  }
  field {
    name: "wParam"
    type: "UI"
  }
  field {
    name: "lParam"
    type: "I"
  }
}
struct {
  name: "HARDWAREHOOKSTRUCT"
  field {
    name: "hwnd"
    type: "*RHWND__;;"
  }
  field {
    name: "message"
    type: "UI"
  }
  field {
    name: "wParam"
    type: "UI"
  }
  field {
    name: "lParam"
    type: "I"
  }
}
struct {
  name: "tagDEBUGHOOKINFO"
  field {
    name: "idThread"
    type: "UI"
  }
  field {
    name: "idThreadInstaller"
    type: "UI"
  }
  field {
    name: "lParam"
    type: "I"
  }
  field {
    name: "wParam"
    type: "UI"
  }
  field {
    name: "code"
    type: "I"
  }
}
struct {
  name: "tagDEBUGHOOKINFO"
  field {
    name: "idThread"
    type: "UI"
  }
  field {
    name: "idThreadInstaller"
    type: "UI"
  }
  field {
    name: "lParam"
    type: "I"
  }
  field {
    name: "wParam"
    type: "UI"
  }
  field {
    name: "code"
    type: "I"
  }
}
struct {
  name: "tagDEBUGHOOKINFO"
  field {
    name: "idThread"
    type: "UI"
  }
  field {
    name: "idThreadInstaller"
    type: "UI"
  }
  field {
    name: "lParam"
    type: "I"
  }
  field {
    name: "wParam"
    type: "UI"
  }
  field {
    name: "code"
    type: "I"
  }
}
struct {
  name: "tagMOUSEINPUT"
  field {
    name: "dx"
    type: "I"
  }
  field {
    name: "dy"
    type: "I"
  }
  field {
    name: "mouseData"
    type: "UI"
  }
  field {
    name: "dwFlags"
    type: "UI"
  }
  field {
    name: "time"
    type: "UI"
  }
  field {
    name: "dwExtraInfo"
    type: "UI"
  }
}
struct {
  name: "tagMOUSEINPUT"
  field {
    name: "dx"
    type: "I"
  }
  field {
    name: "dy"
    type: "I"
  }
  field {
    name: "mouseData"
    type: "UI"
  }
  field {
    name: "dwFlags"
    type: "UI"
  }
  field {
    name: "time"
    type: "UI"
  }
  field {
    name: "dwExtraInfo"
    type: "UI"
  }
}
struct {
  name: "tagMOUSEINPUT"
  field {
    name: "dx"
    type: "I"
  }
  field {
    name: "dy"
    type: "I"
  }
  field {
    name: "mouseData"
    type: "UI"
  }
  field {
    name: "dwFlags"
    type: "UI"
  }
  field {
    name: "time"
    type: "UI"
  }
  field {
    name: "dwExtraInfo"
    type: "UI"
  }
}
struct {
  name: "tagKEYBDINPUT"
  field {
    name: "wVk"
    type: "US"
  }
  field {
    name: "wScan"
    type: "US"
  }
  field {
    name: "dwFlags"
    type: "UI"
  }
  field {
    name: "time"
    type: "UI"
  }
  field {
    name: "dwExtraInfo"
    type: "UI"
  }
}
struct {
  name: "tagKEYBDINPUT"
  field {
    name: "wVk"
    type: "US"
  }
  field {
    name: "wScan"
    type: "US"
  }
  field {
    name: "dwFlags"
    type: "UI"
  }
  field {
    name: "time"
    type: "UI"
  }
  field {
    name: "dwExtraInfo"
    type: "UI"
  }
}
struct {
  name: "tagKEYBDINPUT"
  field {
    name: "wVk"
    type: "US"
  }
  field {
    name: "wScan"
    type: "US"
  }
  field {
    name: "dwFlags"
    type: "UI"
  }
  field {
    name: "time"
    type: "UI"
  }
  field {
    name: "dwExtraInfo"
    type: "UI"
  }
}
struct {
  name: "tagHARDWAREINPUT"
  field {
    name: "uMsg"
    type: "UI"
  }
  field {
    name: "wParamL"
    type: "US"
  }
  field {
    name: "wParamH"
    type: "US"
  }
}
struct {
  name: "tagHARDWAREINPUT"
  field {
    name: "uMsg"
    type: "UI"
  }
  field {
    name: "wParamL"
    type: "US"
  }
  field {
    name: "wParamH"
    type: "US"
  }
}
struct {
  name: "tagHARDWAREINPUT"
  field {
    name: "uMsg"
    type: "UI"
  }
  field {
    name: "wParamL"
    type: "US"
  }
  field {
    name: "wParamH"
    type: "US"
  }
}
struct {
  name: "tagINPUT"
  field {
    name: "type"
    type: "UI"
  }
}
struct {
  name: "tagINPUT"
  field {
    name: "type"
    type: "UI"
  }
}
struct {
  name: "tagINPUT"
  field {
    name: "type"
    type: "UI"
  }
}
struct {
  name: "HRAWINPUT__"
  field {
    name: "unused"
    type: "I"
  }
}
struct {
  name: "tagRAWINPUTDEVICELIST"
  field {
    name: "hDevice"
    type: "*V;"
  }
  field {
    name: "dwType"
    type: "UI"
  }
}
struct {
  name: "tagRAWINPUTDEVICELIST"
  field {
    name: "hDevice"
    type: "*V;"
  }
  field {
    name: "dwType"
    type: "UI"
  }
}
struct {
  name: "tagRAWHID"
  field {
    name: "dwSizeHid"
    type: "UI"
  }
  field {
    name: "dwCount"
    type: "UI"
  }
  field {
    name: "bRawData"
    type: "UB"
  }
}
struct {
  name: "tagRAWHID"
  field {
    name: "dwSizeHid"
    type: "UI"
  }
  field {
    name: "dwCount"
    type: "UI"
  }
  field {
    name: "bRawData"
    type: "UB"
  }
}
struct {
  name: "tagRAWKEYBOARD"
  field {
    name: "MakeCode"
    type: "US"
  }
  field {
    name: "Flags"
    type: "US"
  }
  field {
    name: "Reserved"
    type: "US"
  }
  field {
    name: "VKey"
    type: "US"
  }
  field {
    name: "Message"
    type: "UI"
  }
  field {
    name: "ExtraInformation"
    type: "UI"
  }
}
struct {
  name: "tagRAWKEYBOARD"
  field {
    name: "MakeCode"
    type: "US"
  }
  field {
    name: "Flags"
    type: "US"
  }
  field {
    name: "Reserved"
    type: "US"
  }
  field {
    name: "VKey"
    type: "US"
  }
  field {
    name: "Message"
    type: "UI"
  }
  field {
    name: "ExtraInformation"
    type: "UI"
  }
}
struct {
  name: "tagRAWKEYBOARD"
  field {
    name: "MakeCode"
    type: "US"
  }
  field {
    name: "Flags"
    type: "US"
  }
  field {
    name: "Reserved"
    type: "US"
  }
  field {
    name: "VKey"
    type: "US"
  }
  field {
    name: "Message"
    type: "UI"
  }
  field {
    name: "ExtraInformation"
    type: "UI"
  }
}
struct {
  name: "tagRAWMOUSE"
  field {
    name: "usFlags"
    type: "US"
  }
  field {
    name: "ulRawButtons"
    type: "UI"
  }
  field {
    name: "lLastX"
    type: "I"
  }
  field {
    name: "lLastY"
    type: "I"
  }
  field {
    name: "ulExtraInformation"
    type: "UI"
  }
}
struct {
  name: "struct tagRAWMOUSE::(anonymous at /usr/local/include/wine/windows/winuser.h:493:9)"
  field {
    name: "usButtonFlags"
    type: "US"
  }
  field {
    name: "usButtonData"
    type: "US"
  }
}
struct {
  name: "tagRAWMOUSE"
  field {
    name: "usFlags"
    type: "US"
  }
  field {
    name: "ulRawButtons"
    type: "UI"
  }
  field {
    name: "lLastX"
    type: "I"
  }
  field {
    name: "lLastY"
    type: "I"
  }
  field {
    name: "ulExtraInformation"
    type: "UI"
  }
}
struct {
  name: "struct tagRAWMOUSE::(anonymous at /usr/local/include/wine/windows/winuser.h:493:9)"
  field {
    name: "usButtonFlags"
    type: "US"
  }
  field {
    name: "usButtonData"
    type: "US"
  }
}
struct {
  name: "tagRAWMOUSE"
  field {
    name: "usFlags"
    type: "US"
  }
  field {
    name: "ulRawButtons"
    type: "UI"
  }
  field {
    name: "lLastX"
    type: "I"
  }
  field {
    name: "lLastY"
    type: "I"
  }
  field {
    name: "ulExtraInformation"
    type: "UI"
  }
}
struct {
  name: "struct tagRAWMOUSE::(anonymous at /usr/local/include/wine/windows/winuser.h:493:9)"
  field {
    name: "usButtonFlags"
    type: "US"
  }
  field {
    name: "usButtonData"
    type: "US"
  }
}
struct {
  name: "tagRAWINPUTHEADER"
  field {
    name: "dwType"
    type: "UI"
  }
  field {
    name: "dwSize"
    type: "UI"
  }
  field {
    name: "hDevice"
    type: "*V;"
  }
  field {
    name: "wParam"
    type: "UI"
  }
}
struct {
  name: "tagRAWINPUTHEADER"
  field {
    name: "dwType"
    type: "UI"
  }
  field {
    name: "dwSize"
    type: "UI"
  }
  field {
    name: "hDevice"
    type: "*V;"
  }
  field {
    name: "wParam"
    type: "UI"
  }
}
struct {
  name: "tagRAWINPUT"
  field {
    name: "header"
    type: "RtagRAWINPUTHEADER;"
  }
  field {
    name: "data"
    type: "Runion tagRAWINPUT::(anonymous at /usr/local/include/wine/windows/winuser.h:513:5);"
  }
}
struct {
  name: "tagRAWINPUT"
  field {
    name: "header"
    type: "RtagRAWINPUTHEADER;"
  }
  field {
    name: "data"
    type: "Runion tagRAWINPUT::(anonymous at /usr/local/include/wine/windows/winuser.h:513:5);"
  }
}
struct {
  name: "tagRAWINPUT"
  field {
    name: "header"
    type: "RtagRAWINPUTHEADER;"
  }
  field {
    name: "data"
    type: "Runion tagRAWINPUT::(anonymous at /usr/local/include/wine/windows/winuser.h:513:5);"
  }
}
struct {
  name: "tagRAWINPUTDEVICE"
  field {
    name: "usUsagePage"
    type: "US"
  }
  field {
    name: "usUsage"
    type: "US"
  }
  field {
    name: "dwFlags"
    type: "UI"
  }
  field {
    name: "hwndTarget"
    type: "*RHWND__;;"
  }
}
struct {
  name: "tagRAWINPUTDEVICE"
  field {
    name: "usUsagePage"
    type: "US"
  }
  field {
    name: "usUsage"
    type: "US"
  }
  field {
    name: "dwFlags"
    type: "UI"
  }
  field {
    name: "hwndTarget"
    type: "*RHWND__;;"
  }
}
struct {
  name: "tagRAWINPUTDEVICE"
  field {
    name: "usUsagePage"
    type: "US"
  }
  field {
    name: "usUsage"
    type: "US"
  }
  field {
    name: "dwFlags"
    type: "UI"
  }
  field {
    name: "hwndTarget"
    type: "*RHWND__;;"
  }
}
struct {
  name: "tagRID_DEVICE_INFO_MOUSE"
  field {
    name: "dwId"
    type: "UI"
  }
  field {
    name: "dwNumberOfButtons"
    type: "UI"
  }
  field {
    name: "dwSampleRate"
    type: "UI"
  }
  field {
    name: "fHasHorizontalWheel"
    type: "I"
  }
}
struct {
  name: "tagRID_DEVICE_INFO_MOUSE"
  field {
    name: "dwId"
    type: "UI"
  }
  field {
    name: "dwNumberOfButtons"
    type: "UI"
  }
  field {
    name: "dwSampleRate"
    type: "UI"
  }
  field {
    name: "fHasHorizontalWheel"
    type: "I"
  }
}
struct {
  name: "tagRID_DEVICE_INFO_KEYBOARD"
  field {
    name: "dwType"
    type: "UI"
  }
  field {
    name: "dwSubType"
    type: "UI"
  }
  field {
    name: "dwKeyboardMode"
    type: "UI"
  }
  field {
    name: "dwNumberOfFunctionKeys"
    type: "UI"
  }
  field {
    name: "dwNumberOfIndicators"
    type: "UI"
  }
  field {
    name: "dwNumberOfKeysTotal"
    type: "UI"
  }
}
struct {
  name: "tagRID_DEVICE_INFO_KEYBOARD"
  field {
    name: "dwType"
    type: "UI"
  }
  field {
    name: "dwSubType"
    type: "UI"
  }
  field {
    name: "dwKeyboardMode"
    type: "UI"
  }
  field {
    name: "dwNumberOfFunctionKeys"
    type: "UI"
  }
  field {
    name: "dwNumberOfIndicators"
    type: "UI"
  }
  field {
    name: "dwNumberOfKeysTotal"
    type: "UI"
  }
}
struct {
  name: "tagRID_DEVICE_INFO_HID"
  field {
    name: "dwVendorId"
    type: "UI"
  }
  field {
    name: "dwProductId"
    type: "UI"
  }
  field {
    name: "dwVersionNumber"
    type: "UI"
  }
  field {
    name: "usUsagePage"
    type: "US"
  }
  field {
    name: "usUsage"
    type: "US"
  }
}
struct {
  name: "tagRID_DEVICE_INFO_HID"
  field {
    name: "dwVendorId"
    type: "UI"
  }
  field {
    name: "dwProductId"
    type: "UI"
  }
  field {
    name: "dwVersionNumber"
    type: "UI"
  }
  field {
    name: "usUsagePage"
    type: "US"
  }
  field {
    name: "usUsage"
    type: "US"
  }
}
struct {
  name: "tagRID_DEVICE_INFO"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "dwType"
    type: "UI"
  }
}
struct {
  name: "tagRID_DEVICE_INFO"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "dwType"
    type: "UI"
  }
}
struct {
  name: "tagRID_DEVICE_INFO"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "dwType"
    type: "UI"
  }
}
struct {
  name: "tagGUITHREADINFO"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "flags"
    type: "UI"
  }
  field {
    name: "hwndActive"
    type: "*RHWND__;;"
  }
  field {
    name: "hwndFocus"
    type: "*RHWND__;;"
  }
  field {
    name: "hwndCapture"
    type: "*RHWND__;;"
  }
  field {
    name: "hwndMenuOwner"
    type: "*RHWND__;;"
  }
  field {
    name: "hwndMoveSize"
    type: "*RHWND__;;"
  }
  field {
    name: "hwndCaret"
    type: "*RHWND__;;"
  }
  field {
    name: "rcCaret"
    type: "RtagRECT;"
  }
}
struct {
  name: "tagGUITHREADINFO"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "flags"
    type: "UI"
  }
  field {
    name: "hwndActive"
    type: "*RHWND__;;"
  }
  field {
    name: "hwndFocus"
    type: "*RHWND__;;"
  }
  field {
    name: "hwndCapture"
    type: "*RHWND__;;"
  }
  field {
    name: "hwndMenuOwner"
    type: "*RHWND__;;"
  }
  field {
    name: "hwndMoveSize"
    type: "*RHWND__;;"
  }
  field {
    name: "hwndCaret"
    type: "*RHWND__;;"
  }
  field {
    name: "rcCaret"
    type: "RtagRECT;"
  }
}
struct {
  name: "tagGUITHREADINFO"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "flags"
    type: "UI"
  }
  field {
    name: "hwndActive"
    type: "*RHWND__;;"
  }
  field {
    name: "hwndFocus"
    type: "*RHWND__;;"
  }
  field {
    name: "hwndCapture"
    type: "*RHWND__;;"
  }
  field {
    name: "hwndMenuOwner"
    type: "*RHWND__;;"
  }
  field {
    name: "hwndMoveSize"
    type: "*RHWND__;;"
  }
  field {
    name: "hwndCaret"
    type: "*RHWND__;;"
  }
  field {
    name: "rcCaret"
    type: "RtagRECT;"
  }
}
struct {
  name: "tagANIMATIONINFO"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "iMinAnimate"
    type: "I"
  }
}
struct {
  name: "tagANIMATIONINFO"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "iMinAnimate"
    type: "I"
  }
}
struct {
  name: "tagNMHDR"
  field {
    name: "hwndFrom"
    type: "*RHWND__;;"
  }
  field {
    name: "idFrom"
    type: "UI"
  }
  field {
    name: "code"
    type: "UI"
  }
}
struct {
  name: "tagNMHDR"
  field {
    name: "hwndFrom"
    type: "*RHWND__;;"
  }
  field {
    name: "idFrom"
    type: "UI"
  }
  field {
    name: "code"
    type: "UI"
  }
}
struct {
  name: "tagDRAWTEXTPARAMS"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "iTabLength"
    type: "I"
  }
  field {
    name: "iLeftMargin"
    type: "I"
  }
  field {
    name: "iRightMargin"
    type: "I"
  }
  field {
    name: "uiLengthDrawn"
    type: "UI"
  }
}
struct {
  name: "tagDRAWTEXTPARAMS"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "iTabLength"
    type: "I"
  }
  field {
    name: "iLeftMargin"
    type: "I"
  }
  field {
    name: "iRightMargin"
    type: "I"
  }
  field {
    name: "uiLengthDrawn"
    type: "UI"
  }
}
struct {
  name: "CWPSTRUCT"
  field {
    name: "lParam"
    type: "I"
  }
  field {
    name: "wParam"
    type: "UI"
  }
  field {
    name: "message"
    type: "UI"
  }
  field {
    name: "hwnd"
    type: "*RHWND__;;"
  }
}
struct {
  name: "CWPSTRUCT"
  field {
    name: "lParam"
    type: "I"
  }
  field {
    name: "wParam"
    type: "UI"
  }
  field {
    name: "message"
    type: "UI"
  }
  field {
    name: "hwnd"
    type: "*RHWND__;;"
  }
}
struct {
  name: "CWPSTRUCT"
  field {
    name: "lParam"
    type: "I"
  }
  field {
    name: "wParam"
    type: "UI"
  }
  field {
    name: "message"
    type: "UI"
  }
  field {
    name: "hwnd"
    type: "*RHWND__;;"
  }
}
struct {
  name: "CWPRETSTRUCT"
  field {
    name: "lResult"
    type: "I"
  }
  field {
    name: "lParam"
    type: "I"
  }
  field {
    name: "wParam"
    type: "UI"
  }
  field {
    name: "message"
    type: "UI"
  }
  field {
    name: "hwnd"
    type: "*RHWND__;;"
  }
}
struct {
  name: "CWPRETSTRUCT"
  field {
    name: "lResult"
    type: "I"
  }
  field {
    name: "lParam"
    type: "I"
  }
  field {
    name: "wParam"
    type: "UI"
  }
  field {
    name: "message"
    type: "UI"
  }
  field {
    name: "hwnd"
    type: "*RHWND__;;"
  }
}
struct {
  name: "CWPRETSTRUCT"
  field {
    name: "lResult"
    type: "I"
  }
  field {
    name: "lParam"
    type: "I"
  }
  field {
    name: "wParam"
    type: "UI"
  }
  field {
    name: "message"
    type: "UI"
  }
  field {
    name: "hwnd"
    type: "*RHWND__;;"
  }
}
struct {
  name: "tagWINDOWPLACEMENT"
  field {
    name: "length"
    type: "UI"
  }
  field {
    name: "flags"
    type: "UI"
  }
  field {
    name: "showCmd"
    type: "UI"
  }
  field {
    name: "ptMinPosition"
    type: "RtagPOINT;"
  }
  field {
    name: "ptMaxPosition"
    type: "RtagPOINT;"
  }
  field {
    name: "rcNormalPosition"
    type: "RtagRECT;"
  }
}
struct {
  name: "tagWINDOWPLACEMENT"
  field {
    name: "length"
    type: "UI"
  }
  field {
    name: "flags"
    type: "UI"
  }
  field {
    name: "showCmd"
    type: "UI"
  }
  field {
    name: "ptMinPosition"
    type: "RtagPOINT;"
  }
  field {
    name: "ptMaxPosition"
    type: "RtagPOINT;"
  }
  field {
    name: "rcNormalPosition"
    type: "RtagRECT;"
  }
}
struct {
  name: "tagWINDOWPLACEMENT"
  field {
    name: "length"
    type: "UI"
  }
  field {
    name: "flags"
    type: "UI"
  }
  field {
    name: "showCmd"
    type: "UI"
  }
  field {
    name: "ptMinPosition"
    type: "RtagPOINT;"
  }
  field {
    name: "ptMaxPosition"
    type: "RtagPOINT;"
  }
  field {
    name: "rcNormalPosition"
    type: "RtagRECT;"
  }
}
struct {
  name: "tagCREATESTRUCTA"
  field {
    name: "lpCreateParams"
    type: "*V;"
  }
  field {
    name: "hInstance"
    type: "*RHINSTANCE__;;"
  }
  field {
    name: "hMenu"
    type: "*RHMENU__;;"
  }
  field {
    name: "hwndParent"
    type: "*RHWND__;;"
  }
  field {
    name: "cy"
    type: "I"
  }
  field {
    name: "cx"
    type: "I"
  }
  field {
    name: "y"
    type: "I"
  }
  field {
    name: "x"
    type: "I"
  }
  field {
    name: "style"
    type: "I"
  }
  field {
    name: "lpszName"
    type: "*cC;"
  }
  field {
    name: "lpszClass"
    type: "*cC;"
  }
  field {
    name: "dwExStyle"
    type: "UI"
  }
}
struct {
  name: "tagCREATESTRUCTA"
  field {
    name: "lpCreateParams"
    type: "*V;"
  }
  field {
    name: "hInstance"
    type: "*RHINSTANCE__;;"
  }
  field {
    name: "hMenu"
    type: "*RHMENU__;;"
  }
  field {
    name: "hwndParent"
    type: "*RHWND__;;"
  }
  field {
    name: "cy"
    type: "I"
  }
  field {
    name: "cx"
    type: "I"
  }
  field {
    name: "y"
    type: "I"
  }
  field {
    name: "x"
    type: "I"
  }
  field {
    name: "style"
    type: "I"
  }
  field {
    name: "lpszName"
    type: "*cC;"
  }
  field {
    name: "lpszClass"
    type: "*cC;"
  }
  field {
    name: "dwExStyle"
    type: "UI"
  }
}
struct {
  name: "tagCREATESTRUCTW"
  field {
    name: "lpCreateParams"
    type: "*V;"
  }
  field {
    name: "hInstance"
    type: "*RHINSTANCE__;;"
  }
  field {
    name: "hMenu"
    type: "*RHMENU__;;"
  }
  field {
    name: "hwndParent"
    type: "*RHWND__;;"
  }
  field {
    name: "cy"
    type: "I"
  }
  field {
    name: "cx"
    type: "I"
  }
  field {
    name: "y"
    type: "I"
  }
  field {
    name: "x"
    type: "I"
  }
  field {
    name: "style"
    type: "I"
  }
  field {
    name: "lpszName"
    type: "*cUS;"
  }
  field {
    name: "lpszClass"
    type: "*cUS;"
  }
  field {
    name: "dwExStyle"
    type: "UI"
  }
}
struct {
  name: "tagCREATESTRUCTW"
  field {
    name: "lpCreateParams"
    type: "*V;"
  }
  field {
    name: "hInstance"
    type: "*RHINSTANCE__;;"
  }
  field {
    name: "hMenu"
    type: "*RHMENU__;;"
  }
  field {
    name: "hwndParent"
    type: "*RHWND__;;"
  }
  field {
    name: "cy"
    type: "I"
  }
  field {
    name: "cx"
    type: "I"
  }
  field {
    name: "y"
    type: "I"
  }
  field {
    name: "x"
    type: "I"
  }
  field {
    name: "style"
    type: "I"
  }
  field {
    name: "lpszName"
    type: "*cUS;"
  }
  field {
    name: "lpszClass"
    type: "*cUS;"
  }
  field {
    name: "dwExStyle"
    type: "UI"
  }
}
struct {
  name: "tagPAINTSTRUCT"
  field {
    name: "hdc"
    type: "*RHDC__;;"
  }
  field {
    name: "fErase"
    type: "I"
  }
  field {
    name: "rcPaint"
    type: "RtagRECT;"
  }
  field {
    name: "fRestore"
    type: "I"
  }
  field {
    name: "fIncUpdate"
    type: "I"
  }
  field {
    name: "rgbReserved"
    type: "X(ConstantArray.BYTE [32])"
  }
}
struct {
  name: "tagPAINTSTRUCT"
  field {
    name: "hdc"
    type: "*RHDC__;;"
  }
  field {
    name: "fErase"
    type: "I"
  }
  field {
    name: "rcPaint"
    type: "RtagRECT;"
  }
  field {
    name: "fRestore"
    type: "I"
  }
  field {
    name: "fIncUpdate"
    type: "I"
  }
  field {
    name: "rgbReserved"
    type: "X(ConstantArray.BYTE [32])"
  }
}
struct {
  name: "tagPAINTSTRUCT"
  field {
    name: "hdc"
    type: "*RHDC__;;"
  }
  field {
    name: "fErase"
    type: "I"
  }
  field {
    name: "rcPaint"
    type: "RtagRECT;"
  }
  field {
    name: "fRestore"
    type: "I"
  }
  field {
    name: "fIncUpdate"
    type: "I"
  }
  field {
    name: "rgbReserved"
    type: "X(ConstantArray.BYTE [32])"
  }
}
struct {
  name: "tagCLIENTCREATESTRUCT"
  field {
    name: "hWindowMenu"
    type: "*RHMENU__;;"
  }
  field {
    name: "idFirstChild"
    type: "UI"
  }
}
struct {
  name: "tagCLIENTCREATESTRUCT"
  field {
    name: "hWindowMenu"
    type: "*RHMENU__;;"
  }
  field {
    name: "idFirstChild"
    type: "UI"
  }
}
struct {
  name: "tagMDICREATESTRUCTA"
  field {
    name: "szClass"
    type: "*cC;"
  }
  field {
    name: "szTitle"
    type: "*cC;"
  }
  field {
    name: "hOwner"
    type: "*RHINSTANCE__;;"
  }
  field {
    name: "x"
    type: "I"
  }
  field {
    name: "y"
    type: "I"
  }
  field {
    name: "cx"
    type: "I"
  }
  field {
    name: "cy"
    type: "I"
  }
  field {
    name: "style"
    type: "UI"
  }
  field {
    name: "lParam"
    type: "I"
  }
}
struct {
  name: "tagMDICREATESTRUCTA"
  field {
    name: "szClass"
    type: "*cC;"
  }
  field {
    name: "szTitle"
    type: "*cC;"
  }
  field {
    name: "hOwner"
    type: "*RHINSTANCE__;;"
  }
  field {
    name: "x"
    type: "I"
  }
  field {
    name: "y"
    type: "I"
  }
  field {
    name: "cx"
    type: "I"
  }
  field {
    name: "cy"
    type: "I"
  }
  field {
    name: "style"
    type: "UI"
  }
  field {
    name: "lParam"
    type: "I"
  }
}
struct {
  name: "tagMDICREATESTRUCTW"
  field {
    name: "szClass"
    type: "*cUS;"
  }
  field {
    name: "szTitle"
    type: "*cUS;"
  }
  field {
    name: "hOwner"
    type: "*RHINSTANCE__;;"
  }
  field {
    name: "x"
    type: "I"
  }
  field {
    name: "y"
    type: "I"
  }
  field {
    name: "cx"
    type: "I"
  }
  field {
    name: "cy"
    type: "I"
  }
  field {
    name: "style"
    type: "UI"
  }
  field {
    name: "lParam"
    type: "I"
  }
}
struct {
  name: "tagMDICREATESTRUCTW"
  field {
    name: "szClass"
    type: "*cUS;"
  }
  field {
    name: "szTitle"
    type: "*cUS;"
  }
  field {
    name: "hOwner"
    type: "*RHINSTANCE__;;"
  }
  field {
    name: "x"
    type: "I"
  }
  field {
    name: "y"
    type: "I"
  }
  field {
    name: "cx"
    type: "I"
  }
  field {
    name: "cy"
    type: "I"
  }
  field {
    name: "style"
    type: "UI"
  }
  field {
    name: "lParam"
    type: "I"
  }
}
struct {
  name: "tagSTYLESTRUCT"
  field {
    name: "styleOld"
    type: "UI"
  }
  field {
    name: "styleNew"
    type: "UI"
  }
}
struct {
  name: "tagSTYLESTRUCT"
  field {
    name: "styleOld"
    type: "UI"
  }
  field {
    name: "styleNew"
    type: "UI"
  }
}
struct {
  name: "tagMINMAXINFO"
  field {
    name: "ptReserved"
    type: "RtagPOINT;"
  }
  field {
    name: "ptMaxSize"
    type: "RtagPOINT;"
  }
  field {
    name: "ptMaxPosition"
    type: "RtagPOINT;"
  }
  field {
    name: "ptMinTrackSize"
    type: "RtagPOINT;"
  }
  field {
    name: "ptMaxTrackSize"
    type: "RtagPOINT;"
  }
}
struct {
  name: "tagMINMAXINFO"
  field {
    name: "ptReserved"
    type: "RtagPOINT;"
  }
  field {
    name: "ptMaxSize"
    type: "RtagPOINT;"
  }
  field {
    name: "ptMaxPosition"
    type: "RtagPOINT;"
  }
  field {
    name: "ptMinTrackSize"
    type: "RtagPOINT;"
  }
  field {
    name: "ptMaxTrackSize"
    type: "RtagPOINT;"
  }
}
struct {
  name: "tagMINMAXINFO"
  field {
    name: "ptReserved"
    type: "RtagPOINT;"
  }
  field {
    name: "ptMaxSize"
    type: "RtagPOINT;"
  }
  field {
    name: "ptMaxPosition"
    type: "RtagPOINT;"
  }
  field {
    name: "ptMinTrackSize"
    type: "RtagPOINT;"
  }
  field {
    name: "ptMaxTrackSize"
    type: "RtagPOINT;"
  }
}
struct {
  name: "tagWINDOWPOS"
  field {
    name: "hwnd"
    type: "*RHWND__;;"
  }
  field {
    name: "hwndInsertAfter"
    type: "*RHWND__;;"
  }
  field {
    name: "x"
    type: "I"
  }
  field {
    name: "y"
    type: "I"
  }
  field {
    name: "cx"
    type: "I"
  }
  field {
    name: "cy"
    type: "I"
  }
  field {
    name: "flags"
    type: "UI"
  }
}
struct {
  name: "tagWINDOWPOS"
  field {
    name: "hwnd"
    type: "*RHWND__;;"
  }
  field {
    name: "hwndInsertAfter"
    type: "*RHWND__;;"
  }
  field {
    name: "x"
    type: "I"
  }
  field {
    name: "y"
    type: "I"
  }
  field {
    name: "cx"
    type: "I"
  }
  field {
    name: "cy"
    type: "I"
  }
  field {
    name: "flags"
    type: "UI"
  }
}
struct {
  name: "tagWINDOWPOS"
  field {
    name: "hwnd"
    type: "*RHWND__;;"
  }
  field {
    name: "hwndInsertAfter"
    type: "*RHWND__;;"
  }
  field {
    name: "x"
    type: "I"
  }
  field {
    name: "y"
    type: "I"
  }
  field {
    name: "cx"
    type: "I"
  }
  field {
    name: "cy"
    type: "I"
  }
  field {
    name: "flags"
    type: "UI"
  }
}
struct {
  name: "NCCALCSIZE_PARAMS"
  field {
    name: "rgrc"
    type: "X(ConstantArray.RECT [3])"
  }
  field {
    name: "lppos"
    type: "*RtagWINDOWPOS;;"
  }
}
struct {
  name: "NCCALCSIZE_PARAMS"
  field {
    name: "rgrc"
    type: "X(ConstantArray.RECT [3])"
  }
  field {
    name: "lppos"
    type: "*RtagWINDOWPOS;;"
  }
}
struct {
  name: "tagWNDCLASSA"
  field {
    name: "style"
    type: "UI"
  }
  field {
    name: "lpfnWndProc"
    type: "*(*RHWND__;;UIUII)I;"
  }
  field {
    name: "cbClsExtra"
    type: "I"
  }
  field {
    name: "cbWndExtra"
    type: "I"
  }
  field {
    name: "hInstance"
    type: "*RHINSTANCE__;;"
  }
  field {
    name: "hIcon"
    type: "*RHICON__;;"
  }
  field {
    name: "hCursor"
    type: "*RHICON__;;"
  }
  field {
    name: "hbrBackground"
    type: "*RHBRUSH__;;"
  }
  field {
    name: "lpszMenuName"
    type: "*cC;"
  }
  field {
    name: "lpszClassName"
    type: "*cC;"
  }
}
struct {
  name: "tagWNDCLASSA"
  field {
    name: "style"
    type: "UI"
  }
  field {
    name: "lpfnWndProc"
    type: "*(*RHWND__;;UIUII)I;"
  }
  field {
    name: "cbClsExtra"
    type: "I"
  }
  field {
    name: "cbWndExtra"
    type: "I"
  }
  field {
    name: "hInstance"
    type: "*RHINSTANCE__;;"
  }
  field {
    name: "hIcon"
    type: "*RHICON__;;"
  }
  field {
    name: "hCursor"
    type: "*RHICON__;;"
  }
  field {
    name: "hbrBackground"
    type: "*RHBRUSH__;;"
  }
  field {
    name: "lpszMenuName"
    type: "*cC;"
  }
  field {
    name: "lpszClassName"
    type: "*cC;"
  }
}
struct {
  name: "tagWNDCLASSA"
  field {
    name: "style"
    type: "UI"
  }
  field {
    name: "lpfnWndProc"
    type: "*(*RHWND__;;UIUII)I;"
  }
  field {
    name: "cbClsExtra"
    type: "I"
  }
  field {
    name: "cbWndExtra"
    type: "I"
  }
  field {
    name: "hInstance"
    type: "*RHINSTANCE__;;"
  }
  field {
    name: "hIcon"
    type: "*RHICON__;;"
  }
  field {
    name: "hCursor"
    type: "*RHICON__;;"
  }
  field {
    name: "hbrBackground"
    type: "*RHBRUSH__;;"
  }
  field {
    name: "lpszMenuName"
    type: "*cC;"
  }
  field {
    name: "lpszClassName"
    type: "*cC;"
  }
}
struct {
  name: "tagWNDCLASSW"
  field {
    name: "style"
    type: "UI"
  }
  field {
    name: "lpfnWndProc"
    type: "*(*RHWND__;;UIUII)I;"
  }
  field {
    name: "cbClsExtra"
    type: "I"
  }
  field {
    name: "cbWndExtra"
    type: "I"
  }
  field {
    name: "hInstance"
    type: "*RHINSTANCE__;;"
  }
  field {
    name: "hIcon"
    type: "*RHICON__;;"
  }
  field {
    name: "hCursor"
    type: "*RHICON__;;"
  }
  field {
    name: "hbrBackground"
    type: "*RHBRUSH__;;"
  }
  field {
    name: "lpszMenuName"
    type: "*cUS;"
  }
  field {
    name: "lpszClassName"
    type: "*cUS;"
  }
}
struct {
  name: "tagWNDCLASSW"
  field {
    name: "style"
    type: "UI"
  }
  field {
    name: "lpfnWndProc"
    type: "*(*RHWND__;;UIUII)I;"
  }
  field {
    name: "cbClsExtra"
    type: "I"
  }
  field {
    name: "cbWndExtra"
    type: "I"
  }
  field {
    name: "hInstance"
    type: "*RHINSTANCE__;;"
  }
  field {
    name: "hIcon"
    type: "*RHICON__;;"
  }
  field {
    name: "hCursor"
    type: "*RHICON__;;"
  }
  field {
    name: "hbrBackground"
    type: "*RHBRUSH__;;"
  }
  field {
    name: "lpszMenuName"
    type: "*cUS;"
  }
  field {
    name: "lpszClassName"
    type: "*cUS;"
  }
}
struct {
  name: "tagWNDCLASSW"
  field {
    name: "style"
    type: "UI"
  }
  field {
    name: "lpfnWndProc"
    type: "*(*RHWND__;;UIUII)I;"
  }
  field {
    name: "cbClsExtra"
    type: "I"
  }
  field {
    name: "cbWndExtra"
    type: "I"
  }
  field {
    name: "hInstance"
    type: "*RHINSTANCE__;;"
  }
  field {
    name: "hIcon"
    type: "*RHICON__;;"
  }
  field {
    name: "hCursor"
    type: "*RHICON__;;"
  }
  field {
    name: "hbrBackground"
    type: "*RHBRUSH__;;"
  }
  field {
    name: "lpszMenuName"
    type: "*cUS;"
  }
  field {
    name: "lpszClassName"
    type: "*cUS;"
  }
}
struct {
  name: "tagCOPYDATASTRUCT"
  field {
    name: "dwData"
    type: "UI"
  }
  field {
    name: "cbData"
    type: "UI"
  }
  field {
    name: "lpData"
    type: "*V;"
  }
}
struct {
  name: "tagCOPYDATASTRUCT"
  field {
    name: "dwData"
    type: "UI"
  }
  field {
    name: "cbData"
    type: "UI"
  }
  field {
    name: "lpData"
    type: "*V;"
  }
}
struct {
  name: "tagMDINEXTMENU"
  field {
    name: "hmenuIn"
    type: "*RHMENU__;;"
  }
  field {
    name: "hmenuNext"
    type: "*RHMENU__;;"
  }
  field {
    name: "hwndNext"
    type: "*RHWND__;;"
  }
}
struct {
  name: "tagMDINEXTMENU"
  field {
    name: "hmenuIn"
    type: "*RHMENU__;;"
  }
  field {
    name: "hmenuNext"
    type: "*RHMENU__;;"
  }
  field {
    name: "hwndNext"
    type: "*RHWND__;;"
  }
}
struct {
  name: "tagMDINEXTMENU"
  field {
    name: "hmenuIn"
    type: "*RHMENU__;;"
  }
  field {
    name: "hmenuNext"
    type: "*RHMENU__;;"
  }
  field {
    name: "hwndNext"
    type: "*RHWND__;;"
  }
}
struct {
  name: "tagMULTIKEYHELPA"
  field {
    name: "mkSize"
    type: "UI"
  }
  field {
    name: "mkKeylist"
    type: "C"
  }
  field {
    name: "szKeyphrase"
    type: "X(ConstantArray.CHAR [1])"
  }
}
struct {
  name: "tagMULTIKEYHELPA"
  field {
    name: "mkSize"
    type: "UI"
  }
  field {
    name: "mkKeylist"
    type: "C"
  }
  field {
    name: "szKeyphrase"
    type: "X(ConstantArray.CHAR [1])"
  }
}
struct {
  name: "tagMULTIKEYHELPA"
  field {
    name: "mkSize"
    type: "UI"
  }
  field {
    name: "mkKeylist"
    type: "C"
  }
  field {
    name: "szKeyphrase"
    type: "X(ConstantArray.CHAR [1])"
  }
}
struct {
  name: "tagMULTIKEYHELPW"
  field {
    name: "mkSize"
    type: "UI"
  }
  field {
    name: "mkKeylist"
    type: "US"
  }
  field {
    name: "szKeyphrase"
    type: "X(ConstantArray.WCHAR [1])"
  }
}
struct {
  name: "tagMULTIKEYHELPW"
  field {
    name: "mkSize"
    type: "UI"
  }
  field {
    name: "mkKeylist"
    type: "US"
  }
  field {
    name: "szKeyphrase"
    type: "X(ConstantArray.WCHAR [1])"
  }
}
struct {
  name: "tagMULTIKEYHELPW"
  field {
    name: "mkSize"
    type: "UI"
  }
  field {
    name: "mkKeylist"
    type: "US"
  }
  field {
    name: "szKeyphrase"
    type: "X(ConstantArray.WCHAR [1])"
  }
}
struct {
  name: "tagHELPWININFOA"
  field {
    name: "wStructSize"
    type: "I"
  }
  field {
    name: "x"
    type: "I"
  }
  field {
    name: "y"
    type: "I"
  }
  field {
    name: "dx"
    type: "I"
  }
  field {
    name: "dy"
    type: "I"
  }
  field {
    name: "wMax"
    type: "I"
  }
  field {
    name: "rgchMember"
    type: "X(ConstantArray.CHAR [2])"
  }
}
struct {
  name: "tagHELPWININFOA"
  field {
    name: "wStructSize"
    type: "I"
  }
  field {
    name: "x"
    type: "I"
  }
  field {
    name: "y"
    type: "I"
  }
  field {
    name: "dx"
    type: "I"
  }
  field {
    name: "dy"
    type: "I"
  }
  field {
    name: "wMax"
    type: "I"
  }
  field {
    name: "rgchMember"
    type: "X(ConstantArray.CHAR [2])"
  }
}
struct {
  name: "tagHELPWININFOA"
  field {
    name: "wStructSize"
    type: "I"
  }
  field {
    name: "x"
    type: "I"
  }
  field {
    name: "y"
    type: "I"
  }
  field {
    name: "dx"
    type: "I"
  }
  field {
    name: "dy"
    type: "I"
  }
  field {
    name: "wMax"
    type: "I"
  }
  field {
    name: "rgchMember"
    type: "X(ConstantArray.CHAR [2])"
  }
}
struct {
  name: "tagHELPWININFOW"
  field {
    name: "wStructSize"
    type: "I"
  }
  field {
    name: "x"
    type: "I"
  }
  field {
    name: "y"
    type: "I"
  }
  field {
    name: "dx"
    type: "I"
  }
  field {
    name: "dy"
    type: "I"
  }
  field {
    name: "wMax"
    type: "I"
  }
  field {
    name: "rgchMember"
    type: "X(ConstantArray.WCHAR [2])"
  }
}
struct {
  name: "tagHELPWININFOW"
  field {
    name: "wStructSize"
    type: "I"
  }
  field {
    name: "x"
    type: "I"
  }
  field {
    name: "y"
    type: "I"
  }
  field {
    name: "dx"
    type: "I"
  }
  field {
    name: "dy"
    type: "I"
  }
  field {
    name: "wMax"
    type: "I"
  }
  field {
    name: "rgchMember"
    type: "X(ConstantArray.WCHAR [2])"
  }
}
struct {
  name: "tagHELPWININFOW"
  field {
    name: "wStructSize"
    type: "I"
  }
  field {
    name: "x"
    type: "I"
  }
  field {
    name: "y"
    type: "I"
  }
  field {
    name: "dx"
    type: "I"
  }
  field {
    name: "dy"
    type: "I"
  }
  field {
    name: "wMax"
    type: "I"
  }
  field {
    name: "rgchMember"
    type: "X(ConstantArray.WCHAR [2])"
  }
}
struct {
  name: "tagWNDCLASSEXA"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "style"
    type: "UI"
  }
  field {
    name: "lpfnWndProc"
    type: "*(*RHWND__;;UIUII)I;"
  }
  field {
    name: "cbClsExtra"
    type: "I"
  }
  field {
    name: "cbWndExtra"
    type: "I"
  }
  field {
    name: "hInstance"
    type: "*RHINSTANCE__;;"
  }
  field {
    name: "hIcon"
    type: "*RHICON__;;"
  }
  field {
    name: "hCursor"
    type: "*RHICON__;;"
  }
  field {
    name: "hbrBackground"
    type: "*RHBRUSH__;;"
  }
  field {
    name: "lpszMenuName"
    type: "*cC;"
  }
  field {
    name: "lpszClassName"
    type: "*cC;"
  }
  field {
    name: "hIconSm"
    type: "*RHICON__;;"
  }
}
struct {
  name: "tagWNDCLASSEXA"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "style"
    type: "UI"
  }
  field {
    name: "lpfnWndProc"
    type: "*(*RHWND__;;UIUII)I;"
  }
  field {
    name: "cbClsExtra"
    type: "I"
  }
  field {
    name: "cbWndExtra"
    type: "I"
  }
  field {
    name: "hInstance"
    type: "*RHINSTANCE__;;"
  }
  field {
    name: "hIcon"
    type: "*RHICON__;;"
  }
  field {
    name: "hCursor"
    type: "*RHICON__;;"
  }
  field {
    name: "hbrBackground"
    type: "*RHBRUSH__;;"
  }
  field {
    name: "lpszMenuName"
    type: "*cC;"
  }
  field {
    name: "lpszClassName"
    type: "*cC;"
  }
  field {
    name: "hIconSm"
    type: "*RHICON__;;"
  }
}
struct {
  name: "tagWNDCLASSEXA"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "style"
    type: "UI"
  }
  field {
    name: "lpfnWndProc"
    type: "*(*RHWND__;;UIUII)I;"
  }
  field {
    name: "cbClsExtra"
    type: "I"
  }
  field {
    name: "cbWndExtra"
    type: "I"
  }
  field {
    name: "hInstance"
    type: "*RHINSTANCE__;;"
  }
  field {
    name: "hIcon"
    type: "*RHICON__;;"
  }
  field {
    name: "hCursor"
    type: "*RHICON__;;"
  }
  field {
    name: "hbrBackground"
    type: "*RHBRUSH__;;"
  }
  field {
    name: "lpszMenuName"
    type: "*cC;"
  }
  field {
    name: "lpszClassName"
    type: "*cC;"
  }
  field {
    name: "hIconSm"
    type: "*RHICON__;;"
  }
}
struct {
  name: "tagWNDCLASSEXW"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "style"
    type: "UI"
  }
  field {
    name: "lpfnWndProc"
    type: "*(*RHWND__;;UIUII)I;"
  }
  field {
    name: "cbClsExtra"
    type: "I"
  }
  field {
    name: "cbWndExtra"
    type: "I"
  }
  field {
    name: "hInstance"
    type: "*RHINSTANCE__;;"
  }
  field {
    name: "hIcon"
    type: "*RHICON__;;"
  }
  field {
    name: "hCursor"
    type: "*RHICON__;;"
  }
  field {
    name: "hbrBackground"
    type: "*RHBRUSH__;;"
  }
  field {
    name: "lpszMenuName"
    type: "*cUS;"
  }
  field {
    name: "lpszClassName"
    type: "*cUS;"
  }
  field {
    name: "hIconSm"
    type: "*RHICON__;;"
  }
}
struct {
  name: "tagWNDCLASSEXW"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "style"
    type: "UI"
  }
  field {
    name: "lpfnWndProc"
    type: "*(*RHWND__;;UIUII)I;"
  }
  field {
    name: "cbClsExtra"
    type: "I"
  }
  field {
    name: "cbWndExtra"
    type: "I"
  }
  field {
    name: "hInstance"
    type: "*RHINSTANCE__;;"
  }
  field {
    name: "hIcon"
    type: "*RHICON__;;"
  }
  field {
    name: "hCursor"
    type: "*RHICON__;;"
  }
  field {
    name: "hbrBackground"
    type: "*RHBRUSH__;;"
  }
  field {
    name: "lpszMenuName"
    type: "*cUS;"
  }
  field {
    name: "lpszClassName"
    type: "*cUS;"
  }
  field {
    name: "hIconSm"
    type: "*RHICON__;;"
  }
}
struct {
  name: "tagWNDCLASSEXW"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "style"
    type: "UI"
  }
  field {
    name: "lpfnWndProc"
    type: "*(*RHWND__;;UIUII)I;"
  }
  field {
    name: "cbClsExtra"
    type: "I"
  }
  field {
    name: "cbWndExtra"
    type: "I"
  }
  field {
    name: "hInstance"
    type: "*RHINSTANCE__;;"
  }
  field {
    name: "hIcon"
    type: "*RHICON__;;"
  }
  field {
    name: "hCursor"
    type: "*RHICON__;;"
  }
  field {
    name: "hbrBackground"
    type: "*RHBRUSH__;;"
  }
  field {
    name: "lpszMenuName"
    type: "*cUS;"
  }
  field {
    name: "lpszClassName"
    type: "*cUS;"
  }
  field {
    name: "hIconSm"
    type: "*RHICON__;;"
  }
}
struct {
  name: "tagMSG"
  field {
    name: "hwnd"
    type: "*RHWND__;;"
  }
  field {
    name: "message"
    type: "UI"
  }
  field {
    name: "wParam"
    type: "UI"
  }
  field {
    name: "lParam"
    type: "I"
  }
  field {
    name: "time"
    type: "UI"
  }
  field {
    name: "pt"
    type: "RtagPOINT;"
  }
}
struct {
  name: "tagMSG"
  field {
    name: "hwnd"
    type: "*RHWND__;;"
  }
  field {
    name: "message"
    type: "UI"
  }
  field {
    name: "wParam"
    type: "UI"
  }
  field {
    name: "lParam"
    type: "I"
  }
  field {
    name: "time"
    type: "UI"
  }
  field {
    name: "pt"
    type: "RtagPOINT;"
  }
}
struct {
  name: "tagMSG"
  field {
    name: "hwnd"
    type: "*RHWND__;;"
  }
  field {
    name: "message"
    type: "UI"
  }
  field {
    name: "wParam"
    type: "UI"
  }
  field {
    name: "lParam"
    type: "I"
  }
  field {
    name: "time"
    type: "UI"
  }
  field {
    name: "pt"
    type: "RtagPOINT;"
  }
}
struct {
  name: "_ICONINFO"
  field {
    name: "fIcon"
    type: "I"
  }
  field {
    name: "xHotspot"
    type: "UI"
  }
  field {
    name: "yHotspot"
    type: "UI"
  }
  field {
    name: "hbmMask"
    type: "*RHBITMAP__;;"
  }
  field {
    name: "hbmColor"
    type: "*RHBITMAP__;;"
  }
}
struct {
  name: "_ICONINFO"
  field {
    name: "fIcon"
    type: "I"
  }
  field {
    name: "xHotspot"
    type: "UI"
  }
  field {
    name: "yHotspot"
    type: "UI"
  }
  field {
    name: "hbmMask"
    type: "*RHBITMAP__;;"
  }
  field {
    name: "hbmColor"
    type: "*RHBITMAP__;;"
  }
}
struct {
  name: "_ICONINFOEXA"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "fIcon"
    type: "I"
  }
  field {
    name: "xHotspot"
    type: "UI"
  }
  field {
    name: "yHotspot"
    type: "UI"
  }
  field {
    name: "hbmMask"
    type: "*RHBITMAP__;;"
  }
  field {
    name: "hbmColor"
    type: "*RHBITMAP__;;"
  }
  field {
    name: "wResID"
    type: "US"
  }
  field {
    name: "szModName"
    type: "X(ConstantArray.CHAR [260])"
  }
  field {
    name: "szResName"
    type: "X(ConstantArray.CHAR [260])"
  }
}
struct {
  name: "_ICONINFOEXA"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "fIcon"
    type: "I"
  }
  field {
    name: "xHotspot"
    type: "UI"
  }
  field {
    name: "yHotspot"
    type: "UI"
  }
  field {
    name: "hbmMask"
    type: "*RHBITMAP__;;"
  }
  field {
    name: "hbmColor"
    type: "*RHBITMAP__;;"
  }
  field {
    name: "wResID"
    type: "US"
  }
  field {
    name: "szModName"
    type: "X(ConstantArray.CHAR [260])"
  }
  field {
    name: "szResName"
    type: "X(ConstantArray.CHAR [260])"
  }
}
struct {
  name: "_ICONINFOEXW"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "fIcon"
    type: "I"
  }
  field {
    name: "xHotspot"
    type: "UI"
  }
  field {
    name: "yHotspot"
    type: "UI"
  }
  field {
    name: "hbmMask"
    type: "*RHBITMAP__;;"
  }
  field {
    name: "hbmColor"
    type: "*RHBITMAP__;;"
  }
  field {
    name: "wResID"
    type: "US"
  }
  field {
    name: "szModName"
    type: "X(ConstantArray.WCHAR [260])"
  }
  field {
    name: "szResName"
    type: "X(ConstantArray.WCHAR [260])"
  }
}
struct {
  name: "_ICONINFOEXW"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "fIcon"
    type: "I"
  }
  field {
    name: "xHotspot"
    type: "UI"
  }
  field {
    name: "yHotspot"
    type: "UI"
  }
  field {
    name: "hbmMask"
    type: "*RHBITMAP__;;"
  }
  field {
    name: "hbmColor"
    type: "*RHBITMAP__;;"
  }
  field {
    name: "wResID"
    type: "US"
  }
  field {
    name: "szModName"
    type: "X(ConstantArray.WCHAR [260])"
  }
  field {
    name: "szResName"
    type: "X(ConstantArray.WCHAR [260])"
  }
}
struct {
  name: "tagCURSORINFO"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "flags"
    type: "UI"
  }
  field {
    name: "hCursor"
    type: "*RHICON__;;"
  }
  field {
    name: "ptScreenPos"
    type: "RtagPOINT;"
  }
}
struct {
  name: "tagCURSORINFO"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "flags"
    type: "UI"
  }
  field {
    name: "hCursor"
    type: "*RHICON__;;"
  }
  field {
    name: "ptScreenPos"
    type: "RtagPOINT;"
  }
}
struct {
  name: "tagCURSORINFO"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "flags"
    type: "UI"
  }
  field {
    name: "hCursor"
    type: "*RHICON__;;"
  }
  field {
    name: "ptScreenPos"
    type: "RtagPOINT;"
  }
}
struct {
  name: "tagACCEL"
  field {
    name: "fVirt"
    type: "UB"
  }
  field {
    name: "key"
    type: "US"
  }
  field {
    name: "cmd"
    type: "US"
  }
}
struct {
  name: "tagACCEL"
  field {
    name: "fVirt"
    type: "UB"
  }
  field {
    name: "key"
    type: "US"
  }
  field {
    name: "cmd"
    type: "US"
  }
}
struct {
  name: "tagTPMPARAMS"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "rcExclude"
    type: "RtagRECT;"
  }
}
struct {
  name: "tagTPMPARAMS"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "rcExclude"
    type: "RtagRECT;"
  }
}
struct {
  name: "tagCOMBOBOXINFO"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "rcItem"
    type: "RtagRECT;"
  }
  field {
    name: "rcButton"
    type: "RtagRECT;"
  }
  field {
    name: "stateButton"
    type: "UI"
  }
  field {
    name: "hwndCombo"
    type: "*RHWND__;;"
  }
  field {
    name: "hwndItem"
    type: "*RHWND__;;"
  }
  field {
    name: "hwndList"
    type: "*RHWND__;;"
  }
}
struct {
  name: "tagCOMBOBOXINFO"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "rcItem"
    type: "RtagRECT;"
  }
  field {
    name: "rcButton"
    type: "RtagRECT;"
  }
  field {
    name: "stateButton"
    type: "UI"
  }
  field {
    name: "hwndCombo"
    type: "*RHWND__;;"
  }
  field {
    name: "hwndItem"
    type: "*RHWND__;;"
  }
  field {
    name: "hwndList"
    type: "*RHWND__;;"
  }
}
struct {
  name: "tagCOMBOBOXINFO"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "rcItem"
    type: "RtagRECT;"
  }
  field {
    name: "rcButton"
    type: "RtagRECT;"
  }
  field {
    name: "stateButton"
    type: "UI"
  }
  field {
    name: "hwndCombo"
    type: "*RHWND__;;"
  }
  field {
    name: "hwndItem"
    type: "*RHWND__;;"
  }
  field {
    name: "hwndList"
    type: "*RHWND__;;"
  }
}
struct {
  name: "tagMENUITEMINFOA"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "fMask"
    type: "UI"
  }
  field {
    name: "fType"
    type: "UI"
  }
  field {
    name: "fState"
    type: "UI"
  }
  field {
    name: "wID"
    type: "UI"
  }
  field {
    name: "hSubMenu"
    type: "*RHMENU__;;"
  }
  field {
    name: "hbmpChecked"
    type: "*RHBITMAP__;;"
  }
  field {
    name: "hbmpUnchecked"
    type: "*RHBITMAP__;;"
  }
  field {
    name: "dwItemData"
    type: "UI"
  }
  field {
    name: "dwTypeData"
    type: "*C;"
  }
  field {
    name: "cch"
    type: "UI"
  }
  field {
    name: "hbmpItem"
    type: "*RHBITMAP__;;"
  }
}
struct {
  name: "tagMENUITEMINFOA"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "fMask"
    type: "UI"
  }
  field {
    name: "fType"
    type: "UI"
  }
  field {
    name: "fState"
    type: "UI"
  }
  field {
    name: "wID"
    type: "UI"
  }
  field {
    name: "hSubMenu"
    type: "*RHMENU__;;"
  }
  field {
    name: "hbmpChecked"
    type: "*RHBITMAP__;;"
  }
  field {
    name: "hbmpUnchecked"
    type: "*RHBITMAP__;;"
  }
  field {
    name: "dwItemData"
    type: "UI"
  }
  field {
    name: "dwTypeData"
    type: "*C;"
  }
  field {
    name: "cch"
    type: "UI"
  }
  field {
    name: "hbmpItem"
    type: "*RHBITMAP__;;"
  }
}
struct {
  name: "tagMENUITEMINFOW"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "fMask"
    type: "UI"
  }
  field {
    name: "fType"
    type: "UI"
  }
  field {
    name: "fState"
    type: "UI"
  }
  field {
    name: "wID"
    type: "UI"
  }
  field {
    name: "hSubMenu"
    type: "*RHMENU__;;"
  }
  field {
    name: "hbmpChecked"
    type: "*RHBITMAP__;;"
  }
  field {
    name: "hbmpUnchecked"
    type: "*RHBITMAP__;;"
  }
  field {
    name: "dwItemData"
    type: "UI"
  }
  field {
    name: "dwTypeData"
    type: "*US;"
  }
  field {
    name: "cch"
    type: "UI"
  }
  field {
    name: "hbmpItem"
    type: "*RHBITMAP__;;"
  }
}
struct {
  name: "tagMENUITEMINFOW"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "fMask"
    type: "UI"
  }
  field {
    name: "fType"
    type: "UI"
  }
  field {
    name: "fState"
    type: "UI"
  }
  field {
    name: "wID"
    type: "UI"
  }
  field {
    name: "hSubMenu"
    type: "*RHMENU__;;"
  }
  field {
    name: "hbmpChecked"
    type: "*RHBITMAP__;;"
  }
  field {
    name: "hbmpUnchecked"
    type: "*RHBITMAP__;;"
  }
  field {
    name: "dwItemData"
    type: "UI"
  }
  field {
    name: "dwTypeData"
    type: "*US;"
  }
  field {
    name: "cch"
    type: "UI"
  }
  field {
    name: "hbmpItem"
    type: "*RHBITMAP__;;"
  }
}
struct {
  name: "tagMENUBARINFO"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "rcBar"
    type: "RtagRECT;"
  }
  field {
    name: "hMenu"
    type: "*RHMENU__;;"
  }
  field {
    name: "hwndMenu"
    type: "*RHWND__;;"
  }
  field {
    name: "fBarFocused"
    type: "I"
  }
  field {
    name: "fFocused"
    type: "I"
  }
}
struct {
  name: "tagMENUBARINFO"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "rcBar"
    type: "RtagRECT;"
  }
  field {
    name: "hMenu"
    type: "*RHMENU__;;"
  }
  field {
    name: "hwndMenu"
    type: "*RHWND__;;"
  }
  field {
    name: "fBarFocused"
    type: "I"
  }
  field {
    name: "fFocused"
    type: "I"
  }
}
struct {
  name: "tagMENUBARINFO"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "rcBar"
    type: "RtagRECT;"
  }
  field {
    name: "hMenu"
    type: "*RHMENU__;;"
  }
  field {
    name: "hwndMenu"
    type: "*RHWND__;;"
  }
  field {
    name: "fBarFocused"
    type: "I"
  }
  field {
    name: "fFocused"
    type: "I"
  }
}
struct {
  name: "tagMENUINFO"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "fMask"
    type: "UI"
  }
  field {
    name: "dwStyle"
    type: "UI"
  }
  field {
    name: "cyMax"
    type: "UI"
  }
  field {
    name: "hbrBack"
    type: "*RHBRUSH__;;"
  }
  field {
    name: "dwContextHelpID"
    type: "UI"
  }
  field {
    name: "dwMenuData"
    type: "UI"
  }
}
struct {
  name: "tagMENUINFO"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "fMask"
    type: "UI"
  }
  field {
    name: "dwStyle"
    type: "UI"
  }
  field {
    name: "cyMax"
    type: "UI"
  }
  field {
    name: "hbrBack"
    type: "*RHBRUSH__;;"
  }
  field {
    name: "dwContextHelpID"
    type: "UI"
  }
  field {
    name: "dwMenuData"
    type: "UI"
  }
}
struct {
  name: "MENUITEMTEMPLATEHEADER"
  field {
    name: "versionNumber"
    type: "US"
  }
  field {
    name: "offset"
    type: "US"
  }
}
struct {
  name: "MENUITEMTEMPLATEHEADER"
  field {
    name: "versionNumber"
    type: "US"
  }
  field {
    name: "offset"
    type: "US"
  }
}
struct {
  name: "MENUITEMTEMPLATE"
  field {
    name: "mtOption"
    type: "US"
  }
  field {
    name: "mtID"
    type: "US"
  }
  field {
    name: "mtString"
    type: "X(ConstantArray.WCHAR [1])"
  }
}
struct {
  name: "MENUITEMTEMPLATE"
  field {
    name: "mtOption"
    type: "US"
  }
  field {
    name: "mtID"
    type: "US"
  }
  field {
    name: "mtString"
    type: "X(ConstantArray.WCHAR [1])"
  }
}
struct {
  name: "tagSCROLLINFO"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "fMask"
    type: "UI"
  }
  field {
    name: "nMin"
    type: "I"
  }
  field {
    name: "nMax"
    type: "I"
  }
  field {
    name: "nPage"
    type: "UI"
  }
  field {
    name: "nPos"
    type: "I"
  }
  field {
    name: "nTrackPos"
    type: "I"
  }
}
struct {
  name: "tagSCROLLINFO"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "fMask"
    type: "UI"
  }
  field {
    name: "nMin"
    type: "I"
  }
  field {
    name: "nMax"
    type: "I"
  }
  field {
    name: "nPage"
    type: "UI"
  }
  field {
    name: "nPos"
    type: "I"
  }
  field {
    name: "nTrackPos"
    type: "I"
  }
}
struct {
  name: "tagSCROLLBARINFO"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "rcScrollBar"
    type: "RtagRECT;"
  }
  field {
    name: "dxyLineButton"
    type: "I"
  }
  field {
    name: "xyThumbTop"
    type: "I"
  }
  field {
    name: "xyThumbBottom"
    type: "I"
  }
  field {
    name: "reserved"
    type: "I"
  }
  field {
    name: "rgstate"
    type: "X(ConstantArray.DWORD [6])"
  }
}
struct {
  name: "tagSCROLLBARINFO"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "rcScrollBar"
    type: "RtagRECT;"
  }
  field {
    name: "dxyLineButton"
    type: "I"
  }
  field {
    name: "xyThumbTop"
    type: "I"
  }
  field {
    name: "xyThumbBottom"
    type: "I"
  }
  field {
    name: "reserved"
    type: "I"
  }
  field {
    name: "rgstate"
    type: "X(ConstantArray.DWORD [6])"
  }
}
struct {
  name: "tagSCROLLBARINFO"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "rcScrollBar"
    type: "RtagRECT;"
  }
  field {
    name: "dxyLineButton"
    type: "I"
  }
  field {
    name: "xyThumbTop"
    type: "I"
  }
  field {
    name: "xyThumbBottom"
    type: "I"
  }
  field {
    name: "reserved"
    type: "I"
  }
  field {
    name: "rgstate"
    type: "X(ConstantArray.DWORD [6])"
  }
}
struct {
  name: "tagHELPINFO"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "iContextType"
    type: "I"
  }
  field {
    name: "iCtrlId"
    type: "I"
  }
  field {
    name: "hItemHandle"
    type: "*V;"
  }
  field {
    name: "dwContextId"
    type: "UI"
  }
  field {
    name: "MousePos"
    type: "RtagPOINT;"
  }
}
struct {
  name: "tagHELPINFO"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "iContextType"
    type: "I"
  }
  field {
    name: "iCtrlId"
    type: "I"
  }
  field {
    name: "hItemHandle"
    type: "*V;"
  }
  field {
    name: "dwContextId"
    type: "UI"
  }
  field {
    name: "MousePos"
    type: "RtagPOINT;"
  }
}
struct {
  name: "tagMSGBOXPARAMSA"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "hwndOwner"
    type: "*RHWND__;;"
  }
  field {
    name: "hInstance"
    type: "*RHINSTANCE__;;"
  }
  field {
    name: "lpszText"
    type: "*cC;"
  }
  field {
    name: "lpszCaption"
    type: "*cC;"
  }
  field {
    name: "dwStyle"
    type: "UI"
  }
  field {
    name: "lpszIcon"
    type: "*cC;"
  }
  field {
    name: "dwContextHelpId"
    type: "UI"
  }
  field {
    name: "lpfnMsgBoxCallback"
    type: "*(*RtagHELPINFO;;)V;"
  }
  field {
    name: "dwLanguageId"
    type: "UI"
  }
}
struct {
  name: "tagMSGBOXPARAMSA"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "hwndOwner"
    type: "*RHWND__;;"
  }
  field {
    name: "hInstance"
    type: "*RHINSTANCE__;;"
  }
  field {
    name: "lpszText"
    type: "*cC;"
  }
  field {
    name: "lpszCaption"
    type: "*cC;"
  }
  field {
    name: "dwStyle"
    type: "UI"
  }
  field {
    name: "lpszIcon"
    type: "*cC;"
  }
  field {
    name: "dwContextHelpId"
    type: "UI"
  }
  field {
    name: "lpfnMsgBoxCallback"
    type: "*(*RtagHELPINFO;;)V;"
  }
  field {
    name: "dwLanguageId"
    type: "UI"
  }
}
struct {
  name: "tagMSGBOXPARAMSA"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "hwndOwner"
    type: "*RHWND__;;"
  }
  field {
    name: "hInstance"
    type: "*RHINSTANCE__;;"
  }
  field {
    name: "lpszText"
    type: "*cC;"
  }
  field {
    name: "lpszCaption"
    type: "*cC;"
  }
  field {
    name: "dwStyle"
    type: "UI"
  }
  field {
    name: "lpszIcon"
    type: "*cC;"
  }
  field {
    name: "dwContextHelpId"
    type: "UI"
  }
  field {
    name: "lpfnMsgBoxCallback"
    type: "*(*RtagHELPINFO;;)V;"
  }
  field {
    name: "dwLanguageId"
    type: "UI"
  }
}
struct {
  name: "tagMSGBOXPARAMSW"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "hwndOwner"
    type: "*RHWND__;;"
  }
  field {
    name: "hInstance"
    type: "*RHINSTANCE__;;"
  }
  field {
    name: "lpszText"
    type: "*cUS;"
  }
  field {
    name: "lpszCaption"
    type: "*cUS;"
  }
  field {
    name: "dwStyle"
    type: "UI"
  }
  field {
    name: "lpszIcon"
    type: "*cUS;"
  }
  field {
    name: "dwContextHelpId"
    type: "UI"
  }
  field {
    name: "lpfnMsgBoxCallback"
    type: "*(*RtagHELPINFO;;)V;"
  }
  field {
    name: "dwLanguageId"
    type: "UI"
  }
}
struct {
  name: "tagMSGBOXPARAMSW"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "hwndOwner"
    type: "*RHWND__;;"
  }
  field {
    name: "hInstance"
    type: "*RHINSTANCE__;;"
  }
  field {
    name: "lpszText"
    type: "*cUS;"
  }
  field {
    name: "lpszCaption"
    type: "*cUS;"
  }
  field {
    name: "dwStyle"
    type: "UI"
  }
  field {
    name: "lpszIcon"
    type: "*cUS;"
  }
  field {
    name: "dwContextHelpId"
    type: "UI"
  }
  field {
    name: "lpfnMsgBoxCallback"
    type: "*(*RtagHELPINFO;;)V;"
  }
  field {
    name: "dwLanguageId"
    type: "UI"
  }
}
struct {
  name: "tagMSGBOXPARAMSW"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "hwndOwner"
    type: "*RHWND__;;"
  }
  field {
    name: "hInstance"
    type: "*RHINSTANCE__;;"
  }
  field {
    name: "lpszText"
    type: "*cUS;"
  }
  field {
    name: "lpszCaption"
    type: "*cUS;"
  }
  field {
    name: "dwStyle"
    type: "UI"
  }
  field {
    name: "lpszIcon"
    type: "*cUS;"
  }
  field {
    name: "dwContextHelpId"
    type: "UI"
  }
  field {
    name: "lpfnMsgBoxCallback"
    type: "*(*RtagHELPINFO;;)V;"
  }
  field {
    name: "dwLanguageId"
    type: "UI"
  }
}
struct {
  name: "tagMONITORINFO"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "rcMonitor"
    type: "RtagRECT;"
  }
  field {
    name: "rcWork"
    type: "RtagRECT;"
  }
  field {
    name: "dwFlags"
    type: "UI"
  }
}
struct {
  name: "tagMONITORINFO"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "rcMonitor"
    type: "RtagRECT;"
  }
  field {
    name: "rcWork"
    type: "RtagRECT;"
  }
  field {
    name: "dwFlags"
    type: "UI"
  }
}
struct {
  name: "tagMONITORINFOEXA"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "rcMonitor"
    type: "RtagRECT;"
  }
  field {
    name: "rcWork"
    type: "RtagRECT;"
  }
  field {
    name: "dwFlags"
    type: "UI"
  }
  field {
    name: "szDevice"
    type: "X(ConstantArray.CHAR [32])"
  }
}
struct {
  name: "tagMONITORINFOEXA"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "rcMonitor"
    type: "RtagRECT;"
  }
  field {
    name: "rcWork"
    type: "RtagRECT;"
  }
  field {
    name: "dwFlags"
    type: "UI"
  }
  field {
    name: "szDevice"
    type: "X(ConstantArray.CHAR [32])"
  }
}
struct {
  name: "tagMONITORINFOEXW"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "rcMonitor"
    type: "RtagRECT;"
  }
  field {
    name: "rcWork"
    type: "RtagRECT;"
  }
  field {
    name: "dwFlags"
    type: "UI"
  }
  field {
    name: "szDevice"
    type: "X(ConstantArray.WCHAR [32])"
  }
}
struct {
  name: "tagMONITORINFOEXW"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "rcMonitor"
    type: "RtagRECT;"
  }
  field {
    name: "rcWork"
    type: "RtagRECT;"
  }
  field {
    name: "dwFlags"
    type: "UI"
  }
  field {
    name: "szDevice"
    type: "X(ConstantArray.WCHAR [32])"
  }
}
struct {
  name: "tagDLGTEMPLATE"
  field {
    name: "style"
    type: "UI"
  }
  field {
    name: "dwExtendedStyle"
    type: "UI"
  }
  field {
    name: "cdit"
    type: "US"
  }
  field {
    name: "x"
    type: "S"
  }
  field {
    name: "y"
    type: "S"
  }
  field {
    name: "cx"
    type: "S"
  }
  field {
    name: "cy"
    type: "S"
  }
}
struct {
  name: "tagDLGITEMTEMPLATE"
  field {
    name: "style"
    type: "UI"
  }
  field {
    name: "dwExtendedStyle"
    type: "UI"
  }
  field {
    name: "x"
    type: "S"
  }
  field {
    name: "y"
    type: "S"
  }
  field {
    name: "cx"
    type: "S"
  }
  field {
    name: "cy"
    type: "S"
  }
  field {
    name: "id"
    type: "US"
  }
}
struct {
  name: "tagCBT_CREATEWNDA"
  field {
    name: "lpcs"
    type: "*RtagCREATESTRUCTA;;"
  }
  field {
    name: "hwndInsertAfter"
    type: "*RHWND__;;"
  }
}
struct {
  name: "tagCBT_CREATEWNDA"
  field {
    name: "lpcs"
    type: "*RtagCREATESTRUCTA;;"
  }
  field {
    name: "hwndInsertAfter"
    type: "*RHWND__;;"
  }
}
struct {
  name: "tagCBT_CREATEWNDW"
  field {
    name: "lpcs"
    type: "*RtagCREATESTRUCTW;;"
  }
  field {
    name: "hwndInsertAfter"
    type: "*RHWND__;;"
  }
}
struct {
  name: "tagCBT_CREATEWNDW"
  field {
    name: "lpcs"
    type: "*RtagCREATESTRUCTW;;"
  }
  field {
    name: "hwndInsertAfter"
    type: "*RHWND__;;"
  }
}
struct {
  name: "tagCBTACTIVATESTRUCT"
  field {
    name: "fMouse"
    type: "I"
  }
  field {
    name: "hWndActive"
    type: "*RHWND__;;"
  }
}
struct {
  name: "tagCBTACTIVATESTRUCT"
  field {
    name: "fMouse"
    type: "I"
  }
  field {
    name: "hWndActive"
    type: "*RHWND__;;"
  }
}
struct {
  name: "tagNONCLIENTMETRICSA"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "iBorderWidth"
    type: "I"
  }
  field {
    name: "iScrollWidth"
    type: "I"
  }
  field {
    name: "iScrollHeight"
    type: "I"
  }
  field {
    name: "iCaptionWidth"
    type: "I"
  }
  field {
    name: "iCaptionHeight"
    type: "I"
  }
  field {
    name: "lfCaptionFont"
    type: "RtagLOGFONTA;"
  }
  field {
    name: "iSmCaptionWidth"
    type: "I"
  }
  field {
    name: "iSmCaptionHeight"
    type: "I"
  }
  field {
    name: "lfSmCaptionFont"
    type: "RtagLOGFONTA;"
  }
  field {
    name: "iMenuWidth"
    type: "I"
  }
  field {
    name: "iMenuHeight"
    type: "I"
  }
  field {
    name: "lfMenuFont"
    type: "RtagLOGFONTA;"
  }
  field {
    name: "lfStatusFont"
    type: "RtagLOGFONTA;"
  }
  field {
    name: "lfMessageFont"
    type: "RtagLOGFONTA;"
  }
  field {
    name: "iPaddedBorderWidth"
    type: "I"
  }
}
struct {
  name: "tagNONCLIENTMETRICSA"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "iBorderWidth"
    type: "I"
  }
  field {
    name: "iScrollWidth"
    type: "I"
  }
  field {
    name: "iScrollHeight"
    type: "I"
  }
  field {
    name: "iCaptionWidth"
    type: "I"
  }
  field {
    name: "iCaptionHeight"
    type: "I"
  }
  field {
    name: "lfCaptionFont"
    type: "RtagLOGFONTA;"
  }
  field {
    name: "iSmCaptionWidth"
    type: "I"
  }
  field {
    name: "iSmCaptionHeight"
    type: "I"
  }
  field {
    name: "lfSmCaptionFont"
    type: "RtagLOGFONTA;"
  }
  field {
    name: "iMenuWidth"
    type: "I"
  }
  field {
    name: "iMenuHeight"
    type: "I"
  }
  field {
    name: "lfMenuFont"
    type: "RtagLOGFONTA;"
  }
  field {
    name: "lfStatusFont"
    type: "RtagLOGFONTA;"
  }
  field {
    name: "lfMessageFont"
    type: "RtagLOGFONTA;"
  }
  field {
    name: "iPaddedBorderWidth"
    type: "I"
  }
}
struct {
  name: "tagNONCLIENTMETRICSA"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "iBorderWidth"
    type: "I"
  }
  field {
    name: "iScrollWidth"
    type: "I"
  }
  field {
    name: "iScrollHeight"
    type: "I"
  }
  field {
    name: "iCaptionWidth"
    type: "I"
  }
  field {
    name: "iCaptionHeight"
    type: "I"
  }
  field {
    name: "lfCaptionFont"
    type: "RtagLOGFONTA;"
  }
  field {
    name: "iSmCaptionWidth"
    type: "I"
  }
  field {
    name: "iSmCaptionHeight"
    type: "I"
  }
  field {
    name: "lfSmCaptionFont"
    type: "RtagLOGFONTA;"
  }
  field {
    name: "iMenuWidth"
    type: "I"
  }
  field {
    name: "iMenuHeight"
    type: "I"
  }
  field {
    name: "lfMenuFont"
    type: "RtagLOGFONTA;"
  }
  field {
    name: "lfStatusFont"
    type: "RtagLOGFONTA;"
  }
  field {
    name: "lfMessageFont"
    type: "RtagLOGFONTA;"
  }
  field {
    name: "iPaddedBorderWidth"
    type: "I"
  }
}
struct {
  name: "tagNONCLIENTMETRICSW"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "iBorderWidth"
    type: "I"
  }
  field {
    name: "iScrollWidth"
    type: "I"
  }
  field {
    name: "iScrollHeight"
    type: "I"
  }
  field {
    name: "iCaptionWidth"
    type: "I"
  }
  field {
    name: "iCaptionHeight"
    type: "I"
  }
  field {
    name: "lfCaptionFont"
    type: "RtagLOGFONTW;"
  }
  field {
    name: "iSmCaptionWidth"
    type: "I"
  }
  field {
    name: "iSmCaptionHeight"
    type: "I"
  }
  field {
    name: "lfSmCaptionFont"
    type: "RtagLOGFONTW;"
  }
  field {
    name: "iMenuWidth"
    type: "I"
  }
  field {
    name: "iMenuHeight"
    type: "I"
  }
  field {
    name: "lfMenuFont"
    type: "RtagLOGFONTW;"
  }
  field {
    name: "lfStatusFont"
    type: "RtagLOGFONTW;"
  }
  field {
    name: "lfMessageFont"
    type: "RtagLOGFONTW;"
  }
  field {
    name: "iPaddedBorderWidth"
    type: "I"
  }
}
struct {
  name: "tagNONCLIENTMETRICSW"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "iBorderWidth"
    type: "I"
  }
  field {
    name: "iScrollWidth"
    type: "I"
  }
  field {
    name: "iScrollHeight"
    type: "I"
  }
  field {
    name: "iCaptionWidth"
    type: "I"
  }
  field {
    name: "iCaptionHeight"
    type: "I"
  }
  field {
    name: "lfCaptionFont"
    type: "RtagLOGFONTW;"
  }
  field {
    name: "iSmCaptionWidth"
    type: "I"
  }
  field {
    name: "iSmCaptionHeight"
    type: "I"
  }
  field {
    name: "lfSmCaptionFont"
    type: "RtagLOGFONTW;"
  }
  field {
    name: "iMenuWidth"
    type: "I"
  }
  field {
    name: "iMenuHeight"
    type: "I"
  }
  field {
    name: "lfMenuFont"
    type: "RtagLOGFONTW;"
  }
  field {
    name: "lfStatusFont"
    type: "RtagLOGFONTW;"
  }
  field {
    name: "lfMessageFont"
    type: "RtagLOGFONTW;"
  }
  field {
    name: "iPaddedBorderWidth"
    type: "I"
  }
}
struct {
  name: "tagNONCLIENTMETRICSW"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "iBorderWidth"
    type: "I"
  }
  field {
    name: "iScrollWidth"
    type: "I"
  }
  field {
    name: "iScrollHeight"
    type: "I"
  }
  field {
    name: "iCaptionWidth"
    type: "I"
  }
  field {
    name: "iCaptionHeight"
    type: "I"
  }
  field {
    name: "lfCaptionFont"
    type: "RtagLOGFONTW;"
  }
  field {
    name: "iSmCaptionWidth"
    type: "I"
  }
  field {
    name: "iSmCaptionHeight"
    type: "I"
  }
  field {
    name: "lfSmCaptionFont"
    type: "RtagLOGFONTW;"
  }
  field {
    name: "iMenuWidth"
    type: "I"
  }
  field {
    name: "iMenuHeight"
    type: "I"
  }
  field {
    name: "lfMenuFont"
    type: "RtagLOGFONTW;"
  }
  field {
    name: "lfStatusFont"
    type: "RtagLOGFONTW;"
  }
  field {
    name: "lfMessageFont"
    type: "RtagLOGFONTW;"
  }
  field {
    name: "iPaddedBorderWidth"
    type: "I"
  }
}
struct {
  name: "tagICONMETRICSA"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "iHorzSpacing"
    type: "I"
  }
  field {
    name: "iVertSpacing"
    type: "I"
  }
  field {
    name: "iTitleWrap"
    type: "I"
  }
  field {
    name: "lfFont"
    type: "RtagLOGFONTA;"
  }
}
struct {
  name: "tagICONMETRICSA"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "iHorzSpacing"
    type: "I"
  }
  field {
    name: "iVertSpacing"
    type: "I"
  }
  field {
    name: "iTitleWrap"
    type: "I"
  }
  field {
    name: "lfFont"
    type: "RtagLOGFONTA;"
  }
}
struct {
  name: "tagICONMETRICSA"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "iHorzSpacing"
    type: "I"
  }
  field {
    name: "iVertSpacing"
    type: "I"
  }
  field {
    name: "iTitleWrap"
    type: "I"
  }
  field {
    name: "lfFont"
    type: "RtagLOGFONTA;"
  }
}
struct {
  name: "tagICONMETRICSW"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "iHorzSpacing"
    type: "I"
  }
  field {
    name: "iVertSpacing"
    type: "I"
  }
  field {
    name: "iTitleWrap"
    type: "I"
  }
  field {
    name: "lfFont"
    type: "RtagLOGFONTW;"
  }
}
struct {
  name: "tagICONMETRICSW"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "iHorzSpacing"
    type: "I"
  }
  field {
    name: "iVertSpacing"
    type: "I"
  }
  field {
    name: "iTitleWrap"
    type: "I"
  }
  field {
    name: "lfFont"
    type: "RtagLOGFONTW;"
  }
}
struct {
  name: "tagICONMETRICSW"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "iHorzSpacing"
    type: "I"
  }
  field {
    name: "iVertSpacing"
    type: "I"
  }
  field {
    name: "iTitleWrap"
    type: "I"
  }
  field {
    name: "lfFont"
    type: "RtagLOGFONTW;"
  }
}
struct {
  name: "tagUPDATELAYEREDWINDOWINFO"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "hdcDst"
    type: "*RHDC__;;"
  }
  field {
    name: "pptDst"
    type: "*cRtagPOINT;;"
  }
  field {
    name: "psize"
    type: "*cRtagSIZE;;"
  }
  field {
    name: "hdcSrc"
    type: "*RHDC__;;"
  }
  field {
    name: "pptSrc"
    type: "*cRtagPOINT;;"
  }
  field {
    name: "crKey"
    type: "UI"
  }
  field {
    name: "pblend"
    type: "*cR_BLENDFUNCTION;;"
  }
  field {
    name: "dwFlags"
    type: "UI"
  }
  field {
    name: "prcDirty"
    type: "*cRtagRECT;;"
  }
}
struct {
  name: "tagUPDATELAYEREDWINDOWINFO"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "hdcDst"
    type: "*RHDC__;;"
  }
  field {
    name: "pptDst"
    type: "*cRtagPOINT;;"
  }
  field {
    name: "psize"
    type: "*cRtagSIZE;;"
  }
  field {
    name: "hdcSrc"
    type: "*RHDC__;;"
  }
  field {
    name: "pptSrc"
    type: "*cRtagPOINT;;"
  }
  field {
    name: "crKey"
    type: "UI"
  }
  field {
    name: "pblend"
    type: "*cR_BLENDFUNCTION;;"
  }
  field {
    name: "dwFlags"
    type: "UI"
  }
  field {
    name: "prcDirty"
    type: "*cRtagRECT;;"
  }
}
struct {
  name: "tagMINIMIZEDMETRICS"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "iWidth"
    type: "I"
  }
  field {
    name: "iHorzGap"
    type: "I"
  }
  field {
    name: "iVertGap"
    type: "I"
  }
  field {
    name: "iArrange"
    type: "I"
  }
}
struct {
  name: "tagMINIMIZEDMETRICS"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "iWidth"
    type: "I"
  }
  field {
    name: "iHorzGap"
    type: "I"
  }
  field {
    name: "iVertGap"
    type: "I"
  }
  field {
    name: "iArrange"
    type: "I"
  }
}
struct {
  name: "tagMINIMIZEDMETRICS"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "iWidth"
    type: "I"
  }
  field {
    name: "iHorzGap"
    type: "I"
  }
  field {
    name: "iVertGap"
    type: "I"
  }
  field {
    name: "iArrange"
    type: "I"
  }
}
struct {
  name: "FLASHWINFO"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "hwnd"
    type: "*RHWND__;;"
  }
  field {
    name: "dwFlags"
    type: "UI"
  }
  field {
    name: "uCount"
    type: "UI"
  }
  field {
    name: "dwTimeout"
    type: "UI"
  }
}
struct {
  name: "FLASHWINFO"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "hwnd"
    type: "*RHWND__;;"
  }
  field {
    name: "dwFlags"
    type: "UI"
  }
  field {
    name: "uCount"
    type: "UI"
  }
  field {
    name: "dwTimeout"
    type: "UI"
  }
}
struct {
  name: "tagDRAWITEMSTRUCT"
  field {
    name: "CtlType"
    type: "UI"
  }
  field {
    name: "CtlID"
    type: "UI"
  }
  field {
    name: "itemID"
    type: "UI"
  }
  field {
    name: "itemAction"
    type: "UI"
  }
  field {
    name: "itemState"
    type: "UI"
  }
  field {
    name: "hwndItem"
    type: "*RHWND__;;"
  }
  field {
    name: "hDC"
    type: "*RHDC__;;"
  }
  field {
    name: "rcItem"
    type: "RtagRECT;"
  }
  field {
    name: "itemData"
    type: "UI"
  }
}
struct {
  name: "tagDRAWITEMSTRUCT"
  field {
    name: "CtlType"
    type: "UI"
  }
  field {
    name: "CtlID"
    type: "UI"
  }
  field {
    name: "itemID"
    type: "UI"
  }
  field {
    name: "itemAction"
    type: "UI"
  }
  field {
    name: "itemState"
    type: "UI"
  }
  field {
    name: "hwndItem"
    type: "*RHWND__;;"
  }
  field {
    name: "hDC"
    type: "*RHDC__;;"
  }
  field {
    name: "rcItem"
    type: "RtagRECT;"
  }
  field {
    name: "itemData"
    type: "UI"
  }
}
struct {
  name: "tagDRAWITEMSTRUCT"
  field {
    name: "CtlType"
    type: "UI"
  }
  field {
    name: "CtlID"
    type: "UI"
  }
  field {
    name: "itemID"
    type: "UI"
  }
  field {
    name: "itemAction"
    type: "UI"
  }
  field {
    name: "itemState"
    type: "UI"
  }
  field {
    name: "hwndItem"
    type: "*RHWND__;;"
  }
  field {
    name: "hDC"
    type: "*RHDC__;;"
  }
  field {
    name: "rcItem"
    type: "RtagRECT;"
  }
  field {
    name: "itemData"
    type: "UI"
  }
}
struct {
  name: "tagMEASUREITEMSTRUCT"
  field {
    name: "CtlType"
    type: "UI"
  }
  field {
    name: "CtlID"
    type: "UI"
  }
  field {
    name: "itemID"
    type: "UI"
  }
  field {
    name: "itemWidth"
    type: "UI"
  }
  field {
    name: "itemHeight"
    type: "UI"
  }
  field {
    name: "itemData"
    type: "UI"
  }
}
struct {
  name: "tagMEASUREITEMSTRUCT"
  field {
    name: "CtlType"
    type: "UI"
  }
  field {
    name: "CtlID"
    type: "UI"
  }
  field {
    name: "itemID"
    type: "UI"
  }
  field {
    name: "itemWidth"
    type: "UI"
  }
  field {
    name: "itemHeight"
    type: "UI"
  }
  field {
    name: "itemData"
    type: "UI"
  }
}
struct {
  name: "tagMEASUREITEMSTRUCT"
  field {
    name: "CtlType"
    type: "UI"
  }
  field {
    name: "CtlID"
    type: "UI"
  }
  field {
    name: "itemID"
    type: "UI"
  }
  field {
    name: "itemWidth"
    type: "UI"
  }
  field {
    name: "itemHeight"
    type: "UI"
  }
  field {
    name: "itemData"
    type: "UI"
  }
}
struct {
  name: "tagDELETEITEMSTRUCT"
  field {
    name: "CtlType"
    type: "UI"
  }
  field {
    name: "CtlID"
    type: "UI"
  }
  field {
    name: "itemID"
    type: "UI"
  }
  field {
    name: "hwndItem"
    type: "*RHWND__;;"
  }
  field {
    name: "itemData"
    type: "UI"
  }
}
struct {
  name: "tagDELETEITEMSTRUCT"
  field {
    name: "CtlType"
    type: "UI"
  }
  field {
    name: "CtlID"
    type: "UI"
  }
  field {
    name: "itemID"
    type: "UI"
  }
  field {
    name: "hwndItem"
    type: "*RHWND__;;"
  }
  field {
    name: "itemData"
    type: "UI"
  }
}
struct {
  name: "tagDELETEITEMSTRUCT"
  field {
    name: "CtlType"
    type: "UI"
  }
  field {
    name: "CtlID"
    type: "UI"
  }
  field {
    name: "itemID"
    type: "UI"
  }
  field {
    name: "hwndItem"
    type: "*RHWND__;;"
  }
  field {
    name: "itemData"
    type: "UI"
  }
}
struct {
  name: "tagCOMPAREITEMSTRUCT"
  field {
    name: "CtlType"
    type: "UI"
  }
  field {
    name: "CtlID"
    type: "UI"
  }
  field {
    name: "hwndItem"
    type: "*RHWND__;;"
  }
  field {
    name: "itemID1"
    type: "UI"
  }
  field {
    name: "itemData1"
    type: "UI"
  }
  field {
    name: "itemID2"
    type: "UI"
  }
  field {
    name: "itemData2"
    type: "UI"
  }
  field {
    name: "dwLocaleId"
    type: "UI"
  }
}
struct {
  name: "tagCOMPAREITEMSTRUCT"
  field {
    name: "CtlType"
    type: "UI"
  }
  field {
    name: "CtlID"
    type: "UI"
  }
  field {
    name: "hwndItem"
    type: "*RHWND__;;"
  }
  field {
    name: "itemID1"
    type: "UI"
  }
  field {
    name: "itemData1"
    type: "UI"
  }
  field {
    name: "itemID2"
    type: "UI"
  }
  field {
    name: "itemData2"
    type: "UI"
  }
  field {
    name: "dwLocaleId"
    type: "UI"
  }
}
struct {
  name: "tagCOMPAREITEMSTRUCT"
  field {
    name: "CtlType"
    type: "UI"
  }
  field {
    name: "CtlID"
    type: "UI"
  }
  field {
    name: "hwndItem"
    type: "*RHWND__;;"
  }
  field {
    name: "itemID1"
    type: "UI"
  }
  field {
    name: "itemData1"
    type: "UI"
  }
  field {
    name: "itemID2"
    type: "UI"
  }
  field {
    name: "itemData2"
    type: "UI"
  }
  field {
    name: "dwLocaleId"
    type: "UI"
  }
}
struct {
  name: "tagTRACKMOUSEEVENT"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "dwFlags"
    type: "UI"
  }
  field {
    name: "hwndTrack"
    type: "*RHWND__;;"
  }
  field {
    name: "dwHoverTime"
    type: "UI"
  }
}
struct {
  name: "tagTRACKMOUSEEVENT"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "dwFlags"
    type: "UI"
  }
  field {
    name: "hwndTrack"
    type: "*RHWND__;;"
  }
  field {
    name: "dwHoverTime"
    type: "UI"
  }
}
struct {
  name: "tagWINDOWINFO"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "rcWindow"
    type: "RtagRECT;"
  }
  field {
    name: "rcClient"
    type: "RtagRECT;"
  }
  field {
    name: "dwStyle"
    type: "UI"
  }
  field {
    name: "dwExStyle"
    type: "UI"
  }
  field {
    name: "dwWindowStatus"
    type: "UI"
  }
  field {
    name: "cxWindowBorders"
    type: "UI"
  }
  field {
    name: "cyWindowBorders"
    type: "UI"
  }
  field {
    name: "atomWindowType"
    type: "US"
  }
  field {
    name: "wCreatorVersion"
    type: "US"
  }
}
struct {
  name: "tagWINDOWINFO"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "rcWindow"
    type: "RtagRECT;"
  }
  field {
    name: "rcClient"
    type: "RtagRECT;"
  }
  field {
    name: "dwStyle"
    type: "UI"
  }
  field {
    name: "dwExStyle"
    type: "UI"
  }
  field {
    name: "dwWindowStatus"
    type: "UI"
  }
  field {
    name: "cxWindowBorders"
    type: "UI"
  }
  field {
    name: "cyWindowBorders"
    type: "UI"
  }
  field {
    name: "atomWindowType"
    type: "US"
  }
  field {
    name: "wCreatorVersion"
    type: "US"
  }
}
struct {
  name: "tagWINDOWINFO"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "rcWindow"
    type: "RtagRECT;"
  }
  field {
    name: "rcClient"
    type: "RtagRECT;"
  }
  field {
    name: "dwStyle"
    type: "UI"
  }
  field {
    name: "dwExStyle"
    type: "UI"
  }
  field {
    name: "dwWindowStatus"
    type: "UI"
  }
  field {
    name: "cxWindowBorders"
    type: "UI"
  }
  field {
    name: "cyWindowBorders"
    type: "UI"
  }
  field {
    name: "atomWindowType"
    type: "US"
  }
  field {
    name: "wCreatorVersion"
    type: "US"
  }
}
struct {
  name: "tagTITLEBARINFO"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "rcTitleBar"
    type: "RtagRECT;"
  }
  field {
    name: "rgstate"
    type: "X(ConstantArray.DWORD [6])"
  }
}
struct {
  name: "tagTITLEBARINFO"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "rcTitleBar"
    type: "RtagRECT;"
  }
  field {
    name: "rgstate"
    type: "X(ConstantArray.DWORD [6])"
  }
}
struct {
  name: "tagTITLEBARINFO"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "rcTitleBar"
    type: "RtagRECT;"
  }
  field {
    name: "rgstate"
    type: "X(ConstantArray.DWORD [6])"
  }
}
struct {
  name: "tagLASTINPUTINFO"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "dwTime"
    type: "UI"
  }
}
struct {
  name: "tagLASTINPUTINFO"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "dwTime"
    type: "UI"
  }
}
struct {
  name: "ALTTABINFO"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "cItems"
    type: "I"
  }
  field {
    name: "cColumns"
    type: "I"
  }
  field {
    name: "cRows"
    type: "I"
  }
  field {
    name: "iColFocus"
    type: "I"
  }
  field {
    name: "iRowFocus"
    type: "I"
  }
  field {
    name: "cxItem"
    type: "I"
  }
  field {
    name: "cyItem"
    type: "I"
  }
  field {
    name: "ptStart"
    type: "RtagPOINT;"
  }
}
struct {
  name: "ALTTABINFO"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "cItems"
    type: "I"
  }
  field {
    name: "cColumns"
    type: "I"
  }
  field {
    name: "cRows"
    type: "I"
  }
  field {
    name: "iColFocus"
    type: "I"
  }
  field {
    name: "iRowFocus"
    type: "I"
  }
  field {
    name: "cxItem"
    type: "I"
  }
  field {
    name: "cyItem"
    type: "I"
  }
  field {
    name: "ptStart"
    type: "RtagPOINT;"
  }
}
struct {
  name: "ALTTABINFO"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "cItems"
    type: "I"
  }
  field {
    name: "cColumns"
    type: "I"
  }
  field {
    name: "cRows"
    type: "I"
  }
  field {
    name: "iColFocus"
    type: "I"
  }
  field {
    name: "iRowFocus"
    type: "I"
  }
  field {
    name: "cxItem"
    type: "I"
  }
  field {
    name: "cyItem"
    type: "I"
  }
  field {
    name: "ptStart"
    type: "RtagPOINT;"
  }
}
struct {
  name: "CPINFO"
  field {
    name: "MaxCharSize"
    type: "UI"
  }
  field {
    name: "DefaultChar"
    type: "X(ConstantArray.BYTE [2])"
  }
  field {
    name: "LeadByte"
    type: "X(ConstantArray.BYTE [12])"
  }
}
struct {
  name: "CPINFO"
  field {
    name: "MaxCharSize"
    type: "UI"
  }
  field {
    name: "DefaultChar"
    type: "X(ConstantArray.BYTE [2])"
  }
  field {
    name: "LeadByte"
    type: "X(ConstantArray.BYTE [12])"
  }
}
struct {
  name: "CPINFOEXA"
  field {
    name: "MaxCharSize"
    type: "UI"
  }
  field {
    name: "DefaultChar"
    type: "X(ConstantArray.BYTE [2])"
  }
  field {
    name: "LeadByte"
    type: "X(ConstantArray.BYTE [12])"
  }
  field {
    name: "UnicodeDefaultChar"
    type: "US"
  }
  field {
    name: "CodePage"
    type: "UI"
  }
  field {
    name: "CodePageName"
    type: "X(ConstantArray.CHAR [260])"
  }
}
struct {
  name: "CPINFOEXA"
  field {
    name: "MaxCharSize"
    type: "UI"
  }
  field {
    name: "DefaultChar"
    type: "X(ConstantArray.BYTE [2])"
  }
  field {
    name: "LeadByte"
    type: "X(ConstantArray.BYTE [12])"
  }
  field {
    name: "UnicodeDefaultChar"
    type: "US"
  }
  field {
    name: "CodePage"
    type: "UI"
  }
  field {
    name: "CodePageName"
    type: "X(ConstantArray.CHAR [260])"
  }
}
struct {
  name: "CPINFOEXW"
  field {
    name: "MaxCharSize"
    type: "UI"
  }
  field {
    name: "DefaultChar"
    type: "X(ConstantArray.BYTE [2])"
  }
  field {
    name: "LeadByte"
    type: "X(ConstantArray.BYTE [12])"
  }
  field {
    name: "UnicodeDefaultChar"
    type: "US"
  }
  field {
    name: "CodePage"
    type: "UI"
  }
  field {
    name: "CodePageName"
    type: "X(ConstantArray.WCHAR [260])"
  }
}
struct {
  name: "CPINFOEXW"
  field {
    name: "MaxCharSize"
    type: "UI"
  }
  field {
    name: "DefaultChar"
    type: "X(ConstantArray.BYTE [2])"
  }
  field {
    name: "LeadByte"
    type: "X(ConstantArray.BYTE [12])"
  }
  field {
    name: "UnicodeDefaultChar"
    type: "US"
  }
  field {
    name: "CodePage"
    type: "UI"
  }
  field {
    name: "CodePageName"
    type: "X(ConstantArray.WCHAR [260])"
  }
}
struct {
  name: "_numberfmtA"
  field {
    name: "NumDigits"
    type: "UI"
  }
  field {
    name: "LeadingZero"
    type: "UI"
  }
  field {
    name: "Grouping"
    type: "UI"
  }
  field {
    name: "lpDecimalSep"
    type: "*C;"
  }
  field {
    name: "lpThousandSep"
    type: "*C;"
  }
  field {
    name: "NegativeOrder"
    type: "UI"
  }
}
struct {
  name: "_numberfmtA"
  field {
    name: "NumDigits"
    type: "UI"
  }
  field {
    name: "LeadingZero"
    type: "UI"
  }
  field {
    name: "Grouping"
    type: "UI"
  }
  field {
    name: "lpDecimalSep"
    type: "*C;"
  }
  field {
    name: "lpThousandSep"
    type: "*C;"
  }
  field {
    name: "NegativeOrder"
    type: "UI"
  }
}
struct {
  name: "_numberfmtW"
  field {
    name: "NumDigits"
    type: "UI"
  }
  field {
    name: "LeadingZero"
    type: "UI"
  }
  field {
    name: "Grouping"
    type: "UI"
  }
  field {
    name: "lpDecimalSep"
    type: "*US;"
  }
  field {
    name: "lpThousandSep"
    type: "*US;"
  }
  field {
    name: "NegativeOrder"
    type: "UI"
  }
}
struct {
  name: "_numberfmtW"
  field {
    name: "NumDigits"
    type: "UI"
  }
  field {
    name: "LeadingZero"
    type: "UI"
  }
  field {
    name: "Grouping"
    type: "UI"
  }
  field {
    name: "lpDecimalSep"
    type: "*US;"
  }
  field {
    name: "lpThousandSep"
    type: "*US;"
  }
  field {
    name: "NegativeOrder"
    type: "UI"
  }
}
struct {
  name: "_currencyfmtA"
  field {
    name: "NumDigits"
    type: "UI"
  }
  field {
    name: "LeadingZero"
    type: "UI"
  }
  field {
    name: "Grouping"
    type: "UI"
  }
  field {
    name: "lpDecimalSep"
    type: "*C;"
  }
  field {
    name: "lpThousandSep"
    type: "*C;"
  }
  field {
    name: "NegativeOrder"
    type: "UI"
  }
  field {
    name: "PositiveOrder"
    type: "UI"
  }
  field {
    name: "lpCurrencySymbol"
    type: "*C;"
  }
}
struct {
  name: "_currencyfmtA"
  field {
    name: "NumDigits"
    type: "UI"
  }
  field {
    name: "LeadingZero"
    type: "UI"
  }
  field {
    name: "Grouping"
    type: "UI"
  }
  field {
    name: "lpDecimalSep"
    type: "*C;"
  }
  field {
    name: "lpThousandSep"
    type: "*C;"
  }
  field {
    name: "NegativeOrder"
    type: "UI"
  }
  field {
    name: "PositiveOrder"
    type: "UI"
  }
  field {
    name: "lpCurrencySymbol"
    type: "*C;"
  }
}
struct {
  name: "_currencyfmtW"
  field {
    name: "NumDigits"
    type: "UI"
  }
  field {
    name: "LeadingZero"
    type: "UI"
  }
  field {
    name: "Grouping"
    type: "UI"
  }
  field {
    name: "lpDecimalSep"
    type: "*US;"
  }
  field {
    name: "lpThousandSep"
    type: "*US;"
  }
  field {
    name: "NegativeOrder"
    type: "UI"
  }
  field {
    name: "PositiveOrder"
    type: "UI"
  }
  field {
    name: "lpCurrencySymbol"
    type: "*US;"
  }
}
struct {
  name: "_currencyfmtW"
  field {
    name: "NumDigits"
    type: "UI"
  }
  field {
    name: "LeadingZero"
    type: "UI"
  }
  field {
    name: "Grouping"
    type: "UI"
  }
  field {
    name: "lpDecimalSep"
    type: "*US;"
  }
  field {
    name: "lpThousandSep"
    type: "*US;"
  }
  field {
    name: "NegativeOrder"
    type: "UI"
  }
  field {
    name: "PositiveOrder"
    type: "UI"
  }
  field {
    name: "lpCurrencySymbol"
    type: "*US;"
  }
}
struct {
  name: "_nlsversioninfo"
  field {
    name: "dwNLSVersionInfoSize"
    type: "UI"
  }
  field {
    name: "dwNLSVersion"
    type: "UI"
  }
  field {
    name: "dwDefinedVersion"
    type: "UI"
  }
}
struct {
  name: "_nlsversioninfo"
  field {
    name: "dwNLSVersionInfoSize"
    type: "UI"
  }
  field {
    name: "dwNLSVersion"
    type: "UI"
  }
  field {
    name: "dwDefinedVersion"
    type: "UI"
  }
}
struct {
  name: "_nlsversioninfoex"
  field {
    name: "dwNLSVersionInfoSize"
    type: "UI"
  }
  field {
    name: "dwNLSVersion"
    type: "UI"
  }
  field {
    name: "dwDefinedVersion"
    type: "UI"
  }
  field {
    name: "dwEffectiveId"
    type: "UI"
  }
  field {
    name: "guidCustomVersion"
    type: "R_GUID;"
  }
}
struct {
  name: "_nlsversioninfoex"
  field {
    name: "dwNLSVersionInfoSize"
    type: "UI"
  }
  field {
    name: "dwNLSVersion"
    type: "UI"
  }
  field {
    name: "dwDefinedVersion"
    type: "UI"
  }
  field {
    name: "dwEffectiveId"
    type: "UI"
  }
  field {
    name: "guidCustomVersion"
    type: "R_GUID;"
  }
}
struct {
  name: "_CONSOLE_CURSOR_INFO"
  field {
    name: "dwSize"
    type: "UI"
  }
  field {
    name: "bVisible"
    type: "I"
  }
}
struct {
  name: "_CONSOLE_CURSOR_INFO"
  field {
    name: "dwSize"
    type: "UI"
  }
  field {
    name: "bVisible"
    type: "I"
  }
}
struct {
  name: "tagCOORD"
  field {
    name: "X"
    type: "S"
  }
  field {
    name: "Y"
    type: "S"
  }
}
struct {
  name: "tagCOORD"
  field {
    name: "X"
    type: "S"
  }
  field {
    name: "Y"
    type: "S"
  }
}
struct {
  name: "tagSMALL_RECT"
  field {
    name: "Left"
    type: "S"
  }
  field {
    name: "Top"
    type: "S"
  }
  field {
    name: "Right"
    type: "S"
  }
  field {
    name: "Bottom"
    type: "S"
  }
}
struct {
  name: "tagSMALL_RECT"
  field {
    name: "Left"
    type: "S"
  }
  field {
    name: "Top"
    type: "S"
  }
  field {
    name: "Right"
    type: "S"
  }
  field {
    name: "Bottom"
    type: "S"
  }
}
struct {
  name: "_CONSOLE_FONT_INFO"
  field {
    name: "nFont"
    type: "UI"
  }
  field {
    name: "dwFontSize"
    type: "RtagCOORD;"
  }
}
struct {
  name: "_CONSOLE_FONT_INFO"
  field {
    name: "nFont"
    type: "UI"
  }
  field {
    name: "dwFontSize"
    type: "RtagCOORD;"
  }
}
struct {
  name: "_CONSOLE_FONT_INFOEX"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "nFont"
    type: "UI"
  }
  field {
    name: "dwFontSize"
    type: "RtagCOORD;"
  }
  field {
    name: "FontFamily"
    type: "UI"
  }
  field {
    name: "FontWeight"
    type: "UI"
  }
  field {
    name: "FaceName"
    type: "X(ConstantArray.WCHAR [32])"
  }
}
struct {
  name: "_CONSOLE_FONT_INFOEX"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "nFont"
    type: "UI"
  }
  field {
    name: "dwFontSize"
    type: "RtagCOORD;"
  }
  field {
    name: "FontFamily"
    type: "UI"
  }
  field {
    name: "FontWeight"
    type: "UI"
  }
  field {
    name: "FaceName"
    type: "X(ConstantArray.WCHAR [32])"
  }
}
struct {
  name: "tagCONSOLE_HISTORY_INFO"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "HistoryBufferSize"
    type: "UI"
  }
  field {
    name: "NumberOfHistoryBuffers"
    type: "UI"
  }
  field {
    name: "dwFlags"
    type: "UI"
  }
}
struct {
  name: "tagCONSOLE_HISTORY_INFO"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "HistoryBufferSize"
    type: "UI"
  }
  field {
    name: "NumberOfHistoryBuffers"
    type: "UI"
  }
  field {
    name: "dwFlags"
    type: "UI"
  }
}
struct {
  name: "_CONSOLE_READCONSOLE_CONTROL"
  field {
    name: "nLength"
    type: "UI"
  }
  field {
    name: "nInitialChars"
    type: "UI"
  }
  field {
    name: "dwCtrlWakeupMask"
    type: "UI"
  }
  field {
    name: "dwConsoleKeyState"
    type: "UI"
  }
}
struct {
  name: "_CONSOLE_READCONSOLE_CONTROL"
  field {
    name: "nLength"
    type: "UI"
  }
  field {
    name: "nInitialChars"
    type: "UI"
  }
  field {
    name: "dwCtrlWakeupMask"
    type: "UI"
  }
  field {
    name: "dwConsoleKeyState"
    type: "UI"
  }
}
struct {
  name: "tagCONSOLE_SCREEN_BUFFER_INFO"
  field {
    name: "dwSize"
    type: "RtagCOORD;"
  }
  field {
    name: "dwCursorPosition"
    type: "RtagCOORD;"
  }
  field {
    name: "wAttributes"
    type: "US"
  }
  field {
    name: "srWindow"
    type: "RtagSMALL_RECT;"
  }
  field {
    name: "dwMaximumWindowSize"
    type: "RtagCOORD;"
  }
}
struct {
  name: "tagCONSOLE_SCREEN_BUFFER_INFO"
  field {
    name: "dwSize"
    type: "RtagCOORD;"
  }
  field {
    name: "dwCursorPosition"
    type: "RtagCOORD;"
  }
  field {
    name: "wAttributes"
    type: "US"
  }
  field {
    name: "srWindow"
    type: "RtagSMALL_RECT;"
  }
  field {
    name: "dwMaximumWindowSize"
    type: "RtagCOORD;"
  }
}
struct {
  name: "_CONSOLE_SCREEN_BUFFER_INFOEX"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "dwSize"
    type: "RtagCOORD;"
  }
  field {
    name: "dwCursorPosition"
    type: "RtagCOORD;"
  }
  field {
    name: "wAttributes"
    type: "US"
  }
  field {
    name: "srWindow"
    type: "RtagSMALL_RECT;"
  }
  field {
    name: "dwMaximumWindowSize"
    type: "RtagCOORD;"
  }
  field {
    name: "wPopupAttributes"
    type: "US"
  }
  field {
    name: "bFullscreenSupported"
    type: "I"
  }
  field {
    name: "ColorTable"
    type: "X(ConstantArray.COLORREF [16])"
  }
}
struct {
  name: "_CONSOLE_SCREEN_BUFFER_INFOEX"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "dwSize"
    type: "RtagCOORD;"
  }
  field {
    name: "dwCursorPosition"
    type: "RtagCOORD;"
  }
  field {
    name: "wAttributes"
    type: "US"
  }
  field {
    name: "srWindow"
    type: "RtagSMALL_RECT;"
  }
  field {
    name: "dwMaximumWindowSize"
    type: "RtagCOORD;"
  }
  field {
    name: "wPopupAttributes"
    type: "US"
  }
  field {
    name: "bFullscreenSupported"
    type: "I"
  }
  field {
    name: "ColorTable"
    type: "X(ConstantArray.COLORREF [16])"
  }
}
struct {
  name: "_CONSOLE_SELECTION_INFO"
  field {
    name: "dwFlags"
    type: "UI"
  }
  field {
    name: "dwSelectionAnchor"
    type: "RtagCOORD;"
  }
  field {
    name: "srSelection"
    type: "RtagSMALL_RECT;"
  }
}
struct {
  name: "_CONSOLE_SELECTION_INFO"
  field {
    name: "dwFlags"
    type: "UI"
  }
  field {
    name: "dwSelectionAnchor"
    type: "RtagCOORD;"
  }
  field {
    name: "srSelection"
    type: "RtagSMALL_RECT;"
  }
}
struct {
  name: "tagCHAR_INFO"
  field {
    name: "Char"
    type: "Runion tagCHAR_INFO::(anonymous at /usr/local/include/wine/windows/wincon.h:177:5);"
  }
  field {
    name: "Attributes"
    type: "US"
  }
}
struct {
  name: "tagCHAR_INFO"
  field {
    name: "Char"
    type: "Runion tagCHAR_INFO::(anonymous at /usr/local/include/wine/windows/wincon.h:177:5);"
  }
  field {
    name: "Attributes"
    type: "US"
  }
}
struct {
  name: "tagKEY_EVENT_RECORD"
  field {
    name: "bKeyDown"
    type: "I"
  }
  field {
    name: "wRepeatCount"
    type: "US"
  }
  field {
    name: "wVirtualKeyCode"
    type: "US"
  }
  field {
    name: "wVirtualScanCode"
    type: "US"
  }
  field {
    name: "uChar"
    type: "Runion tagKEY_EVENT_RECORD::(anonymous at /usr/local/include/wine/windows/wincon.h:191:5);"
  }
  field {
    name: "dwControlKeyState"
    type: "UI"
  }
}
struct {
  name: "tagKEY_EVENT_RECORD"
  field {
    name: "bKeyDown"
    type: "I"
  }
  field {
    name: "wRepeatCount"
    type: "US"
  }
  field {
    name: "wVirtualKeyCode"
    type: "US"
  }
  field {
    name: "wVirtualScanCode"
    type: "US"
  }
  field {
    name: "uChar"
    type: "Runion tagKEY_EVENT_RECORD::(anonymous at /usr/local/include/wine/windows/wincon.h:191:5);"
  }
  field {
    name: "dwControlKeyState"
    type: "UI"
  }
}
struct {
  name: "tagMOUSE_EVENT_RECORD"
  field {
    name: "dwMousePosition"
    type: "RtagCOORD;"
  }
  field {
    name: "dwButtonState"
    type: "UI"
  }
  field {
    name: "dwControlKeyState"
    type: "UI"
  }
  field {
    name: "dwEventFlags"
    type: "UI"
  }
}
struct {
  name: "tagMOUSE_EVENT_RECORD"
  field {
    name: "dwMousePosition"
    type: "RtagCOORD;"
  }
  field {
    name: "dwButtonState"
    type: "UI"
  }
  field {
    name: "dwControlKeyState"
    type: "UI"
  }
  field {
    name: "dwEventFlags"
    type: "UI"
  }
}
struct {
  name: "tagWINDOW_BUFFER_SIZE_RECORD"
  field {
    name: "dwSize"
    type: "RtagCOORD;"
  }
}
struct {
  name: "tagWINDOW_BUFFER_SIZE_RECORD"
  field {
    name: "dwSize"
    type: "RtagCOORD;"
  }
}
struct {
  name: "tagMENU_EVENT_RECORD"
  field {
    name: "dwCommandId"
    type: "UI"
  }
}
struct {
  name: "tagMENU_EVENT_RECORD"
  field {
    name: "dwCommandId"
    type: "UI"
  }
}
struct {
  name: "tagFOCUS_EVENT_RECORD"
  field {
    name: "bSetFocus"
    type: "I"
  }
}
struct {
  name: "tagFOCUS_EVENT_RECORD"
  field {
    name: "bSetFocus"
    type: "I"
  }
}
struct {
  name: "tagINPUT_RECORD"
  field {
    name: "EventType"
    type: "US"
  }
  field {
    name: "Event"
    type: "Runion tagINPUT_RECORD::(anonymous at /usr/local/include/wine/windows/wincon.h:249:5);"
  }
}
struct {
  name: "tagINPUT_RECORD"
  field {
    name: "EventType"
    type: "US"
  }
  field {
    name: "Event"
    type: "Runion tagINPUT_RECORD::(anonymous at /usr/local/include/wine/windows/wincon.h:249:5);"
  }
}
struct {
  name: "tagVS_FIXEDFILEINFO"
  field {
    name: "dwSignature"
    type: "UI"
  }
  field {
    name: "dwStrucVersion"
    type: "UI"
  }
  field {
    name: "dwFileVersionMS"
    type: "UI"
  }
  field {
    name: "dwFileVersionLS"
    type: "UI"
  }
  field {
    name: "dwProductVersionMS"
    type: "UI"
  }
  field {
    name: "dwProductVersionLS"
    type: "UI"
  }
  field {
    name: "dwFileFlagsMask"
    type: "UI"
  }
  field {
    name: "dwFileFlags"
    type: "UI"
  }
  field {
    name: "dwFileOS"
    type: "UI"
  }
  field {
    name: "dwFileType"
    type: "UI"
  }
  field {
    name: "dwFileSubtype"
    type: "UI"
  }
  field {
    name: "dwFileDateMS"
    type: "UI"
  }
  field {
    name: "dwFileDateLS"
    type: "UI"
  }
}
struct {
  name: "value_entA"
  field {
    name: "ve_valuename"
    type: "*C;"
  }
  field {
    name: "ve_valuelen"
    type: "UI"
  }
  field {
    name: "ve_valueptr"
    type: "UI"
  }
  field {
    name: "ve_type"
    type: "UI"
  }
}
struct {
  name: "value_entA"
  field {
    name: "ve_valuename"
    type: "*C;"
  }
  field {
    name: "ve_valuelen"
    type: "UI"
  }
  field {
    name: "ve_valueptr"
    type: "UI"
  }
  field {
    name: "ve_type"
    type: "UI"
  }
}
struct {
  name: "value_entW"
  field {
    name: "ve_valuename"
    type: "*US;"
  }
  field {
    name: "ve_valuelen"
    type: "UI"
  }
  field {
    name: "ve_valueptr"
    type: "UI"
  }
  field {
    name: "ve_type"
    type: "UI"
  }
}
struct {
  name: "value_entW"
  field {
    name: "ve_valuename"
    type: "*US;"
  }
  field {
    name: "ve_valuelen"
    type: "UI"
  }
  field {
    name: "ve_valueptr"
    type: "UI"
  }
  field {
    name: "ve_type"
    type: "UI"
  }
}
struct {
  name: "NETRESOURCEA"
  field {
    name: "dwScope"
    type: "UI"
  }
  field {
    name: "dwType"
    type: "UI"
  }
  field {
    name: "dwDisplayType"
    type: "UI"
  }
  field {
    name: "dwUsage"
    type: "UI"
  }
  field {
    name: "lpLocalName"
    type: "*C;"
  }
  field {
    name: "lpRemoteName"
    type: "*C;"
  }
  field {
    name: "lpComment"
    type: "*C;"
  }
  field {
    name: "lpProvider"
    type: "*C;"
  }
}
struct {
  name: "NETRESOURCEA"
  field {
    name: "dwScope"
    type: "UI"
  }
  field {
    name: "dwType"
    type: "UI"
  }
  field {
    name: "dwDisplayType"
    type: "UI"
  }
  field {
    name: "dwUsage"
    type: "UI"
  }
  field {
    name: "lpLocalName"
    type: "*C;"
  }
  field {
    name: "lpRemoteName"
    type: "*C;"
  }
  field {
    name: "lpComment"
    type: "*C;"
  }
  field {
    name: "lpProvider"
    type: "*C;"
  }
}
struct {
  name: "NETRESOURCEW"
  field {
    name: "dwScope"
    type: "UI"
  }
  field {
    name: "dwType"
    type: "UI"
  }
  field {
    name: "dwDisplayType"
    type: "UI"
  }
  field {
    name: "dwUsage"
    type: "UI"
  }
  field {
    name: "lpLocalName"
    type: "*US;"
  }
  field {
    name: "lpRemoteName"
    type: "*US;"
  }
  field {
    name: "lpComment"
    type: "*US;"
  }
  field {
    name: "lpProvider"
    type: "*US;"
  }
}
struct {
  name: "NETRESOURCEW"
  field {
    name: "dwScope"
    type: "UI"
  }
  field {
    name: "dwType"
    type: "UI"
  }
  field {
    name: "dwDisplayType"
    type: "UI"
  }
  field {
    name: "dwUsage"
    type: "UI"
  }
  field {
    name: "lpLocalName"
    type: "*US;"
  }
  field {
    name: "lpRemoteName"
    type: "*US;"
  }
  field {
    name: "lpComment"
    type: "*US;"
  }
  field {
    name: "lpProvider"
    type: "*US;"
  }
}
struct {
  name: "CONNECTDLGSTRUCTA"
  field {
    name: "cbStructure"
    type: "UI"
  }
  field {
    name: "hwndOwner"
    type: "*RHWND__;;"
  }
  field {
    name: "lpConnRes"
    type: "*RNETRESOURCEA;;"
  }
  field {
    name: "dwFlags"
    type: "UI"
  }
  field {
    name: "dwDevNum"
    type: "UI"
  }
}
struct {
  name: "CONNECTDLGSTRUCTA"
  field {
    name: "cbStructure"
    type: "UI"
  }
  field {
    name: "hwndOwner"
    type: "*RHWND__;;"
  }
  field {
    name: "lpConnRes"
    type: "*RNETRESOURCEA;;"
  }
  field {
    name: "dwFlags"
    type: "UI"
  }
  field {
    name: "dwDevNum"
    type: "UI"
  }
}
struct {
  name: "CONNECTDLGSTRUCTW"
  field {
    name: "cbStructure"
    type: "UI"
  }
  field {
    name: "hwndOwner"
    type: "*RHWND__;;"
  }
  field {
    name: "lpConnRes"
    type: "*RNETRESOURCEW;;"
  }
  field {
    name: "dwFlags"
    type: "UI"
  }
  field {
    name: "dwDevNum"
    type: "UI"
  }
}
struct {
  name: "CONNECTDLGSTRUCTW"
  field {
    name: "cbStructure"
    type: "UI"
  }
  field {
    name: "hwndOwner"
    type: "*RHWND__;;"
  }
  field {
    name: "lpConnRes"
    type: "*RNETRESOURCEW;;"
  }
  field {
    name: "dwFlags"
    type: "UI"
  }
  field {
    name: "dwDevNum"
    type: "UI"
  }
}
struct {
  name: "DISCDLGSTRUCTA"
  field {
    name: "cbStructure"
    type: "UI"
  }
  field {
    name: "hwndOwner"
    type: "*RHWND__;;"
  }
  field {
    name: "lpLocalName"
    type: "*C;"
  }
  field {
    name: "lpRemoteName"
    type: "*C;"
  }
  field {
    name: "dwFlags"
    type: "UI"
  }
}
struct {
  name: "DISCDLGSTRUCTA"
  field {
    name: "cbStructure"
    type: "UI"
  }
  field {
    name: "hwndOwner"
    type: "*RHWND__;;"
  }
  field {
    name: "lpLocalName"
    type: "*C;"
  }
  field {
    name: "lpRemoteName"
    type: "*C;"
  }
  field {
    name: "dwFlags"
    type: "UI"
  }
}
struct {
  name: "DISCDLGSTRUCTW"
  field {
    name: "cbStructure"
    type: "UI"
  }
  field {
    name: "hwndOwner"
    type: "*RHWND__;;"
  }
  field {
    name: "lpLocalName"
    type: "*US;"
  }
  field {
    name: "lpRemoteName"
    type: "*US;"
  }
  field {
    name: "dwFlags"
    type: "UI"
  }
}
struct {
  name: "DISCDLGSTRUCTW"
  field {
    name: "cbStructure"
    type: "UI"
  }
  field {
    name: "hwndOwner"
    type: "*RHWND__;;"
  }
  field {
    name: "lpLocalName"
    type: "*US;"
  }
  field {
    name: "lpRemoteName"
    type: "*US;"
  }
  field {
    name: "dwFlags"
    type: "UI"
  }
}
struct {
  name: "UNIVERSAL_NAME_INFOA"
  field {
    name: "lpUniversalName"
    type: "*C;"
  }
}
struct {
  name: "UNIVERSAL_NAME_INFOA"
  field {
    name: "lpUniversalName"
    type: "*C;"
  }
}
struct {
  name: "UNIVERSAL_NAME_INFOW"
  field {
    name: "lpUniversalName"
    type: "*US;"
  }
}
struct {
  name: "UNIVERSAL_NAME_INFOW"
  field {
    name: "lpUniversalName"
    type: "*US;"
  }
}
struct {
  name: "REMOTE_NAME_INFOA"
  field {
    name: "lpUniversalName"
    type: "*C;"
  }
  field {
    name: "lpConnectionName"
    type: "*C;"
  }
  field {
    name: "lpRemainingPath"
    type: "*C;"
  }
}
struct {
  name: "REMOTE_NAME_INFOA"
  field {
    name: "lpUniversalName"
    type: "*C;"
  }
  field {
    name: "lpConnectionName"
    type: "*C;"
  }
  field {
    name: "lpRemainingPath"
    type: "*C;"
  }
}
struct {
  name: "REMOTE_NAME_INFOW"
  field {
    name: "lpUniversalName"
    type: "*US;"
  }
  field {
    name: "lpConnectionName"
    type: "*US;"
  }
  field {
    name: "lpRemainingPath"
    type: "*US;"
  }
}
struct {
  name: "REMOTE_NAME_INFOW"
  field {
    name: "lpUniversalName"
    type: "*US;"
  }
  field {
    name: "lpConnectionName"
    type: "*US;"
  }
  field {
    name: "lpRemainingPath"
    type: "*US;"
  }
}
struct {
  name: "NETINFOSTRUCT"
  field {
    name: "cbStructure"
    type: "UI"
  }
  field {
    name: "dwProviderVersion"
    type: "UI"
  }
  field {
    name: "dwStatus"
    type: "UI"
  }
  field {
    name: "dwCharacteristics"
    type: "UI"
  }
  field {
    name: "dwHandle"
    type: "UI"
  }
  field {
    name: "wNetType"
    type: "US"
  }
  field {
    name: "dwPrinters"
    type: "UI"
  }
  field {
    name: "dwDrives"
    type: "UI"
  }
}
struct {
  name: "NETINFOSTRUCT"
  field {
    name: "cbStructure"
    type: "UI"
  }
  field {
    name: "dwProviderVersion"
    type: "UI"
  }
  field {
    name: "dwStatus"
    type: "UI"
  }
  field {
    name: "dwCharacteristics"
    type: "UI"
  }
  field {
    name: "dwHandle"
    type: "UI"
  }
  field {
    name: "wNetType"
    type: "US"
  }
  field {
    name: "dwPrinters"
    type: "UI"
  }
  field {
    name: "dwDrives"
    type: "UI"
  }
}
struct {
  name: "NETCONNECTINFOSTRUCT"
  field {
    name: "cbStructure"
    type: "UI"
  }
  field {
    name: "dwFlags"
    type: "UI"
  }
  field {
    name: "dwSpeed"
    type: "UI"
  }
  field {
    name: "dwDelay"
    type: "UI"
  }
  field {
    name: "dwOptDataSize"
    type: "UI"
  }
}
struct {
  name: "NETCONNECTINFOSTRUCT"
  field {
    name: "cbStructure"
    type: "UI"
  }
  field {
    name: "dwFlags"
    type: "UI"
  }
  field {
    name: "dwSpeed"
    type: "UI"
  }
  field {
    name: "dwDelay"
    type: "UI"
  }
  field {
    name: "dwOptDataSize"
    type: "UI"
  }
}
struct {
  name: "tagPASSWORD_CACHE_ENTRY"
  field {
    name: "cbEntry"
    type: "US"
  }
  field {
    name: "cbResource"
    type: "US"
  }
  field {
    name: "cbPassword"
    type: "US"
  }
  field {
    name: "iEntry"
    type: "UB"
  }
  field {
    name: "nType"
    type: "UB"
  }
  field {
    name: "abResource"
    type: "X(ConstantArray.BYTE [1])"
  }
}
struct {
  name: "DDEACK"
  field {
    name: "bAppReturnCode"
    type: "US"
  }
  field {
    name: "reserved"
    type: "US"
  }
  field {
    name: "fBusy"
    type: "US"
  }
  field {
    name: "fAck"
    type: "US"
  }
}
struct {
  name: "DDEDATA"
  field {
    name: "unused"
    type: "US"
  }
  field {
    name: "fResponse"
    type: "US"
  }
  field {
    name: "fRelease"
    type: "US"
  }
  field {
    name: "reserved"
    type: "US"
  }
  field {
    name: "fAckReq"
    type: "US"
  }
  field {
    name: "cfFormat"
    type: "S"
  }
  field {
    name: "Value"
    type: "X(ConstantArray.BYTE [1])"
  }
}
struct {
  name: "DDEADVISE"
  field {
    name: "reserved"
    type: "US"
  }
  field {
    name: "fDeferUpd"
    type: "US"
  }
  field {
    name: "fAckReq"
    type: "US"
  }
  field {
    name: "cfFormat"
    type: "S"
  }
}
struct {
  name: "DDEPOKE"
  field {
    name: "unused"
    type: "US"
  }
  field {
    name: "fRelease"
    type: "US"
  }
  field {
    name: "fReserved"
    type: "US"
  }
  field {
    name: "cfFormat"
    type: "S"
  }
  field {
    name: "Value"
    type: "X(ConstantArray.BYTE [1])"
  }
}
struct {
  name: "HCONVLIST__"
  field {
    name: "unused"
    type: "I"
  }
}
struct {
  name: "HCONV__"
  field {
    name: "unused"
    type: "I"
  }
}
struct {
  name: "HSZ__"
  field {
    name: "unused"
    type: "I"
  }
}
struct {
  name: "HDDEDATA__"
  field {
    name: "unused"
    type: "I"
  }
}
struct {
  name: "tagHSZPAIR"
  field {
    name: "hszSvc"
    type: "*RHSZ__;;"
  }
  field {
    name: "hszTopic"
    type: "*RHSZ__;;"
  }
}
struct {
  name: "tagHSZPAIR"
  field {
    name: "hszSvc"
    type: "*RHSZ__;;"
  }
  field {
    name: "hszTopic"
    type: "*RHSZ__;;"
  }
}
struct {
  name: "tagCONVCONTEXT"
  field {
    name: "cb"
    type: "UI"
  }
  field {
    name: "wFlags"
    type: "UI"
  }
  field {
    name: "wCountryID"
    type: "UI"
  }
  field {
    name: "iCodePage"
    type: "I"
  }
  field {
    name: "dwLangID"
    type: "UI"
  }
  field {
    name: "dwSecurity"
    type: "UI"
  }
  field {
    name: "qos"
    type: "R_SECURITY_QUALITY_OF_SERVICE;"
  }
}
struct {
  name: "tagCONVCONTEXT"
  field {
    name: "cb"
    type: "UI"
  }
  field {
    name: "wFlags"
    type: "UI"
  }
  field {
    name: "wCountryID"
    type: "UI"
  }
  field {
    name: "iCodePage"
    type: "I"
  }
  field {
    name: "dwLangID"
    type: "UI"
  }
  field {
    name: "dwSecurity"
    type: "UI"
  }
  field {
    name: "qos"
    type: "R_SECURITY_QUALITY_OF_SERVICE;"
  }
}
struct {
  name: "tagCONVINFO"
  field {
    name: "cb"
    type: "UI"
  }
  field {
    name: "hUser"
    type: "UI"
  }
  field {
    name: "hConvPartner"
    type: "*RHCONV__;;"
  }
  field {
    name: "hszSvcPartner"
    type: "*RHSZ__;;"
  }
  field {
    name: "hszServiceReq"
    type: "*RHSZ__;;"
  }
  field {
    name: "hszTopic"
    type: "*RHSZ__;;"
  }
  field {
    name: "hszItem"
    type: "*RHSZ__;;"
  }
  field {
    name: "wFmt"
    type: "UI"
  }
  field {
    name: "wType"
    type: "UI"
  }
  field {
    name: "wStatus"
    type: "UI"
  }
  field {
    name: "wConvst"
    type: "UI"
  }
  field {
    name: "wLastError"
    type: "UI"
  }
  field {
    name: "hConvList"
    type: "*RHCONVLIST__;;"
  }
  field {
    name: "ConvCtxt"
    type: "RtagCONVCONTEXT;"
  }
  field {
    name: "hwnd"
    type: "*RHWND__;;"
  }
  field {
    name: "hwndPartner"
    type: "*RHWND__;;"
  }
}
struct {
  name: "tagCONVINFO"
  field {
    name: "cb"
    type: "UI"
  }
  field {
    name: "hUser"
    type: "UI"
  }
  field {
    name: "hConvPartner"
    type: "*RHCONV__;;"
  }
  field {
    name: "hszSvcPartner"
    type: "*RHSZ__;;"
  }
  field {
    name: "hszServiceReq"
    type: "*RHSZ__;;"
  }
  field {
    name: "hszTopic"
    type: "*RHSZ__;;"
  }
  field {
    name: "hszItem"
    type: "*RHSZ__;;"
  }
  field {
    name: "wFmt"
    type: "UI"
  }
  field {
    name: "wType"
    type: "UI"
  }
  field {
    name: "wStatus"
    type: "UI"
  }
  field {
    name: "wConvst"
    type: "UI"
  }
  field {
    name: "wLastError"
    type: "UI"
  }
  field {
    name: "hConvList"
    type: "*RHCONVLIST__;;"
  }
  field {
    name: "ConvCtxt"
    type: "RtagCONVCONTEXT;"
  }
  field {
    name: "hwnd"
    type: "*RHWND__;;"
  }
  field {
    name: "hwndPartner"
    type: "*RHWND__;;"
  }
}
struct {
  name: "tagCRGB"
  field {
    name: "bRed"
    type: "UB"
  }
  field {
    name: "bGreen"
    type: "UB"
  }
  field {
    name: "bBlue"
    type: "UB"
  }
  field {
    name: "bExtra"
    type: "UB"
  }
}
struct {
  name: "HDRVR__"
  field {
    name: "unused"
    type: "I"
  }
}
struct {
  name: "HWAVE__"
  field {
    name: "unused"
    type: "I"
  }
}
struct {
  name: "HWAVEIN__"
  field {
    name: "unused"
    type: "I"
  }
}
struct {
  name: "HWAVEOUT__"
  field {
    name: "unused"
    type: "I"
  }
}
struct {
  name: "HMIDI__"
  field {
    name: "unused"
    type: "I"
  }
}
struct {
  name: "HMIDIIN__"
  field {
    name: "unused"
    type: "I"
  }
}
struct {
  name: "HMIDIOUT__"
  field {
    name: "unused"
    type: "I"
  }
}
struct {
  name: "HMIDISTRM__"
  field {
    name: "unused"
    type: "I"
  }
}
struct {
  name: "HMIXER__"
  field {
    name: "unused"
    type: "I"
  }
}
struct {
  name: "HMIXEROBJ__"
  field {
    name: "unused"
    type: "I"
  }
}
struct {
  name: "HMMIO__"
  field {
    name: "unused"
    type: "I"
  }
}
struct {
  name: "mmtime_tag"
  field {
    name: "wType"
    type: "UI"
  }
  field {
    name: "u"
    type: "Runion mmtime_tag::(anonymous at /usr/local/include/wine/windows/mmsystem.h:80:5);"
  }
}
struct {
  name: "struct mmtime_tag::(anonymous at /usr/local/include/wine/windows/mmsystem.h:85:2)"
  field {
    name: "hour"
    type: "UB"
  }
  field {
    name: "min"
    type: "UB"
  }
  field {
    name: "sec"
    type: "UB"
  }
  field {
    name: "frame"
    type: "UB"
  }
  field {
    name: "fps"
    type: "UB"
  }
  field {
    name: "dummy"
    type: "UB"
  }
  field {
    name: "pad"
    type: "X(ConstantArray.BYTE [2])"
  }
}
struct {
  name: "struct mmtime_tag::(anonymous at /usr/local/include/wine/windows/mmsystem.h:94:2)"
  field {
    name: "songptrpos"
    type: "UI"
  }
}
struct {
  name: "mmtime_tag"
  field {
    name: "wType"
    type: "UI"
  }
  field {
    name: "u"
    type: "Runion mmtime_tag::(anonymous at /usr/local/include/wine/windows/mmsystem.h:80:5);"
  }
}
struct {
  name: "struct mmtime_tag::(anonymous at /usr/local/include/wine/windows/mmsystem.h:85:2)"
  field {
    name: "hour"
    type: "UB"
  }
  field {
    name: "min"
    type: "UB"
  }
  field {
    name: "sec"
    type: "UB"
  }
  field {
    name: "frame"
    type: "UB"
  }
  field {
    name: "fps"
    type: "UB"
  }
  field {
    name: "dummy"
    type: "UB"
  }
  field {
    name: "pad"
    type: "X(ConstantArray.BYTE [2])"
  }
}
struct {
  name: "struct mmtime_tag::(anonymous at /usr/local/include/wine/windows/mmsystem.h:94:2)"
  field {
    name: "songptrpos"
    type: "UI"
  }
}
struct {
  name: "mmtime_tag"
  field {
    name: "wType"
    type: "UI"
  }
  field {
    name: "u"
    type: "Runion mmtime_tag::(anonymous at /usr/local/include/wine/windows/mmsystem.h:80:5);"
  }
}
struct {
  name: "struct mmtime_tag::(anonymous at /usr/local/include/wine/windows/mmsystem.h:85:2)"
  field {
    name: "hour"
    type: "UB"
  }
  field {
    name: "min"
    type: "UB"
  }
  field {
    name: "sec"
    type: "UB"
  }
  field {
    name: "frame"
    type: "UB"
  }
  field {
    name: "fps"
    type: "UB"
  }
  field {
    name: "dummy"
    type: "UB"
  }
  field {
    name: "pad"
    type: "X(ConstantArray.BYTE [2])"
  }
}
struct {
  name: "struct mmtime_tag::(anonymous at /usr/local/include/wine/windows/mmsystem.h:94:2)"
  field {
    name: "songptrpos"
    type: "UI"
  }
}
struct {
  name: "tagDRVCONFIGINFO"
  field {
    name: "dwDCISize"
    type: "UI"
  }
  field {
    name: "lpszDCISectionName"
    type: "*cUS;"
  }
  field {
    name: "lpszDCIAliasName"
    type: "*cUS;"
  }
}
struct {
  name: "tagDRVCONFIGINFO"
  field {
    name: "dwDCISize"
    type: "UI"
  }
  field {
    name: "lpszDCISectionName"
    type: "*cUS;"
  }
  field {
    name: "lpszDCIAliasName"
    type: "*cUS;"
  }
}
struct {
  name: "wavehdr_tag"
  field {
    name: "lpData"
    type: "*C;"
  }
  field {
    name: "dwBufferLength"
    type: "UI"
  }
  field {
    name: "dwBytesRecorded"
    type: "UI"
  }
  field {
    name: "dwUser"
    type: "UI"
  }
  field {
    name: "dwFlags"
    type: "UI"
  }
  field {
    name: "dwLoops"
    type: "UI"
  }
  field {
    name: "lpNext"
    type: "*Rwavehdr_tag;;"
  }
  field {
    name: "reserved"
    type: "UI"
  }
}
struct {
  name: "wavehdr_tag"
  field {
    name: "lpData"
    type: "*C;"
  }
  field {
    name: "dwBufferLength"
    type: "UI"
  }
  field {
    name: "dwBytesRecorded"
    type: "UI"
  }
  field {
    name: "dwUser"
    type: "UI"
  }
  field {
    name: "dwFlags"
    type: "UI"
  }
  field {
    name: "dwLoops"
    type: "UI"
  }
  field {
    name: "lpNext"
    type: "*Rwavehdr_tag;;"
  }
  field {
    name: "reserved"
    type: "UI"
  }
}
struct {
  name: "wavehdr_tag"
  field {
    name: "lpData"
    type: "*C;"
  }
  field {
    name: "dwBufferLength"
    type: "UI"
  }
  field {
    name: "dwBytesRecorded"
    type: "UI"
  }
  field {
    name: "dwUser"
    type: "UI"
  }
  field {
    name: "dwFlags"
    type: "UI"
  }
  field {
    name: "dwLoops"
    type: "UI"
  }
  field {
    name: "lpNext"
    type: "*Rwavehdr_tag;;"
  }
  field {
    name: "reserved"
    type: "UI"
  }
}
struct {
  name: "wavehdr_tag"
  field {
    name: "lpData"
    type: "*C;"
  }
  field {
    name: "dwBufferLength"
    type: "UI"
  }
  field {
    name: "dwBytesRecorded"
    type: "UI"
  }
  field {
    name: "dwUser"
    type: "UI"
  }
  field {
    name: "dwFlags"
    type: "UI"
  }
  field {
    name: "dwLoops"
    type: "UI"
  }
  field {
    name: "lpNext"
    type: "*Rwavehdr_tag;;"
  }
  field {
    name: "reserved"
    type: "UI"
  }
}
struct {
  name: "tagWAVEOUTCAPSA"
  field {
    name: "wMid"
    type: "US"
  }
  field {
    name: "wPid"
    type: "US"
  }
  field {
    name: "vDriverVersion"
    type: "UI"
  }
  field {
    name: "szPname"
    type: "X(ConstantArray.CHAR [32])"
  }
  field {
    name: "dwFormats"
    type: "UI"
  }
  field {
    name: "wChannels"
    type: "US"
  }
  field {
    name: "wReserved1"
    type: "US"
  }
  field {
    name: "dwSupport"
    type: "UI"
  }
}
struct {
  name: "tagWAVEOUTCAPSA"
  field {
    name: "wMid"
    type: "US"
  }
  field {
    name: "wPid"
    type: "US"
  }
  field {
    name: "vDriverVersion"
    type: "UI"
  }
  field {
    name: "szPname"
    type: "X(ConstantArray.CHAR [32])"
  }
  field {
    name: "dwFormats"
    type: "UI"
  }
  field {
    name: "wChannels"
    type: "US"
  }
  field {
    name: "wReserved1"
    type: "US"
  }
  field {
    name: "dwSupport"
    type: "UI"
  }
}
struct {
  name: "tagWAVEOUTCAPSW"
  field {
    name: "wMid"
    type: "US"
  }
  field {
    name: "wPid"
    type: "US"
  }
  field {
    name: "vDriverVersion"
    type: "UI"
  }
  field {
    name: "szPname"
    type: "X(ConstantArray.WCHAR [32])"
  }
  field {
    name: "dwFormats"
    type: "UI"
  }
  field {
    name: "wChannels"
    type: "US"
  }
  field {
    name: "wReserved1"
    type: "US"
  }
  field {
    name: "dwSupport"
    type: "UI"
  }
}
struct {
  name: "tagWAVEOUTCAPSW"
  field {
    name: "wMid"
    type: "US"
  }
  field {
    name: "wPid"
    type: "US"
  }
  field {
    name: "vDriverVersion"
    type: "UI"
  }
  field {
    name: "szPname"
    type: "X(ConstantArray.WCHAR [32])"
  }
  field {
    name: "dwFormats"
    type: "UI"
  }
  field {
    name: "wChannels"
    type: "US"
  }
  field {
    name: "wReserved1"
    type: "US"
  }
  field {
    name: "dwSupport"
    type: "UI"
  }
}
struct {
  name: "tagWAVEOUTCAPS2A"
  field {
    name: "wMid"
    type: "US"
  }
  field {
    name: "wPid"
    type: "US"
  }
  field {
    name: "vDriverVersion"
    type: "UI"
  }
  field {
    name: "szPname"
    type: "X(ConstantArray.CHAR [32])"
  }
  field {
    name: "dwFormats"
    type: "UI"
  }
  field {
    name: "wChannels"
    type: "US"
  }
  field {
    name: "wReserved1"
    type: "US"
  }
  field {
    name: "dwSupport"
    type: "UI"
  }
  field {
    name: "ManufacturerGuid"
    type: "R_GUID;"
  }
  field {
    name: "ProductGuid"
    type: "R_GUID;"
  }
  field {
    name: "NameGuid"
    type: "R_GUID;"
  }
}
struct {
  name: "tagWAVEOUTCAPS2A"
  field {
    name: "wMid"
    type: "US"
  }
  field {
    name: "wPid"
    type: "US"
  }
  field {
    name: "vDriverVersion"
    type: "UI"
  }
  field {
    name: "szPname"
    type: "X(ConstantArray.CHAR [32])"
  }
  field {
    name: "dwFormats"
    type: "UI"
  }
  field {
    name: "wChannels"
    type: "US"
  }
  field {
    name: "wReserved1"
    type: "US"
  }
  field {
    name: "dwSupport"
    type: "UI"
  }
  field {
    name: "ManufacturerGuid"
    type: "R_GUID;"
  }
  field {
    name: "ProductGuid"
    type: "R_GUID;"
  }
  field {
    name: "NameGuid"
    type: "R_GUID;"
  }
}
struct {
  name: "tagWAVEOUTCAPS2W"
  field {
    name: "wMid"
    type: "US"
  }
  field {
    name: "wPid"
    type: "US"
  }
  field {
    name: "vDriverVersion"
    type: "UI"
  }
  field {
    name: "szPname"
    type: "X(ConstantArray.WCHAR [32])"
  }
  field {
    name: "dwFormats"
    type: "UI"
  }
  field {
    name: "wChannels"
    type: "US"
  }
  field {
    name: "wReserved1"
    type: "US"
  }
  field {
    name: "dwSupport"
    type: "UI"
  }
  field {
    name: "ManufacturerGuid"
    type: "R_GUID;"
  }
  field {
    name: "ProductGuid"
    type: "R_GUID;"
  }
  field {
    name: "NameGuid"
    type: "R_GUID;"
  }
}
struct {
  name: "tagWAVEOUTCAPS2W"
  field {
    name: "wMid"
    type: "US"
  }
  field {
    name: "wPid"
    type: "US"
  }
  field {
    name: "vDriverVersion"
    type: "UI"
  }
  field {
    name: "szPname"
    type: "X(ConstantArray.WCHAR [32])"
  }
  field {
    name: "dwFormats"
    type: "UI"
  }
  field {
    name: "wChannels"
    type: "US"
  }
  field {
    name: "wReserved1"
    type: "US"
  }
  field {
    name: "dwSupport"
    type: "UI"
  }
  field {
    name: "ManufacturerGuid"
    type: "R_GUID;"
  }
  field {
    name: "ProductGuid"
    type: "R_GUID;"
  }
  field {
    name: "NameGuid"
    type: "R_GUID;"
  }
}
struct {
  name: "tagWAVEINCAPSA"
  field {
    name: "wMid"
    type: "US"
  }
  field {
    name: "wPid"
    type: "US"
  }
  field {
    name: "vDriverVersion"
    type: "UI"
  }
  field {
    name: "szPname"
    type: "X(ConstantArray.CHAR [32])"
  }
  field {
    name: "dwFormats"
    type: "UI"
  }
  field {
    name: "wChannels"
    type: "US"
  }
  field {
    name: "wReserved1"
    type: "US"
  }
}
struct {
  name: "tagWAVEINCAPSA"
  field {
    name: "wMid"
    type: "US"
  }
  field {
    name: "wPid"
    type: "US"
  }
  field {
    name: "vDriverVersion"
    type: "UI"
  }
  field {
    name: "szPname"
    type: "X(ConstantArray.CHAR [32])"
  }
  field {
    name: "dwFormats"
    type: "UI"
  }
  field {
    name: "wChannels"
    type: "US"
  }
  field {
    name: "wReserved1"
    type: "US"
  }
}
struct {
  name: "tagWAVEINCAPSW"
  field {
    name: "wMid"
    type: "US"
  }
  field {
    name: "wPid"
    type: "US"
  }
  field {
    name: "vDriverVersion"
    type: "UI"
  }
  field {
    name: "szPname"
    type: "X(ConstantArray.WCHAR [32])"
  }
  field {
    name: "dwFormats"
    type: "UI"
  }
  field {
    name: "wChannels"
    type: "US"
  }
  field {
    name: "wReserved1"
    type: "US"
  }
}
struct {
  name: "tagWAVEINCAPSW"
  field {
    name: "wMid"
    type: "US"
  }
  field {
    name: "wPid"
    type: "US"
  }
  field {
    name: "vDriverVersion"
    type: "UI"
  }
  field {
    name: "szPname"
    type: "X(ConstantArray.WCHAR [32])"
  }
  field {
    name: "dwFormats"
    type: "UI"
  }
  field {
    name: "wChannels"
    type: "US"
  }
  field {
    name: "wReserved1"
    type: "US"
  }
}
struct {
  name: "tagWAVEINCAPS2A"
  field {
    name: "wMid"
    type: "US"
  }
  field {
    name: "wPid"
    type: "US"
  }
  field {
    name: "vDriverVersion"
    type: "UI"
  }
  field {
    name: "szPname"
    type: "X(ConstantArray.CHAR [32])"
  }
  field {
    name: "dwFormats"
    type: "UI"
  }
  field {
    name: "wChannels"
    type: "US"
  }
  field {
    name: "wReserved1"
    type: "US"
  }
  field {
    name: "ManufacturerGuid"
    type: "R_GUID;"
  }
  field {
    name: "ProductGuid"
    type: "R_GUID;"
  }
  field {
    name: "NameGuid"
    type: "R_GUID;"
  }
}
struct {
  name: "tagWAVEINCAPS2A"
  field {
    name: "wMid"
    type: "US"
  }
  field {
    name: "wPid"
    type: "US"
  }
  field {
    name: "vDriverVersion"
    type: "UI"
  }
  field {
    name: "szPname"
    type: "X(ConstantArray.CHAR [32])"
  }
  field {
    name: "dwFormats"
    type: "UI"
  }
  field {
    name: "wChannels"
    type: "US"
  }
  field {
    name: "wReserved1"
    type: "US"
  }
  field {
    name: "ManufacturerGuid"
    type: "R_GUID;"
  }
  field {
    name: "ProductGuid"
    type: "R_GUID;"
  }
  field {
    name: "NameGuid"
    type: "R_GUID;"
  }
}
struct {
  name: "tagWAVEINCAPS2W"
  field {
    name: "wMid"
    type: "US"
  }
  field {
    name: "wPid"
    type: "US"
  }
  field {
    name: "vDriverVersion"
    type: "UI"
  }
  field {
    name: "szPname"
    type: "X(ConstantArray.WCHAR [32])"
  }
  field {
    name: "dwFormats"
    type: "UI"
  }
  field {
    name: "wChannels"
    type: "US"
  }
  field {
    name: "wReserved1"
    type: "US"
  }
  field {
    name: "ManufacturerGuid"
    type: "R_GUID;"
  }
  field {
    name: "ProductGuid"
    type: "R_GUID;"
  }
  field {
    name: "NameGuid"
    type: "R_GUID;"
  }
}
struct {
  name: "tagWAVEINCAPS2W"
  field {
    name: "wMid"
    type: "US"
  }
  field {
    name: "wPid"
    type: "US"
  }
  field {
    name: "vDriverVersion"
    type: "UI"
  }
  field {
    name: "szPname"
    type: "X(ConstantArray.WCHAR [32])"
  }
  field {
    name: "dwFormats"
    type: "UI"
  }
  field {
    name: "wChannels"
    type: "US"
  }
  field {
    name: "wReserved1"
    type: "US"
  }
  field {
    name: "ManufacturerGuid"
    type: "R_GUID;"
  }
  field {
    name: "ProductGuid"
    type: "R_GUID;"
  }
  field {
    name: "NameGuid"
    type: "R_GUID;"
  }
}
struct {
  name: "waveformat_tag"
  field {
    name: "wFormatTag"
    type: "US"
  }
  field {
    name: "nChannels"
    type: "US"
  }
  field {
    name: "nSamplesPerSec"
    type: "UI"
  }
  field {
    name: "nAvgBytesPerSec"
    type: "UI"
  }
  field {
    name: "nBlockAlign"
    type: "US"
  }
}
struct {
  name: "waveformat_tag"
  field {
    name: "wFormatTag"
    type: "US"
  }
  field {
    name: "nChannels"
    type: "US"
  }
  field {
    name: "nSamplesPerSec"
    type: "UI"
  }
  field {
    name: "nAvgBytesPerSec"
    type: "UI"
  }
  field {
    name: "nBlockAlign"
    type: "US"
  }
}
struct {
  name: "pcmwaveformat_tag"
  field {
    name: "wf"
    type: "Rwaveformat_tag;"
  }
  field {
    name: "wBitsPerSample"
    type: "US"
  }
}
struct {
  name: "pcmwaveformat_tag"
  field {
    name: "wf"
    type: "Rwaveformat_tag;"
  }
  field {
    name: "wBitsPerSample"
    type: "US"
  }
}
struct {
  name: "tWAVEFORMATEX"
  field {
    name: "wFormatTag"
    type: "US"
  }
  field {
    name: "nChannels"
    type: "US"
  }
  field {
    name: "nSamplesPerSec"
    type: "UI"
  }
  field {
    name: "nAvgBytesPerSec"
    type: "UI"
  }
  field {
    name: "nBlockAlign"
    type: "US"
  }
  field {
    name: "wBitsPerSample"
    type: "US"
  }
  field {
    name: "cbSize"
    type: "US"
  }
}
struct {
  name: "tWAVEFORMATEX"
  field {
    name: "wFormatTag"
    type: "US"
  }
  field {
    name: "nChannels"
    type: "US"
  }
  field {
    name: "nSamplesPerSec"
    type: "UI"
  }
  field {
    name: "nAvgBytesPerSec"
    type: "UI"
  }
  field {
    name: "nBlockAlign"
    type: "US"
  }
  field {
    name: "wBitsPerSample"
    type: "US"
  }
  field {
    name: "cbSize"
    type: "US"
  }
}
struct {
  name: "tWAVEFORMATEX"
  field {
    name: "wFormatTag"
    type: "US"
  }
  field {
    name: "nChannels"
    type: "US"
  }
  field {
    name: "nSamplesPerSec"
    type: "UI"
  }
  field {
    name: "nAvgBytesPerSec"
    type: "UI"
  }
  field {
    name: "nBlockAlign"
    type: "US"
  }
  field {
    name: "wBitsPerSample"
    type: "US"
  }
  field {
    name: "cbSize"
    type: "US"
  }
}
struct {
  name: "tWAVEFORMATEX"
  field {
    name: "wFormatTag"
    type: "US"
  }
  field {
    name: "nChannels"
    type: "US"
  }
  field {
    name: "nSamplesPerSec"
    type: "UI"
  }
  field {
    name: "nAvgBytesPerSec"
    type: "UI"
  }
  field {
    name: "nBlockAlign"
    type: "US"
  }
  field {
    name: "wBitsPerSample"
    type: "US"
  }
  field {
    name: "cbSize"
    type: "US"
  }
}
struct {
  name: "tagMIDIOUTCAPSA"
  field {
    name: "wMid"
    type: "US"
  }
  field {
    name: "wPid"
    type: "US"
  }
  field {
    name: "vDriverVersion"
    type: "UI"
  }
  field {
    name: "szPname"
    type: "X(ConstantArray.CHAR [32])"
  }
  field {
    name: "wTechnology"
    type: "US"
  }
  field {
    name: "wVoices"
    type: "US"
  }
  field {
    name: "wNotes"
    type: "US"
  }
  field {
    name: "wChannelMask"
    type: "US"
  }
  field {
    name: "dwSupport"
    type: "UI"
  }
}
struct {
  name: "tagMIDIOUTCAPSA"
  field {
    name: "wMid"
    type: "US"
  }
  field {
    name: "wPid"
    type: "US"
  }
  field {
    name: "vDriverVersion"
    type: "UI"
  }
  field {
    name: "szPname"
    type: "X(ConstantArray.CHAR [32])"
  }
  field {
    name: "wTechnology"
    type: "US"
  }
  field {
    name: "wVoices"
    type: "US"
  }
  field {
    name: "wNotes"
    type: "US"
  }
  field {
    name: "wChannelMask"
    type: "US"
  }
  field {
    name: "dwSupport"
    type: "UI"
  }
}
struct {
  name: "tagMIDIOUTCAPSW"
  field {
    name: "wMid"
    type: "US"
  }
  field {
    name: "wPid"
    type: "US"
  }
  field {
    name: "vDriverVersion"
    type: "UI"
  }
  field {
    name: "szPname"
    type: "X(ConstantArray.WCHAR [32])"
  }
  field {
    name: "wTechnology"
    type: "US"
  }
  field {
    name: "wVoices"
    type: "US"
  }
  field {
    name: "wNotes"
    type: "US"
  }
  field {
    name: "wChannelMask"
    type: "US"
  }
  field {
    name: "dwSupport"
    type: "UI"
  }
}
struct {
  name: "tagMIDIOUTCAPSW"
  field {
    name: "wMid"
    type: "US"
  }
  field {
    name: "wPid"
    type: "US"
  }
  field {
    name: "vDriverVersion"
    type: "UI"
  }
  field {
    name: "szPname"
    type: "X(ConstantArray.WCHAR [32])"
  }
  field {
    name: "wTechnology"
    type: "US"
  }
  field {
    name: "wVoices"
    type: "US"
  }
  field {
    name: "wNotes"
    type: "US"
  }
  field {
    name: "wChannelMask"
    type: "US"
  }
  field {
    name: "dwSupport"
    type: "UI"
  }
}
struct {
  name: "tagMIDIOUTCAPS2A"
  field {
    name: "wMid"
    type: "US"
  }
  field {
    name: "wPid"
    type: "US"
  }
  field {
    name: "vDriverVersion"
    type: "UI"
  }
  field {
    name: "szPname"
    type: "X(ConstantArray.CHAR [32])"
  }
  field {
    name: "wTechnology"
    type: "US"
  }
  field {
    name: "wVoices"
    type: "US"
  }
  field {
    name: "wNotes"
    type: "US"
  }
  field {
    name: "wChannelMask"
    type: "US"
  }
  field {
    name: "dwSupport"
    type: "UI"
  }
  field {
    name: "ManufacturerGuid"
    type: "R_GUID;"
  }
  field {
    name: "ProductGuid"
    type: "R_GUID;"
  }
  field {
    name: "NameGuid"
    type: "R_GUID;"
  }
}
struct {
  name: "tagMIDIOUTCAPS2A"
  field {
    name: "wMid"
    type: "US"
  }
  field {
    name: "wPid"
    type: "US"
  }
  field {
    name: "vDriverVersion"
    type: "UI"
  }
  field {
    name: "szPname"
    type: "X(ConstantArray.CHAR [32])"
  }
  field {
    name: "wTechnology"
    type: "US"
  }
  field {
    name: "wVoices"
    type: "US"
  }
  field {
    name: "wNotes"
    type: "US"
  }
  field {
    name: "wChannelMask"
    type: "US"
  }
  field {
    name: "dwSupport"
    type: "UI"
  }
  field {
    name: "ManufacturerGuid"
    type: "R_GUID;"
  }
  field {
    name: "ProductGuid"
    type: "R_GUID;"
  }
  field {
    name: "NameGuid"
    type: "R_GUID;"
  }
}
struct {
  name: "tagMIDIOUTCAPS2W"
  field {
    name: "wMid"
    type: "US"
  }
  field {
    name: "wPid"
    type: "US"
  }
  field {
    name: "vDriverVersion"
    type: "UI"
  }
  field {
    name: "szPname"
    type: "X(ConstantArray.WCHAR [32])"
  }
  field {
    name: "wTechnology"
    type: "US"
  }
  field {
    name: "wVoices"
    type: "US"
  }
  field {
    name: "wNotes"
    type: "US"
  }
  field {
    name: "wChannelMask"
    type: "US"
  }
  field {
    name: "dwSupport"
    type: "UI"
  }
  field {
    name: "ManufacturerGuid"
    type: "R_GUID;"
  }
  field {
    name: "ProductGuid"
    type: "R_GUID;"
  }
  field {
    name: "NameGuid"
    type: "R_GUID;"
  }
}
struct {
  name: "tagMIDIOUTCAPS2W"
  field {
    name: "wMid"
    type: "US"
  }
  field {
    name: "wPid"
    type: "US"
  }
  field {
    name: "vDriverVersion"
    type: "UI"
  }
  field {
    name: "szPname"
    type: "X(ConstantArray.WCHAR [32])"
  }
  field {
    name: "wTechnology"
    type: "US"
  }
  field {
    name: "wVoices"
    type: "US"
  }
  field {
    name: "wNotes"
    type: "US"
  }
  field {
    name: "wChannelMask"
    type: "US"
  }
  field {
    name: "dwSupport"
    type: "UI"
  }
  field {
    name: "ManufacturerGuid"
    type: "R_GUID;"
  }
  field {
    name: "ProductGuid"
    type: "R_GUID;"
  }
  field {
    name: "NameGuid"
    type: "R_GUID;"
  }
}
struct {
  name: "tagMIDIINCAPSA"
  field {
    name: "wMid"
    type: "US"
  }
  field {
    name: "wPid"
    type: "US"
  }
  field {
    name: "vDriverVersion"
    type: "UI"
  }
  field {
    name: "szPname"
    type: "X(ConstantArray.CHAR [32])"
  }
  field {
    name: "dwSupport"
    type: "UI"
  }
}
struct {
  name: "tagMIDIINCAPSA"
  field {
    name: "wMid"
    type: "US"
  }
  field {
    name: "wPid"
    type: "US"
  }
  field {
    name: "vDriverVersion"
    type: "UI"
  }
  field {
    name: "szPname"
    type: "X(ConstantArray.CHAR [32])"
  }
  field {
    name: "dwSupport"
    type: "UI"
  }
}
struct {
  name: "tagMIDIINCAPSW"
  field {
    name: "wMid"
    type: "US"
  }
  field {
    name: "wPid"
    type: "US"
  }
  field {
    name: "vDriverVersion"
    type: "UI"
  }
  field {
    name: "szPname"
    type: "X(ConstantArray.WCHAR [32])"
  }
  field {
    name: "dwSupport"
    type: "UI"
  }
}
struct {
  name: "tagMIDIINCAPSW"
  field {
    name: "wMid"
    type: "US"
  }
  field {
    name: "wPid"
    type: "US"
  }
  field {
    name: "vDriverVersion"
    type: "UI"
  }
  field {
    name: "szPname"
    type: "X(ConstantArray.WCHAR [32])"
  }
  field {
    name: "dwSupport"
    type: "UI"
  }
}
struct {
  name: "tagMIDIINCAPS2A"
  field {
    name: "wMid"
    type: "US"
  }
  field {
    name: "wPid"
    type: "US"
  }
  field {
    name: "vDriverVersion"
    type: "UI"
  }
  field {
    name: "szPname"
    type: "X(ConstantArray.CHAR [32])"
  }
  field {
    name: "dwSupport"
    type: "UI"
  }
  field {
    name: "ManufacturerGuid"
    type: "R_GUID;"
  }
  field {
    name: "ProductGuid"
    type: "R_GUID;"
  }
  field {
    name: "NameGuid"
    type: "R_GUID;"
  }
}
struct {
  name: "tagMIDIINCAPS2A"
  field {
    name: "wMid"
    type: "US"
  }
  field {
    name: "wPid"
    type: "US"
  }
  field {
    name: "vDriverVersion"
    type: "UI"
  }
  field {
    name: "szPname"
    type: "X(ConstantArray.CHAR [32])"
  }
  field {
    name: "dwSupport"
    type: "UI"
  }
  field {
    name: "ManufacturerGuid"
    type: "R_GUID;"
  }
  field {
    name: "ProductGuid"
    type: "R_GUID;"
  }
  field {
    name: "NameGuid"
    type: "R_GUID;"
  }
}
struct {
  name: "tagMIDIINCAPS2W"
  field {
    name: "wMid"
    type: "US"
  }
  field {
    name: "wPid"
    type: "US"
  }
  field {
    name: "vDriverVersion"
    type: "UI"
  }
  field {
    name: "szPname"
    type: "X(ConstantArray.WCHAR [32])"
  }
  field {
    name: "dwSupport"
    type: "UI"
  }
  field {
    name: "ManufacturerGuid"
    type: "R_GUID;"
  }
  field {
    name: "ProductGuid"
    type: "R_GUID;"
  }
  field {
    name: "NameGuid"
    type: "R_GUID;"
  }
}
struct {
  name: "tagMIDIINCAPS2W"
  field {
    name: "wMid"
    type: "US"
  }
  field {
    name: "wPid"
    type: "US"
  }
  field {
    name: "vDriverVersion"
    type: "UI"
  }
  field {
    name: "szPname"
    type: "X(ConstantArray.WCHAR [32])"
  }
  field {
    name: "dwSupport"
    type: "UI"
  }
  field {
    name: "ManufacturerGuid"
    type: "R_GUID;"
  }
  field {
    name: "ProductGuid"
    type: "R_GUID;"
  }
  field {
    name: "NameGuid"
    type: "R_GUID;"
  }
}
struct {
  name: "midihdr_tag"
  field {
    name: "lpData"
    type: "*C;"
  }
  field {
    name: "dwBufferLength"
    type: "UI"
  }
  field {
    name: "dwBytesRecorded"
    type: "UI"
  }
  field {
    name: "dwUser"
    type: "UI"
  }
  field {
    name: "dwFlags"
    type: "UI"
  }
  field {
    name: "lpNext"
    type: "*Rmidihdr_tag;;"
  }
  field {
    name: "reserved"
    type: "UI"
  }
  field {
    name: "dwOffset"
    type: "UI"
  }
  field {
    name: "dwReserved"
    type: "X(ConstantArray.DWORD_PTR [8])"
  }
}
struct {
  name: "midihdr_tag"
  field {
    name: "lpData"
    type: "*C;"
  }
  field {
    name: "dwBufferLength"
    type: "UI"
  }
  field {
    name: "dwBytesRecorded"
    type: "UI"
  }
  field {
    name: "dwUser"
    type: "UI"
  }
  field {
    name: "dwFlags"
    type: "UI"
  }
  field {
    name: "lpNext"
    type: "*Rmidihdr_tag;;"
  }
  field {
    name: "reserved"
    type: "UI"
  }
  field {
    name: "dwOffset"
    type: "UI"
  }
  field {
    name: "dwReserved"
    type: "X(ConstantArray.DWORD_PTR [8])"
  }
}
struct {
  name: "midiproptempo_tag"
  field {
    name: "cbStruct"
    type: "UI"
  }
  field {
    name: "dwTempo"
    type: "UI"
  }
}
struct {
  name: "midiproptempo_tag"
  field {
    name: "cbStruct"
    type: "UI"
  }
  field {
    name: "dwTempo"
    type: "UI"
  }
}
struct {
  name: "midiproptimediv_tag"
  field {
    name: "cbStruct"
    type: "UI"
  }
  field {
    name: "dwTimeDiv"
    type: "UI"
  }
}
struct {
  name: "midiproptimediv_tag"
  field {
    name: "cbStruct"
    type: "UI"
  }
  field {
    name: "dwTimeDiv"
    type: "UI"
  }
}
struct {
  name: "midievent_tag"
  field {
    name: "dwDeltaTime"
    type: "UI"
  }
  field {
    name: "dwStreamID"
    type: "UI"
  }
  field {
    name: "dwEvent"
    type: "UI"
  }
  field {
    name: "dwParms"
    type: "X(ConstantArray.DWORD [1])"
  }
}
struct {
  name: "midievent_tag"
  field {
    name: "dwDeltaTime"
    type: "UI"
  }
  field {
    name: "dwStreamID"
    type: "UI"
  }
  field {
    name: "dwEvent"
    type: "UI"
  }
  field {
    name: "dwParms"
    type: "X(ConstantArray.DWORD [1])"
  }
}
struct {
  name: "tagAUXCAPSA"
  field {
    name: "wMid"
    type: "US"
  }
  field {
    name: "wPid"
    type: "US"
  }
  field {
    name: "vDriverVersion"
    type: "UI"
  }
  field {
    name: "szPname"
    type: "X(ConstantArray.CHAR [32])"
  }
  field {
    name: "wTechnology"
    type: "US"
  }
  field {
    name: "wReserved1"
    type: "US"
  }
  field {
    name: "dwSupport"
    type: "UI"
  }
}
struct {
  name: "tagAUXCAPSA"
  field {
    name: "wMid"
    type: "US"
  }
  field {
    name: "wPid"
    type: "US"
  }
  field {
    name: "vDriverVersion"
    type: "UI"
  }
  field {
    name: "szPname"
    type: "X(ConstantArray.CHAR [32])"
  }
  field {
    name: "wTechnology"
    type: "US"
  }
  field {
    name: "wReserved1"
    type: "US"
  }
  field {
    name: "dwSupport"
    type: "UI"
  }
}
struct {
  name: "tagAUXCAPSW"
  field {
    name: "wMid"
    type: "US"
  }
  field {
    name: "wPid"
    type: "US"
  }
  field {
    name: "vDriverVersion"
    type: "UI"
  }
  field {
    name: "szPname"
    type: "X(ConstantArray.WCHAR [32])"
  }
  field {
    name: "wTechnology"
    type: "US"
  }
  field {
    name: "wReserved1"
    type: "US"
  }
  field {
    name: "dwSupport"
    type: "UI"
  }
}
struct {
  name: "tagAUXCAPSW"
  field {
    name: "wMid"
    type: "US"
  }
  field {
    name: "wPid"
    type: "US"
  }
  field {
    name: "vDriverVersion"
    type: "UI"
  }
  field {
    name: "szPname"
    type: "X(ConstantArray.WCHAR [32])"
  }
  field {
    name: "wTechnology"
    type: "US"
  }
  field {
    name: "wReserved1"
    type: "US"
  }
  field {
    name: "dwSupport"
    type: "UI"
  }
}
struct {
  name: "tagAUXCAPS2A"
  field {
    name: "wMid"
    type: "US"
  }
  field {
    name: "wPid"
    type: "US"
  }
  field {
    name: "vDriverVersion"
    type: "UI"
  }
  field {
    name: "szPname"
    type: "X(ConstantArray.CHAR [32])"
  }
  field {
    name: "wTechnology"
    type: "US"
  }
  field {
    name: "wReserved1"
    type: "US"
  }
  field {
    name: "dwSupport"
    type: "UI"
  }
  field {
    name: "ManufacturerGuid"
    type: "R_GUID;"
  }
  field {
    name: "ProductGuid"
    type: "R_GUID;"
  }
  field {
    name: "NameGuid"
    type: "R_GUID;"
  }
}
struct {
  name: "tagAUXCAPS2A"
  field {
    name: "wMid"
    type: "US"
  }
  field {
    name: "wPid"
    type: "US"
  }
  field {
    name: "vDriverVersion"
    type: "UI"
  }
  field {
    name: "szPname"
    type: "X(ConstantArray.CHAR [32])"
  }
  field {
    name: "wTechnology"
    type: "US"
  }
  field {
    name: "wReserved1"
    type: "US"
  }
  field {
    name: "dwSupport"
    type: "UI"
  }
  field {
    name: "ManufacturerGuid"
    type: "R_GUID;"
  }
  field {
    name: "ProductGuid"
    type: "R_GUID;"
  }
  field {
    name: "NameGuid"
    type: "R_GUID;"
  }
}
struct {
  name: "tagAUXCAPS2W"
  field {
    name: "wMid"
    type: "US"
  }
  field {
    name: "wPid"
    type: "US"
  }
  field {
    name: "vDriverVersion"
    type: "UI"
  }
  field {
    name: "szPname"
    type: "X(ConstantArray.WCHAR [32])"
  }
  field {
    name: "wTechnology"
    type: "US"
  }
  field {
    name: "wReserved1"
    type: "US"
  }
  field {
    name: "dwSupport"
    type: "UI"
  }
  field {
    name: "ManufacturerGuid"
    type: "R_GUID;"
  }
  field {
    name: "ProductGuid"
    type: "R_GUID;"
  }
  field {
    name: "NameGuid"
    type: "R_GUID;"
  }
}
struct {
  name: "tagAUXCAPS2W"
  field {
    name: "wMid"
    type: "US"
  }
  field {
    name: "wPid"
    type: "US"
  }
  field {
    name: "vDriverVersion"
    type: "UI"
  }
  field {
    name: "szPname"
    type: "X(ConstantArray.WCHAR [32])"
  }
  field {
    name: "wTechnology"
    type: "US"
  }
  field {
    name: "wReserved1"
    type: "US"
  }
  field {
    name: "dwSupport"
    type: "UI"
  }
  field {
    name: "ManufacturerGuid"
    type: "R_GUID;"
  }
  field {
    name: "ProductGuid"
    type: "R_GUID;"
  }
  field {
    name: "NameGuid"
    type: "R_GUID;"
  }
}
struct {
  name: "timecaps_tag"
  field {
    name: "wPeriodMin"
    type: "UI"
  }
  field {
    name: "wPeriodMax"
    type: "UI"
  }
}
struct {
  name: "timecaps_tag"
  field {
    name: "wPeriodMin"
    type: "UI"
  }
  field {
    name: "wPeriodMax"
    type: "UI"
  }
}
struct {
  name: "tagJOYCAPSA"
  field {
    name: "wMid"
    type: "US"
  }
  field {
    name: "wPid"
    type: "US"
  }
  field {
    name: "szPname"
    type: "X(ConstantArray.CHAR [32])"
  }
  field {
    name: "wXmin"
    type: "UI"
  }
  field {
    name: "wXmax"
    type: "UI"
  }
  field {
    name: "wYmin"
    type: "UI"
  }
  field {
    name: "wYmax"
    type: "UI"
  }
  field {
    name: "wZmin"
    type: "UI"
  }
  field {
    name: "wZmax"
    type: "UI"
  }
  field {
    name: "wNumButtons"
    type: "UI"
  }
  field {
    name: "wPeriodMin"
    type: "UI"
  }
  field {
    name: "wPeriodMax"
    type: "UI"
  }
  field {
    name: "wRmin"
    type: "UI"
  }
  field {
    name: "wRmax"
    type: "UI"
  }
  field {
    name: "wUmin"
    type: "UI"
  }
  field {
    name: "wUmax"
    type: "UI"
  }
  field {
    name: "wVmin"
    type: "UI"
  }
  field {
    name: "wVmax"
    type: "UI"
  }
  field {
    name: "wCaps"
    type: "UI"
  }
  field {
    name: "wMaxAxes"
    type: "UI"
  }
  field {
    name: "wNumAxes"
    type: "UI"
  }
  field {
    name: "wMaxButtons"
    type: "UI"
  }
  field {
    name: "szRegKey"
    type: "X(ConstantArray.CHAR [32])"
  }
  field {
    name: "szOEMVxD"
    type: "X(ConstantArray.CHAR [260])"
  }
}
struct {
  name: "tagJOYCAPSA"
  field {
    name: "wMid"
    type: "US"
  }
  field {
    name: "wPid"
    type: "US"
  }
  field {
    name: "szPname"
    type: "X(ConstantArray.CHAR [32])"
  }
  field {
    name: "wXmin"
    type: "UI"
  }
  field {
    name: "wXmax"
    type: "UI"
  }
  field {
    name: "wYmin"
    type: "UI"
  }
  field {
    name: "wYmax"
    type: "UI"
  }
  field {
    name: "wZmin"
    type: "UI"
  }
  field {
    name: "wZmax"
    type: "UI"
  }
  field {
    name: "wNumButtons"
    type: "UI"
  }
  field {
    name: "wPeriodMin"
    type: "UI"
  }
  field {
    name: "wPeriodMax"
    type: "UI"
  }
  field {
    name: "wRmin"
    type: "UI"
  }
  field {
    name: "wRmax"
    type: "UI"
  }
  field {
    name: "wUmin"
    type: "UI"
  }
  field {
    name: "wUmax"
    type: "UI"
  }
  field {
    name: "wVmin"
    type: "UI"
  }
  field {
    name: "wVmax"
    type: "UI"
  }
  field {
    name: "wCaps"
    type: "UI"
  }
  field {
    name: "wMaxAxes"
    type: "UI"
  }
  field {
    name: "wNumAxes"
    type: "UI"
  }
  field {
    name: "wMaxButtons"
    type: "UI"
  }
  field {
    name: "szRegKey"
    type: "X(ConstantArray.CHAR [32])"
  }
  field {
    name: "szOEMVxD"
    type: "X(ConstantArray.CHAR [260])"
  }
}
struct {
  name: "tagJOYCAPSW"
  field {
    name: "wMid"
    type: "US"
  }
  field {
    name: "wPid"
    type: "US"
  }
  field {
    name: "szPname"
    type: "X(ConstantArray.WCHAR [32])"
  }
  field {
    name: "wXmin"
    type: "UI"
  }
  field {
    name: "wXmax"
    type: "UI"
  }
  field {
    name: "wYmin"
    type: "UI"
  }
  field {
    name: "wYmax"
    type: "UI"
  }
  field {
    name: "wZmin"
    type: "UI"
  }
  field {
    name: "wZmax"
    type: "UI"
  }
  field {
    name: "wNumButtons"
    type: "UI"
  }
  field {
    name: "wPeriodMin"
    type: "UI"
  }
  field {
    name: "wPeriodMax"
    type: "UI"
  }
  field {
    name: "wRmin"
    type: "UI"
  }
  field {
    name: "wRmax"
    type: "UI"
  }
  field {
    name: "wUmin"
    type: "UI"
  }
  field {
    name: "wUmax"
    type: "UI"
  }
  field {
    name: "wVmin"
    type: "UI"
  }
  field {
    name: "wVmax"
    type: "UI"
  }
  field {
    name: "wCaps"
    type: "UI"
  }
  field {
    name: "wMaxAxes"
    type: "UI"
  }
  field {
    name: "wNumAxes"
    type: "UI"
  }
  field {
    name: "wMaxButtons"
    type: "UI"
  }
  field {
    name: "szRegKey"
    type: "X(ConstantArray.WCHAR [32])"
  }
  field {
    name: "szOEMVxD"
    type: "X(ConstantArray.WCHAR [260])"
  }
}
struct {
  name: "tagJOYCAPSW"
  field {
    name: "wMid"
    type: "US"
  }
  field {
    name: "wPid"
    type: "US"
  }
  field {
    name: "szPname"
    type: "X(ConstantArray.WCHAR [32])"
  }
  field {
    name: "wXmin"
    type: "UI"
  }
  field {
    name: "wXmax"
    type: "UI"
  }
  field {
    name: "wYmin"
    type: "UI"
  }
  field {
    name: "wYmax"
    type: "UI"
  }
  field {
    name: "wZmin"
    type: "UI"
  }
  field {
    name: "wZmax"
    type: "UI"
  }
  field {
    name: "wNumButtons"
    type: "UI"
  }
  field {
    name: "wPeriodMin"
    type: "UI"
  }
  field {
    name: "wPeriodMax"
    type: "UI"
  }
  field {
    name: "wRmin"
    type: "UI"
  }
  field {
    name: "wRmax"
    type: "UI"
  }
  field {
    name: "wUmin"
    type: "UI"
  }
  field {
    name: "wUmax"
    type: "UI"
  }
  field {
    name: "wVmin"
    type: "UI"
  }
  field {
    name: "wVmax"
    type: "UI"
  }
  field {
    name: "wCaps"
    type: "UI"
  }
  field {
    name: "wMaxAxes"
    type: "UI"
  }
  field {
    name: "wNumAxes"
    type: "UI"
  }
  field {
    name: "wMaxButtons"
    type: "UI"
  }
  field {
    name: "szRegKey"
    type: "X(ConstantArray.WCHAR [32])"
  }
  field {
    name: "szOEMVxD"
    type: "X(ConstantArray.WCHAR [260])"
  }
}
struct {
  name: "tagJOYCAPS2A"
  field {
    name: "wMid"
    type: "US"
  }
  field {
    name: "wPid"
    type: "US"
  }
  field {
    name: "szPname"
    type: "X(ConstantArray.CHAR [32])"
  }
  field {
    name: "wXmin"
    type: "UI"
  }
  field {
    name: "wXmax"
    type: "UI"
  }
  field {
    name: "wYmin"
    type: "UI"
  }
  field {
    name: "wYmax"
    type: "UI"
  }
  field {
    name: "wZmin"
    type: "UI"
  }
  field {
    name: "wZmax"
    type: "UI"
  }
  field {
    name: "wNumButtons"
    type: "UI"
  }
  field {
    name: "wPeriodMin"
    type: "UI"
  }
  field {
    name: "wPeriodMax"
    type: "UI"
  }
  field {
    name: "wRmin"
    type: "UI"
  }
  field {
    name: "wRmax"
    type: "UI"
  }
  field {
    name: "wUmin"
    type: "UI"
  }
  field {
    name: "wUmax"
    type: "UI"
  }
  field {
    name: "wVmin"
    type: "UI"
  }
  field {
    name: "wVmax"
    type: "UI"
  }
  field {
    name: "wCaps"
    type: "UI"
  }
  field {
    name: "wMaxAxes"
    type: "UI"
  }
  field {
    name: "wNumAxes"
    type: "UI"
  }
  field {
    name: "wMaxButtons"
    type: "UI"
  }
  field {
    name: "szRegKey"
    type: "X(ConstantArray.CHAR [32])"
  }
  field {
    name: "szOEMVxD"
    type: "X(ConstantArray.CHAR [260])"
  }
  field {
    name: "ManufacturerGuid"
    type: "R_GUID;"
  }
  field {
    name: "ProductGuid"
    type: "R_GUID;"
  }
  field {
    name: "NameGuid"
    type: "R_GUID;"
  }
}
struct {
  name: "tagJOYCAPS2A"
  field {
    name: "wMid"
    type: "US"
  }
  field {
    name: "wPid"
    type: "US"
  }
  field {
    name: "szPname"
    type: "X(ConstantArray.CHAR [32])"
  }
  field {
    name: "wXmin"
    type: "UI"
  }
  field {
    name: "wXmax"
    type: "UI"
  }
  field {
    name: "wYmin"
    type: "UI"
  }
  field {
    name: "wYmax"
    type: "UI"
  }
  field {
    name: "wZmin"
    type: "UI"
  }
  field {
    name: "wZmax"
    type: "UI"
  }
  field {
    name: "wNumButtons"
    type: "UI"
  }
  field {
    name: "wPeriodMin"
    type: "UI"
  }
  field {
    name: "wPeriodMax"
    type: "UI"
  }
  field {
    name: "wRmin"
    type: "UI"
  }
  field {
    name: "wRmax"
    type: "UI"
  }
  field {
    name: "wUmin"
    type: "UI"
  }
  field {
    name: "wUmax"
    type: "UI"
  }
  field {
    name: "wVmin"
    type: "UI"
  }
  field {
    name: "wVmax"
    type: "UI"
  }
  field {
    name: "wCaps"
    type: "UI"
  }
  field {
    name: "wMaxAxes"
    type: "UI"
  }
  field {
    name: "wNumAxes"
    type: "UI"
  }
  field {
    name: "wMaxButtons"
    type: "UI"
  }
  field {
    name: "szRegKey"
    type: "X(ConstantArray.CHAR [32])"
  }
  field {
    name: "szOEMVxD"
    type: "X(ConstantArray.CHAR [260])"
  }
  field {
    name: "ManufacturerGuid"
    type: "R_GUID;"
  }
  field {
    name: "ProductGuid"
    type: "R_GUID;"
  }
  field {
    name: "NameGuid"
    type: "R_GUID;"
  }
}
struct {
  name: "tagJOYCAPS2W"
  field {
    name: "wMid"
    type: "US"
  }
  field {
    name: "wPid"
    type: "US"
  }
  field {
    name: "szPname"
    type: "X(ConstantArray.WCHAR [32])"
  }
  field {
    name: "wXmin"
    type: "UI"
  }
  field {
    name: "wXmax"
    type: "UI"
  }
  field {
    name: "wYmin"
    type: "UI"
  }
  field {
    name: "wYmax"
    type: "UI"
  }
  field {
    name: "wZmin"
    type: "UI"
  }
  field {
    name: "wZmax"
    type: "UI"
  }
  field {
    name: "wNumButtons"
    type: "UI"
  }
  field {
    name: "wPeriodMin"
    type: "UI"
  }
  field {
    name: "wPeriodMax"
    type: "UI"
  }
  field {
    name: "wRmin"
    type: "UI"
  }
  field {
    name: "wRmax"
    type: "UI"
  }
  field {
    name: "wUmin"
    type: "UI"
  }
  field {
    name: "wUmax"
    type: "UI"
  }
  field {
    name: "wVmin"
    type: "UI"
  }
  field {
    name: "wVmax"
    type: "UI"
  }
  field {
    name: "wCaps"
    type: "UI"
  }
  field {
    name: "wMaxAxes"
    type: "UI"
  }
  field {
    name: "wNumAxes"
    type: "UI"
  }
  field {
    name: "wMaxButtons"
    type: "UI"
  }
  field {
    name: "szRegKey"
    type: "X(ConstantArray.WCHAR [32])"
  }
  field {
    name: "szOEMVxD"
    type: "X(ConstantArray.WCHAR [260])"
  }
  field {
    name: "ManufacturerGuid"
    type: "R_GUID;"
  }
  field {
    name: "ProductGuid"
    type: "R_GUID;"
  }
  field {
    name: "NameGuid"
    type: "R_GUID;"
  }
}
struct {
  name: "tagJOYCAPS2W"
  field {
    name: "wMid"
    type: "US"
  }
  field {
    name: "wPid"
    type: "US"
  }
  field {
    name: "szPname"
    type: "X(ConstantArray.WCHAR [32])"
  }
  field {
    name: "wXmin"
    type: "UI"
  }
  field {
    name: "wXmax"
    type: "UI"
  }
  field {
    name: "wYmin"
    type: "UI"
  }
  field {
    name: "wYmax"
    type: "UI"
  }
  field {
    name: "wZmin"
    type: "UI"
  }
  field {
    name: "wZmax"
    type: "UI"
  }
  field {
    name: "wNumButtons"
    type: "UI"
  }
  field {
    name: "wPeriodMin"
    type: "UI"
  }
  field {
    name: "wPeriodMax"
    type: "UI"
  }
  field {
    name: "wRmin"
    type: "UI"
  }
  field {
    name: "wRmax"
    type: "UI"
  }
  field {
    name: "wUmin"
    type: "UI"
  }
  field {
    name: "wUmax"
    type: "UI"
  }
  field {
    name: "wVmin"
    type: "UI"
  }
  field {
    name: "wVmax"
    type: "UI"
  }
  field {
    name: "wCaps"
    type: "UI"
  }
  field {
    name: "wMaxAxes"
    type: "UI"
  }
  field {
    name: "wNumAxes"
    type: "UI"
  }
  field {
    name: "wMaxButtons"
    type: "UI"
  }
  field {
    name: "szRegKey"
    type: "X(ConstantArray.WCHAR [32])"
  }
  field {
    name: "szOEMVxD"
    type: "X(ConstantArray.WCHAR [260])"
  }
  field {
    name: "ManufacturerGuid"
    type: "R_GUID;"
  }
  field {
    name: "ProductGuid"
    type: "R_GUID;"
  }
  field {
    name: "NameGuid"
    type: "R_GUID;"
  }
}
struct {
  name: "joyinfo_tag"
  field {
    name: "wXpos"
    type: "UI"
  }
  field {
    name: "wYpos"
    type: "UI"
  }
  field {
    name: "wZpos"
    type: "UI"
  }
  field {
    name: "wButtons"
    type: "UI"
  }
}
struct {
  name: "joyinfo_tag"
  field {
    name: "wXpos"
    type: "UI"
  }
  field {
    name: "wYpos"
    type: "UI"
  }
  field {
    name: "wZpos"
    type: "UI"
  }
  field {
    name: "wButtons"
    type: "UI"
  }
}
struct {
  name: "joyinfoex_tag"
  field {
    name: "dwSize"
    type: "UI"
  }
  field {
    name: "dwFlags"
    type: "UI"
  }
  field {
    name: "dwXpos"
    type: "UI"
  }
  field {
    name: "dwYpos"
    type: "UI"
  }
  field {
    name: "dwZpos"
    type: "UI"
  }
  field {
    name: "dwRpos"
    type: "UI"
  }
  field {
    name: "dwUpos"
    type: "UI"
  }
  field {
    name: "dwVpos"
    type: "UI"
  }
  field {
    name: "dwButtons"
    type: "UI"
  }
  field {
    name: "dwButtonNumber"
    type: "UI"
  }
  field {
    name: "dwPOV"
    type: "UI"
  }
  field {
    name: "dwReserved1"
    type: "UI"
  }
  field {
    name: "dwReserved2"
    type: "UI"
  }
}
struct {
  name: "joyinfoex_tag"
  field {
    name: "dwSize"
    type: "UI"
  }
  field {
    name: "dwFlags"
    type: "UI"
  }
  field {
    name: "dwXpos"
    type: "UI"
  }
  field {
    name: "dwYpos"
    type: "UI"
  }
  field {
    name: "dwZpos"
    type: "UI"
  }
  field {
    name: "dwRpos"
    type: "UI"
  }
  field {
    name: "dwUpos"
    type: "UI"
  }
  field {
    name: "dwVpos"
    type: "UI"
  }
  field {
    name: "dwButtons"
    type: "UI"
  }
  field {
    name: "dwButtonNumber"
    type: "UI"
  }
  field {
    name: "dwPOV"
    type: "UI"
  }
  field {
    name: "dwReserved1"
    type: "UI"
  }
  field {
    name: "dwReserved2"
    type: "UI"
  }
}
struct {
  name: "tagMIXERCAPSA"
  field {
    name: "wMid"
    type: "US"
  }
  field {
    name: "wPid"
    type: "US"
  }
  field {
    name: "vDriverVersion"
    type: "UI"
  }
  field {
    name: "szPname"
    type: "X(ConstantArray.CHAR [32])"
  }
  field {
    name: "fdwSupport"
    type: "UI"
  }
  field {
    name: "cDestinations"
    type: "UI"
  }
}
struct {
  name: "tagMIXERCAPSA"
  field {
    name: "wMid"
    type: "US"
  }
  field {
    name: "wPid"
    type: "US"
  }
  field {
    name: "vDriverVersion"
    type: "UI"
  }
  field {
    name: "szPname"
    type: "X(ConstantArray.CHAR [32])"
  }
  field {
    name: "fdwSupport"
    type: "UI"
  }
  field {
    name: "cDestinations"
    type: "UI"
  }
}
struct {
  name: "tagMIXERCAPSW"
  field {
    name: "wMid"
    type: "US"
  }
  field {
    name: "wPid"
    type: "US"
  }
  field {
    name: "vDriverVersion"
    type: "UI"
  }
  field {
    name: "szPname"
    type: "X(ConstantArray.WCHAR [32])"
  }
  field {
    name: "fdwSupport"
    type: "UI"
  }
  field {
    name: "cDestinations"
    type: "UI"
  }
}
struct {
  name: "tagMIXERCAPSW"
  field {
    name: "wMid"
    type: "US"
  }
  field {
    name: "wPid"
    type: "US"
  }
  field {
    name: "vDriverVersion"
    type: "UI"
  }
  field {
    name: "szPname"
    type: "X(ConstantArray.WCHAR [32])"
  }
  field {
    name: "fdwSupport"
    type: "UI"
  }
  field {
    name: "cDestinations"
    type: "UI"
  }
}
struct {
  name: "tagMIXERCAPS2A"
  field {
    name: "wMid"
    type: "US"
  }
  field {
    name: "wPid"
    type: "US"
  }
  field {
    name: "vDriverVersion"
    type: "UI"
  }
  field {
    name: "szPname"
    type: "X(ConstantArray.CHAR [32])"
  }
  field {
    name: "fdwSupport"
    type: "UI"
  }
  field {
    name: "cDestinations"
    type: "UI"
  }
  field {
    name: "ManufacturerGuid"
    type: "R_GUID;"
  }
  field {
    name: "ProductGuid"
    type: "R_GUID;"
  }
  field {
    name: "NameGuid"
    type: "R_GUID;"
  }
}
struct {
  name: "tagMIXERCAPS2A"
  field {
    name: "wMid"
    type: "US"
  }
  field {
    name: "wPid"
    type: "US"
  }
  field {
    name: "vDriverVersion"
    type: "UI"
  }
  field {
    name: "szPname"
    type: "X(ConstantArray.CHAR [32])"
  }
  field {
    name: "fdwSupport"
    type: "UI"
  }
  field {
    name: "cDestinations"
    type: "UI"
  }
  field {
    name: "ManufacturerGuid"
    type: "R_GUID;"
  }
  field {
    name: "ProductGuid"
    type: "R_GUID;"
  }
  field {
    name: "NameGuid"
    type: "R_GUID;"
  }
}
struct {
  name: "tagMIXERCAPS2W"
  field {
    name: "wMid"
    type: "US"
  }
  field {
    name: "wPid"
    type: "US"
  }
  field {
    name: "vDriverVersion"
    type: "UI"
  }
  field {
    name: "szPname"
    type: "X(ConstantArray.WCHAR [32])"
  }
  field {
    name: "fdwSupport"
    type: "UI"
  }
  field {
    name: "cDestinations"
    type: "UI"
  }
  field {
    name: "ManufacturerGuid"
    type: "R_GUID;"
  }
  field {
    name: "ProductGuid"
    type: "R_GUID;"
  }
  field {
    name: "NameGuid"
    type: "R_GUID;"
  }
}
struct {
  name: "tagMIXERCAPS2W"
  field {
    name: "wMid"
    type: "US"
  }
  field {
    name: "wPid"
    type: "US"
  }
  field {
    name: "vDriverVersion"
    type: "UI"
  }
  field {
    name: "szPname"
    type: "X(ConstantArray.WCHAR [32])"
  }
  field {
    name: "fdwSupport"
    type: "UI"
  }
  field {
    name: "cDestinations"
    type: "UI"
  }
  field {
    name: "ManufacturerGuid"
    type: "R_GUID;"
  }
  field {
    name: "ProductGuid"
    type: "R_GUID;"
  }
  field {
    name: "NameGuid"
    type: "R_GUID;"
  }
}
struct {
  name: "tagMIXERLINEA"
  field {
    name: "cbStruct"
    type: "UI"
  }
  field {
    name: "dwDestination"
    type: "UI"
  }
  field {
    name: "dwSource"
    type: "UI"
  }
  field {
    name: "dwLineID"
    type: "UI"
  }
  field {
    name: "fdwLine"
    type: "UI"
  }
  field {
    name: "dwUser"
    type: "UI"
  }
  field {
    name: "dwComponentType"
    type: "UI"
  }
  field {
    name: "cChannels"
    type: "UI"
  }
  field {
    name: "cConnections"
    type: "UI"
  }
  field {
    name: "cControls"
    type: "UI"
  }
  field {
    name: "szShortName"
    type: "X(ConstantArray.CHAR [16])"
  }
  field {
    name: "szName"
    type: "X(ConstantArray.CHAR [64])"
  }
  field {
    name: "Target"
    type: "RtagMIXERLINEA::(anonymous at /usr/local/include/wine/windows/mmsystem.h:1253:5);"
  }
}
struct {
  name: "struct tagMIXERLINEA::(anonymous at /usr/local/include/wine/windows/mmsystem.h:1253:5)"
  field {
    name: "dwType"
    type: "UI"
  }
  field {
    name: "dwDeviceID"
    type: "UI"
  }
  field {
    name: "wMid"
    type: "US"
  }
  field {
    name: "wPid"
    type: "US"
  }
  field {
    name: "vDriverVersion"
    type: "UI"
  }
  field {
    name: "szPname"
    type: "X(ConstantArray.CHAR [32])"
  }
}
struct {
  name: "tagMIXERLINEA"
  field {
    name: "cbStruct"
    type: "UI"
  }
  field {
    name: "dwDestination"
    type: "UI"
  }
  field {
    name: "dwSource"
    type: "UI"
  }
  field {
    name: "dwLineID"
    type: "UI"
  }
  field {
    name: "fdwLine"
    type: "UI"
  }
  field {
    name: "dwUser"
    type: "UI"
  }
  field {
    name: "dwComponentType"
    type: "UI"
  }
  field {
    name: "cChannels"
    type: "UI"
  }
  field {
    name: "cConnections"
    type: "UI"
  }
  field {
    name: "cControls"
    type: "UI"
  }
  field {
    name: "szShortName"
    type: "X(ConstantArray.CHAR [16])"
  }
  field {
    name: "szName"
    type: "X(ConstantArray.CHAR [64])"
  }
  field {
    name: "Target"
    type: "RtagMIXERLINEA::(anonymous at /usr/local/include/wine/windows/mmsystem.h:1253:5);"
  }
}
struct {
  name: "struct tagMIXERLINEA::(anonymous at /usr/local/include/wine/windows/mmsystem.h:1253:5)"
  field {
    name: "dwType"
    type: "UI"
  }
  field {
    name: "dwDeviceID"
    type: "UI"
  }
  field {
    name: "wMid"
    type: "US"
  }
  field {
    name: "wPid"
    type: "US"
  }
  field {
    name: "vDriverVersion"
    type: "UI"
  }
  field {
    name: "szPname"
    type: "X(ConstantArray.CHAR [32])"
  }
}
struct {
  name: "tagMIXERLINEW"
  field {
    name: "cbStruct"
    type: "UI"
  }
  field {
    name: "dwDestination"
    type: "UI"
  }
  field {
    name: "dwSource"
    type: "UI"
  }
  field {
    name: "dwLineID"
    type: "UI"
  }
  field {
    name: "fdwLine"
    type: "UI"
  }
  field {
    name: "dwUser"
    type: "UI"
  }
  field {
    name: "dwComponentType"
    type: "UI"
  }
  field {
    name: "cChannels"
    type: "UI"
  }
  field {
    name: "cConnections"
    type: "UI"
  }
  field {
    name: "cControls"
    type: "UI"
  }
  field {
    name: "szShortName"
    type: "X(ConstantArray.WCHAR [16])"
  }
  field {
    name: "szName"
    type: "X(ConstantArray.WCHAR [64])"
  }
  field {
    name: "Target"
    type: "RtagMIXERLINEW::(anonymous at /usr/local/include/wine/windows/mmsystem.h:1276:5);"
  }
}
struct {
  name: "struct tagMIXERLINEW::(anonymous at /usr/local/include/wine/windows/mmsystem.h:1276:5)"
  field {
    name: "dwType"
    type: "UI"
  }
  field {
    name: "dwDeviceID"
    type: "UI"
  }
  field {
    name: "wMid"
    type: "US"
  }
  field {
    name: "wPid"
    type: "US"
  }
  field {
    name: "vDriverVersion"
    type: "UI"
  }
  field {
    name: "szPname"
    type: "X(ConstantArray.WCHAR [32])"
  }
}
struct {
  name: "tagMIXERLINEW"
  field {
    name: "cbStruct"
    type: "UI"
  }
  field {
    name: "dwDestination"
    type: "UI"
  }
  field {
    name: "dwSource"
    type: "UI"
  }
  field {
    name: "dwLineID"
    type: "UI"
  }
  field {
    name: "fdwLine"
    type: "UI"
  }
  field {
    name: "dwUser"
    type: "UI"
  }
  field {
    name: "dwComponentType"
    type: "UI"
  }
  field {
    name: "cChannels"
    type: "UI"
  }
  field {
    name: "cConnections"
    type: "UI"
  }
  field {
    name: "cControls"
    type: "UI"
  }
  field {
    name: "szShortName"
    type: "X(ConstantArray.WCHAR [16])"
  }
  field {
    name: "szName"
    type: "X(ConstantArray.WCHAR [64])"
  }
  field {
    name: "Target"
    type: "RtagMIXERLINEW::(anonymous at /usr/local/include/wine/windows/mmsystem.h:1276:5);"
  }
}
struct {
  name: "struct tagMIXERLINEW::(anonymous at /usr/local/include/wine/windows/mmsystem.h:1276:5)"
  field {
    name: "dwType"
    type: "UI"
  }
  field {
    name: "dwDeviceID"
    type: "UI"
  }
  field {
    name: "wMid"
    type: "US"
  }
  field {
    name: "wPid"
    type: "US"
  }
  field {
    name: "vDriverVersion"
    type: "UI"
  }
  field {
    name: "szPname"
    type: "X(ConstantArray.WCHAR [32])"
  }
}
struct {
  name: "tagMIXERCONTROLA"
  field {
    name: "cbStruct"
    type: "UI"
  }
  field {
    name: "dwControlID"
    type: "UI"
  }
  field {
    name: "dwControlType"
    type: "UI"
  }
  field {
    name: "fdwControl"
    type: "UI"
  }
  field {
    name: "cMultipleItems"
    type: "UI"
  }
  field {
    name: "szShortName"
    type: "X(ConstantArray.CHAR [16])"
  }
  field {
    name: "szName"
    type: "X(ConstantArray.CHAR [64])"
  }
  field {
    name: "Bounds"
    type: "Runion tagMIXERCONTROLA::(anonymous at /usr/local/include/wine/windows/mmsystem.h:1368:5);"
  }
  field {
    name: "Metrics"
    type: "Runion tagMIXERCONTROLA::(anonymous at /usr/local/include/wine/windows/mmsystem.h:1379:5);"
  }
}
struct {
  name: "struct tagMIXERCONTROLA::(anonymous at /usr/local/include/wine/windows/mmsystem.h:1369:2)"
  field {
    name: "lMinimum"
    type: "I"
  }
  field {
    name: "lMaximum"
    type: "I"
  }
}
struct {
  name: "struct tagMIXERCONTROLA::(anonymous at /usr/local/include/wine/windows/mmsystem.h:1373:2)"
  field {
    name: "dwMinimum"
    type: "UI"
  }
  field {
    name: "dwMaximum"
    type: "UI"
  }
}
struct {
  name: "tagMIXERCONTROLA"
  field {
    name: "cbStruct"
    type: "UI"
  }
  field {
    name: "dwControlID"
    type: "UI"
  }
  field {
    name: "dwControlType"
    type: "UI"
  }
  field {
    name: "fdwControl"
    type: "UI"
  }
  field {
    name: "cMultipleItems"
    type: "UI"
  }
  field {
    name: "szShortName"
    type: "X(ConstantArray.CHAR [16])"
  }
  field {
    name: "szName"
    type: "X(ConstantArray.CHAR [64])"
  }
  field {
    name: "Bounds"
    type: "Runion tagMIXERCONTROLA::(anonymous at /usr/local/include/wine/windows/mmsystem.h:1368:5);"
  }
  field {
    name: "Metrics"
    type: "Runion tagMIXERCONTROLA::(anonymous at /usr/local/include/wine/windows/mmsystem.h:1379:5);"
  }
}
struct {
  name: "struct tagMIXERCONTROLA::(anonymous at /usr/local/include/wine/windows/mmsystem.h:1369:2)"
  field {
    name: "lMinimum"
    type: "I"
  }
  field {
    name: "lMaximum"
    type: "I"
  }
}
struct {
  name: "struct tagMIXERCONTROLA::(anonymous at /usr/local/include/wine/windows/mmsystem.h:1373:2)"
  field {
    name: "dwMinimum"
    type: "UI"
  }
  field {
    name: "dwMaximum"
    type: "UI"
  }
}
struct {
  name: "MIXERCONTROLW"
  field {
    name: "cbStruct"
    type: "UI"
  }
  field {
    name: "dwControlID"
    type: "UI"
  }
  field {
    name: "dwControlType"
    type: "UI"
  }
  field {
    name: "fdwControl"
    type: "UI"
  }
  field {
    name: "cMultipleItems"
    type: "UI"
  }
  field {
    name: "szShortName"
    type: "X(ConstantArray.WCHAR [16])"
  }
  field {
    name: "szName"
    type: "X(ConstantArray.WCHAR [64])"
  }
  field {
    name: "Bounds"
    type: "Runion MIXERCONTROLW::(anonymous at /usr/local/include/wine/windows/mmsystem.h:1394:5);"
  }
  field {
    name: "Metrics"
    type: "Runion MIXERCONTROLW::(anonymous at /usr/local/include/wine/windows/mmsystem.h:1405:5);"
  }
}
struct {
  name: "struct MIXERCONTROLW::(anonymous at /usr/local/include/wine/windows/mmsystem.h:1395:2)"
  field {
    name: "lMinimum"
    type: "I"
  }
  field {
    name: "lMaximum"
    type: "I"
  }
}
struct {
  name: "struct MIXERCONTROLW::(anonymous at /usr/local/include/wine/windows/mmsystem.h:1399:2)"
  field {
    name: "dwMinimum"
    type: "UI"
  }
  field {
    name: "dwMaximum"
    type: "UI"
  }
}
struct {
  name: "MIXERCONTROLW"
  field {
    name: "cbStruct"
    type: "UI"
  }
  field {
    name: "dwControlID"
    type: "UI"
  }
  field {
    name: "dwControlType"
    type: "UI"
  }
  field {
    name: "fdwControl"
    type: "UI"
  }
  field {
    name: "cMultipleItems"
    type: "UI"
  }
  field {
    name: "szShortName"
    type: "X(ConstantArray.WCHAR [16])"
  }
  field {
    name: "szName"
    type: "X(ConstantArray.WCHAR [64])"
  }
  field {
    name: "Bounds"
    type: "Runion MIXERCONTROLW::(anonymous at /usr/local/include/wine/windows/mmsystem.h:1394:5);"
  }
  field {
    name: "Metrics"
    type: "Runion MIXERCONTROLW::(anonymous at /usr/local/include/wine/windows/mmsystem.h:1405:5);"
  }
}
struct {
  name: "struct MIXERCONTROLW::(anonymous at /usr/local/include/wine/windows/mmsystem.h:1395:2)"
  field {
    name: "lMinimum"
    type: "I"
  }
  field {
    name: "lMaximum"
    type: "I"
  }
}
struct {
  name: "struct MIXERCONTROLW::(anonymous at /usr/local/include/wine/windows/mmsystem.h:1399:2)"
  field {
    name: "dwMinimum"
    type: "UI"
  }
  field {
    name: "dwMaximum"
    type: "UI"
  }
}
struct {
  name: "tagMIXERLINECONTROLSA"
  field {
    name: "cbStruct"
    type: "UI"
  }
  field {
    name: "dwLineID"
    type: "UI"
  }
  field {
    name: "cControls"
    type: "UI"
  }
  field {
    name: "cbmxctrl"
    type: "UI"
  }
  field {
    name: "pamxctrl"
    type: "*RtagMIXERCONTROLA;;"
  }
}
struct {
  name: "tagMIXERLINECONTROLSA"
  field {
    name: "cbStruct"
    type: "UI"
  }
  field {
    name: "dwLineID"
    type: "UI"
  }
  field {
    name: "cControls"
    type: "UI"
  }
  field {
    name: "cbmxctrl"
    type: "UI"
  }
  field {
    name: "pamxctrl"
    type: "*RtagMIXERCONTROLA;;"
  }
}
struct {
  name: "tagMIXERLINECONTROLSW"
  field {
    name: "cbStruct"
    type: "UI"
  }
  field {
    name: "dwLineID"
    type: "UI"
  }
  field {
    name: "cControls"
    type: "UI"
  }
  field {
    name: "cbmxctrl"
    type: "UI"
  }
  field {
    name: "pamxctrl"
    type: "*RMIXERCONTROLW;;"
  }
}
struct {
  name: "tagMIXERLINECONTROLSW"
  field {
    name: "cbStruct"
    type: "UI"
  }
  field {
    name: "dwLineID"
    type: "UI"
  }
  field {
    name: "cControls"
    type: "UI"
  }
  field {
    name: "cbmxctrl"
    type: "UI"
  }
  field {
    name: "pamxctrl"
    type: "*RMIXERCONTROLW;;"
  }
}
struct {
  name: "tMIXERCONTROLDETAILS"
  field {
    name: "cbStruct"
    type: "UI"
  }
  field {
    name: "dwControlID"
    type: "UI"
  }
  field {
    name: "cChannels"
    type: "UI"
  }
  field {
    name: "cbDetails"
    type: "UI"
  }
  field {
    name: "paDetails"
    type: "*V;"
  }
}
struct {
  name: "tMIXERCONTROLDETAILS"
  field {
    name: "cbStruct"
    type: "UI"
  }
  field {
    name: "dwControlID"
    type: "UI"
  }
  field {
    name: "cChannels"
    type: "UI"
  }
  field {
    name: "cbDetails"
    type: "UI"
  }
  field {
    name: "paDetails"
    type: "*V;"
  }
}
struct {
  name: "tagMIXERCONTROLDETAILS_LISTTEXTA"
  field {
    name: "dwParam1"
    type: "UI"
  }
  field {
    name: "dwParam2"
    type: "UI"
  }
  field {
    name: "szName"
    type: "X(ConstantArray.CHAR [64])"
  }
}
struct {
  name: "tagMIXERCONTROLDETAILS_LISTTEXTA"
  field {
    name: "dwParam1"
    type: "UI"
  }
  field {
    name: "dwParam2"
    type: "UI"
  }
  field {
    name: "szName"
    type: "X(ConstantArray.CHAR [64])"
  }
}
struct {
  name: "tagMIXERCONTROLDETAILS_LISTTEXTW"
  field {
    name: "dwParam1"
    type: "UI"
  }
  field {
    name: "dwParam2"
    type: "UI"
  }
  field {
    name: "szName"
    type: "X(ConstantArray.WCHAR [64])"
  }
}
struct {
  name: "tagMIXERCONTROLDETAILS_LISTTEXTW"
  field {
    name: "dwParam1"
    type: "UI"
  }
  field {
    name: "dwParam2"
    type: "UI"
  }
  field {
    name: "szName"
    type: "X(ConstantArray.WCHAR [64])"
  }
}
struct {
  name: "MIXERCONTROLDETAILS_BOOLEAN"
  field {
    name: "fValue"
    type: "I"
  }
}
struct {
  name: "MIXERCONTROLDETAILS_BOOLEAN"
  field {
    name: "fValue"
    type: "I"
  }
}
struct {
  name: "MIXERCONTROLDETAILS_SIGNED"
  field {
    name: "lValue"
    type: "I"
  }
}
struct {
  name: "MIXERCONTROLDETAILS_SIGNED"
  field {
    name: "lValue"
    type: "I"
  }
}
struct {
  name: "MIXERCONTROLDETAILS_UNSIGNED"
  field {
    name: "dwValue"
    type: "UI"
  }
}
struct {
  name: "MIXERCONTROLDETAILS_UNSIGNED"
  field {
    name: "dwValue"
    type: "UI"
  }
}
struct {
  name: "_MMIOINFO"
  field {
    name: "dwFlags"
    type: "UI"
  }
  field {
    name: "fccIOProc"
    type: "UI"
  }
  field {
    name: "pIOProc"
    type: "*(*C;UIII)I;"
  }
  field {
    name: "wErrorRet"
    type: "UI"
  }
  field {
    name: "hTask"
    type: "*RHTASK__;;"
  }
  field {
    name: "cchBuffer"
    type: "I"
  }
  field {
    name: "pchBuffer"
    type: "*C;"
  }
  field {
    name: "pchNext"
    type: "*C;"
  }
  field {
    name: "pchEndRead"
    type: "*C;"
  }
  field {
    name: "pchEndWrite"
    type: "*C;"
  }
  field {
    name: "lBufOffset"
    type: "I"
  }
  field {
    name: "lDiskOffset"
    type: "I"
  }
  field {
    name: "adwInfo"
    type: "X(ConstantArray.DWORD [3])"
  }
  field {
    name: "dwReserved1"
    type: "UI"
  }
  field {
    name: "dwReserved2"
    type: "UI"
  }
  field {
    name: "hmmio"
    type: "*RHMMIO__;;"
  }
}
struct {
  name: "_MMIOINFO"
  field {
    name: "dwFlags"
    type: "UI"
  }
  field {
    name: "fccIOProc"
    type: "UI"
  }
  field {
    name: "pIOProc"
    type: "*(*C;UIII)I;"
  }
  field {
    name: "wErrorRet"
    type: "UI"
  }
  field {
    name: "hTask"
    type: "*RHTASK__;;"
  }
  field {
    name: "cchBuffer"
    type: "I"
  }
  field {
    name: "pchBuffer"
    type: "*C;"
  }
  field {
    name: "pchNext"
    type: "*C;"
  }
  field {
    name: "pchEndRead"
    type: "*C;"
  }
  field {
    name: "pchEndWrite"
    type: "*C;"
  }
  field {
    name: "lBufOffset"
    type: "I"
  }
  field {
    name: "lDiskOffset"
    type: "I"
  }
  field {
    name: "adwInfo"
    type: "X(ConstantArray.DWORD [3])"
  }
  field {
    name: "dwReserved1"
    type: "UI"
  }
  field {
    name: "dwReserved2"
    type: "UI"
  }
  field {
    name: "hmmio"
    type: "*RHMMIO__;;"
  }
}
struct {
  name: "_MMIOINFO"
  field {
    name: "dwFlags"
    type: "UI"
  }
  field {
    name: "fccIOProc"
    type: "UI"
  }
  field {
    name: "pIOProc"
    type: "*(*C;UIII)I;"
  }
  field {
    name: "wErrorRet"
    type: "UI"
  }
  field {
    name: "hTask"
    type: "*RHTASK__;;"
  }
  field {
    name: "cchBuffer"
    type: "I"
  }
  field {
    name: "pchBuffer"
    type: "*C;"
  }
  field {
    name: "pchNext"
    type: "*C;"
  }
  field {
    name: "pchEndRead"
    type: "*C;"
  }
  field {
    name: "pchEndWrite"
    type: "*C;"
  }
  field {
    name: "lBufOffset"
    type: "I"
  }
  field {
    name: "lDiskOffset"
    type: "I"
  }
  field {
    name: "adwInfo"
    type: "X(ConstantArray.DWORD [3])"
  }
  field {
    name: "dwReserved1"
    type: "UI"
  }
  field {
    name: "dwReserved2"
    type: "UI"
  }
  field {
    name: "hmmio"
    type: "*RHMMIO__;;"
  }
}
struct {
  name: "_MMCKINFO"
  field {
    name: "ckid"
    type: "UI"
  }
  field {
    name: "cksize"
    type: "UI"
  }
  field {
    name: "fccType"
    type: "UI"
  }
  field {
    name: "dwDataOffset"
    type: "UI"
  }
  field {
    name: "dwFlags"
    type: "UI"
  }
}
struct {
  name: "_MMCKINFO"
  field {
    name: "ckid"
    type: "UI"
  }
  field {
    name: "cksize"
    type: "UI"
  }
  field {
    name: "fccType"
    type: "UI"
  }
  field {
    name: "dwDataOffset"
    type: "UI"
  }
  field {
    name: "dwFlags"
    type: "UI"
  }
}
struct {
  name: "tagMCI_GENERIC_PARMS"
  field {
    name: "dwCallback"
    type: "UI"
  }
}
struct {
  name: "tagMCI_GENERIC_PARMS"
  field {
    name: "dwCallback"
    type: "UI"
  }
}
struct {
  name: "tagMCI_OPEN_PARMSA"
  field {
    name: "dwCallback"
    type: "UI"
  }
  field {
    name: "wDeviceID"
    type: "UI"
  }
  field {
    name: "lpstrDeviceType"
    type: "*cC;"
  }
  field {
    name: "lpstrElementName"
    type: "*cC;"
  }
  field {
    name: "lpstrAlias"
    type: "*cC;"
  }
}
struct {
  name: "tagMCI_OPEN_PARMSA"
  field {
    name: "dwCallback"
    type: "UI"
  }
  field {
    name: "wDeviceID"
    type: "UI"
  }
  field {
    name: "lpstrDeviceType"
    type: "*cC;"
  }
  field {
    name: "lpstrElementName"
    type: "*cC;"
  }
  field {
    name: "lpstrAlias"
    type: "*cC;"
  }
}
struct {
  name: "tagMCI_OPEN_PARMSW"
  field {
    name: "dwCallback"
    type: "UI"
  }
  field {
    name: "wDeviceID"
    type: "UI"
  }
  field {
    name: "lpstrDeviceType"
    type: "*cUS;"
  }
  field {
    name: "lpstrElementName"
    type: "*cUS;"
  }
  field {
    name: "lpstrAlias"
    type: "*cUS;"
  }
}
struct {
  name: "tagMCI_OPEN_PARMSW"
  field {
    name: "dwCallback"
    type: "UI"
  }
  field {
    name: "wDeviceID"
    type: "UI"
  }
  field {
    name: "lpstrDeviceType"
    type: "*cUS;"
  }
  field {
    name: "lpstrElementName"
    type: "*cUS;"
  }
  field {
    name: "lpstrAlias"
    type: "*cUS;"
  }
}
struct {
  name: "tagMCI_PLAY_PARMS"
  field {
    name: "dwCallback"
    type: "UI"
  }
  field {
    name: "dwFrom"
    type: "UI"
  }
  field {
    name: "dwTo"
    type: "UI"
  }
}
struct {
  name: "tagMCI_PLAY_PARMS"
  field {
    name: "dwCallback"
    type: "UI"
  }
  field {
    name: "dwFrom"
    type: "UI"
  }
  field {
    name: "dwTo"
    type: "UI"
  }
}
struct {
  name: "tagMCI_SEEK_PARMS"
  field {
    name: "dwCallback"
    type: "UI"
  }
  field {
    name: "dwTo"
    type: "UI"
  }
}
struct {
  name: "tagMCI_SEEK_PARMS"
  field {
    name: "dwCallback"
    type: "UI"
  }
  field {
    name: "dwTo"
    type: "UI"
  }
}
struct {
  name: "tagMCI_STATUS_PARMS"
  field {
    name: "dwCallback"
    type: "UI"
  }
  field {
    name: "dwReturn"
    type: "UI"
  }
  field {
    name: "dwItem"
    type: "UI"
  }
  field {
    name: "dwTrack"
    type: "UI"
  }
}
struct {
  name: "tagMCI_STATUS_PARMS"
  field {
    name: "dwCallback"
    type: "UI"
  }
  field {
    name: "dwReturn"
    type: "UI"
  }
  field {
    name: "dwItem"
    type: "UI"
  }
  field {
    name: "dwTrack"
    type: "UI"
  }
}
struct {
  name: "tagMCI_INFO_PARMSA"
  field {
    name: "dwCallback"
    type: "UI"
  }
  field {
    name: "lpstrReturn"
    type: "*C;"
  }
  field {
    name: "dwRetSize"
    type: "UI"
  }
}
struct {
  name: "tagMCI_INFO_PARMSA"
  field {
    name: "dwCallback"
    type: "UI"
  }
  field {
    name: "lpstrReturn"
    type: "*C;"
  }
  field {
    name: "dwRetSize"
    type: "UI"
  }
}
struct {
  name: "tagMCI_INFO_PARMSW"
  field {
    name: "dwCallback"
    type: "UI"
  }
  field {
    name: "lpstrReturn"
    type: "*US;"
  }
  field {
    name: "dwRetSize"
    type: "UI"
  }
}
struct {
  name: "tagMCI_INFO_PARMSW"
  field {
    name: "dwCallback"
    type: "UI"
  }
  field {
    name: "lpstrReturn"
    type: "*US;"
  }
  field {
    name: "dwRetSize"
    type: "UI"
  }
}
struct {
  name: "tagMCI_GETDEVCAPS_PARMS"
  field {
    name: "dwCallback"
    type: "UI"
  }
  field {
    name: "dwReturn"
    type: "UI"
  }
  field {
    name: "dwItem"
    type: "UI"
  }
}
struct {
  name: "tagMCI_GETDEVCAPS_PARMS"
  field {
    name: "dwCallback"
    type: "UI"
  }
  field {
    name: "dwReturn"
    type: "UI"
  }
  field {
    name: "dwItem"
    type: "UI"
  }
}
struct {
  name: "tagMCI_SYSINFO_PARMSA"
  field {
    name: "dwCallback"
    type: "UI"
  }
  field {
    name: "lpstrReturn"
    type: "*C;"
  }
  field {
    name: "dwRetSize"
    type: "UI"
  }
  field {
    name: "dwNumber"
    type: "UI"
  }
  field {
    name: "wDeviceType"
    type: "UI"
  }
}
struct {
  name: "tagMCI_SYSINFO_PARMSA"
  field {
    name: "dwCallback"
    type: "UI"
  }
  field {
    name: "lpstrReturn"
    type: "*C;"
  }
  field {
    name: "dwRetSize"
    type: "UI"
  }
  field {
    name: "dwNumber"
    type: "UI"
  }
  field {
    name: "wDeviceType"
    type: "UI"
  }
}
struct {
  name: "tagMCI_SYSINFO_PARMSW"
  field {
    name: "dwCallback"
    type: "UI"
  }
  field {
    name: "lpstrReturn"
    type: "*US;"
  }
  field {
    name: "dwRetSize"
    type: "UI"
  }
  field {
    name: "dwNumber"
    type: "UI"
  }
  field {
    name: "wDeviceType"
    type: "UI"
  }
}
struct {
  name: "tagMCI_SYSINFO_PARMSW"
  field {
    name: "dwCallback"
    type: "UI"
  }
  field {
    name: "lpstrReturn"
    type: "*US;"
  }
  field {
    name: "dwRetSize"
    type: "UI"
  }
  field {
    name: "dwNumber"
    type: "UI"
  }
  field {
    name: "wDeviceType"
    type: "UI"
  }
}
struct {
  name: "tagMCI_SET_PARMS"
  field {
    name: "dwCallback"
    type: "UI"
  }
  field {
    name: "dwTimeFormat"
    type: "UI"
  }
  field {
    name: "dwAudio"
    type: "UI"
  }
}
struct {
  name: "tagMCI_SET_PARMS"
  field {
    name: "dwCallback"
    type: "UI"
  }
  field {
    name: "dwTimeFormat"
    type: "UI"
  }
  field {
    name: "dwAudio"
    type: "UI"
  }
}
struct {
  name: "tagMCI_BREAK_PARMS"
  field {
    name: "dwCallback"
    type: "UI"
  }
  field {
    name: "nVirtKey"
    type: "I"
  }
  field {
    name: "hwndBreak"
    type: "*RHWND__;;"
  }
}
struct {
  name: "tagMCI_BREAK_PARMS"
  field {
    name: "dwCallback"
    type: "UI"
  }
  field {
    name: "nVirtKey"
    type: "I"
  }
  field {
    name: "hwndBreak"
    type: "*RHWND__;;"
  }
}
struct {
  name: "tagMCI_SOUND_PARMSA"
  field {
    name: "dwCallback"
    type: "UI"
  }
  field {
    name: "lpstrSoundName"
    type: "*cC;"
  }
}
struct {
  name: "tagMCI_SOUND_PARMSA"
  field {
    name: "dwCallback"
    type: "UI"
  }
  field {
    name: "lpstrSoundName"
    type: "*cC;"
  }
}
struct {
  name: "tagMCI_SOUND_PARMSW"
  field {
    name: "dwCallback"
    type: "UI"
  }
  field {
    name: "lpstrSoundName"
    type: "*cUS;"
  }
}
struct {
  name: "tagMCI_SOUND_PARMSW"
  field {
    name: "dwCallback"
    type: "UI"
  }
  field {
    name: "lpstrSoundName"
    type: "*cUS;"
  }
}
struct {
  name: "tagMCI_SAVE_PARMSA"
  field {
    name: "dwCallback"
    type: "UI"
  }
  field {
    name: "lpfilename"
    type: "*cC;"
  }
}
struct {
  name: "tagMCI_SAVE_PARMSA"
  field {
    name: "dwCallback"
    type: "UI"
  }
  field {
    name: "lpfilename"
    type: "*cC;"
  }
}
struct {
  name: "tagMCI_SAVE_PARMSW"
  field {
    name: "dwCallback"
    type: "UI"
  }
  field {
    name: "lpfilename"
    type: "*cUS;"
  }
}
struct {
  name: "tagMCI_SAVE_PARMSW"
  field {
    name: "dwCallback"
    type: "UI"
  }
  field {
    name: "lpfilename"
    type: "*cUS;"
  }
}
struct {
  name: "tagMCI_LOAD_PARMSA"
  field {
    name: "dwCallback"
    type: "UI"
  }
  field {
    name: "lpfilename"
    type: "*cC;"
  }
}
struct {
  name: "tagMCI_LOAD_PARMSA"
  field {
    name: "dwCallback"
    type: "UI"
  }
  field {
    name: "lpfilename"
    type: "*cC;"
  }
}
struct {
  name: "tagMCI_LOAD_PARMSW"
  field {
    name: "dwCallback"
    type: "UI"
  }
  field {
    name: "lpfilename"
    type: "*cUS;"
  }
}
struct {
  name: "tagMCI_LOAD_PARMSW"
  field {
    name: "dwCallback"
    type: "UI"
  }
  field {
    name: "lpfilename"
    type: "*cUS;"
  }
}
struct {
  name: "tagMCI_RECORD_PARMS"
  field {
    name: "dwCallback"
    type: "UI"
  }
  field {
    name: "dwFrom"
    type: "UI"
  }
  field {
    name: "dwTo"
    type: "UI"
  }
}
struct {
  name: "tagMCI_RECORD_PARMS"
  field {
    name: "dwCallback"
    type: "UI"
  }
  field {
    name: "dwFrom"
    type: "UI"
  }
  field {
    name: "dwTo"
    type: "UI"
  }
}
struct {
  name: "tagMCI_VD_PLAY_PARMS"
  field {
    name: "dwCallback"
    type: "UI"
  }
  field {
    name: "dwFrom"
    type: "UI"
  }
  field {
    name: "dwTo"
    type: "UI"
  }
  field {
    name: "dwSpeed"
    type: "UI"
  }
}
struct {
  name: "tagMCI_VD_PLAY_PARMS"
  field {
    name: "dwCallback"
    type: "UI"
  }
  field {
    name: "dwFrom"
    type: "UI"
  }
  field {
    name: "dwTo"
    type: "UI"
  }
  field {
    name: "dwSpeed"
    type: "UI"
  }
}
struct {
  name: "tagMCI_VD_STEP_PARMS"
  field {
    name: "dwCallback"
    type: "UI"
  }
  field {
    name: "dwFrames"
    type: "UI"
  }
}
struct {
  name: "tagMCI_VD_STEP_PARMS"
  field {
    name: "dwCallback"
    type: "UI"
  }
  field {
    name: "dwFrames"
    type: "UI"
  }
}
struct {
  name: "tagMCI_VD_ESCAPE_PARMSA"
  field {
    name: "dwCallback"
    type: "UI"
  }
  field {
    name: "lpstrCommand"
    type: "*cC;"
  }
}
struct {
  name: "tagMCI_VD_ESCAPE_PARMSA"
  field {
    name: "dwCallback"
    type: "UI"
  }
  field {
    name: "lpstrCommand"
    type: "*cC;"
  }
}
struct {
  name: "tagMCI_VD_ESCAPE_PARMSW"
  field {
    name: "dwCallback"
    type: "UI"
  }
  field {
    name: "lpstrCommand"
    type: "*cUS;"
  }
}
struct {
  name: "tagMCI_VD_ESCAPE_PARMSW"
  field {
    name: "dwCallback"
    type: "UI"
  }
  field {
    name: "lpstrCommand"
    type: "*cUS;"
  }
}
struct {
  name: "tagMCI_WAVE_OPEN_PARMSA"
  field {
    name: "dwCallback"
    type: "UI"
  }
  field {
    name: "wDeviceID"
    type: "UI"
  }
  field {
    name: "lpstrDeviceType"
    type: "*cC;"
  }
  field {
    name: "lpstrElementName"
    type: "*cC;"
  }
  field {
    name: "lpstrAlias"
    type: "*cC;"
  }
  field {
    name: "dwBufferSeconds"
    type: "UI"
  }
}
struct {
  name: "tagMCI_WAVE_OPEN_PARMSA"
  field {
    name: "dwCallback"
    type: "UI"
  }
  field {
    name: "wDeviceID"
    type: "UI"
  }
  field {
    name: "lpstrDeviceType"
    type: "*cC;"
  }
  field {
    name: "lpstrElementName"
    type: "*cC;"
  }
  field {
    name: "lpstrAlias"
    type: "*cC;"
  }
  field {
    name: "dwBufferSeconds"
    type: "UI"
  }
}
struct {
  name: "tagMCI_WAVE_OPEN_PARMSW"
  field {
    name: "dwCallback"
    type: "UI"
  }
  field {
    name: "wDeviceID"
    type: "UI"
  }
  field {
    name: "lpstrDeviceType"
    type: "*cUS;"
  }
  field {
    name: "lpstrElementName"
    type: "*cUS;"
  }
  field {
    name: "lpstrAlias"
    type: "*cUS;"
  }
  field {
    name: "dwBufferSeconds"
    type: "UI"
  }
}
struct {
  name: "tagMCI_WAVE_OPEN_PARMSW"
  field {
    name: "dwCallback"
    type: "UI"
  }
  field {
    name: "wDeviceID"
    type: "UI"
  }
  field {
    name: "lpstrDeviceType"
    type: "*cUS;"
  }
  field {
    name: "lpstrElementName"
    type: "*cUS;"
  }
  field {
    name: "lpstrAlias"
    type: "*cUS;"
  }
  field {
    name: "dwBufferSeconds"
    type: "UI"
  }
}
struct {
  name: "tagMCI_WAVE_DELETE_PARMS"
  field {
    name: "dwCallback"
    type: "UI"
  }
  field {
    name: "dwFrom"
    type: "UI"
  }
  field {
    name: "dwTo"
    type: "UI"
  }
}
struct {
  name: "tagMCI_WAVE_DELETE_PARMS"
  field {
    name: "dwCallback"
    type: "UI"
  }
  field {
    name: "dwFrom"
    type: "UI"
  }
  field {
    name: "dwTo"
    type: "UI"
  }
}
struct {
  name: "tagMCI_WAVE_SET_PARMS"
  field {
    name: "dwCallback"
    type: "UI"
  }
  field {
    name: "dwTimeFormat"
    type: "UI"
  }
  field {
    name: "dwAudio"
    type: "UI"
  }
  field {
    name: "wInput"
    type: "UI"
  }
  field {
    name: "wOutput"
    type: "UI"
  }
  field {
    name: "wFormatTag"
    type: "UI"
  }
  field {
    name: "nChannels"
    type: "UI"
  }
  field {
    name: "nSamplesPerSec"
    type: "UI"
  }
  field {
    name: "nAvgBytesPerSec"
    type: "UI"
  }
  field {
    name: "nBlockAlign"
    type: "UI"
  }
  field {
    name: "wBitsPerSample"
    type: "UI"
  }
}
struct {
  name: "tagMCI_WAVE_SET_PARMS"
  field {
    name: "dwCallback"
    type: "UI"
  }
  field {
    name: "dwTimeFormat"
    type: "UI"
  }
  field {
    name: "dwAudio"
    type: "UI"
  }
  field {
    name: "wInput"
    type: "UI"
  }
  field {
    name: "wOutput"
    type: "UI"
  }
  field {
    name: "wFormatTag"
    type: "UI"
  }
  field {
    name: "nChannels"
    type: "UI"
  }
  field {
    name: "nSamplesPerSec"
    type: "UI"
  }
  field {
    name: "nAvgBytesPerSec"
    type: "UI"
  }
  field {
    name: "nBlockAlign"
    type: "UI"
  }
  field {
    name: "wBitsPerSample"
    type: "UI"
  }
}
struct {
  name: "tagMCI_SEQ_SET_PARMS"
  field {
    name: "dwCallback"
    type: "UI"
  }
  field {
    name: "dwTimeFormat"
    type: "UI"
  }
  field {
    name: "dwAudio"
    type: "UI"
  }
  field {
    name: "dwTempo"
    type: "UI"
  }
  field {
    name: "dwPort"
    type: "UI"
  }
  field {
    name: "dwSlave"
    type: "UI"
  }
  field {
    name: "dwMaster"
    type: "UI"
  }
  field {
    name: "dwOffset"
    type: "UI"
  }
}
struct {
  name: "tagMCI_SEQ_SET_PARMS"
  field {
    name: "dwCallback"
    type: "UI"
  }
  field {
    name: "dwTimeFormat"
    type: "UI"
  }
  field {
    name: "dwAudio"
    type: "UI"
  }
  field {
    name: "dwTempo"
    type: "UI"
  }
  field {
    name: "dwPort"
    type: "UI"
  }
  field {
    name: "dwSlave"
    type: "UI"
  }
  field {
    name: "dwMaster"
    type: "UI"
  }
  field {
    name: "dwOffset"
    type: "UI"
  }
}
struct {
  name: "tagMCI_ANIM_OPEN_PARMSA"
  field {
    name: "dwCallback"
    type: "UI"
  }
  field {
    name: "wDeviceID"
    type: "UI"
  }
  field {
    name: "lpstrDeviceType"
    type: "*cC;"
  }
  field {
    name: "lpstrElementName"
    type: "*cC;"
  }
  field {
    name: "lpstrAlias"
    type: "*cC;"
  }
  field {
    name: "dwStyle"
    type: "UI"
  }
  field {
    name: "hWndParent"
    type: "*RHWND__;;"
  }
}
struct {
  name: "tagMCI_ANIM_OPEN_PARMSA"
  field {
    name: "dwCallback"
    type: "UI"
  }
  field {
    name: "wDeviceID"
    type: "UI"
  }
  field {
    name: "lpstrDeviceType"
    type: "*cC;"
  }
  field {
    name: "lpstrElementName"
    type: "*cC;"
  }
  field {
    name: "lpstrAlias"
    type: "*cC;"
  }
  field {
    name: "dwStyle"
    type: "UI"
  }
  field {
    name: "hWndParent"
    type: "*RHWND__;;"
  }
}
struct {
  name: "tagMCI_ANIM_OPEN_PARMSW"
  field {
    name: "dwCallback"
    type: "UI"
  }
  field {
    name: "wDeviceID"
    type: "UI"
  }
  field {
    name: "lpstrDeviceType"
    type: "*cUS;"
  }
  field {
    name: "lpstrElementName"
    type: "*cUS;"
  }
  field {
    name: "lpstrAlias"
    type: "*cUS;"
  }
  field {
    name: "dwStyle"
    type: "UI"
  }
  field {
    name: "hWndParent"
    type: "*RHWND__;;"
  }
}
struct {
  name: "tagMCI_ANIM_OPEN_PARMSW"
  field {
    name: "dwCallback"
    type: "UI"
  }
  field {
    name: "wDeviceID"
    type: "UI"
  }
  field {
    name: "lpstrDeviceType"
    type: "*cUS;"
  }
  field {
    name: "lpstrElementName"
    type: "*cUS;"
  }
  field {
    name: "lpstrAlias"
    type: "*cUS;"
  }
  field {
    name: "dwStyle"
    type: "UI"
  }
  field {
    name: "hWndParent"
    type: "*RHWND__;;"
  }
}
struct {
  name: "tagMCI_ANIM_PLAY_PARMS"
  field {
    name: "dwCallback"
    type: "UI"
  }
  field {
    name: "dwFrom"
    type: "UI"
  }
  field {
    name: "dwTo"
    type: "UI"
  }
  field {
    name: "dwSpeed"
    type: "UI"
  }
}
struct {
  name: "tagMCI_ANIM_PLAY_PARMS"
  field {
    name: "dwCallback"
    type: "UI"
  }
  field {
    name: "dwFrom"
    type: "UI"
  }
  field {
    name: "dwTo"
    type: "UI"
  }
  field {
    name: "dwSpeed"
    type: "UI"
  }
}
struct {
  name: "tagMCI_ANIM_STEP_PARMS"
  field {
    name: "dwCallback"
    type: "UI"
  }
  field {
    name: "dwFrames"
    type: "UI"
  }
}
struct {
  name: "tagMCI_ANIM_STEP_PARMS"
  field {
    name: "dwCallback"
    type: "UI"
  }
  field {
    name: "dwFrames"
    type: "UI"
  }
}
struct {
  name: "tagMCI_ANIM_WINDOW_PARMSA"
  field {
    name: "dwCallback"
    type: "UI"
  }
  field {
    name: "hWnd"
    type: "*RHWND__;;"
  }
  field {
    name: "nCmdShow"
    type: "UI"
  }
  field {
    name: "lpstrText"
    type: "*cC;"
  }
}
struct {
  name: "tagMCI_ANIM_WINDOW_PARMSA"
  field {
    name: "dwCallback"
    type: "UI"
  }
  field {
    name: "hWnd"
    type: "*RHWND__;;"
  }
  field {
    name: "nCmdShow"
    type: "UI"
  }
  field {
    name: "lpstrText"
    type: "*cC;"
  }
}
struct {
  name: "tagMCI_ANIM_WINDOW_PARMSW"
  field {
    name: "dwCallback"
    type: "UI"
  }
  field {
    name: "hWnd"
    type: "*RHWND__;;"
  }
  field {
    name: "nCmdShow"
    type: "UI"
  }
  field {
    name: "lpstrText"
    type: "*cUS;"
  }
}
struct {
  name: "tagMCI_ANIM_WINDOW_PARMSW"
  field {
    name: "dwCallback"
    type: "UI"
  }
  field {
    name: "hWnd"
    type: "*RHWND__;;"
  }
  field {
    name: "nCmdShow"
    type: "UI"
  }
  field {
    name: "lpstrText"
    type: "*cUS;"
  }
}
struct {
  name: "tagMCI_ANIM_RECT_PARMS"
  field {
    name: "dwCallback"
    type: "UI"
  }
  field {
    name: "rc"
    type: "RtagRECT;"
  }
}
struct {
  name: "tagMCI_ANIM_RECT_PARMS"
  field {
    name: "dwCallback"
    type: "UI"
  }
  field {
    name: "rc"
    type: "RtagRECT;"
  }
}
struct {
  name: "tagMCI_ANIM_UPDATE_PARMS"
  field {
    name: "dwCallback"
    type: "UI"
  }
  field {
    name: "rc"
    type: "RtagRECT;"
  }
  field {
    name: "hDC"
    type: "*RHDC__;;"
  }
}
struct {
  name: "tagMCI_ANIM_UPDATE_PARMS"
  field {
    name: "dwCallback"
    type: "UI"
  }
  field {
    name: "rc"
    type: "RtagRECT;"
  }
  field {
    name: "hDC"
    type: "*RHDC__;;"
  }
}
struct {
  name: "tagMCI_OVLY_OPEN_PARMSA"
  field {
    name: "dwCallback"
    type: "UI"
  }
  field {
    name: "wDeviceID"
    type: "UI"
  }
  field {
    name: "lpstrDeviceType"
    type: "*cC;"
  }
  field {
    name: "lpstrElementName"
    type: "*cC;"
  }
  field {
    name: "lpstrAlias"
    type: "*cC;"
  }
  field {
    name: "dwStyle"
    type: "UI"
  }
  field {
    name: "hWndParent"
    type: "*RHWND__;;"
  }
}
struct {
  name: "tagMCI_OVLY_OPEN_PARMSA"
  field {
    name: "dwCallback"
    type: "UI"
  }
  field {
    name: "wDeviceID"
    type: "UI"
  }
  field {
    name: "lpstrDeviceType"
    type: "*cC;"
  }
  field {
    name: "lpstrElementName"
    type: "*cC;"
  }
  field {
    name: "lpstrAlias"
    type: "*cC;"
  }
  field {
    name: "dwStyle"
    type: "UI"
  }
  field {
    name: "hWndParent"
    type: "*RHWND__;;"
  }
}
struct {
  name: "tagMCI_OVLY_OPEN_PARMSW"
  field {
    name: "dwCallback"
    type: "UI"
  }
  field {
    name: "wDeviceID"
    type: "UI"
  }
  field {
    name: "lpstrDeviceType"
    type: "*cUS;"
  }
  field {
    name: "lpstrElementName"
    type: "*cUS;"
  }
  field {
    name: "lpstrAlias"
    type: "*cUS;"
  }
  field {
    name: "dwStyle"
    type: "UI"
  }
  field {
    name: "hWndParent"
    type: "*RHWND__;;"
  }
}
struct {
  name: "tagMCI_OVLY_OPEN_PARMSW"
  field {
    name: "dwCallback"
    type: "UI"
  }
  field {
    name: "wDeviceID"
    type: "UI"
  }
  field {
    name: "lpstrDeviceType"
    type: "*cUS;"
  }
  field {
    name: "lpstrElementName"
    type: "*cUS;"
  }
  field {
    name: "lpstrAlias"
    type: "*cUS;"
  }
  field {
    name: "dwStyle"
    type: "UI"
  }
  field {
    name: "hWndParent"
    type: "*RHWND__;;"
  }
}
struct {
  name: "tagMCI_OVLY_WINDOW_PARMSA"
  field {
    name: "dwCallback"
    type: "UI"
  }
  field {
    name: "hWnd"
    type: "*RHWND__;;"
  }
  field {
    name: "nCmdShow"
    type: "UI"
  }
  field {
    name: "lpstrText"
    type: "*cC;"
  }
}
struct {
  name: "tagMCI_OVLY_WINDOW_PARMSA"
  field {
    name: "dwCallback"
    type: "UI"
  }
  field {
    name: "hWnd"
    type: "*RHWND__;;"
  }
  field {
    name: "nCmdShow"
    type: "UI"
  }
  field {
    name: "lpstrText"
    type: "*cC;"
  }
}
struct {
  name: "tagMCI_OVLY_WINDOW_PARMSW"
  field {
    name: "dwCallback"
    type: "UI"
  }
  field {
    name: "hWnd"
    type: "*RHWND__;;"
  }
  field {
    name: "nCmdShow"
    type: "UI"
  }
  field {
    name: "lpstrText"
    type: "*cUS;"
  }
}
struct {
  name: "tagMCI_OVLY_WINDOW_PARMSW"
  field {
    name: "dwCallback"
    type: "UI"
  }
  field {
    name: "hWnd"
    type: "*RHWND__;;"
  }
  field {
    name: "nCmdShow"
    type: "UI"
  }
  field {
    name: "lpstrText"
    type: "*cUS;"
  }
}
struct {
  name: "tagMCI_OVLY_RECT_PARMS"
  field {
    name: "dwCallback"
    type: "UI"
  }
  field {
    name: "rc"
    type: "RtagRECT;"
  }
}
struct {
  name: "tagMCI_OVLY_RECT_PARMS"
  field {
    name: "dwCallback"
    type: "UI"
  }
  field {
    name: "rc"
    type: "RtagRECT;"
  }
}
struct {
  name: "tagMCI_OVLY_SAVE_PARMSA"
  field {
    name: "dwCallback"
    type: "UI"
  }
  field {
    name: "lpfilename"
    type: "*cC;"
  }
  field {
    name: "rc"
    type: "RtagRECT;"
  }
}
struct {
  name: "tagMCI_OVLY_SAVE_PARMSA"
  field {
    name: "dwCallback"
    type: "UI"
  }
  field {
    name: "lpfilename"
    type: "*cC;"
  }
  field {
    name: "rc"
    type: "RtagRECT;"
  }
}
struct {
  name: "tagMCI_OVLY_SAVE_PARMSW"
  field {
    name: "dwCallback"
    type: "UI"
  }
  field {
    name: "lpfilename"
    type: "*cUS;"
  }
  field {
    name: "rc"
    type: "RtagRECT;"
  }
}
struct {
  name: "tagMCI_OVLY_SAVE_PARMSW"
  field {
    name: "dwCallback"
    type: "UI"
  }
  field {
    name: "lpfilename"
    type: "*cUS;"
  }
  field {
    name: "rc"
    type: "RtagRECT;"
  }
}
struct {
  name: "tagMCI_OVLY_LOAD_PARMSA"
  field {
    name: "dwCallback"
    type: "UI"
  }
  field {
    name: "lpfilename"
    type: "*cC;"
  }
  field {
    name: "rc"
    type: "RtagRECT;"
  }
}
struct {
  name: "tagMCI_OVLY_LOAD_PARMSA"
  field {
    name: "dwCallback"
    type: "UI"
  }
  field {
    name: "lpfilename"
    type: "*cC;"
  }
  field {
    name: "rc"
    type: "RtagRECT;"
  }
}
struct {
  name: "tagMCI_OVLY_LOAD_PARMSW"
  field {
    name: "dwCallback"
    type: "UI"
  }
  field {
    name: "lpfilename"
    type: "*cUS;"
  }
  field {
    name: "rc"
    type: "RtagRECT;"
  }
}
struct {
  name: "tagMCI_OVLY_LOAD_PARMSW"
  field {
    name: "dwCallback"
    type: "UI"
  }
  field {
    name: "lpfilename"
    type: "*cUS;"
  }
  field {
    name: "rc"
    type: "RtagRECT;"
  }
}
struct {
  name: "_NCB"
  field {
    name: "ncb_command"
    type: "UB"
  }
  field {
    name: "ncb_retcode"
    type: "UB"
  }
  field {
    name: "ncb_lsn"
    type: "UB"
  }
  field {
    name: "ncb_num"
    type: "UB"
  }
  field {
    name: "ncb_buffer"
    type: "*UB;"
  }
  field {
    name: "ncb_length"
    type: "US"
  }
  field {
    name: "ncb_callname"
    type: "X(ConstantArray.UCHAR [16])"
  }
  field {
    name: "ncb_name"
    type: "X(ConstantArray.UCHAR [16])"
  }
  field {
    name: "ncb_rto"
    type: "UB"
  }
  field {
    name: "ncb_sto"
    type: "UB"
  }
  field {
    name: "ncb_post"
    type: "*(*R_NCB;;)V;"
  }
  field {
    name: "ncb_lana_num"
    type: "UB"
  }
  field {
    name: "ncb_cmd_cplt"
    type: "UB"
  }
  field {
    name: "ncb_reserve"
    type: "X(ConstantArray.UCHAR [18])"
  }
  field {
    name: "ncb_event"
    type: "*V;"
  }
}
struct {
  name: "_NCB"
  field {
    name: "ncb_command"
    type: "UB"
  }
  field {
    name: "ncb_retcode"
    type: "UB"
  }
  field {
    name: "ncb_lsn"
    type: "UB"
  }
  field {
    name: "ncb_num"
    type: "UB"
  }
  field {
    name: "ncb_buffer"
    type: "*UB;"
  }
  field {
    name: "ncb_length"
    type: "US"
  }
  field {
    name: "ncb_callname"
    type: "X(ConstantArray.UCHAR [16])"
  }
  field {
    name: "ncb_name"
    type: "X(ConstantArray.UCHAR [16])"
  }
  field {
    name: "ncb_rto"
    type: "UB"
  }
  field {
    name: "ncb_sto"
    type: "UB"
  }
  field {
    name: "ncb_post"
    type: "*(*R_NCB;;)V;"
  }
  field {
    name: "ncb_lana_num"
    type: "UB"
  }
  field {
    name: "ncb_cmd_cplt"
    type: "UB"
  }
  field {
    name: "ncb_reserve"
    type: "X(ConstantArray.UCHAR [18])"
  }
  field {
    name: "ncb_event"
    type: "*V;"
  }
}
struct {
  name: "_ADAPTER_STATUS"
  field {
    name: "adapter_address"
    type: "X(ConstantArray.UCHAR [6])"
  }
  field {
    name: "rev_major"
    type: "UB"
  }
  field {
    name: "reserved0"
    type: "UB"
  }
  field {
    name: "adapter_type"
    type: "UB"
  }
  field {
    name: "rev_minor"
    type: "UB"
  }
  field {
    name: "duration"
    type: "US"
  }
  field {
    name: "frmr_recv"
    type: "US"
  }
  field {
    name: "frmr_xmit"
    type: "US"
  }
  field {
    name: "iframe_recv_error"
    type: "US"
  }
  field {
    name: "xmit_aborts"
    type: "US"
  }
  field {
    name: "xmit_success"
    type: "UI"
  }
  field {
    name: "recv_success"
    type: "UI"
  }
  field {
    name: "iframe_xmit_error"
    type: "US"
  }
  field {
    name: "recv_buffer_unavail"
    type: "US"
  }
  field {
    name: "t1_timeouts"
    type: "US"
  }
  field {
    name: "ti_timeouts"
    type: "US"
  }
  field {
    name: "reserved1"
    type: "UI"
  }
  field {
    name: "free_ncbs"
    type: "US"
  }
  field {
    name: "max_cfg_ncbs"
    type: "US"
  }
  field {
    name: "max_ncbs"
    type: "US"
  }
  field {
    name: "xmit_buf_unavail"
    type: "US"
  }
  field {
    name: "max_dgram_size"
    type: "US"
  }
  field {
    name: "pending_sess"
    type: "US"
  }
  field {
    name: "max_cfg_sess"
    type: "US"
  }
  field {
    name: "max_sess"
    type: "US"
  }
  field {
    name: "max_sess_pkt_size"
    type: "US"
  }
  field {
    name: "name_count"
    type: "US"
  }
}
struct {
  name: "_ADAPTER_STATUS"
  field {
    name: "adapter_address"
    type: "X(ConstantArray.UCHAR [6])"
  }
  field {
    name: "rev_major"
    type: "UB"
  }
  field {
    name: "reserved0"
    type: "UB"
  }
  field {
    name: "adapter_type"
    type: "UB"
  }
  field {
    name: "rev_minor"
    type: "UB"
  }
  field {
    name: "duration"
    type: "US"
  }
  field {
    name: "frmr_recv"
    type: "US"
  }
  field {
    name: "frmr_xmit"
    type: "US"
  }
  field {
    name: "iframe_recv_error"
    type: "US"
  }
  field {
    name: "xmit_aborts"
    type: "US"
  }
  field {
    name: "xmit_success"
    type: "UI"
  }
  field {
    name: "recv_success"
    type: "UI"
  }
  field {
    name: "iframe_xmit_error"
    type: "US"
  }
  field {
    name: "recv_buffer_unavail"
    type: "US"
  }
  field {
    name: "t1_timeouts"
    type: "US"
  }
  field {
    name: "ti_timeouts"
    type: "US"
  }
  field {
    name: "reserved1"
    type: "UI"
  }
  field {
    name: "free_ncbs"
    type: "US"
  }
  field {
    name: "max_cfg_ncbs"
    type: "US"
  }
  field {
    name: "max_ncbs"
    type: "US"
  }
  field {
    name: "xmit_buf_unavail"
    type: "US"
  }
  field {
    name: "max_dgram_size"
    type: "US"
  }
  field {
    name: "pending_sess"
    type: "US"
  }
  field {
    name: "max_cfg_sess"
    type: "US"
  }
  field {
    name: "max_sess"
    type: "US"
  }
  field {
    name: "max_sess_pkt_size"
    type: "US"
  }
  field {
    name: "name_count"
    type: "US"
  }
}
struct {
  name: "_NAME_BUFFER"
  field {
    name: "name"
    type: "X(ConstantArray.UCHAR [16])"
  }
  field {
    name: "name_num"
    type: "UB"
  }
  field {
    name: "name_flags"
    type: "UB"
  }
}
struct {
  name: "_NAME_BUFFER"
  field {
    name: "name"
    type: "X(ConstantArray.UCHAR [16])"
  }
  field {
    name: "name_num"
    type: "UB"
  }
  field {
    name: "name_flags"
    type: "UB"
  }
}
struct {
  name: "_LANA_ENUM"
  field {
    name: "length"
    type: "UB"
  }
  field {
    name: "lana"
    type: "X(ConstantArray.UCHAR [255])"
  }
}
struct {
  name: "_LANA_ENUM"
  field {
    name: "length"
    type: "UB"
  }
  field {
    name: "lana"
    type: "X(ConstantArray.UCHAR [255])"
  }
}
struct {
  name: "_FIND_NAME_HEADER"
  field {
    name: "node_count"
    type: "US"
  }
  field {
    name: "reserved"
    type: "UB"
  }
  field {
    name: "unique_group"
    type: "UB"
  }
}
struct {
  name: "_FIND_NAME_HEADER"
  field {
    name: "node_count"
    type: "US"
  }
  field {
    name: "reserved"
    type: "UB"
  }
  field {
    name: "unique_group"
    type: "UB"
  }
}
struct {
  name: "_FIND_NAME_BUFFER"
  field {
    name: "length"
    type: "UB"
  }
  field {
    name: "access_control"
    type: "UB"
  }
  field {
    name: "frame_control"
    type: "UB"
  }
  field {
    name: "destination_addr"
    type: "X(ConstantArray.UCHAR [6])"
  }
  field {
    name: "source_addr"
    type: "X(ConstantArray.UCHAR [6])"
  }
  field {
    name: "routing_info"
    type: "X(ConstantArray.UCHAR [6])"
  }
}
struct {
  name: "_FIND_NAME_BUFFER"
  field {
    name: "length"
    type: "UB"
  }
  field {
    name: "access_control"
    type: "UB"
  }
  field {
    name: "frame_control"
    type: "UB"
  }
  field {
    name: "destination_addr"
    type: "X(ConstantArray.UCHAR [6])"
  }
  field {
    name: "source_addr"
    type: "X(ConstantArray.UCHAR [6])"
  }
  field {
    name: "routing_info"
    type: "X(ConstantArray.UCHAR [6])"
  }
}
struct {
  name: "_SESSION_HEADER"
  field {
    name: "sess_name"
    type: "UB"
  }
  field {
    name: "num_sess"
    type: "UB"
  }
  field {
    name: "rcv_dg_outstanding"
    type: "UB"
  }
  field {
    name: "rcv_any_outstanding"
    type: "UB"
  }
}
struct {
  name: "_SESSION_HEADER"
  field {
    name: "sess_name"
    type: "UB"
  }
  field {
    name: "num_sess"
    type: "UB"
  }
  field {
    name: "rcv_dg_outstanding"
    type: "UB"
  }
  field {
    name: "rcv_any_outstanding"
    type: "UB"
  }
}
struct {
  name: "_SESSION_BUFFER"
  field {
    name: "lsn"
    type: "UB"
  }
  field {
    name: "state"
    type: "UB"
  }
  field {
    name: "local_name"
    type: "X(ConstantArray.UCHAR [16])"
  }
  field {
    name: "remote_name"
    type: "X(ConstantArray.UCHAR [16])"
  }
  field {
    name: "rcvs_outstanding"
    type: "UB"
  }
  field {
    name: "sends_outstanding"
    type: "UB"
  }
}
struct {
  name: "_SESSION_BUFFER"
  field {
    name: "lsn"
    type: "UB"
  }
  field {
    name: "state"
    type: "UB"
  }
  field {
    name: "local_name"
    type: "X(ConstantArray.UCHAR [16])"
  }
  field {
    name: "remote_name"
    type: "X(ConstantArray.UCHAR [16])"
  }
  field {
    name: "rcvs_outstanding"
    type: "UB"
  }
  field {
    name: "sends_outstanding"
    type: "UB"
  }
}
struct {
  name: "_RPC_BINDING_VECTOR"
  field {
    name: "Count"
    type: "UI"
  }
  field {
    name: "BindingH"
    type: "X(ConstantArray.RPC_BINDING_HANDLE [1])"
  }
}
struct {
  name: "_UUID_VECTOR"
  field {
    name: "Count"
    type: "UI"
  }
  field {
    name: "Uuid"
    type: "X(ConstantArray.UUID *[1])"
  }
}
struct {
  name: "_RPC_IF_ID"
  field {
    name: "Uuid"
    type: "R_GUID;"
  }
  field {
    name: "VersMajor"
    type: "US"
  }
  field {
    name: "VersMinor"
    type: "US"
  }
}
struct {
  name: "RPC_IF_ID_VECTOR"
  field {
    name: "Count"
    type: "UI"
  }
  field {
    name: "IfId"
    type: "X(ConstantArray.RPC_IF_ID *[1])"
  }
}
struct {
  name: "RPC_STATS_VECTOR"
  field {
    name: "Count"
    type: "UI"
  }
  field {
    name: "Stats"
    type: "X(ConstantArray.ULONG [1])"
  }
}
struct {
  name: "_RPC_PROTSEQ_VECTORA"
  field {
    name: "Count"
    type: "UI"
  }
  field {
    name: "Protseq"
    type: "X(ConstantArray.unsigned char *[1])"
  }
}
struct {
  name: "_RPC_PROTSEQ_VECTORW"
  field {
    name: "Count"
    type: "UI"
  }
  field {
    name: "Protseq"
    type: "X(ConstantArray.unsigned short *[1])"
  }
}
struct {
  name: "_RPC_POLICY"
  field {
    name: "Length"
    type: "UI"
  }
  field {
    name: "EndpointFlags"
    type: "UI"
  }
  field {
    name: "NICFlags"
    type: "UI"
  }
}
struct {
  name: "_RPC_POLICY"
  field {
    name: "Length"
    type: "UI"
  }
  field {
    name: "EndpointFlags"
    type: "UI"
  }
  field {
    name: "NICFlags"
    type: "UI"
  }
}
struct {
  name: "_SEC_WINNT_AUTH_IDENTITY_W"
  field {
    name: "User"
    type: "*US;"
  }
  field {
    name: "UserLength"
    type: "UI"
  }
  field {
    name: "Domain"
    type: "*US;"
  }
  field {
    name: "DomainLength"
    type: "UI"
  }
  field {
    name: "Password"
    type: "*US;"
  }
  field {
    name: "PasswordLength"
    type: "UI"
  }
  field {
    name: "Flags"
    type: "UI"
  }
}
struct {
  name: "_SEC_WINNT_AUTH_IDENTITY_W"
  field {
    name: "User"
    type: "*US;"
  }
  field {
    name: "UserLength"
    type: "UI"
  }
  field {
    name: "Domain"
    type: "*US;"
  }
  field {
    name: "DomainLength"
    type: "UI"
  }
  field {
    name: "Password"
    type: "*US;"
  }
  field {
    name: "PasswordLength"
    type: "UI"
  }
  field {
    name: "Flags"
    type: "UI"
  }
}
struct {
  name: "_SEC_WINNT_AUTH_IDENTITY_A"
  field {
    name: "User"
    type: "*UB;"
  }
  field {
    name: "UserLength"
    type: "UI"
  }
  field {
    name: "Domain"
    type: "*UB;"
  }
  field {
    name: "DomainLength"
    type: "UI"
  }
  field {
    name: "Password"
    type: "*UB;"
  }
  field {
    name: "PasswordLength"
    type: "UI"
  }
  field {
    name: "Flags"
    type: "UI"
  }
}
struct {
  name: "_SEC_WINNT_AUTH_IDENTITY_A"
  field {
    name: "User"
    type: "*UB;"
  }
  field {
    name: "UserLength"
    type: "UI"
  }
  field {
    name: "Domain"
    type: "*UB;"
  }
  field {
    name: "DomainLength"
    type: "UI"
  }
  field {
    name: "Password"
    type: "*UB;"
  }
  field {
    name: "PasswordLength"
    type: "UI"
  }
  field {
    name: "Flags"
    type: "UI"
  }
}
struct {
  name: "_RPC_HTTP_TRANSPORT_CREDENTIALS_W"
  field {
    name: "TransportCredentials"
    type: "*R_SEC_WINNT_AUTH_IDENTITY_W;;"
  }
  field {
    name: "Flags"
    type: "UI"
  }
  field {
    name: "AuthenticationTarget"
    type: "UI"
  }
  field {
    name: "NumberOfAuthnSchemes"
    type: "UI"
  }
  field {
    name: "AuthnSchemes"
    type: "*UI;"
  }
  field {
    name: "ServerCertificateSubject"
    type: "*US;"
  }
}
struct {
  name: "_RPC_HTTP_TRANSPORT_CREDENTIALS_W"
  field {
    name: "TransportCredentials"
    type: "*R_SEC_WINNT_AUTH_IDENTITY_W;;"
  }
  field {
    name: "Flags"
    type: "UI"
  }
  field {
    name: "AuthenticationTarget"
    type: "UI"
  }
  field {
    name: "NumberOfAuthnSchemes"
    type: "UI"
  }
  field {
    name: "AuthnSchemes"
    type: "*UI;"
  }
  field {
    name: "ServerCertificateSubject"
    type: "*US;"
  }
}
struct {
  name: "_RPC_HTTP_TRANSPORT_CREDENTIALS_A"
  field {
    name: "TransportCredentials"
    type: "*R_SEC_WINNT_AUTH_IDENTITY_A;;"
  }
  field {
    name: "Flags"
    type: "UI"
  }
  field {
    name: "AuthenticationTarget"
    type: "UI"
  }
  field {
    name: "NumberOfAuthnSchemes"
    type: "UI"
  }
  field {
    name: "AuthnSchemes"
    type: "*UI;"
  }
  field {
    name: "ServerCertificateSubject"
    type: "*UB;"
  }
}
struct {
  name: "_RPC_HTTP_TRANSPORT_CREDENTIALS_A"
  field {
    name: "TransportCredentials"
    type: "*R_SEC_WINNT_AUTH_IDENTITY_A;;"
  }
  field {
    name: "Flags"
    type: "UI"
  }
  field {
    name: "AuthenticationTarget"
    type: "UI"
  }
  field {
    name: "NumberOfAuthnSchemes"
    type: "UI"
  }
  field {
    name: "AuthnSchemes"
    type: "*UI;"
  }
  field {
    name: "ServerCertificateSubject"
    type: "*UB;"
  }
}
struct {
  name: "_RPC_SECURITY_QOS"
  field {
    name: "Version"
    type: "UI"
  }
  field {
    name: "Capabilities"
    type: "UI"
  }
  field {
    name: "IdentityTracking"
    type: "UI"
  }
  field {
    name: "ImpersonationType"
    type: "UI"
  }
}
struct {
  name: "_RPC_SECURITY_QOS"
  field {
    name: "Version"
    type: "UI"
  }
  field {
    name: "Capabilities"
    type: "UI"
  }
  field {
    name: "IdentityTracking"
    type: "UI"
  }
  field {
    name: "ImpersonationType"
    type: "UI"
  }
}
struct {
  name: "_RPC_SECURITY_QOS_V2_W"
  field {
    name: "Version"
    type: "UI"
  }
  field {
    name: "Capabilities"
    type: "UI"
  }
  field {
    name: "IdentityTracking"
    type: "UI"
  }
  field {
    name: "ImpersonationType"
    type: "UI"
  }
  field {
    name: "AdditionalSecurityInfoType"
    type: "UI"
  }
  field {
    name: "u"
    type: "Runion _RPC_SECURITY_QOS_V2_W::(anonymous at /usr/local/include/wine/windows/rpcdce.h:277:5);"
  }
}
struct {
  name: "_RPC_SECURITY_QOS_V2_W"
  field {
    name: "Version"
    type: "UI"
  }
  field {
    name: "Capabilities"
    type: "UI"
  }
  field {
    name: "IdentityTracking"
    type: "UI"
  }
  field {
    name: "ImpersonationType"
    type: "UI"
  }
  field {
    name: "AdditionalSecurityInfoType"
    type: "UI"
  }
  field {
    name: "u"
    type: "Runion _RPC_SECURITY_QOS_V2_W::(anonymous at /usr/local/include/wine/windows/rpcdce.h:277:5);"
  }
}
struct {
  name: "_RPC_SECURITY_QOS_V2_A"
  field {
    name: "Version"
    type: "UI"
  }
  field {
    name: "Capabilities"
    type: "UI"
  }
  field {
    name: "IdentityTracking"
    type: "UI"
  }
  field {
    name: "ImpersonationType"
    type: "UI"
  }
  field {
    name: "AdditionalSecurityInfoType"
    type: "UI"
  }
  field {
    name: "u"
    type: "Runion _RPC_SECURITY_QOS_V2_A::(anonymous at /usr/local/include/wine/windows/rpcdce.h:290:5);"
  }
}
struct {
  name: "_RPC_SECURITY_QOS_V2_A"
  field {
    name: "Version"
    type: "UI"
  }
  field {
    name: "Capabilities"
    type: "UI"
  }
  field {
    name: "IdentityTracking"
    type: "UI"
  }
  field {
    name: "ImpersonationType"
    type: "UI"
  }
  field {
    name: "AdditionalSecurityInfoType"
    type: "UI"
  }
  field {
    name: "u"
    type: "Runion _RPC_SECURITY_QOS_V2_A::(anonymous at /usr/local/include/wine/windows/rpcdce.h:290:5);"
  }
}
struct {
  name: "_RPC_VERSION"
  field {
    name: "MajorVersion"
    type: "US"
  }
  field {
    name: "MinorVersion"
    type: "US"
  }
}
struct {
  name: "_RPC_SYNTAX_IDENTIFIER"
  field {
    name: "SyntaxGUID"
    type: "R_GUID;"
  }
  field {
    name: "SyntaxVersion"
    type: "R_RPC_VERSION;"
  }
}
struct {
  name: "_RPC_SYNTAX_IDENTIFIER"
  field {
    name: "SyntaxGUID"
    type: "R_GUID;"
  }
  field {
    name: "SyntaxVersion"
    type: "R_RPC_VERSION;"
  }
}
struct {
  name: "_RPC_MESSAGE"
  field {
    name: "Handle"
    type: "*V;"
  }
  field {
    name: "DataRepresentation"
    type: "UI"
  }
  field {
    name: "Buffer"
    type: "*V;"
  }
  field {
    name: "BufferLength"
    type: "UI"
  }
  field {
    name: "ProcNum"
    type: "UI"
  }
  field {
    name: "TransferSyntax"
    type: "*R_RPC_SYNTAX_IDENTIFIER;;"
  }
  field {
    name: "RpcInterfaceInformation"
    type: "*V;"
  }
  field {
    name: "ReservedForRuntime"
    type: "*V;"
  }
  field {
    name: "ManagerEpv"
    type: "*V;"
  }
  field {
    name: "ImportContext"
    type: "*V;"
  }
  field {
    name: "RpcFlags"
    type: "UI"
  }
}
struct {
  name: "_RPC_MESSAGE"
  field {
    name: "Handle"
    type: "*V;"
  }
  field {
    name: "DataRepresentation"
    type: "UI"
  }
  field {
    name: "Buffer"
    type: "*V;"
  }
  field {
    name: "BufferLength"
    type: "UI"
  }
  field {
    name: "ProcNum"
    type: "UI"
  }
  field {
    name: "TransferSyntax"
    type: "*R_RPC_SYNTAX_IDENTIFIER;;"
  }
  field {
    name: "RpcInterfaceInformation"
    type: "*V;"
  }
  field {
    name: "ReservedForRuntime"
    type: "*V;"
  }
  field {
    name: "ManagerEpv"
    type: "*V;"
  }
  field {
    name: "ImportContext"
    type: "*V;"
  }
  field {
    name: "RpcFlags"
    type: "UI"
  }
}
struct {
  name: "RPC_DISPATCH_TABLE"
  field {
    name: "DispatchTableCount"
    type: "UI"
  }
  field {
    name: "DispatchTable"
    type: "**(*R_RPC_MESSAGE;;)V;;"
  }
  field {
    name: "Reserved"
    type: "I"
  }
}
struct {
  name: "RPC_DISPATCH_TABLE"
  field {
    name: "DispatchTableCount"
    type: "UI"
  }
  field {
    name: "DispatchTable"
    type: "**(*R_RPC_MESSAGE;;)V;;"
  }
  field {
    name: "Reserved"
    type: "I"
  }
}
struct {
  name: "_RPC_PROTSEQ_ENDPOINT"
  field {
    name: "RpcProtocolSequence"
    type: "*UB;"
  }
  field {
    name: "Endpoint"
    type: "*UB;"
  }
}
struct {
  name: "_RPC_PROTSEQ_ENDPOINT"
  field {
    name: "RpcProtocolSequence"
    type: "*UB;"
  }
  field {
    name: "Endpoint"
    type: "*UB;"
  }
}
struct {
  name: "_RPC_SERVER_INTERFACE"
  field {
    name: "Length"
    type: "UI"
  }
  field {
    name: "InterfaceId"
    type: "R_RPC_SYNTAX_IDENTIFIER;"
  }
  field {
    name: "TransferSyntax"
    type: "R_RPC_SYNTAX_IDENTIFIER;"
  }
  field {
    name: "DispatchTable"
    type: "*RRPC_DISPATCH_TABLE;;"
  }
  field {
    name: "RpcProtseqEndpointCount"
    type: "UI"
  }
  field {
    name: "RpcProtseqEndpoint"
    type: "*R_RPC_PROTSEQ_ENDPOINT;;"
  }
  field {
    name: "DefaultManagerEpv"
    type: "*V;"
  }
  field {
    name: "InterpreterInfo"
    type: "*cV;"
  }
  field {
    name: "Flags"
    type: "UI"
  }
}
struct {
  name: "_RPC_SERVER_INTERFACE"
  field {
    name: "Length"
    type: "UI"
  }
  field {
    name: "InterfaceId"
    type: "R_RPC_SYNTAX_IDENTIFIER;"
  }
  field {
    name: "TransferSyntax"
    type: "R_RPC_SYNTAX_IDENTIFIER;"
  }
  field {
    name: "DispatchTable"
    type: "*RRPC_DISPATCH_TABLE;;"
  }
  field {
    name: "RpcProtseqEndpointCount"
    type: "UI"
  }
  field {
    name: "RpcProtseqEndpoint"
    type: "*R_RPC_PROTSEQ_ENDPOINT;;"
  }
  field {
    name: "DefaultManagerEpv"
    type: "*V;"
  }
  field {
    name: "InterpreterInfo"
    type: "*cV;"
  }
  field {
    name: "Flags"
    type: "UI"
  }
}
struct {
  name: "_RPC_CLIENT_INTERFACE"
  field {
    name: "Length"
    type: "UI"
  }
  field {
    name: "InterfaceId"
    type: "R_RPC_SYNTAX_IDENTIFIER;"
  }
  field {
    name: "TransferSyntax"
    type: "R_RPC_SYNTAX_IDENTIFIER;"
  }
  field {
    name: "DispatchTable"
    type: "*RRPC_DISPATCH_TABLE;;"
  }
  field {
    name: "RpcProtseqEndpointCount"
    type: "UI"
  }
  field {
    name: "RpcProtseqEndpoint"
    type: "*R_RPC_PROTSEQ_ENDPOINT;;"
  }
  field {
    name: "Reserved"
    type: "UI"
  }
  field {
    name: "InterpreterInfo"
    type: "*cV;"
  }
  field {
    name: "Flags"
    type: "UI"
  }
}
struct {
  name: "_RPC_CLIENT_INTERFACE"
  field {
    name: "Length"
    type: "UI"
  }
  field {
    name: "InterfaceId"
    type: "R_RPC_SYNTAX_IDENTIFIER;"
  }
  field {
    name: "TransferSyntax"
    type: "R_RPC_SYNTAX_IDENTIFIER;"
  }
  field {
    name: "DispatchTable"
    type: "*RRPC_DISPATCH_TABLE;;"
  }
  field {
    name: "RpcProtseqEndpointCount"
    type: "UI"
  }
  field {
    name: "RpcProtseqEndpoint"
    type: "*R_RPC_PROTSEQ_ENDPOINT;;"
  }
  field {
    name: "Reserved"
    type: "UI"
  }
  field {
    name: "InterpreterInfo"
    type: "*cV;"
  }
  field {
    name: "Flags"
    type: "UI"
  }
}
struct {
  name: "tagRPC_ERROR_ENUM_HANDLE"
  field {
    name: "Signature"
    type: "UI"
  }
  field {
    name: "CurrentPos"
    type: "*V;"
  }
  field {
    name: "Head"
    type: "*V;"
  }
}
struct {
  name: "tagBinaryParam"
  field {
    name: "Buffer"
    type: "*V;"
  }
  field {
    name: "Size"
    type: "S"
  }
}
struct {
  name: "tagRPC_EE_INFO_PARAM"
  field {
    name: "ParameterType"
    type: "X(Enum.enum tagExtendedErrorParamTypes)"
  }
  field {
    name: "u"
    type: "Runion tagRPC_EE_INFO_PARAM::(anonymous at /usr/local/include/wine/windows/rpcasync.h:59:5);"
  }
}
struct {
  name: "tagRPC_EXTENDED_ERROR_INFO"
  field {
    name: "Version"
    type: "UI"
  }
  field {
    name: "ComputerName"
    type: "*US;"
  }
  field {
    name: "ProcessID"
    type: "UI"
  }
  field {
    name: "u"
    type: "Runion tagRPC_EXTENDED_ERROR_INFO::(anonymous at /usr/local/include/wine/windows/rpcasync.h:82:5);"
  }
  field {
    name: "GeneratingComponent"
    type: "UI"
  }
  field {
    name: "Status"
    type: "UI"
  }
  field {
    name: "DetectionLocation"
    type: "US"
  }
  field {
    name: "Flags"
    type: "US"
  }
  field {
    name: "NumberOfParameters"
    type: "I"
  }
  field {
    name: "Parameters"
    type: "X(ConstantArray.RPC_EE_INFO_PARAM [4])"
  }
}
struct {
  name: "struct _RPC_ASYNC_NOTIFICATION_INFO::(anonymous at /usr/local/include/wine/windows/rpcasync.h:123:5)"
  field {
    name: "NotificationRoutine"
    type: "*(*R_RPC_ASYNC_STATE;;*V;X(Enum.enum _RPC_ASYNC_EVENT))V;"
  }
  field {
    name: "hThread"
    type: "*V;"
  }
}
struct {
  name: "struct _RPC_ASYNC_NOTIFICATION_INFO::(anonymous at /usr/local/include/wine/windows/rpcasync.h:128:5)"
  field {
    name: "hIOPort"
    type: "*V;"
  }
  field {
    name: "dwNumberOfBytesTransferred"
    type: "UI"
  }
  field {
    name: "dwCompletionKey"
    type: "UI"
  }
  field {
    name: "lpOverlapped"
    type: "*R_OVERLAPPED;;"
  }
}
struct {
  name: "struct _RPC_ASYNC_NOTIFICATION_INFO::(anonymous at /usr/local/include/wine/windows/rpcasync.h:135:5)"
  field {
    name: "hWnd"
    type: "*RHWND__;;"
  }
  field {
    name: "Msg"
    type: "UI"
  }
}
struct {
  name: "struct _RPC_ASYNC_NOTIFICATION_INFO::(anonymous at /usr/local/include/wine/windows/rpcasync.h:123:5)"
  field {
    name: "NotificationRoutine"
    type: "*(*R_RPC_ASYNC_STATE;;*V;X(Enum.enum _RPC_ASYNC_EVENT))V;"
  }
  field {
    name: "hThread"
    type: "*V;"
  }
}
struct {
  name: "struct _RPC_ASYNC_NOTIFICATION_INFO::(anonymous at /usr/local/include/wine/windows/rpcasync.h:128:5)"
  field {
    name: "hIOPort"
    type: "*V;"
  }
  field {
    name: "dwNumberOfBytesTransferred"
    type: "UI"
  }
  field {
    name: "dwCompletionKey"
    type: "UI"
  }
  field {
    name: "lpOverlapped"
    type: "*R_OVERLAPPED;;"
  }
}
struct {
  name: "struct _RPC_ASYNC_NOTIFICATION_INFO::(anonymous at /usr/local/include/wine/windows/rpcasync.h:135:5)"
  field {
    name: "hWnd"
    type: "*RHWND__;;"
  }
  field {
    name: "Msg"
    type: "UI"
  }
}
struct {
  name: "_RPC_ASYNC_STATE"
  field {
    name: "Size"
    type: "UI"
  }
  field {
    name: "Signature"
    type: "UI"
  }
  field {
    name: "Lock"
    type: "I"
  }
  field {
    name: "Flags"
    type: "UI"
  }
  field {
    name: "StubInfo"
    type: "*V;"
  }
  field {
    name: "UserInfo"
    type: "*V;"
  }
  field {
    name: "RuntimeInfo"
    type: "*V;"
  }
  field {
    name: "Event"
    type: "X(Enum.enum _RPC_ASYNC_EVENT)"
  }
  field {
    name: "NotificationType"
    type: "X(Enum.enum _RPC_NOTIFICATION_TYPES)"
  }
  field {
    name: "u"
    type: "Runion _RPC_ASYNC_NOTIFICATION_INFO;"
  }
  field {
    name: "Reserved"
    type: "X(ConstantArray.LONG_PTR [4])"
  }
}
struct {
  name: "_RPC_ASYNC_STATE"
  field {
    name: "Size"
    type: "UI"
  }
  field {
    name: "Signature"
    type: "UI"
  }
  field {
    name: "Lock"
    type: "I"
  }
  field {
    name: "Flags"
    type: "UI"
  }
  field {
    name: "StubInfo"
    type: "*V;"
  }
  field {
    name: "UserInfo"
    type: "*V;"
  }
  field {
    name: "RuntimeInfo"
    type: "*V;"
  }
  field {
    name: "Event"
    type: "X(Enum.enum _RPC_ASYNC_EVENT)"
  }
  field {
    name: "NotificationType"
    type: "X(Enum.enum _RPC_NOTIFICATION_TYPES)"
  }
  field {
    name: "u"
    type: "Runion _RPC_ASYNC_NOTIFICATION_INFO;"
  }
  field {
    name: "Reserved"
    type: "X(ConstantArray.LONG_PTR [4])"
  }
}
struct {
  name: "HDROP__"
  field {
    name: "unused"
    type: "I"
  }
}
struct {
  name: "_DRAGINFOA"
  field {
    name: "uSize"
    type: "UI"
  }
  field {
    name: "pt"
    type: "RtagPOINT;"
  }
  field {
    name: "fNC"
    type: "I"
  }
  field {
    name: "lpFileList"
    type: "*C;"
  }
  field {
    name: "grfKeyState"
    type: "UI"
  }
}
struct {
  name: "_DRAGINFOA"
  field {
    name: "uSize"
    type: "UI"
  }
  field {
    name: "pt"
    type: "RtagPOINT;"
  }
  field {
    name: "fNC"
    type: "I"
  }
  field {
    name: "lpFileList"
    type: "*C;"
  }
  field {
    name: "grfKeyState"
    type: "UI"
  }
}
struct {
  name: "_DRAGINFOW"
  field {
    name: "uSize"
    type: "UI"
  }
  field {
    name: "pt"
    type: "RtagPOINT;"
  }
  field {
    name: "fNC"
    type: "I"
  }
  field {
    name: "lpFileList"
    type: "*US;"
  }
  field {
    name: "grfKeyState"
    type: "UI"
  }
}
struct {
  name: "_DRAGINFOW"
  field {
    name: "uSize"
    type: "UI"
  }
  field {
    name: "pt"
    type: "RtagPOINT;"
  }
  field {
    name: "fNC"
    type: "I"
  }
  field {
    name: "lpFileList"
    type: "*US;"
  }
  field {
    name: "grfKeyState"
    type: "UI"
  }
}
struct {
  name: "_AppBarData"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "hWnd"
    type: "*RHWND__;;"
  }
  field {
    name: "uCallbackMessage"
    type: "UI"
  }
  field {
    name: "uEdge"
    type: "UI"
  }
  field {
    name: "rc"
    type: "RtagRECT;"
  }
  field {
    name: "lParam"
    type: "I"
  }
}
struct {
  name: "_AppBarData"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "hWnd"
    type: "*RHWND__;;"
  }
  field {
    name: "uCallbackMessage"
    type: "UI"
  }
  field {
    name: "uEdge"
    type: "UI"
  }
  field {
    name: "rc"
    type: "RtagRECT;"
  }
  field {
    name: "lParam"
    type: "I"
  }
}
struct {
  name: "tagSHFILEINFOA"
  field {
    name: "hIcon"
    type: "*RHICON__;;"
  }
  field {
    name: "iIcon"
    type: "I"
  }
  field {
    name: "dwAttributes"
    type: "UI"
  }
  field {
    name: "szDisplayName"
    type: "X(ConstantArray.CHAR [260])"
  }
  field {
    name: "szTypeName"
    type: "X(ConstantArray.CHAR [80])"
  }
}
struct {
  name: "tagSHFILEINFOW"
  field {
    name: "hIcon"
    type: "*RHICON__;;"
  }
  field {
    name: "iIcon"
    type: "I"
  }
  field {
    name: "dwAttributes"
    type: "UI"
  }
  field {
    name: "szDisplayName"
    type: "X(ConstantArray.WCHAR [260])"
  }
  field {
    name: "szTypeName"
    type: "X(ConstantArray.WCHAR [80])"
  }
}
struct {
  name: "_SHFILEOPSTRUCTA"
  field {
    name: "hwnd"
    type: "*RHWND__;;"
  }
  field {
    name: "wFunc"
    type: "UI"
  }
  field {
    name: "pFrom"
    type: "*cC;"
  }
  field {
    name: "pTo"
    type: "*cC;"
  }
  field {
    name: "fFlags"
    type: "US"
  }
  field {
    name: "fAnyOperationsAborted"
    type: "I"
  }
  field {
    name: "hNameMappings"
    type: "*V;"
  }
  field {
    name: "lpszProgressTitle"
    type: "*cC;"
  }
}
struct {
  name: "_SHFILEOPSTRUCTA"
  field {
    name: "hwnd"
    type: "*RHWND__;;"
  }
  field {
    name: "wFunc"
    type: "UI"
  }
  field {
    name: "pFrom"
    type: "*cC;"
  }
  field {
    name: "pTo"
    type: "*cC;"
  }
  field {
    name: "fFlags"
    type: "US"
  }
  field {
    name: "fAnyOperationsAborted"
    type: "I"
  }
  field {
    name: "hNameMappings"
    type: "*V;"
  }
  field {
    name: "lpszProgressTitle"
    type: "*cC;"
  }
}
struct {
  name: "_SHFILEOPSTRUCTW"
  field {
    name: "hwnd"
    type: "*RHWND__;;"
  }
  field {
    name: "wFunc"
    type: "UI"
  }
  field {
    name: "pFrom"
    type: "*cUS;"
  }
  field {
    name: "pTo"
    type: "*cUS;"
  }
  field {
    name: "fFlags"
    type: "US"
  }
  field {
    name: "fAnyOperationsAborted"
    type: "I"
  }
  field {
    name: "hNameMappings"
    type: "*V;"
  }
  field {
    name: "lpszProgressTitle"
    type: "*cUS;"
  }
}
struct {
  name: "_SHFILEOPSTRUCTW"
  field {
    name: "hwnd"
    type: "*RHWND__;;"
  }
  field {
    name: "wFunc"
    type: "UI"
  }
  field {
    name: "pFrom"
    type: "*cUS;"
  }
  field {
    name: "pTo"
    type: "*cUS;"
  }
  field {
    name: "fFlags"
    type: "US"
  }
  field {
    name: "fAnyOperationsAborted"
    type: "I"
  }
  field {
    name: "hNameMappings"
    type: "*V;"
  }
  field {
    name: "lpszProgressTitle"
    type: "*cUS;"
  }
}
struct {
  name: "_SHNAMEMAPPINGA"
  field {
    name: "pszOldPath"
    type: "*C;"
  }
  field {
    name: "pszNewPath"
    type: "*C;"
  }
  field {
    name: "cchOldPath"
    type: "I"
  }
  field {
    name: "cchNewPath"
    type: "I"
  }
}
struct {
  name: "_SHNAMEMAPPINGA"
  field {
    name: "pszOldPath"
    type: "*C;"
  }
  field {
    name: "pszNewPath"
    type: "*C;"
  }
  field {
    name: "cchOldPath"
    type: "I"
  }
  field {
    name: "cchNewPath"
    type: "I"
  }
}
struct {
  name: "_SHNAMEMAPPINGW"
  field {
    name: "pszOldPath"
    type: "*US;"
  }
  field {
    name: "pszNewPath"
    type: "*US;"
  }
  field {
    name: "cchOldPath"
    type: "I"
  }
  field {
    name: "cchNewPath"
    type: "I"
  }
}
struct {
  name: "_SHNAMEMAPPINGW"
  field {
    name: "pszOldPath"
    type: "*US;"
  }
  field {
    name: "pszNewPath"
    type: "*US;"
  }
  field {
    name: "cchOldPath"
    type: "I"
  }
  field {
    name: "cchNewPath"
    type: "I"
  }
}
struct {
  name: "_SHELLEXECUTEINFOA"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "fMask"
    type: "UI"
  }
  field {
    name: "hwnd"
    type: "*RHWND__;;"
  }
  field {
    name: "lpVerb"
    type: "*cC;"
  }
  field {
    name: "lpFile"
    type: "*cC;"
  }
  field {
    name: "lpParameters"
    type: "*cC;"
  }
  field {
    name: "lpDirectory"
    type: "*cC;"
  }
  field {
    name: "nShow"
    type: "I"
  }
  field {
    name: "hInstApp"
    type: "*RHINSTANCE__;;"
  }
  field {
    name: "lpIDList"
    type: "*V;"
  }
  field {
    name: "lpClass"
    type: "*cC;"
  }
  field {
    name: "hkeyClass"
    type: "*RHKEY__;;"
  }
  field {
    name: "dwHotKey"
    type: "UI"
  }
  field {
    name: "hProcess"
    type: "*V;"
  }
}
struct {
  name: "_SHELLEXECUTEINFOA"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "fMask"
    type: "UI"
  }
  field {
    name: "hwnd"
    type: "*RHWND__;;"
  }
  field {
    name: "lpVerb"
    type: "*cC;"
  }
  field {
    name: "lpFile"
    type: "*cC;"
  }
  field {
    name: "lpParameters"
    type: "*cC;"
  }
  field {
    name: "lpDirectory"
    type: "*cC;"
  }
  field {
    name: "nShow"
    type: "I"
  }
  field {
    name: "hInstApp"
    type: "*RHINSTANCE__;;"
  }
  field {
    name: "lpIDList"
    type: "*V;"
  }
  field {
    name: "lpClass"
    type: "*cC;"
  }
  field {
    name: "hkeyClass"
    type: "*RHKEY__;;"
  }
  field {
    name: "dwHotKey"
    type: "UI"
  }
  field {
    name: "hProcess"
    type: "*V;"
  }
}
struct {
  name: "_SHELLEXECUTEINFOW"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "fMask"
    type: "UI"
  }
  field {
    name: "hwnd"
    type: "*RHWND__;;"
  }
  field {
    name: "lpVerb"
    type: "*cUS;"
  }
  field {
    name: "lpFile"
    type: "*cUS;"
  }
  field {
    name: "lpParameters"
    type: "*cUS;"
  }
  field {
    name: "lpDirectory"
    type: "*cUS;"
  }
  field {
    name: "nShow"
    type: "I"
  }
  field {
    name: "hInstApp"
    type: "*RHINSTANCE__;;"
  }
  field {
    name: "lpIDList"
    type: "*V;"
  }
  field {
    name: "lpClass"
    type: "*cUS;"
  }
  field {
    name: "hkeyClass"
    type: "*RHKEY__;;"
  }
  field {
    name: "dwHotKey"
    type: "UI"
  }
  field {
    name: "hProcess"
    type: "*V;"
  }
}
struct {
  name: "_SHELLEXECUTEINFOW"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "fMask"
    type: "UI"
  }
  field {
    name: "hwnd"
    type: "*RHWND__;;"
  }
  field {
    name: "lpVerb"
    type: "*cUS;"
  }
  field {
    name: "lpFile"
    type: "*cUS;"
  }
  field {
    name: "lpParameters"
    type: "*cUS;"
  }
  field {
    name: "lpDirectory"
    type: "*cUS;"
  }
  field {
    name: "nShow"
    type: "I"
  }
  field {
    name: "hInstApp"
    type: "*RHINSTANCE__;;"
  }
  field {
    name: "lpIDList"
    type: "*V;"
  }
  field {
    name: "lpClass"
    type: "*cUS;"
  }
  field {
    name: "hkeyClass"
    type: "*RHKEY__;;"
  }
  field {
    name: "dwHotKey"
    type: "UI"
  }
  field {
    name: "hProcess"
    type: "*V;"
  }
}
struct {
  name: "_NOTIFYICONDATAA"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "hWnd"
    type: "*RHWND__;;"
  }
  field {
    name: "uID"
    type: "UI"
  }
  field {
    name: "uFlags"
    type: "UI"
  }
  field {
    name: "uCallbackMessage"
    type: "UI"
  }
  field {
    name: "hIcon"
    type: "*RHICON__;;"
  }
  field {
    name: "szTip"
    type: "X(ConstantArray.CHAR [128])"
  }
  field {
    name: "dwState"
    type: "UI"
  }
  field {
    name: "dwStateMask"
    type: "UI"
  }
  field {
    name: "szInfo"
    type: "X(ConstantArray.CHAR [256])"
  }
  field {
    name: "szInfoTitle"
    type: "X(ConstantArray.CHAR [64])"
  }
  field {
    name: "dwInfoFlags"
    type: "UI"
  }
  field {
    name: "guidItem"
    type: "R_GUID;"
  }
  field {
    name: "hBalloonIcon"
    type: "*RHICON__;;"
  }
}
struct {
  name: "_NOTIFYICONDATAA"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "hWnd"
    type: "*RHWND__;;"
  }
  field {
    name: "uID"
    type: "UI"
  }
  field {
    name: "uFlags"
    type: "UI"
  }
  field {
    name: "uCallbackMessage"
    type: "UI"
  }
  field {
    name: "hIcon"
    type: "*RHICON__;;"
  }
  field {
    name: "szTip"
    type: "X(ConstantArray.CHAR [128])"
  }
  field {
    name: "dwState"
    type: "UI"
  }
  field {
    name: "dwStateMask"
    type: "UI"
  }
  field {
    name: "szInfo"
    type: "X(ConstantArray.CHAR [256])"
  }
  field {
    name: "szInfoTitle"
    type: "X(ConstantArray.CHAR [64])"
  }
  field {
    name: "dwInfoFlags"
    type: "UI"
  }
  field {
    name: "guidItem"
    type: "R_GUID;"
  }
  field {
    name: "hBalloonIcon"
    type: "*RHICON__;;"
  }
}
struct {
  name: "_NOTIFYICONDATAW"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "hWnd"
    type: "*RHWND__;;"
  }
  field {
    name: "uID"
    type: "UI"
  }
  field {
    name: "uFlags"
    type: "UI"
  }
  field {
    name: "uCallbackMessage"
    type: "UI"
  }
  field {
    name: "hIcon"
    type: "*RHICON__;;"
  }
  field {
    name: "szTip"
    type: "X(ConstantArray.WCHAR [128])"
  }
  field {
    name: "dwState"
    type: "UI"
  }
  field {
    name: "dwStateMask"
    type: "UI"
  }
  field {
    name: "szInfo"
    type: "X(ConstantArray.WCHAR [256])"
  }
  field {
    name: "szInfoTitle"
    type: "X(ConstantArray.WCHAR [64])"
  }
  field {
    name: "dwInfoFlags"
    type: "UI"
  }
  field {
    name: "guidItem"
    type: "R_GUID;"
  }
  field {
    name: "hBalloonIcon"
    type: "*RHICON__;;"
  }
}
struct {
  name: "_NOTIFYICONDATAW"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "hWnd"
    type: "*RHWND__;;"
  }
  field {
    name: "uID"
    type: "UI"
  }
  field {
    name: "uFlags"
    type: "UI"
  }
  field {
    name: "uCallbackMessage"
    type: "UI"
  }
  field {
    name: "hIcon"
    type: "*RHICON__;;"
  }
  field {
    name: "szTip"
    type: "X(ConstantArray.WCHAR [128])"
  }
  field {
    name: "dwState"
    type: "UI"
  }
  field {
    name: "dwStateMask"
    type: "UI"
  }
  field {
    name: "szInfo"
    type: "X(ConstantArray.WCHAR [256])"
  }
  field {
    name: "szInfoTitle"
    type: "X(ConstantArray.WCHAR [64])"
  }
  field {
    name: "dwInfoFlags"
    type: "UI"
  }
  field {
    name: "guidItem"
    type: "R_GUID;"
  }
  field {
    name: "hBalloonIcon"
    type: "*RHICON__;;"
  }
}
struct {
  name: "_SHQUERYRBINFO"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "i64Size"
    type: "UI"
  }
  field {
    name: "i64NumItems"
    type: "UI"
  }
}
struct {
  name: "_SHQUERYRBINFO"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "i64Size"
    type: "UI"
  }
  field {
    name: "i64NumItems"
    type: "UI"
  }
}
struct {
  name: "_SHSTOCKICONINFO"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "hIcon"
    type: "*RHICON__;;"
  }
  field {
    name: "iSysImageIndex"
    type: "I"
  }
  field {
    name: "iIcon"
    type: "I"
  }
  field {
    name: "szPath"
    type: "X(ConstantArray.WCHAR [260])"
  }
}
struct {
  name: "unix_fd_set"
  field {
    name: "fds_bits"
    type: "X(ConstantArray.__int32_t [32])"
  }
}
struct {
  name: "timespec"
  field {
    name: "tv_sec"
    type: "I"
  }
  field {
    name: "tv_nsec"
    type: "I"
  }
}
struct {
  name: "tm"
  field {
    name: "tm_sec"
    type: "I"
  }
  field {
    name: "tm_min"
    type: "I"
  }
  field {
    name: "tm_hour"
    type: "I"
  }
  field {
    name: "tm_mday"
    type: "I"
  }
  field {
    name: "tm_mon"
    type: "I"
  }
  field {
    name: "tm_year"
    type: "I"
  }
  field {
    name: "tm_wday"
    type: "I"
  }
  field {
    name: "tm_yday"
    type: "I"
  }
  field {
    name: "tm_isdst"
    type: "I"
  }
  field {
    name: "tm_gmtoff"
    type: "I"
  }
  field {
    name: "tm_zone"
    type: "*C;"
  }
}
struct {
  name: "__darwin_i386_thread_state"
  field {
    name: "__eax"
    type: "UI"
  }
  field {
    name: "__ebx"
    type: "UI"
  }
  field {
    name: "__ecx"
    type: "UI"
  }
  field {
    name: "__edx"
    type: "UI"
  }
  field {
    name: "__edi"
    type: "UI"
  }
  field {
    name: "__esi"
    type: "UI"
  }
  field {
    name: "__ebp"
    type: "UI"
  }
  field {
    name: "__esp"
    type: "UI"
  }
  field {
    name: "__ss"
    type: "UI"
  }
  field {
    name: "__eflags"
    type: "UI"
  }
  field {
    name: "__eip"
    type: "UI"
  }
  field {
    name: "__cs"
    type: "UI"
  }
  field {
    name: "__ds"
    type: "UI"
  }
  field {
    name: "__es"
    type: "UI"
  }
  field {
    name: "__fs"
    type: "UI"
  }
  field {
    name: "__gs"
    type: "UI"
  }
}
struct {
  name: "__darwin_fp_control"
  field {
    name: "__invalid"
    type: "US"
  }
  field {
    name: "__denorm"
    type: "US"
  }
  field {
    name: "__zdiv"
    type: "US"
  }
  field {
    name: "__ovrfl"
    type: "US"
  }
  field {
    name: "__undfl"
    type: "US"
  }
  field {
    name: "__precis"
    type: "US"
  }
  field {
    name: "__pc"
    type: "US"
  }
  field {
    name: "__rc"
    type: "US"
  }
}
struct {
  name: "__darwin_fp_status"
  field {
    name: "__invalid"
    type: "US"
  }
  field {
    name: "__denorm"
    type: "US"
  }
  field {
    name: "__zdiv"
    type: "US"
  }
  field {
    name: "__ovrfl"
    type: "US"
  }
  field {
    name: "__undfl"
    type: "US"
  }
  field {
    name: "__precis"
    type: "US"
  }
  field {
    name: "__stkflt"
    type: "US"
  }
  field {
    name: "__errsumm"
    type: "US"
  }
  field {
    name: "__c0"
    type: "US"
  }
  field {
    name: "__c1"
    type: "US"
  }
  field {
    name: "__c2"
    type: "US"
  }
  field {
    name: "__tos"
    type: "US"
  }
  field {
    name: "__c3"
    type: "US"
  }
  field {
    name: "__busy"
    type: "US"
  }
}
struct {
  name: "__darwin_mmst_reg"
  field {
    name: "__mmst_reg"
    type: "X(ConstantArray.char [10])"
  }
  field {
    name: "__mmst_rsrv"
    type: "X(ConstantArray.char [6])"
  }
}
struct {
  name: "__darwin_xmm_reg"
  field {
    name: "__xmm_reg"
    type: "X(ConstantArray.char [16])"
  }
}
struct {
  name: "__darwin_i386_float_state"
  field {
    name: "__fpu_reserved"
    type: "X(ConstantArray.int [2])"
  }
  field {
    name: "__fpu_fcw"
    type: "R__darwin_fp_control;"
  }
  field {
    name: "__fpu_fsw"
    type: "R__darwin_fp_status;"
  }
  field {
    name: "__fpu_ftw"
    type: "UB"
  }
  field {
    name: "__fpu_rsrv1"
    type: "UB"
  }
  field {
    name: "__fpu_fop"
    type: "US"
  }
  field {
    name: "__fpu_ip"
    type: "UI"
  }
  field {
    name: "__fpu_cs"
    type: "US"
  }
  field {
    name: "__fpu_rsrv2"
    type: "US"
  }
  field {
    name: "__fpu_dp"
    type: "UI"
  }
  field {
    name: "__fpu_ds"
    type: "US"
  }
  field {
    name: "__fpu_rsrv3"
    type: "US"
  }
  field {
    name: "__fpu_mxcsr"
    type: "UI"
  }
  field {
    name: "__fpu_mxcsrmask"
    type: "UI"
  }
  field {
    name: "__fpu_stmm0"
    type: "R__darwin_mmst_reg;"
  }
  field {
    name: "__fpu_stmm1"
    type: "R__darwin_mmst_reg;"
  }
  field {
    name: "__fpu_stmm2"
    type: "R__darwin_mmst_reg;"
  }
  field {
    name: "__fpu_stmm3"
    type: "R__darwin_mmst_reg;"
  }
  field {
    name: "__fpu_stmm4"
    type: "R__darwin_mmst_reg;"
  }
  field {
    name: "__fpu_stmm5"
    type: "R__darwin_mmst_reg;"
  }
  field {
    name: "__fpu_stmm6"
    type: "R__darwin_mmst_reg;"
  }
  field {
    name: "__fpu_stmm7"
    type: "R__darwin_mmst_reg;"
  }
  field {
    name: "__fpu_xmm0"
    type: "R__darwin_xmm_reg;"
  }
  field {
    name: "__fpu_xmm1"
    type: "R__darwin_xmm_reg;"
  }
  field {
    name: "__fpu_xmm2"
    type: "R__darwin_xmm_reg;"
  }
  field {
    name: "__fpu_xmm3"
    type: "R__darwin_xmm_reg;"
  }
  field {
    name: "__fpu_xmm4"
    type: "R__darwin_xmm_reg;"
  }
  field {
    name: "__fpu_xmm5"
    type: "R__darwin_xmm_reg;"
  }
  field {
    name: "__fpu_xmm6"
    type: "R__darwin_xmm_reg;"
  }
  field {
    name: "__fpu_xmm7"
    type: "R__darwin_xmm_reg;"
  }
  field {
    name: "__fpu_rsrv4"
    type: "X(ConstantArray.char [224])"
  }
  field {
    name: "__fpu_reserved1"
    type: "I"
  }
}
struct {
  name: "__darwin_i386_avx_state"
  field {
    name: "__fpu_reserved"
    type: "X(ConstantArray.int [2])"
  }
  field {
    name: "__fpu_fcw"
    type: "R__darwin_fp_control;"
  }
  field {
    name: "__fpu_fsw"
    type: "R__darwin_fp_status;"
  }
  field {
    name: "__fpu_ftw"
    type: "UB"
  }
  field {
    name: "__fpu_rsrv1"
    type: "UB"
  }
  field {
    name: "__fpu_fop"
    type: "US"
  }
  field {
    name: "__fpu_ip"
    type: "UI"
  }
  field {
    name: "__fpu_cs"
    type: "US"
  }
  field {
    name: "__fpu_rsrv2"
    type: "US"
  }
  field {
    name: "__fpu_dp"
    type: "UI"
  }
  field {
    name: "__fpu_ds"
    type: "US"
  }
  field {
    name: "__fpu_rsrv3"
    type: "US"
  }
  field {
    name: "__fpu_mxcsr"
    type: "UI"
  }
  field {
    name: "__fpu_mxcsrmask"
    type: "UI"
  }
  field {
    name: "__fpu_stmm0"
    type: "R__darwin_mmst_reg;"
  }
  field {
    name: "__fpu_stmm1"
    type: "R__darwin_mmst_reg;"
  }
  field {
    name: "__fpu_stmm2"
    type: "R__darwin_mmst_reg;"
  }
  field {
    name: "__fpu_stmm3"
    type: "R__darwin_mmst_reg;"
  }
  field {
    name: "__fpu_stmm4"
    type: "R__darwin_mmst_reg;"
  }
  field {
    name: "__fpu_stmm5"
    type: "R__darwin_mmst_reg;"
  }
  field {
    name: "__fpu_stmm6"
    type: "R__darwin_mmst_reg;"
  }
  field {
    name: "__fpu_stmm7"
    type: "R__darwin_mmst_reg;"
  }
  field {
    name: "__fpu_xmm0"
    type: "R__darwin_xmm_reg;"
  }
  field {
    name: "__fpu_xmm1"
    type: "R__darwin_xmm_reg;"
  }
  field {
    name: "__fpu_xmm2"
    type: "R__darwin_xmm_reg;"
  }
  field {
    name: "__fpu_xmm3"
    type: "R__darwin_xmm_reg;"
  }
  field {
    name: "__fpu_xmm4"
    type: "R__darwin_xmm_reg;"
  }
  field {
    name: "__fpu_xmm5"
    type: "R__darwin_xmm_reg;"
  }
  field {
    name: "__fpu_xmm6"
    type: "R__darwin_xmm_reg;"
  }
  field {
    name: "__fpu_xmm7"
    type: "R__darwin_xmm_reg;"
  }
  field {
    name: "__fpu_rsrv4"
    type: "X(ConstantArray.char [224])"
  }
  field {
    name: "__fpu_reserved1"
    type: "I"
  }
  field {
    name: "__avx_reserved1"
    type: "X(ConstantArray.char [64])"
  }
  field {
    name: "__fpu_ymmh0"
    type: "R__darwin_xmm_reg;"
  }
  field {
    name: "__fpu_ymmh1"
    type: "R__darwin_xmm_reg;"
  }
  field {
    name: "__fpu_ymmh2"
    type: "R__darwin_xmm_reg;"
  }
  field {
    name: "__fpu_ymmh3"
    type: "R__darwin_xmm_reg;"
  }
  field {
    name: "__fpu_ymmh4"
    type: "R__darwin_xmm_reg;"
  }
  field {
    name: "__fpu_ymmh5"
    type: "R__darwin_xmm_reg;"
  }
  field {
    name: "__fpu_ymmh6"
    type: "R__darwin_xmm_reg;"
  }
  field {
    name: "__fpu_ymmh7"
    type: "R__darwin_xmm_reg;"
  }
}
struct {
  name: "__darwin_i386_exception_state"
  field {
    name: "__trapno"
    type: "US"
  }
  field {
    name: "__cpu"
    type: "US"
  }
  field {
    name: "__err"
    type: "UI"
  }
  field {
    name: "__faultvaddr"
    type: "UI"
  }
}
struct {
  name: "__darwin_x86_debug_state32"
  field {
    name: "__dr0"
    type: "UI"
  }
  field {
    name: "__dr1"
    type: "UI"
  }
  field {
    name: "__dr2"
    type: "UI"
  }
  field {
    name: "__dr3"
    type: "UI"
  }
  field {
    name: "__dr4"
    type: "UI"
  }
  field {
    name: "__dr5"
    type: "UI"
  }
  field {
    name: "__dr6"
    type: "UI"
  }
  field {
    name: "__dr7"
    type: "UI"
  }
}
struct {
  name: "__darwin_x86_thread_state64"
  field {
    name: "__rax"
    type: "UJ"
  }
  field {
    name: "__rbx"
    type: "UJ"
  }
  field {
    name: "__rcx"
    type: "UJ"
  }
  field {
    name: "__rdx"
    type: "UJ"
  }
  field {
    name: "__rdi"
    type: "UJ"
  }
  field {
    name: "__rsi"
    type: "UJ"
  }
  field {
    name: "__rbp"
    type: "UJ"
  }
  field {
    name: "__rsp"
    type: "UJ"
  }
  field {
    name: "__r8"
    type: "UJ"
  }
  field {
    name: "__r9"
    type: "UJ"
  }
  field {
    name: "__r10"
    type: "UJ"
  }
  field {
    name: "__r11"
    type: "UJ"
  }
  field {
    name: "__r12"
    type: "UJ"
  }
  field {
    name: "__r13"
    type: "UJ"
  }
  field {
    name: "__r14"
    type: "UJ"
  }
  field {
    name: "__r15"
    type: "UJ"
  }
  field {
    name: "__rip"
    type: "UJ"
  }
  field {
    name: "__rflags"
    type: "UJ"
  }
  field {
    name: "__cs"
    type: "UJ"
  }
  field {
    name: "__fs"
    type: "UJ"
  }
  field {
    name: "__gs"
    type: "UJ"
  }
}
struct {
  name: "__darwin_x86_float_state64"
  field {
    name: "__fpu_reserved"
    type: "X(ConstantArray.int [2])"
  }
  field {
    name: "__fpu_fcw"
    type: "R__darwin_fp_control;"
  }
  field {
    name: "__fpu_fsw"
    type: "R__darwin_fp_status;"
  }
  field {
    name: "__fpu_ftw"
    type: "UB"
  }
  field {
    name: "__fpu_rsrv1"
    type: "UB"
  }
  field {
    name: "__fpu_fop"
    type: "US"
  }
  field {
    name: "__fpu_ip"
    type: "UI"
  }
  field {
    name: "__fpu_cs"
    type: "US"
  }
  field {
    name: "__fpu_rsrv2"
    type: "US"
  }
  field {
    name: "__fpu_dp"
    type: "UI"
  }
  field {
    name: "__fpu_ds"
    type: "US"
  }
  field {
    name: "__fpu_rsrv3"
    type: "US"
  }
  field {
    name: "__fpu_mxcsr"
    type: "UI"
  }
  field {
    name: "__fpu_mxcsrmask"
    type: "UI"
  }
  field {
    name: "__fpu_stmm0"
    type: "R__darwin_mmst_reg;"
  }
  field {
    name: "__fpu_stmm1"
    type: "R__darwin_mmst_reg;"
  }
  field {
    name: "__fpu_stmm2"
    type: "R__darwin_mmst_reg;"
  }
  field {
    name: "__fpu_stmm3"
    type: "R__darwin_mmst_reg;"
  }
  field {
    name: "__fpu_stmm4"
    type: "R__darwin_mmst_reg;"
  }
  field {
    name: "__fpu_stmm5"
    type: "R__darwin_mmst_reg;"
  }
  field {
    name: "__fpu_stmm6"
    type: "R__darwin_mmst_reg;"
  }
  field {
    name: "__fpu_stmm7"
    type: "R__darwin_mmst_reg;"
  }
  field {
    name: "__fpu_xmm0"
    type: "R__darwin_xmm_reg;"
  }
  field {
    name: "__fpu_xmm1"
    type: "R__darwin_xmm_reg;"
  }
  field {
    name: "__fpu_xmm2"
    type: "R__darwin_xmm_reg;"
  }
  field {
    name: "__fpu_xmm3"
    type: "R__darwin_xmm_reg;"
  }
  field {
    name: "__fpu_xmm4"
    type: "R__darwin_xmm_reg;"
  }
  field {
    name: "__fpu_xmm5"
    type: "R__darwin_xmm_reg;"
  }
  field {
    name: "__fpu_xmm6"
    type: "R__darwin_xmm_reg;"
  }
  field {
    name: "__fpu_xmm7"
    type: "R__darwin_xmm_reg;"
  }
  field {
    name: "__fpu_xmm8"
    type: "R__darwin_xmm_reg;"
  }
  field {
    name: "__fpu_xmm9"
    type: "R__darwin_xmm_reg;"
  }
  field {
    name: "__fpu_xmm10"
    type: "R__darwin_xmm_reg;"
  }
  field {
    name: "__fpu_xmm11"
    type: "R__darwin_xmm_reg;"
  }
  field {
    name: "__fpu_xmm12"
    type: "R__darwin_xmm_reg;"
  }
  field {
    name: "__fpu_xmm13"
    type: "R__darwin_xmm_reg;"
  }
  field {
    name: "__fpu_xmm14"
    type: "R__darwin_xmm_reg;"
  }
  field {
    name: "__fpu_xmm15"
    type: "R__darwin_xmm_reg;"
  }
  field {
    name: "__fpu_rsrv4"
    type: "X(ConstantArray.char [96])"
  }
  field {
    name: "__fpu_reserved1"
    type: "I"
  }
}
struct {
  name: "__darwin_x86_avx_state64"
  field {
    name: "__fpu_reserved"
    type: "X(ConstantArray.int [2])"
  }
  field {
    name: "__fpu_fcw"
    type: "R__darwin_fp_control;"
  }
  field {
    name: "__fpu_fsw"
    type: "R__darwin_fp_status;"
  }
  field {
    name: "__fpu_ftw"
    type: "UB"
  }
  field {
    name: "__fpu_rsrv1"
    type: "UB"
  }
  field {
    name: "__fpu_fop"
    type: "US"
  }
  field {
    name: "__fpu_ip"
    type: "UI"
  }
  field {
    name: "__fpu_cs"
    type: "US"
  }
  field {
    name: "__fpu_rsrv2"
    type: "US"
  }
  field {
    name: "__fpu_dp"
    type: "UI"
  }
  field {
    name: "__fpu_ds"
    type: "US"
  }
  field {
    name: "__fpu_rsrv3"
    type: "US"
  }
  field {
    name: "__fpu_mxcsr"
    type: "UI"
  }
  field {
    name: "__fpu_mxcsrmask"
    type: "UI"
  }
  field {
    name: "__fpu_stmm0"
    type: "R__darwin_mmst_reg;"
  }
  field {
    name: "__fpu_stmm1"
    type: "R__darwin_mmst_reg;"
  }
  field {
    name: "__fpu_stmm2"
    type: "R__darwin_mmst_reg;"
  }
  field {
    name: "__fpu_stmm3"
    type: "R__darwin_mmst_reg;"
  }
  field {
    name: "__fpu_stmm4"
    type: "R__darwin_mmst_reg;"
  }
  field {
    name: "__fpu_stmm5"
    type: "R__darwin_mmst_reg;"
  }
  field {
    name: "__fpu_stmm6"
    type: "R__darwin_mmst_reg;"
  }
  field {
    name: "__fpu_stmm7"
    type: "R__darwin_mmst_reg;"
  }
  field {
    name: "__fpu_xmm0"
    type: "R__darwin_xmm_reg;"
  }
  field {
    name: "__fpu_xmm1"
    type: "R__darwin_xmm_reg;"
  }
  field {
    name: "__fpu_xmm2"
    type: "R__darwin_xmm_reg;"
  }
  field {
    name: "__fpu_xmm3"
    type: "R__darwin_xmm_reg;"
  }
  field {
    name: "__fpu_xmm4"
    type: "R__darwin_xmm_reg;"
  }
  field {
    name: "__fpu_xmm5"
    type: "R__darwin_xmm_reg;"
  }
  field {
    name: "__fpu_xmm6"
    type: "R__darwin_xmm_reg;"
  }
  field {
    name: "__fpu_xmm7"
    type: "R__darwin_xmm_reg;"
  }
  field {
    name: "__fpu_xmm8"
    type: "R__darwin_xmm_reg;"
  }
  field {
    name: "__fpu_xmm9"
    type: "R__darwin_xmm_reg;"
  }
  field {
    name: "__fpu_xmm10"
    type: "R__darwin_xmm_reg;"
  }
  field {
    name: "__fpu_xmm11"
    type: "R__darwin_xmm_reg;"
  }
  field {
    name: "__fpu_xmm12"
    type: "R__darwin_xmm_reg;"
  }
  field {
    name: "__fpu_xmm13"
    type: "R__darwin_xmm_reg;"
  }
  field {
    name: "__fpu_xmm14"
    type: "R__darwin_xmm_reg;"
  }
  field {
    name: "__fpu_xmm15"
    type: "R__darwin_xmm_reg;"
  }
  field {
    name: "__fpu_rsrv4"
    type: "X(ConstantArray.char [96])"
  }
  field {
    name: "__fpu_reserved1"
    type: "I"
  }
  field {
    name: "__avx_reserved1"
    type: "X(ConstantArray.char [64])"
  }
  field {
    name: "__fpu_ymmh0"
    type: "R__darwin_xmm_reg;"
  }
  field {
    name: "__fpu_ymmh1"
    type: "R__darwin_xmm_reg;"
  }
  field {
    name: "__fpu_ymmh2"
    type: "R__darwin_xmm_reg;"
  }
  field {
    name: "__fpu_ymmh3"
    type: "R__darwin_xmm_reg;"
  }
  field {
    name: "__fpu_ymmh4"
    type: "R__darwin_xmm_reg;"
  }
  field {
    name: "__fpu_ymmh5"
    type: "R__darwin_xmm_reg;"
  }
  field {
    name: "__fpu_ymmh6"
    type: "R__darwin_xmm_reg;"
  }
  field {
    name: "__fpu_ymmh7"
    type: "R__darwin_xmm_reg;"
  }
  field {
    name: "__fpu_ymmh8"
    type: "R__darwin_xmm_reg;"
  }
  field {
    name: "__fpu_ymmh9"
    type: "R__darwin_xmm_reg;"
  }
  field {
    name: "__fpu_ymmh10"
    type: "R__darwin_xmm_reg;"
  }
  field {
    name: "__fpu_ymmh11"
    type: "R__darwin_xmm_reg;"
  }
  field {
    name: "__fpu_ymmh12"
    type: "R__darwin_xmm_reg;"
  }
  field {
    name: "__fpu_ymmh13"
    type: "R__darwin_xmm_reg;"
  }
  field {
    name: "__fpu_ymmh14"
    type: "R__darwin_xmm_reg;"
  }
  field {
    name: "__fpu_ymmh15"
    type: "R__darwin_xmm_reg;"
  }
}
struct {
  name: "__darwin_x86_exception_state64"
  field {
    name: "__trapno"
    type: "US"
  }
  field {
    name: "__cpu"
    type: "US"
  }
  field {
    name: "__err"
    type: "UI"
  }
  field {
    name: "__faultvaddr"
    type: "UJ"
  }
}
struct {
  name: "__darwin_x86_debug_state64"
  field {
    name: "__dr0"
    type: "UJ"
  }
  field {
    name: "__dr1"
    type: "UJ"
  }
  field {
    name: "__dr2"
    type: "UJ"
  }
  field {
    name: "__dr3"
    type: "UJ"
  }
  field {
    name: "__dr4"
    type: "UJ"
  }
  field {
    name: "__dr5"
    type: "UJ"
  }
  field {
    name: "__dr6"
    type: "UJ"
  }
  field {
    name: "__dr7"
    type: "UJ"
  }
}
struct {
  name: "__darwin_mcontext32"
  field {
    name: "__es"
    type: "R__darwin_i386_exception_state;"
  }
  field {
    name: "__ss"
    type: "R__darwin_i386_thread_state;"
  }
  field {
    name: "__fs"
    type: "R__darwin_i386_float_state;"
  }
}
struct {
  name: "__darwin_mcontext_avx32"
  field {
    name: "__es"
    type: "R__darwin_i386_exception_state;"
  }
  field {
    name: "__ss"
    type: "R__darwin_i386_thread_state;"
  }
  field {
    name: "__fs"
    type: "R__darwin_i386_avx_state;"
  }
}
struct {
  name: "__darwin_mcontext64"
  field {
    name: "__es"
    type: "R__darwin_x86_exception_state64;"
  }
  field {
    name: "__ss"
    type: "R__darwin_x86_thread_state64;"
  }
  field {
    name: "__fs"
    type: "R__darwin_x86_float_state64;"
  }
}
struct {
  name: "__darwin_mcontext_avx64"
  field {
    name: "__es"
    type: "R__darwin_x86_exception_state64;"
  }
  field {
    name: "__ss"
    type: "R__darwin_x86_thread_state64;"
  }
  field {
    name: "__fs"
    type: "R__darwin_x86_avx_state64;"
  }
}
struct {
  name: "__darwin_sigaltstack"
  field {
    name: "ss_sp"
    type: "*V;"
  }
  field {
    name: "ss_size"
    type: "UI"
  }
  field {
    name: "ss_flags"
    type: "I"
  }
}
struct {
  name: "__darwin_ucontext"
  field {
    name: "uc_onstack"
    type: "I"
  }
  field {
    name: "uc_sigmask"
    type: "UI"
  }
  field {
    name: "uc_stack"
    type: "R__darwin_sigaltstack;"
  }
  field {
    name: "uc_link"
    type: "*R__darwin_ucontext;;"
  }
  field {
    name: "uc_mcsize"
    type: "UI"
  }
  field {
    name: "uc_mcontext"
    type: "*R__darwin_mcontext64;;"
  }
}
struct {
  name: "sigevent"
  field {
    name: "sigev_notify"
    type: "I"
  }
  field {
    name: "sigev_signo"
    type: "I"
  }
  field {
    name: "sigev_value"
    type: "Runion sigval;"
  }
  field {
    name: "sigev_notify_function"
    type: "*(Runion sigval;)V;"
  }
  field {
    name: "sigev_notify_attributes"
    type: "*R_opaque_pthread_attr_t;;"
  }
}
struct {
  name: "__siginfo"
  field {
    name: "si_signo"
    type: "I"
  }
  field {
    name: "si_errno"
    type: "I"
  }
  field {
    name: "si_code"
    type: "I"
  }
  field {
    name: "si_pid"
    type: "I"
  }
  field {
    name: "si_uid"
    type: "UI"
  }
  field {
    name: "si_status"
    type: "I"
  }
  field {
    name: "si_addr"
    type: "*V;"
  }
  field {
    name: "si_value"
    type: "Runion sigval;"
  }
  field {
    name: "si_band"
    type: "I"
  }
  field {
    name: "__pad"
    type: "X(ConstantArray.unsigned long [7])"
  }
}
struct {
  name: "__sigaction"
  field {
    name: "__sigaction_u"
    type: "Runion __sigaction_u;"
  }
  field {
    name: "sa_tramp"
    type: "*(*V;II*R__siginfo;;*V;)V;"
  }
  field {
    name: "sa_mask"
    type: "UI"
  }
  field {
    name: "sa_flags"
    type: "I"
  }
}
struct {
  name: "sigaction"
  field {
    name: "__sigaction_u"
    type: "Runion __sigaction_u;"
  }
  field {
    name: "sa_mask"
    type: "UI"
  }
  field {
    name: "sa_flags"
    type: "I"
  }
}
struct {
  name: "sigvec"
  field {
    name: "sv_handler"
    type: "*(I)V;"
  }
  field {
    name: "sv_mask"
    type: "I"
  }
  field {
    name: "sv_flags"
    type: "I"
  }
}
struct {
  name: "sigstack"
  field {
    name: "ss_sp"
    type: "*C;"
  }
  field {
    name: "ss_onstack"
    type: "I"
  }
}
struct {
  name: "unix_timeval"
  field {
    name: "tv_sec"
    type: "I"
  }
  field {
    name: "tv_usec"
    type: "I"
  }
}
struct {
  name: "rusage"
  field {
    name: "ru_utime"
    type: "Runix_timeval;"
  }
  field {
    name: "ru_stime"
    type: "Runix_timeval;"
  }
  field {
    name: "ru_maxrss"
    type: "I"
  }
  field {
    name: "ru_ixrss"
    type: "I"
  }
  field {
    name: "ru_idrss"
    type: "I"
  }
  field {
    name: "ru_isrss"
    type: "I"
  }
  field {
    name: "ru_minflt"
    type: "I"
  }
  field {
    name: "ru_majflt"
    type: "I"
  }
  field {
    name: "ru_nswap"
    type: "I"
  }
  field {
    name: "ru_inblock"
    type: "I"
  }
  field {
    name: "ru_oublock"
    type: "I"
  }
  field {
    name: "ru_msgsnd"
    type: "I"
  }
  field {
    name: "ru_msgrcv"
    type: "I"
  }
  field {
    name: "ru_nsignals"
    type: "I"
  }
  field {
    name: "ru_nvcsw"
    type: "I"
  }
  field {
    name: "ru_nivcsw"
    type: "I"
  }
}
struct {
  name: "rusage_info_v0"
  field {
    name: "ri_uuid"
    type: "X(ConstantArray.uint8_t [16])"
  }
  field {
    name: "ri_user_time"
    type: "UJ"
  }
  field {
    name: "ri_system_time"
    type: "UJ"
  }
  field {
    name: "ri_pkg_idle_wkups"
    type: "UJ"
  }
  field {
    name: "ri_interrupt_wkups"
    type: "UJ"
  }
  field {
    name: "ri_pageins"
    type: "UJ"
  }
  field {
    name: "ri_wired_size"
    type: "UJ"
  }
  field {
    name: "ri_resident_size"
    type: "UJ"
  }
  field {
    name: "ri_phys_footprint"
    type: "UJ"
  }
  field {
    name: "ri_proc_start_abstime"
    type: "UJ"
  }
  field {
    name: "ri_proc_exit_abstime"
    type: "UJ"
  }
}
struct {
  name: "rusage_info_v1"
  field {
    name: "ri_uuid"
    type: "X(ConstantArray.uint8_t [16])"
  }
  field {
    name: "ri_user_time"
    type: "UJ"
  }
  field {
    name: "ri_system_time"
    type: "UJ"
  }
  field {
    name: "ri_pkg_idle_wkups"
    type: "UJ"
  }
  field {
    name: "ri_interrupt_wkups"
    type: "UJ"
  }
  field {
    name: "ri_pageins"
    type: "UJ"
  }
  field {
    name: "ri_wired_size"
    type: "UJ"
  }
  field {
    name: "ri_resident_size"
    type: "UJ"
  }
  field {
    name: "ri_phys_footprint"
    type: "UJ"
  }
  field {
    name: "ri_proc_start_abstime"
    type: "UJ"
  }
  field {
    name: "ri_proc_exit_abstime"
    type: "UJ"
  }
  field {
    name: "ri_child_user_time"
    type: "UJ"
  }
  field {
    name: "ri_child_system_time"
    type: "UJ"
  }
  field {
    name: "ri_child_pkg_idle_wkups"
    type: "UJ"
  }
  field {
    name: "ri_child_interrupt_wkups"
    type: "UJ"
  }
  field {
    name: "ri_child_pageins"
    type: "UJ"
  }
  field {
    name: "ri_child_elapsed_abstime"
    type: "UJ"
  }
}
struct {
  name: "rusage_info_v2"
  field {
    name: "ri_uuid"
    type: "X(ConstantArray.uint8_t [16])"
  }
  field {
    name: "ri_user_time"
    type: "UJ"
  }
  field {
    name: "ri_system_time"
    type: "UJ"
  }
  field {
    name: "ri_pkg_idle_wkups"
    type: "UJ"
  }
  field {
    name: "ri_interrupt_wkups"
    type: "UJ"
  }
  field {
    name: "ri_pageins"
    type: "UJ"
  }
  field {
    name: "ri_wired_size"
    type: "UJ"
  }
  field {
    name: "ri_resident_size"
    type: "UJ"
  }
  field {
    name: "ri_phys_footprint"
    type: "UJ"
  }
  field {
    name: "ri_proc_start_abstime"
    type: "UJ"
  }
  field {
    name: "ri_proc_exit_abstime"
    type: "UJ"
  }
  field {
    name: "ri_child_user_time"
    type: "UJ"
  }
  field {
    name: "ri_child_system_time"
    type: "UJ"
  }
  field {
    name: "ri_child_pkg_idle_wkups"
    type: "UJ"
  }
  field {
    name: "ri_child_interrupt_wkups"
    type: "UJ"
  }
  field {
    name: "ri_child_pageins"
    type: "UJ"
  }
  field {
    name: "ri_child_elapsed_abstime"
    type: "UJ"
  }
  field {
    name: "ri_diskio_bytesread"
    type: "UJ"
  }
  field {
    name: "ri_diskio_byteswritten"
    type: "UJ"
  }
}
struct {
  name: "rusage_info_v3"
  field {
    name: "ri_uuid"
    type: "X(ConstantArray.uint8_t [16])"
  }
  field {
    name: "ri_user_time"
    type: "UJ"
  }
  field {
    name: "ri_system_time"
    type: "UJ"
  }
  field {
    name: "ri_pkg_idle_wkups"
    type: "UJ"
  }
  field {
    name: "ri_interrupt_wkups"
    type: "UJ"
  }
  field {
    name: "ri_pageins"
    type: "UJ"
  }
  field {
    name: "ri_wired_size"
    type: "UJ"
  }
  field {
    name: "ri_resident_size"
    type: "UJ"
  }
  field {
    name: "ri_phys_footprint"
    type: "UJ"
  }
  field {
    name: "ri_proc_start_abstime"
    type: "UJ"
  }
  field {
    name: "ri_proc_exit_abstime"
    type: "UJ"
  }
  field {
    name: "ri_child_user_time"
    type: "UJ"
  }
  field {
    name: "ri_child_system_time"
    type: "UJ"
  }
  field {
    name: "ri_child_pkg_idle_wkups"
    type: "UJ"
  }
  field {
    name: "ri_child_interrupt_wkups"
    type: "UJ"
  }
  field {
    name: "ri_child_pageins"
    type: "UJ"
  }
  field {
    name: "ri_child_elapsed_abstime"
    type: "UJ"
  }
  field {
    name: "ri_diskio_bytesread"
    type: "UJ"
  }
  field {
    name: "ri_diskio_byteswritten"
    type: "UJ"
  }
  field {
    name: "ri_cpu_time_qos_default"
    type: "UJ"
  }
  field {
    name: "ri_cpu_time_qos_maintenance"
    type: "UJ"
  }
  field {
    name: "ri_cpu_time_qos_background"
    type: "UJ"
  }
  field {
    name: "ri_cpu_time_qos_utility"
    type: "UJ"
  }
  field {
    name: "ri_cpu_time_qos_legacy"
    type: "UJ"
  }
  field {
    name: "ri_cpu_time_qos_user_initiated"
    type: "UJ"
  }
  field {
    name: "ri_cpu_time_qos_user_interactive"
    type: "UJ"
  }
  field {
    name: "ri_billed_system_time"
    type: "UJ"
  }
  field {
    name: "ri_serviced_system_time"
    type: "UJ"
  }
}
struct {
  name: "rlimit"
  field {
    name: "rlim_cur"
    type: "UJ"
  }
  field {
    name: "rlim_max"
    type: "UJ"
  }
}
struct {
  name: "proc_rlimit_control_wakeupmon"
  field {
    name: "wm_flags"
    type: "UI"
  }
  field {
    name: "wm_rate"
    type: "I"
  }
}
struct {
  name: "struct wait::(anonymous at /usr/include/sys/wait.h:199:2)"
  field {
    name: "w_Termsig"
    type: "UI"
  }
  field {
    name: "w_Coredump"
    type: "UI"
  }
  field {
    name: "w_Retcode"
    type: "UI"
  }
  field {
    name: "w_Filler"
    type: "UI"
  }
}
struct {
  name: "struct wait::(anonymous at /usr/include/sys/wait.h:218:2)"
  field {
    name: "w_Stopval"
    type: "UI"
  }
  field {
    name: "w_Stopsig"
    type: "UI"
  }
  field {
    name: "w_Filler"
    type: "UI"
  }
}
struct {
  name: "div_t"
  field {
    name: "quot"
    type: "I"
  }
  field {
    name: "rem"
    type: "I"
  }
}
struct {
  name: "ldiv_t"
  field {
    name: "quot"
    type: "I"
  }
  field {
    name: "rem"
    type: "I"
  }
}
struct {
  name: "lldiv_t"
  field {
    name: "quot"
    type: "J"
  }
  field {
    name: "rem"
    type: "J"
  }
}
struct {
  name: "in_addr"
  field {
    name: "S_un"
    type: "Runion in_addr::(anonymous at /usr/local/include/wine/windows/inaddr.h:31:5);"
  }
}
struct {
  name: "struct in_addr::(anonymous at /usr/local/include/wine/windows/inaddr.h:32:9)"
  field {
    name: "s_b1"
    type: "UB"
  }
  field {
    name: "s_b2"
    type: "UB"
  }
  field {
    name: "s_b3"
    type: "UB"
  }
  field {
    name: "s_b4"
    type: "UB"
  }
}
struct {
  name: "struct in_addr::(anonymous at /usr/local/include/wine/windows/inaddr.h:35:9)"
  field {
    name: "s_w1"
    type: "US"
  }
  field {
    name: "s_w2"
    type: "US"
  }
}
struct {
  name: "in_addr"
  field {
    name: "S_un"
    type: "Runion in_addr::(anonymous at /usr/local/include/wine/windows/inaddr.h:31:5);"
  }
}
struct {
  name: "struct in_addr::(anonymous at /usr/local/include/wine/windows/inaddr.h:32:9)"
  field {
    name: "s_b1"
    type: "UB"
  }
  field {
    name: "s_b2"
    type: "UB"
  }
  field {
    name: "s_b3"
    type: "UB"
  }
  field {
    name: "s_b4"
    type: "UB"
  }
}
struct {
  name: "struct in_addr::(anonymous at /usr/local/include/wine/windows/inaddr.h:35:9)"
  field {
    name: "s_w1"
    type: "US"
  }
  field {
    name: "s_w2"
    type: "US"
  }
}
struct {
  name: "in_addr"
  field {
    name: "S_un"
    type: "Runion in_addr::(anonymous at /usr/local/include/wine/windows/inaddr.h:31:5);"
  }
}
struct {
  name: "struct in_addr::(anonymous at /usr/local/include/wine/windows/inaddr.h:32:9)"
  field {
    name: "s_b1"
    type: "UB"
  }
  field {
    name: "s_b2"
    type: "UB"
  }
  field {
    name: "s_b3"
    type: "UB"
  }
  field {
    name: "s_b4"
    type: "UB"
  }
}
struct {
  name: "struct in_addr::(anonymous at /usr/local/include/wine/windows/inaddr.h:35:9)"
  field {
    name: "s_w1"
    type: "US"
  }
  field {
    name: "s_w2"
    type: "US"
  }
}
struct {
  name: "protoent"
  field {
    name: "p_name"
    type: "*C;"
  }
  field {
    name: "p_aliases"
    type: "**C;;"
  }
  field {
    name: "p_proto"
    type: "S"
  }
}
struct {
  name: "protoent"
  field {
    name: "p_name"
    type: "*C;"
  }
  field {
    name: "p_aliases"
    type: "**C;;"
  }
  field {
    name: "p_proto"
    type: "S"
  }
}
struct {
  name: "protoent"
  field {
    name: "p_name"
    type: "*C;"
  }
  field {
    name: "p_aliases"
    type: "**C;;"
  }
  field {
    name: "p_proto"
    type: "S"
  }
}
struct {
  name: "netent"
  field {
    name: "n_name"
    type: "*C;"
  }
  field {
    name: "n_aliases"
    type: "**C;;"
  }
  field {
    name: "n_addrtype"
    type: "S"
  }
  field {
    name: "n_net"
    type: "UI"
  }
}
struct {
  name: "servent"
  field {
    name: "s_name"
    type: "*C;"
  }
  field {
    name: "s_aliases"
    type: "**C;;"
  }
  field {
    name: "s_proto"
    type: "*C;"
  }
  field {
    name: "s_port"
    type: "S"
  }
}
struct {
  name: "servent"
  field {
    name: "s_name"
    type: "*C;"
  }
  field {
    name: "s_aliases"
    type: "**C;;"
  }
  field {
    name: "s_proto"
    type: "*C;"
  }
  field {
    name: "s_port"
    type: "S"
  }
}
struct {
  name: "servent"
  field {
    name: "s_name"
    type: "*C;"
  }
  field {
    name: "s_aliases"
    type: "**C;;"
  }
  field {
    name: "s_proto"
    type: "*C;"
  }
  field {
    name: "s_port"
    type: "S"
  }
}
struct {
  name: "hostent"
  field {
    name: "h_name"
    type: "*C;"
  }
  field {
    name: "h_aliases"
    type: "**C;;"
  }
  field {
    name: "h_addrtype"
    type: "S"
  }
  field {
    name: "h_length"
    type: "S"
  }
  field {
    name: "h_addr_list"
    type: "**C;;"
  }
}
struct {
  name: "hostent"
  field {
    name: "h_name"
    type: "*C;"
  }
  field {
    name: "h_aliases"
    type: "**C;;"
  }
  field {
    name: "h_addrtype"
    type: "S"
  }
  field {
    name: "h_length"
    type: "S"
  }
  field {
    name: "h_addr_list"
    type: "**C;;"
  }
}
struct {
  name: "hostent"
  field {
    name: "h_name"
    type: "*C;"
  }
  field {
    name: "h_aliases"
    type: "**C;;"
  }
  field {
    name: "h_addrtype"
    type: "S"
  }
  field {
    name: "h_length"
    type: "S"
  }
  field {
    name: "h_addr_list"
    type: "**C;;"
  }
}
struct {
  name: "sockaddr"
  field {
    name: "sa_family"
    type: "US"
  }
  field {
    name: "sa_data"
    type: "X(ConstantArray.char [14])"
  }
}
struct {
  name: "sockaddr"
  field {
    name: "sa_family"
    type: "US"
  }
  field {
    name: "sa_data"
    type: "X(ConstantArray.char [14])"
  }
}
struct {
  name: "sockaddr"
  field {
    name: "sa_family"
    type: "US"
  }
  field {
    name: "sa_data"
    type: "X(ConstantArray.char [14])"
  }
}
struct {
  name: "linger"
  field {
    name: "l_onoff"
    type: "US"
  }
  field {
    name: "l_linger"
    type: "US"
  }
}
struct {
  name: "linger"
  field {
    name: "l_onoff"
    type: "US"
  }
  field {
    name: "l_linger"
    type: "US"
  }
}
struct {
  name: "linger"
  field {
    name: "l_onoff"
    type: "US"
  }
  field {
    name: "l_linger"
    type: "US"
  }
}
struct {
  name: "fd_set"
  field {
    name: "fd_count"
    type: "UI"
  }
  field {
    name: "fd_array"
    type: "X(ConstantArray.SOCKET [64])"
  }
}
struct {
  name: "fd_set"
  field {
    name: "fd_count"
    type: "UI"
  }
  field {
    name: "fd_array"
    type: "X(ConstantArray.SOCKET [64])"
  }
}
struct {
  name: "fd_set"
  field {
    name: "fd_count"
    type: "UI"
  }
  field {
    name: "fd_array"
    type: "X(ConstantArray.SOCKET [64])"
  }
}
struct {
  name: "fd_set"
  field {
    name: "fd_count"
    type: "UI"
  }
  field {
    name: "fd_array"
    type: "X(ConstantArray.SOCKET [64])"
  }
}
struct {
  name: "timeval"
  field {
    name: "tv_sec"
    type: "I"
  }
  field {
    name: "tv_usec"
    type: "I"
  }
}
struct {
  name: "timeval"
  field {
    name: "tv_sec"
    type: "I"
  }
  field {
    name: "tv_usec"
    type: "I"
  }
}
struct {
  name: "timeval"
  field {
    name: "tv_sec"
    type: "I"
  }
  field {
    name: "tv_usec"
    type: "I"
  }
}
struct {
  name: "sockaddr_in"
  field {
    name: "sin_family"
    type: "S"
  }
  field {
    name: "sin_port"
    type: "US"
  }
  field {
    name: "sin_addr"
    type: "Rin_addr;"
  }
  field {
    name: "sin_zero"
    type: "X(ConstantArray.char [8])"
  }
}
struct {
  name: "sockaddr_in"
  field {
    name: "sin_family"
    type: "S"
  }
  field {
    name: "sin_port"
    type: "US"
  }
  field {
    name: "sin_addr"
    type: "Rin_addr;"
  }
  field {
    name: "sin_zero"
    type: "X(ConstantArray.char [8])"
  }
}
struct {
  name: "sockaddr_in"
  field {
    name: "sin_family"
    type: "S"
  }
  field {
    name: "sin_port"
    type: "US"
  }
  field {
    name: "sin_addr"
    type: "Rin_addr;"
  }
  field {
    name: "sin_zero"
    type: "X(ConstantArray.char [8])"
  }
}
struct {
  name: "ip_mreq"
  field {
    name: "imr_multiaddr"
    type: "Rin_addr;"
  }
  field {
    name: "imr_interface"
    type: "Rin_addr;"
  }
}
struct {
  name: "WSAData"
  field {
    name: "wVersion"
    type: "US"
  }
  field {
    name: "wHighVersion"
    type: "US"
  }
  field {
    name: "iMaxSockets"
    type: "US"
  }
  field {
    name: "iMaxUdpDg"
    type: "US"
  }
  field {
    name: "lpVendorInfo"
    type: "*C;"
  }
  field {
    name: "szDescription"
    type: "X(ConstantArray.char [257])"
  }
  field {
    name: "szSystemStatus"
    type: "X(ConstantArray.char [129])"
  }
}
struct {
  name: "WSAData"
  field {
    name: "wVersion"
    type: "US"
  }
  field {
    name: "wHighVersion"
    type: "US"
  }
  field {
    name: "iMaxSockets"
    type: "US"
  }
  field {
    name: "iMaxUdpDg"
    type: "US"
  }
  field {
    name: "lpVendorInfo"
    type: "*C;"
  }
  field {
    name: "szDescription"
    type: "X(ConstantArray.char [257])"
  }
  field {
    name: "szSystemStatus"
    type: "X(ConstantArray.char [129])"
  }
}
struct {
  name: "_BCRYPT_ALGORITHM_IDENTIFIER"
  field {
    name: "pszName"
    type: "*US;"
  }
  field {
    name: "dwClass"
    type: "UI"
  }
  field {
    name: "dwFlags"
    type: "UI"
  }
}
struct {
  name: "_PROV_ENUMALGS"
  field {
    name: "aiAlgid"
    type: "UI"
  }
  field {
    name: "dwBitLen"
    type: "UI"
  }
  field {
    name: "dwNameLen"
    type: "UI"
  }
  field {
    name: "szName"
    type: "X(ConstantArray.CHAR [20])"
  }
}
struct {
  name: "_PROV_ENUMALGS_EX"
  field {
    name: "aiAlgid"
    type: "UI"
  }
  field {
    name: "dwDefaultLen"
    type: "UI"
  }
  field {
    name: "dwMinLen"
    type: "UI"
  }
  field {
    name: "dwMaxLen"
    type: "UI"
  }
  field {
    name: "dwProtocols"
    type: "UI"
  }
  field {
    name: "dwNameLen"
    type: "UI"
  }
  field {
    name: "szName"
    type: "X(ConstantArray.CHAR [20])"
  }
  field {
    name: "dwLongNameLen"
    type: "UI"
  }
  field {
    name: "szLongName"
    type: "X(ConstantArray.CHAR [40])"
  }
}
struct {
  name: "_SCHANNEL_ALG"
  field {
    name: "dwUse"
    type: "UI"
  }
  field {
    name: "Algid"
    type: "UI"
  }
  field {
    name: "cBits"
    type: "UI"
  }
  field {
    name: "dwFlags"
    type: "UI"
  }
  field {
    name: "dwReserved"
    type: "UI"
  }
}
struct {
  name: "_SCHANNEL_ALG"
  field {
    name: "dwUse"
    type: "UI"
  }
  field {
    name: "Algid"
    type: "UI"
  }
  field {
    name: "cBits"
    type: "UI"
  }
  field {
    name: "dwFlags"
    type: "UI"
  }
  field {
    name: "dwReserved"
    type: "UI"
  }
}
struct {
  name: "_HMAC_INFO"
  field {
    name: "HashAlgid"
    type: "UI"
  }
  field {
    name: "pbInnerString"
    type: "*UB;"
  }
  field {
    name: "cbInnerString"
    type: "UI"
  }
  field {
    name: "pbOuterString"
    type: "*UB;"
  }
  field {
    name: "cbOuterString"
    type: "UI"
  }
}
struct {
  name: "_HMAC_INFO"
  field {
    name: "HashAlgid"
    type: "UI"
  }
  field {
    name: "pbInnerString"
    type: "*UB;"
  }
  field {
    name: "cbInnerString"
    type: "UI"
  }
  field {
    name: "pbOuterString"
    type: "*UB;"
  }
  field {
    name: "cbOuterString"
    type: "UI"
  }
}
struct {
  name: "_CRYPTOAPI_BLOB"
  field {
    name: "cbData"
    type: "UI"
  }
  field {
    name: "pbData"
    type: "*UB;"
  }
}
struct {
  name: "_CRYPTOAPI_BLOB"
  field {
    name: "cbData"
    type: "UI"
  }
  field {
    name: "pbData"
    type: "*UB;"
  }
}
struct {
  name: "_CRYPTOAPI_BLOB"
  field {
    name: "cbData"
    type: "UI"
  }
  field {
    name: "pbData"
    type: "*UB;"
  }
}
struct {
  name: "_CRYPTOAPI_BLOB"
  field {
    name: "cbData"
    type: "UI"
  }
  field {
    name: "pbData"
    type: "*UB;"
  }
}
struct {
  name: "_CRYPTOAPI_BLOB"
  field {
    name: "cbData"
    type: "UI"
  }
  field {
    name: "pbData"
    type: "*UB;"
  }
}
struct {
  name: "_CRYPTOAPI_BLOB"
  field {
    name: "cbData"
    type: "UI"
  }
  field {
    name: "pbData"
    type: "*UB;"
  }
}
struct {
  name: "_CRYPTOAPI_BLOB"
  field {
    name: "cbData"
    type: "UI"
  }
  field {
    name: "pbData"
    type: "*UB;"
  }
}
struct {
  name: "_CRYPTOAPI_BLOB"
  field {
    name: "cbData"
    type: "UI"
  }
  field {
    name: "pbData"
    type: "*UB;"
  }
}
struct {
  name: "_CRYPTOAPI_BLOB"
  field {
    name: "cbData"
    type: "UI"
  }
  field {
    name: "pbData"
    type: "*UB;"
  }
}
struct {
  name: "_CRYPTOAPI_BLOB"
  field {
    name: "cbData"
    type: "UI"
  }
  field {
    name: "pbData"
    type: "*UB;"
  }
}
struct {
  name: "_CRYPTOAPI_BLOB"
  field {
    name: "cbData"
    type: "UI"
  }
  field {
    name: "pbData"
    type: "*UB;"
  }
}
struct {
  name: "_CRYPTOAPI_BLOB"
  field {
    name: "cbData"
    type: "UI"
  }
  field {
    name: "pbData"
    type: "*UB;"
  }
}
struct {
  name: "_CRYPTOAPI_BLOB"
  field {
    name: "cbData"
    type: "UI"
  }
  field {
    name: "pbData"
    type: "*UB;"
  }
}
struct {
  name: "_CRYPTOAPI_BLOB"
  field {
    name: "cbData"
    type: "UI"
  }
  field {
    name: "pbData"
    type: "*UB;"
  }
}
struct {
  name: "_CRYPTOAPI_BLOB"
  field {
    name: "cbData"
    type: "UI"
  }
  field {
    name: "pbData"
    type: "*UB;"
  }
}
struct {
  name: "_CRYPTOAPI_BLOB"
  field {
    name: "cbData"
    type: "UI"
  }
  field {
    name: "pbData"
    type: "*UB;"
  }
}
struct {
  name: "_CRYPTOAPI_BLOB"
  field {
    name: "cbData"
    type: "UI"
  }
  field {
    name: "pbData"
    type: "*UB;"
  }
}
struct {
  name: "_CRYPTOAPI_BLOB"
  field {
    name: "cbData"
    type: "UI"
  }
  field {
    name: "pbData"
    type: "*UB;"
  }
}
struct {
  name: "_CRYPTOAPI_BLOB"
  field {
    name: "cbData"
    type: "UI"
  }
  field {
    name: "pbData"
    type: "*UB;"
  }
}
struct {
  name: "_CRYPTOAPI_BLOB"
  field {
    name: "cbData"
    type: "UI"
  }
  field {
    name: "pbData"
    type: "*UB;"
  }
}
struct {
  name: "_CRYPTOAPI_BLOB"
  field {
    name: "cbData"
    type: "UI"
  }
  field {
    name: "pbData"
    type: "*UB;"
  }
}
struct {
  name: "_CRYPTOAPI_BLOB"
  field {
    name: "cbData"
    type: "UI"
  }
  field {
    name: "pbData"
    type: "*UB;"
  }
}
struct {
  name: "_CRYPTOAPI_BLOB"
  field {
    name: "cbData"
    type: "UI"
  }
  field {
    name: "pbData"
    type: "*UB;"
  }
}
struct {
  name: "_CRYPTOAPI_BLOB"
  field {
    name: "cbData"
    type: "UI"
  }
  field {
    name: "pbData"
    type: "*UB;"
  }
}
struct {
  name: "_CRYPTOAPI_BLOB"
  field {
    name: "cbData"
    type: "UI"
  }
  field {
    name: "pbData"
    type: "*UB;"
  }
}
struct {
  name: "_CRYPTOAPI_BLOB"
  field {
    name: "cbData"
    type: "UI"
  }
  field {
    name: "pbData"
    type: "*UB;"
  }
}
struct {
  name: "_CRYPTPROTECT_PROMPTSTRUCT"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "dwPromptFlags"
    type: "UI"
  }
  field {
    name: "hwndApp"
    type: "*RHWND__;;"
  }
  field {
    name: "szPrompt"
    type: "*cUS;"
  }
}
struct {
  name: "_CRYPTPROTECT_PROMPTSTRUCT"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "dwPromptFlags"
    type: "UI"
  }
  field {
    name: "hwndApp"
    type: "*RHWND__;;"
  }
  field {
    name: "szPrompt"
    type: "*cUS;"
  }
}
struct {
  name: "_CRYPT_ALGORITHM_IDENTIFIER"
  field {
    name: "pszObjId"
    type: "*C;"
  }
  field {
    name: "Parameters"
    type: "R_CRYPTOAPI_BLOB;"
  }
}
struct {
  name: "_CRYPT_ALGORITHM_IDENTIFIER"
  field {
    name: "pszObjId"
    type: "*C;"
  }
  field {
    name: "Parameters"
    type: "R_CRYPTOAPI_BLOB;"
  }
}
struct {
  name: "_CRYPT_ATTRIBUTE_TYPE_VALUE"
  field {
    name: "pszObjId"
    type: "*C;"
  }
  field {
    name: "Value"
    type: "R_CRYPTOAPI_BLOB;"
  }
}
struct {
  name: "_CRYPT_ATTRIBUTE_TYPE_VALUE"
  field {
    name: "pszObjId"
    type: "*C;"
  }
  field {
    name: "Value"
    type: "R_CRYPTOAPI_BLOB;"
  }
}
struct {
  name: "_PUBLICKEYSTRUC"
  field {
    name: "bType"
    type: "UB"
  }
  field {
    name: "bVersion"
    type: "UB"
  }
  field {
    name: "reserved"
    type: "US"
  }
  field {
    name: "aiKeyAlg"
    type: "UI"
  }
}
struct {
  name: "_PUBLICKEYSTRUC"
  field {
    name: "bType"
    type: "UB"
  }
  field {
    name: "bVersion"
    type: "UB"
  }
  field {
    name: "reserved"
    type: "US"
  }
  field {
    name: "aiKeyAlg"
    type: "UI"
  }
}
struct {
  name: "_RSAPUBKEY"
  field {
    name: "magic"
    type: "UI"
  }
  field {
    name: "bitlen"
    type: "UI"
  }
  field {
    name: "pubexp"
    type: "UI"
  }
}
struct {
  name: "_PUBKEY"
  field {
    name: "magic"
    type: "UI"
  }
  field {
    name: "bitlen"
    type: "UI"
  }
}
struct {
  name: "_PUBKEY"
  field {
    name: "magic"
    type: "UI"
  }
  field {
    name: "bitlen"
    type: "UI"
  }
}
struct {
  name: "_PUBKEY"
  field {
    name: "magic"
    type: "UI"
  }
  field {
    name: "bitlen"
    type: "UI"
  }
}
struct {
  name: "_PUBKEY"
  field {
    name: "magic"
    type: "UI"
  }
  field {
    name: "bitlen"
    type: "UI"
  }
}
struct {
  name: "_DSSSEED"
  field {
    name: "counter"
    type: "UI"
  }
  field {
    name: "seed"
    type: "X(ConstantArray.BYTE [20])"
  }
}
struct {
  name: "_PUBKEYVER3"
  field {
    name: "magic"
    type: "UI"
  }
  field {
    name: "bitlenP"
    type: "UI"
  }
  field {
    name: "bitlenQ"
    type: "UI"
  }
  field {
    name: "bitlenJ"
    type: "UI"
  }
  field {
    name: "DSSSeed"
    type: "R_DSSSEED;"
  }
}
struct {
  name: "_PUBKEYVER3"
  field {
    name: "magic"
    type: "UI"
  }
  field {
    name: "bitlenP"
    type: "UI"
  }
  field {
    name: "bitlenQ"
    type: "UI"
  }
  field {
    name: "bitlenJ"
    type: "UI"
  }
  field {
    name: "DSSSeed"
    type: "R_DSSSEED;"
  }
}
struct {
  name: "_PRIVKEYVER3"
  field {
    name: "magic"
    type: "UI"
  }
  field {
    name: "bitlenP"
    type: "UI"
  }
  field {
    name: "bitlenQ"
    type: "UI"
  }
  field {
    name: "bitlenJ"
    type: "UI"
  }
  field {
    name: "bitlenX"
    type: "UI"
  }
  field {
    name: "DSSSeed"
    type: "R_DSSSEED;"
  }
}
struct {
  name: "_PRIVKEYVER3"
  field {
    name: "magic"
    type: "UI"
  }
  field {
    name: "bitlenP"
    type: "UI"
  }
  field {
    name: "bitlenQ"
    type: "UI"
  }
  field {
    name: "bitlenJ"
    type: "UI"
  }
  field {
    name: "bitlenX"
    type: "UI"
  }
  field {
    name: "DSSSeed"
    type: "R_DSSSEED;"
  }
}
struct {
  name: "_KEY_TYPE_SUBTYPE"
  field {
    name: "dwKeySpec"
    type: "UI"
  }
  field {
    name: "Type"
    type: "R_GUID;"
  }
  field {
    name: "SubType"
    type: "R_GUID;"
  }
}
struct {
  name: "_KEY_TYPE_SUBTYPE"
  field {
    name: "dwKeySpec"
    type: "UI"
  }
  field {
    name: "Type"
    type: "R_GUID;"
  }
  field {
    name: "SubType"
    type: "R_GUID;"
  }
}
struct {
  name: "_CERT_FORTEZZA_DATA_PROP"
  field {
    name: "SerialNumber"
    type: "X(ConstantArray.unsigned char [8])"
  }
  field {
    name: "CertIndex"
    type: "I"
  }
  field {
    name: "CertLabel"
    type: "X(ConstantArray.unsigned char [36])"
  }
}
struct {
  name: "_CMS_DH_KEY_INFO"
  field {
    name: "dwVersion"
    type: "UI"
  }
  field {
    name: "Algid"
    type: "UI"
  }
  field {
    name: "pszContentEncObjId"
    type: "*C;"
  }
  field {
    name: "PubInfo"
    type: "R_CRYPTOAPI_BLOB;"
  }
  field {
    name: "pReserved"
    type: "*V;"
  }
}
struct {
  name: "_CMS_DH_KEY_INFO"
  field {
    name: "dwVersion"
    type: "UI"
  }
  field {
    name: "Algid"
    type: "UI"
  }
  field {
    name: "pszContentEncObjId"
    type: "*C;"
  }
  field {
    name: "PubInfo"
    type: "R_CRYPTOAPI_BLOB;"
  }
  field {
    name: "pReserved"
    type: "*V;"
  }
}
struct {
  name: "_CRYPT_BIT_BLOB"
  field {
    name: "cbData"
    type: "UI"
  }
  field {
    name: "pbData"
    type: "*UB;"
  }
  field {
    name: "cUnusedBits"
    type: "UI"
  }
}
struct {
  name: "_CRYPT_BIT_BLOB"
  field {
    name: "cbData"
    type: "UI"
  }
  field {
    name: "pbData"
    type: "*UB;"
  }
  field {
    name: "cUnusedBits"
    type: "UI"
  }
}
struct {
  name: "_CRYPT_KEY_PROV_PARAM"
  field {
    name: "dwParam"
    type: "UI"
  }
  field {
    name: "pbData"
    type: "*UB;"
  }
  field {
    name: "cbData"
    type: "UI"
  }
  field {
    name: "dwFlags"
    type: "UI"
  }
}
struct {
  name: "_CRYPT_KEY_PROV_PARAM"
  field {
    name: "dwParam"
    type: "UI"
  }
  field {
    name: "pbData"
    type: "*UB;"
  }
  field {
    name: "cbData"
    type: "UI"
  }
  field {
    name: "dwFlags"
    type: "UI"
  }
}
struct {
  name: "_CRYPT_KEY_PROV_INFO"
  field {
    name: "pwszContainerName"
    type: "*US;"
  }
  field {
    name: "pwszProvName"
    type: "*US;"
  }
  field {
    name: "dwProvType"
    type: "UI"
  }
  field {
    name: "dwFlags"
    type: "UI"
  }
  field {
    name: "cProvParam"
    type: "UI"
  }
  field {
    name: "rgProvParam"
    type: "*R_CRYPT_KEY_PROV_PARAM;;"
  }
  field {
    name: "dwKeySpec"
    type: "UI"
  }
}
struct {
  name: "_CRYPT_KEY_PROV_INFO"
  field {
    name: "pwszContainerName"
    type: "*US;"
  }
  field {
    name: "pwszProvName"
    type: "*US;"
  }
  field {
    name: "dwProvType"
    type: "UI"
  }
  field {
    name: "dwFlags"
    type: "UI"
  }
  field {
    name: "cProvParam"
    type: "UI"
  }
  field {
    name: "rgProvParam"
    type: "*R_CRYPT_KEY_PROV_PARAM;;"
  }
  field {
    name: "dwKeySpec"
    type: "UI"
  }
}
struct {
  name: "_CERT_KEY_CONTEXT"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "hCryptProv"
    type: "UI"
  }
  field {
    name: "dwKeySpec"
    type: "UI"
  }
}
struct {
  name: "_CERT_KEY_CONTEXT"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "hCryptProv"
    type: "UI"
  }
  field {
    name: "dwKeySpec"
    type: "UI"
  }
}
struct {
  name: "_CERT_PUBLIC_KEY_INFO"
  field {
    name: "Algorithm"
    type: "R_CRYPT_ALGORITHM_IDENTIFIER;"
  }
  field {
    name: "PublicKey"
    type: "R_CRYPT_BIT_BLOB;"
  }
}
struct {
  name: "_CERT_PUBLIC_KEY_INFO"
  field {
    name: "Algorithm"
    type: "R_CRYPT_ALGORITHM_IDENTIFIER;"
  }
  field {
    name: "PublicKey"
    type: "R_CRYPT_BIT_BLOB;"
  }
}
struct {
  name: "_CERT_EXTENSION"
  field {
    name: "pszObjId"
    type: "*C;"
  }
  field {
    name: "fCritical"
    type: "I"
  }
  field {
    name: "Value"
    type: "R_CRYPTOAPI_BLOB;"
  }
}
struct {
  name: "_CERT_EXTENSION"
  field {
    name: "pszObjId"
    type: "*C;"
  }
  field {
    name: "fCritical"
    type: "I"
  }
  field {
    name: "Value"
    type: "R_CRYPTOAPI_BLOB;"
  }
}
struct {
  name: "_CERT_EXTENSIONS"
  field {
    name: "cExtension"
    type: "UI"
  }
  field {
    name: "rgExtension"
    type: "*R_CERT_EXTENSION;;"
  }
}
struct {
  name: "_CERT_EXTENSIONS"
  field {
    name: "cExtension"
    type: "UI"
  }
  field {
    name: "rgExtension"
    type: "*R_CERT_EXTENSION;;"
  }
}
struct {
  name: "_CERT_INFO"
  field {
    name: "dwVersion"
    type: "UI"
  }
  field {
    name: "SerialNumber"
    type: "R_CRYPTOAPI_BLOB;"
  }
  field {
    name: "SignatureAlgorithm"
    type: "R_CRYPT_ALGORITHM_IDENTIFIER;"
  }
  field {
    name: "Issuer"
    type: "R_CRYPTOAPI_BLOB;"
  }
  field {
    name: "NotBefore"
    type: "R_FILETIME;"
  }
  field {
    name: "NotAfter"
    type: "R_FILETIME;"
  }
  field {
    name: "Subject"
    type: "R_CRYPTOAPI_BLOB;"
  }
  field {
    name: "SubjectPublicKeyInfo"
    type: "R_CERT_PUBLIC_KEY_INFO;"
  }
  field {
    name: "IssuerUniqueId"
    type: "R_CRYPT_BIT_BLOB;"
  }
  field {
    name: "SubjectUniqueId"
    type: "R_CRYPT_BIT_BLOB;"
  }
  field {
    name: "cExtension"
    type: "UI"
  }
  field {
    name: "rgExtension"
    type: "*R_CERT_EXTENSION;;"
  }
}
struct {
  name: "_CERT_INFO"
  field {
    name: "dwVersion"
    type: "UI"
  }
  field {
    name: "SerialNumber"
    type: "R_CRYPTOAPI_BLOB;"
  }
  field {
    name: "SignatureAlgorithm"
    type: "R_CRYPT_ALGORITHM_IDENTIFIER;"
  }
  field {
    name: "Issuer"
    type: "R_CRYPTOAPI_BLOB;"
  }
  field {
    name: "NotBefore"
    type: "R_FILETIME;"
  }
  field {
    name: "NotAfter"
    type: "R_FILETIME;"
  }
  field {
    name: "Subject"
    type: "R_CRYPTOAPI_BLOB;"
  }
  field {
    name: "SubjectPublicKeyInfo"
    type: "R_CERT_PUBLIC_KEY_INFO;"
  }
  field {
    name: "IssuerUniqueId"
    type: "R_CRYPT_BIT_BLOB;"
  }
  field {
    name: "SubjectUniqueId"
    type: "R_CRYPT_BIT_BLOB;"
  }
  field {
    name: "cExtension"
    type: "UI"
  }
  field {
    name: "rgExtension"
    type: "*R_CERT_EXTENSION;;"
  }
}
struct {
  name: "_CERT_RDN_ATTR"
  field {
    name: "pszObjId"
    type: "*C;"
  }
  field {
    name: "dwValueType"
    type: "UI"
  }
  field {
    name: "Value"
    type: "R_CRYPTOAPI_BLOB;"
  }
}
struct {
  name: "_CERT_RDN_ATTR"
  field {
    name: "pszObjId"
    type: "*C;"
  }
  field {
    name: "dwValueType"
    type: "UI"
  }
  field {
    name: "Value"
    type: "R_CRYPTOAPI_BLOB;"
  }
}
struct {
  name: "_CERT_RDN"
  field {
    name: "cRDNAttr"
    type: "UI"
  }
  field {
    name: "rgRDNAttr"
    type: "*R_CERT_RDN_ATTR;;"
  }
}
struct {
  name: "_CERT_RDN"
  field {
    name: "cRDNAttr"
    type: "UI"
  }
  field {
    name: "rgRDNAttr"
    type: "*R_CERT_RDN_ATTR;;"
  }
}
struct {
  name: "_CERT_NAME_INFO"
  field {
    name: "cRDN"
    type: "UI"
  }
  field {
    name: "rgRDN"
    type: "*R_CERT_RDN;;"
  }
}
struct {
  name: "_CERT_NAME_INFO"
  field {
    name: "cRDN"
    type: "UI"
  }
  field {
    name: "rgRDN"
    type: "*R_CERT_RDN;;"
  }
}
struct {
  name: "_CERT_NAME_VALUE"
  field {
    name: "dwValueType"
    type: "UI"
  }
  field {
    name: "Value"
    type: "R_CRYPTOAPI_BLOB;"
  }
}
struct {
  name: "_CERT_NAME_VALUE"
  field {
    name: "dwValueType"
    type: "UI"
  }
  field {
    name: "Value"
    type: "R_CRYPTOAPI_BLOB;"
  }
}
struct {
  name: "_CERT_ENCRYPTED_PRIVATE_KEY_INFO"
  field {
    name: "EncryptionAlgorithm"
    type: "R_CRYPT_ALGORITHM_IDENTIFIER;"
  }
  field {
    name: "EncryptedPrivateKey"
    type: "R_CRYPTOAPI_BLOB;"
  }
}
struct {
  name: "_CERT_ENCRYPTED_PRIVATE_KEY_INFO"
  field {
    name: "EncryptionAlgorithm"
    type: "R_CRYPT_ALGORITHM_IDENTIFIER;"
  }
  field {
    name: "EncryptedPrivateKey"
    type: "R_CRYPTOAPI_BLOB;"
  }
}
struct {
  name: "_CERT_AUTHORITY_KEY_ID_INFO"
  field {
    name: "KeyId"
    type: "R_CRYPTOAPI_BLOB;"
  }
  field {
    name: "CertIssuer"
    type: "R_CRYPTOAPI_BLOB;"
  }
  field {
    name: "CertSerialNumber"
    type: "R_CRYPTOAPI_BLOB;"
  }
}
struct {
  name: "_CERT_AUTHORITY_KEY_ID_INFO"
  field {
    name: "KeyId"
    type: "R_CRYPTOAPI_BLOB;"
  }
  field {
    name: "CertIssuer"
    type: "R_CRYPTOAPI_BLOB;"
  }
  field {
    name: "CertSerialNumber"
    type: "R_CRYPTOAPI_BLOB;"
  }
}
struct {
  name: "_CERT_PRIVATE_KEY_VALIDITY"
  field {
    name: "NotBefore"
    type: "R_FILETIME;"
  }
  field {
    name: "NotAfter"
    type: "R_FILETIME;"
  }
}
struct {
  name: "_CERT_PRIVATE_KEY_VALIDITY"
  field {
    name: "NotBefore"
    type: "R_FILETIME;"
  }
  field {
    name: "NotAfter"
    type: "R_FILETIME;"
  }
}
struct {
  name: "_CERT_KEY_ATTRIBUTES_INFO"
  field {
    name: "KeyId"
    type: "R_CRYPTOAPI_BLOB;"
  }
  field {
    name: "IntendedKeyUsage"
    type: "R_CRYPT_BIT_BLOB;"
  }
  field {
    name: "pPrivateKeyUsagePeriod"
    type: "*R_CERT_PRIVATE_KEY_VALIDITY;;"
  }
}
struct {
  name: "_CERT_KEY_ATTRIBUTES_INFO"
  field {
    name: "KeyId"
    type: "R_CRYPTOAPI_BLOB;"
  }
  field {
    name: "IntendedKeyUsage"
    type: "R_CRYPT_BIT_BLOB;"
  }
  field {
    name: "pPrivateKeyUsagePeriod"
    type: "*R_CERT_PRIVATE_KEY_VALIDITY;;"
  }
}
struct {
  name: "_CERT_POLICY_ID"
  field {
    name: "cCertPolicyElementId"
    type: "UI"
  }
  field {
    name: "rgbszCertPolicyElementId"
    type: "**C;;"
  }
}
struct {
  name: "_CERT_POLICY_ID"
  field {
    name: "cCertPolicyElementId"
    type: "UI"
  }
  field {
    name: "rgbszCertPolicyElementId"
    type: "**C;;"
  }
}
struct {
  name: "_CERT_KEY_USAGE_RESTRICTION_INFO"
  field {
    name: "cCertPolicyId"
    type: "UI"
  }
  field {
    name: "rgCertPolicyId"
    type: "*R_CERT_POLICY_ID;;"
  }
  field {
    name: "RestrictedKeyUsage"
    type: "R_CRYPT_BIT_BLOB;"
  }
}
struct {
  name: "_CERT_KEY_USAGE_RESTRICTION_INFO"
  field {
    name: "cCertPolicyId"
    type: "UI"
  }
  field {
    name: "rgCertPolicyId"
    type: "*R_CERT_POLICY_ID;;"
  }
  field {
    name: "RestrictedKeyUsage"
    type: "R_CRYPT_BIT_BLOB;"
  }
}
struct {
  name: "_CERT_OTHER_NAME"
  field {
    name: "pszObjId"
    type: "*C;"
  }
  field {
    name: "Value"
    type: "R_CRYPTOAPI_BLOB;"
  }
}
struct {
  name: "_CERT_OTHER_NAME"
  field {
    name: "pszObjId"
    type: "*C;"
  }
  field {
    name: "Value"
    type: "R_CRYPTOAPI_BLOB;"
  }
}
struct {
  name: "_CERT_ALT_NAME_ENTRY"
  field {
    name: "dwAltNameChoice"
    type: "UI"
  }
}
struct {
  name: "_CERT_ALT_NAME_ENTRY"
  field {
    name: "dwAltNameChoice"
    type: "UI"
  }
}
struct {
  name: "_CERT_ALT_NAME_INFO"
  field {
    name: "cAltEntry"
    type: "UI"
  }
  field {
    name: "rgAltEntry"
    type: "*R_CERT_ALT_NAME_ENTRY;;"
  }
}
struct {
  name: "_CERT_ALT_NAME_INFO"
  field {
    name: "cAltEntry"
    type: "UI"
  }
  field {
    name: "rgAltEntry"
    type: "*R_CERT_ALT_NAME_ENTRY;;"
  }
}
struct {
  name: "_CERT_BASIC_CONSTRAINTS_INFO"
  field {
    name: "SubjectType"
    type: "R_CRYPT_BIT_BLOB;"
  }
  field {
    name: "fPathLenConstraint"
    type: "I"
  }
  field {
    name: "dwPathLenConstraint"
    type: "UI"
  }
  field {
    name: "cSubtreesConstraint"
    type: "UI"
  }
  field {
    name: "rgSubtreesConstraint"
    type: "*R_CRYPTOAPI_BLOB;;"
  }
}
struct {
  name: "_CERT_BASIC_CONSTRAINTS_INFO"
  field {
    name: "SubjectType"
    type: "R_CRYPT_BIT_BLOB;"
  }
  field {
    name: "fPathLenConstraint"
    type: "I"
  }
  field {
    name: "dwPathLenConstraint"
    type: "UI"
  }
  field {
    name: "cSubtreesConstraint"
    type: "UI"
  }
  field {
    name: "rgSubtreesConstraint"
    type: "*R_CRYPTOAPI_BLOB;;"
  }
}
struct {
  name: "_CERT_BASIC_CONSTRAINTS2_INFO"
  field {
    name: "fCA"
    type: "I"
  }
  field {
    name: "fPathLenConstraint"
    type: "I"
  }
  field {
    name: "dwPathLenConstraint"
    type: "UI"
  }
}
struct {
  name: "_CERT_BASIC_CONSTRAINTS2_INFO"
  field {
    name: "fCA"
    type: "I"
  }
  field {
    name: "fPathLenConstraint"
    type: "I"
  }
  field {
    name: "dwPathLenConstraint"
    type: "UI"
  }
}
struct {
  name: "_CERT_POLICY_QUALIFIER_INFO"
  field {
    name: "pszPolicyQualifierId"
    type: "*C;"
  }
  field {
    name: "Qualifier"
    type: "R_CRYPTOAPI_BLOB;"
  }
}
struct {
  name: "_CERT_POLICY_QUALIFIER_INFO"
  field {
    name: "pszPolicyQualifierId"
    type: "*C;"
  }
  field {
    name: "Qualifier"
    type: "R_CRYPTOAPI_BLOB;"
  }
}
struct {
  name: "_CERT_POLICY_INFO"
  field {
    name: "pszPolicyIdentifier"
    type: "*C;"
  }
  field {
    name: "cPolicyQualifier"
    type: "UI"
  }
  field {
    name: "rgPolicyQualifier"
    type: "*R_CERT_POLICY_QUALIFIER_INFO;;"
  }
}
struct {
  name: "_CERT_POLICY_INFO"
  field {
    name: "pszPolicyIdentifier"
    type: "*C;"
  }
  field {
    name: "cPolicyQualifier"
    type: "UI"
  }
  field {
    name: "rgPolicyQualifier"
    type: "*R_CERT_POLICY_QUALIFIER_INFO;;"
  }
}
struct {
  name: "_CERT_POLICIES_INFO"
  field {
    name: "cPolicyInfo"
    type: "UI"
  }
  field {
    name: "rgPolicyInfo"
    type: "*R_CERT_POLICY_INFO;;"
  }
}
struct {
  name: "_CERT_POLICIES_INFO"
  field {
    name: "cPolicyInfo"
    type: "UI"
  }
  field {
    name: "rgPolicyInfo"
    type: "*R_CERT_POLICY_INFO;;"
  }
}
struct {
  name: "_CERT_POLICY_QUALIFIER_NOTICE_REFERENCE"
  field {
    name: "pszOrganization"
    type: "*C;"
  }
  field {
    name: "cNoticeNumbers"
    type: "UI"
  }
  field {
    name: "rgNoticeNumbers"
    type: "*I;"
  }
}
struct {
  name: "_CERT_POLICY_QUALIFIER_NOTICE_REFERENCE"
  field {
    name: "pszOrganization"
    type: "*C;"
  }
  field {
    name: "cNoticeNumbers"
    type: "UI"
  }
  field {
    name: "rgNoticeNumbers"
    type: "*I;"
  }
}
struct {
  name: "_CERT_POLICY_QUALIFIER_USER_NOTICE"
  field {
    name: "pNoticeReference"
    type: "*R_CERT_POLICY_QUALIFIER_NOTICE_REFERENCE;;"
  }
  field {
    name: "pszDisplayText"
    type: "*US;"
  }
}
struct {
  name: "_CERT_POLICY_QUALIFIER_USER_NOTICE"
  field {
    name: "pNoticeReference"
    type: "*R_CERT_POLICY_QUALIFIER_NOTICE_REFERENCE;;"
  }
  field {
    name: "pszDisplayText"
    type: "*US;"
  }
}
struct {
  name: "_CPS_URLS"
  field {
    name: "pszURL"
    type: "*US;"
  }
  field {
    name: "pAlgorithm"
    type: "*R_CRYPT_ALGORITHM_IDENTIFIER;;"
  }
  field {
    name: "pDigest"
    type: "*R_CRYPTOAPI_BLOB;;"
  }
}
struct {
  name: "_CPS_URLS"
  field {
    name: "pszURL"
    type: "*US;"
  }
  field {
    name: "pAlgorithm"
    type: "*R_CRYPT_ALGORITHM_IDENTIFIER;;"
  }
  field {
    name: "pDigest"
    type: "*R_CRYPTOAPI_BLOB;;"
  }
}
struct {
  name: "_CERT_POLICY95_QUALIFIER1"
  field {
    name: "pszPracticesReference"
    type: "*US;"
  }
  field {
    name: "pszNoticeIdentifier"
    type: "*C;"
  }
  field {
    name: "pszNSINoticeIdentifier"
    type: "*C;"
  }
  field {
    name: "cCPSURLs"
    type: "UI"
  }
  field {
    name: "rgCPSURLs"
    type: "*R_CPS_URLS;;"
  }
}
struct {
  name: "_CERT_POLICY95_QUALIFIER1"
  field {
    name: "pszPracticesReference"
    type: "*US;"
  }
  field {
    name: "pszNoticeIdentifier"
    type: "*C;"
  }
  field {
    name: "pszNSINoticeIdentifier"
    type: "*C;"
  }
  field {
    name: "cCPSURLs"
    type: "UI"
  }
  field {
    name: "rgCPSURLs"
    type: "*R_CPS_URLS;;"
  }
}
struct {
  name: "_CERT_POLICY_MAPPING"
  field {
    name: "pszIssuerDomainPolicy"
    type: "*C;"
  }
  field {
    name: "pszSubjectDomainPolicy"
    type: "*C;"
  }
}
struct {
  name: "_CERT_POLICY_MAPPING"
  field {
    name: "pszIssuerDomainPolicy"
    type: "*C;"
  }
  field {
    name: "pszSubjectDomainPolicy"
    type: "*C;"
  }
}
struct {
  name: "_CERT_POLICY_MAPPINGS_INFO"
  field {
    name: "cPolicyMapping"
    type: "UI"
  }
  field {
    name: "rgPolicyMapping"
    type: "*R_CERT_POLICY_MAPPING;;"
  }
}
struct {
  name: "_CERT_POLICY_MAPPINGS_INFO"
  field {
    name: "cPolicyMapping"
    type: "UI"
  }
  field {
    name: "rgPolicyMapping"
    type: "*R_CERT_POLICY_MAPPING;;"
  }
}
struct {
  name: "_CERT_POLICY_CONSTRAINTS_INFO"
  field {
    name: "fRequireExplicitPolicy"
    type: "I"
  }
  field {
    name: "dwRequireExplicitPolicySkipCerts"
    type: "UI"
  }
  field {
    name: "fInhibitPolicyMapping"
    type: "I"
  }
  field {
    name: "dwInhibitPolicyMappingSkipCerts"
    type: "UI"
  }
}
struct {
  name: "_CERT_POLICY_CONSTRAINTS_INFO"
  field {
    name: "fRequireExplicitPolicy"
    type: "I"
  }
  field {
    name: "dwRequireExplicitPolicySkipCerts"
    type: "UI"
  }
  field {
    name: "fInhibitPolicyMapping"
    type: "I"
  }
  field {
    name: "dwInhibitPolicyMappingSkipCerts"
    type: "UI"
  }
}
struct {
  name: "_CRYPT_CONTENT_INFO_SEQUENCE_OF_ANY"
  field {
    name: "pszObjId"
    type: "*C;"
  }
  field {
    name: "cValue"
    type: "UI"
  }
  field {
    name: "rgValue"
    type: "*R_CRYPTOAPI_BLOB;;"
  }
}
struct {
  name: "_CRYPT_CONTENT_INFO_SEQUENCE_OF_ANY"
  field {
    name: "pszObjId"
    type: "*C;"
  }
  field {
    name: "cValue"
    type: "UI"
  }
  field {
    name: "rgValue"
    type: "*R_CRYPTOAPI_BLOB;;"
  }
}
struct {
  name: "_CRYPT_CONTENT_INFO"
  field {
    name: "pszObjId"
    type: "*C;"
  }
  field {
    name: "Content"
    type: "R_CRYPTOAPI_BLOB;"
  }
}
struct {
  name: "_CRYPT_CONTENT_INFO"
  field {
    name: "pszObjId"
    type: "*C;"
  }
  field {
    name: "Content"
    type: "R_CRYPTOAPI_BLOB;"
  }
}
struct {
  name: "_CRYPT_SEQUENCE_OF_ANY"
  field {
    name: "cValue"
    type: "UI"
  }
  field {
    name: "rgValue"
    type: "*R_CRYPTOAPI_BLOB;;"
  }
}
struct {
  name: "_CRYPT_SEQUENCE_OF_ANY"
  field {
    name: "cValue"
    type: "UI"
  }
  field {
    name: "rgValue"
    type: "*R_CRYPTOAPI_BLOB;;"
  }
}
struct {
  name: "_CERT_AUTHORITY_KEY_ID2_INFO"
  field {
    name: "KeyId"
    type: "R_CRYPTOAPI_BLOB;"
  }
  field {
    name: "AuthorityCertIssuer"
    type: "R_CERT_ALT_NAME_INFO;"
  }
  field {
    name: "AuthorityCertSerialNumber"
    type: "R_CRYPTOAPI_BLOB;"
  }
}
struct {
  name: "_CERT_AUTHORITY_KEY_ID2_INFO"
  field {
    name: "KeyId"
    type: "R_CRYPTOAPI_BLOB;"
  }
  field {
    name: "AuthorityCertIssuer"
    type: "R_CERT_ALT_NAME_INFO;"
  }
  field {
    name: "AuthorityCertSerialNumber"
    type: "R_CRYPTOAPI_BLOB;"
  }
}
struct {
  name: "_CERT_ACCESS_DESCRIPTION"
  field {
    name: "pszAccessMethod"
    type: "*C;"
  }
  field {
    name: "AccessLocation"
    type: "R_CERT_ALT_NAME_ENTRY;"
  }
}
struct {
  name: "_CERT_ACCESS_DESCRIPTION"
  field {
    name: "pszAccessMethod"
    type: "*C;"
  }
  field {
    name: "AccessLocation"
    type: "R_CERT_ALT_NAME_ENTRY;"
  }
}
struct {
  name: "_CERT_AUTHORITY_INFO_ACCESS"
  field {
    name: "cAccDescr"
    type: "UI"
  }
  field {
    name: "rgAccDescr"
    type: "*R_CERT_ACCESS_DESCRIPTION;;"
  }
}
struct {
  name: "_CERT_AUTHORITY_INFO_ACCESS"
  field {
    name: "cAccDescr"
    type: "UI"
  }
  field {
    name: "rgAccDescr"
    type: "*R_CERT_ACCESS_DESCRIPTION;;"
  }
}
struct {
  name: "_CERT_CONTEXT"
  field {
    name: "dwCertEncodingType"
    type: "UI"
  }
  field {
    name: "pbCertEncoded"
    type: "*UB;"
  }
  field {
    name: "cbCertEncoded"
    type: "UI"
  }
  field {
    name: "pCertInfo"
    type: "*R_CERT_INFO;;"
  }
  field {
    name: "hCertStore"
    type: "*V;"
  }
}
struct {
  name: "_CERT_CONTEXT"
  field {
    name: "dwCertEncodingType"
    type: "UI"
  }
  field {
    name: "pbCertEncoded"
    type: "*UB;"
  }
  field {
    name: "cbCertEncoded"
    type: "UI"
  }
  field {
    name: "pCertInfo"
    type: "*R_CERT_INFO;;"
  }
  field {
    name: "hCertStore"
    type: "*V;"
  }
}
struct {
  name: "_CRL_ENTRY"
  field {
    name: "SerialNumber"
    type: "R_CRYPTOAPI_BLOB;"
  }
  field {
    name: "RevocationDate"
    type: "R_FILETIME;"
  }
  field {
    name: "cExtension"
    type: "UI"
  }
  field {
    name: "rgExtension"
    type: "*R_CERT_EXTENSION;;"
  }
}
struct {
  name: "_CRL_ENTRY"
  field {
    name: "SerialNumber"
    type: "R_CRYPTOAPI_BLOB;"
  }
  field {
    name: "RevocationDate"
    type: "R_FILETIME;"
  }
  field {
    name: "cExtension"
    type: "UI"
  }
  field {
    name: "rgExtension"
    type: "*R_CERT_EXTENSION;;"
  }
}
struct {
  name: "_CRL_INFO"
  field {
    name: "dwVersion"
    type: "UI"
  }
  field {
    name: "SignatureAlgorithm"
    type: "R_CRYPT_ALGORITHM_IDENTIFIER;"
  }
  field {
    name: "Issuer"
    type: "R_CRYPTOAPI_BLOB;"
  }
  field {
    name: "ThisUpdate"
    type: "R_FILETIME;"
  }
  field {
    name: "NextUpdate"
    type: "R_FILETIME;"
  }
  field {
    name: "cCRLEntry"
    type: "UI"
  }
  field {
    name: "rgCRLEntry"
    type: "*R_CRL_ENTRY;;"
  }
  field {
    name: "cExtension"
    type: "UI"
  }
  field {
    name: "rgExtension"
    type: "*R_CERT_EXTENSION;;"
  }
}
struct {
  name: "_CRL_INFO"
  field {
    name: "dwVersion"
    type: "UI"
  }
  field {
    name: "SignatureAlgorithm"
    type: "R_CRYPT_ALGORITHM_IDENTIFIER;"
  }
  field {
    name: "Issuer"
    type: "R_CRYPTOAPI_BLOB;"
  }
  field {
    name: "ThisUpdate"
    type: "R_FILETIME;"
  }
  field {
    name: "NextUpdate"
    type: "R_FILETIME;"
  }
  field {
    name: "cCRLEntry"
    type: "UI"
  }
  field {
    name: "rgCRLEntry"
    type: "*R_CRL_ENTRY;;"
  }
  field {
    name: "cExtension"
    type: "UI"
  }
  field {
    name: "rgExtension"
    type: "*R_CERT_EXTENSION;;"
  }
}
struct {
  name: "_CRL_DIST_POINT_NAME"
  field {
    name: "dwDistPointNameChoice"
    type: "UI"
  }
}
struct {
  name: "_CRL_DIST_POINT_NAME"
  field {
    name: "dwDistPointNameChoice"
    type: "UI"
  }
}
struct {
  name: "_CRL_DIST_POINT"
  field {
    name: "DistPointName"
    type: "R_CRL_DIST_POINT_NAME;"
  }
  field {
    name: "ReasonFlags"
    type: "R_CRYPT_BIT_BLOB;"
  }
  field {
    name: "CRLIssuer"
    type: "R_CERT_ALT_NAME_INFO;"
  }
}
struct {
  name: "_CRL_DIST_POINT"
  field {
    name: "DistPointName"
    type: "R_CRL_DIST_POINT_NAME;"
  }
  field {
    name: "ReasonFlags"
    type: "R_CRYPT_BIT_BLOB;"
  }
  field {
    name: "CRLIssuer"
    type: "R_CERT_ALT_NAME_INFO;"
  }
}
struct {
  name: "_CRL_DIST_POINTS_INFO"
  field {
    name: "cDistPoint"
    type: "UI"
  }
  field {
    name: "rgDistPoint"
    type: "*R_CRL_DIST_POINT;;"
  }
}
struct {
  name: "_CRL_DIST_POINTS_INFO"
  field {
    name: "cDistPoint"
    type: "UI"
  }
  field {
    name: "rgDistPoint"
    type: "*R_CRL_DIST_POINT;;"
  }
}
struct {
  name: "_CROSS_CERT_DIST_POINTS_INFO"
  field {
    name: "dwSyncDeltaTime"
    type: "UI"
  }
  field {
    name: "cDistPoint"
    type: "UI"
  }
  field {
    name: "rgDistPoint"
    type: "*R_CERT_ALT_NAME_INFO;;"
  }
}
struct {
  name: "_CROSS_CERT_DIST_POINTS_INFO"
  field {
    name: "dwSyncDeltaTime"
    type: "UI"
  }
  field {
    name: "cDistPoint"
    type: "UI"
  }
  field {
    name: "rgDistPoint"
    type: "*R_CERT_ALT_NAME_INFO;;"
  }
}
struct {
  name: "_CERT_PAIR"
  field {
    name: "Forward"
    type: "R_CRYPTOAPI_BLOB;"
  }
  field {
    name: "Reverse"
    type: "R_CRYPTOAPI_BLOB;"
  }
}
struct {
  name: "_CERT_PAIR"
  field {
    name: "Forward"
    type: "R_CRYPTOAPI_BLOB;"
  }
  field {
    name: "Reverse"
    type: "R_CRYPTOAPI_BLOB;"
  }
}
struct {
  name: "_CRL_ISSUING_DIST_POINT"
  field {
    name: "DistPointName"
    type: "R_CRL_DIST_POINT_NAME;"
  }
  field {
    name: "fOnlyContainsUserCerts"
    type: "I"
  }
  field {
    name: "fOnlyContainsCACerts"
    type: "I"
  }
  field {
    name: "OnlySomeReasonFlags"
    type: "R_CRYPT_BIT_BLOB;"
  }
  field {
    name: "fIndirectCRL"
    type: "I"
  }
}
struct {
  name: "_CRL_ISSUING_DIST_POINT"
  field {
    name: "DistPointName"
    type: "R_CRL_DIST_POINT_NAME;"
  }
  field {
    name: "fOnlyContainsUserCerts"
    type: "I"
  }
  field {
    name: "fOnlyContainsCACerts"
    type: "I"
  }
  field {
    name: "OnlySomeReasonFlags"
    type: "R_CRYPT_BIT_BLOB;"
  }
  field {
    name: "fIndirectCRL"
    type: "I"
  }
}
struct {
  name: "_CERT_GENERAL_SUBTREE"
  field {
    name: "Base"
    type: "R_CERT_ALT_NAME_ENTRY;"
  }
  field {
    name: "dwMinimum"
    type: "UI"
  }
  field {
    name: "fMaximum"
    type: "I"
  }
  field {
    name: "dwMaximum"
    type: "UI"
  }
}
struct {
  name: "_CERT_GENERAL_SUBTREE"
  field {
    name: "Base"
    type: "R_CERT_ALT_NAME_ENTRY;"
  }
  field {
    name: "dwMinimum"
    type: "UI"
  }
  field {
    name: "fMaximum"
    type: "I"
  }
  field {
    name: "dwMaximum"
    type: "UI"
  }
}
struct {
  name: "_CERT_NAME_CONSTRAINTS_INFO"
  field {
    name: "cPermittedSubtree"
    type: "UI"
  }
  field {
    name: "rgPermittedSubtree"
    type: "*R_CERT_GENERAL_SUBTREE;;"
  }
  field {
    name: "cExcludedSubtree"
    type: "UI"
  }
  field {
    name: "rgExcludedSubtree"
    type: "*R_CERT_GENERAL_SUBTREE;;"
  }
}
struct {
  name: "_CERT_NAME_CONSTRAINTS_INFO"
  field {
    name: "cPermittedSubtree"
    type: "UI"
  }
  field {
    name: "rgPermittedSubtree"
    type: "*R_CERT_GENERAL_SUBTREE;;"
  }
  field {
    name: "cExcludedSubtree"
    type: "UI"
  }
  field {
    name: "rgExcludedSubtree"
    type: "*R_CERT_GENERAL_SUBTREE;;"
  }
}
struct {
  name: "_CRYPT_ATTRIBUTE"
  field {
    name: "pszObjId"
    type: "*C;"
  }
  field {
    name: "cValue"
    type: "UI"
  }
  field {
    name: "rgValue"
    type: "*R_CRYPTOAPI_BLOB;;"
  }
}
struct {
  name: "_CRYPT_ATTRIBUTE"
  field {
    name: "pszObjId"
    type: "*C;"
  }
  field {
    name: "cValue"
    type: "UI"
  }
  field {
    name: "rgValue"
    type: "*R_CRYPTOAPI_BLOB;;"
  }
}
struct {
  name: "_CRYPT_ATTRIBUTES"
  field {
    name: "cAttr"
    type: "UI"
  }
  field {
    name: "rgAttr"
    type: "*R_CRYPT_ATTRIBUTE;;"
  }
}
struct {
  name: "_CRYPT_ATTRIBUTES"
  field {
    name: "cAttr"
    type: "UI"
  }
  field {
    name: "rgAttr"
    type: "*R_CRYPT_ATTRIBUTE;;"
  }
}
struct {
  name: "_CERT_REQUEST_INFO"
  field {
    name: "dwVersion"
    type: "UI"
  }
  field {
    name: "Subject"
    type: "R_CRYPTOAPI_BLOB;"
  }
  field {
    name: "SubjectPublicKeyInfo"
    type: "R_CERT_PUBLIC_KEY_INFO;"
  }
  field {
    name: "cAttribute"
    type: "UI"
  }
  field {
    name: "rgAttribute"
    type: "*R_CRYPT_ATTRIBUTE;;"
  }
}
struct {
  name: "_CERT_REQUEST_INFO"
  field {
    name: "dwVersion"
    type: "UI"
  }
  field {
    name: "Subject"
    type: "R_CRYPTOAPI_BLOB;"
  }
  field {
    name: "SubjectPublicKeyInfo"
    type: "R_CERT_PUBLIC_KEY_INFO;"
  }
  field {
    name: "cAttribute"
    type: "UI"
  }
  field {
    name: "rgAttribute"
    type: "*R_CRYPT_ATTRIBUTE;;"
  }
}
struct {
  name: "_CERT_KEYGEN_REQUEST_INFO"
  field {
    name: "dwVersion"
    type: "UI"
  }
  field {
    name: "SubjectPublicKeyInfo"
    type: "R_CERT_PUBLIC_KEY_INFO;"
  }
  field {
    name: "pwszChallengeString"
    type: "*US;"
  }
}
struct {
  name: "_CERT_KEYGEN_REQUEST_INFO"
  field {
    name: "dwVersion"
    type: "UI"
  }
  field {
    name: "SubjectPublicKeyInfo"
    type: "R_CERT_PUBLIC_KEY_INFO;"
  }
  field {
    name: "pwszChallengeString"
    type: "*US;"
  }
}
struct {
  name: "_CERT_SIGNED_CONTENT_INFO"
  field {
    name: "ToBeSigned"
    type: "R_CRYPTOAPI_BLOB;"
  }
  field {
    name: "SignatureAlgorithm"
    type: "R_CRYPT_ALGORITHM_IDENTIFIER;"
  }
  field {
    name: "Signature"
    type: "R_CRYPT_BIT_BLOB;"
  }
}
struct {
  name: "_CERT_SIGNED_CONTENT_INFO"
  field {
    name: "ToBeSigned"
    type: "R_CRYPTOAPI_BLOB;"
  }
  field {
    name: "SignatureAlgorithm"
    type: "R_CRYPT_ALGORITHM_IDENTIFIER;"
  }
  field {
    name: "Signature"
    type: "R_CRYPT_BIT_BLOB;"
  }
}
struct {
  name: "_CRL_CONTEXT"
  field {
    name: "dwCertEncodingType"
    type: "UI"
  }
  field {
    name: "pbCrlEncoded"
    type: "*UB;"
  }
  field {
    name: "cbCrlEncoded"
    type: "UI"
  }
  field {
    name: "pCrlInfo"
    type: "*R_CRL_INFO;;"
  }
  field {
    name: "hCertStore"
    type: "*V;"
  }
}
struct {
  name: "_CRL_CONTEXT"
  field {
    name: "dwCertEncodingType"
    type: "UI"
  }
  field {
    name: "pbCrlEncoded"
    type: "*UB;"
  }
  field {
    name: "cbCrlEncoded"
    type: "UI"
  }
  field {
    name: "pCrlInfo"
    type: "*R_CRL_INFO;;"
  }
  field {
    name: "hCertStore"
    type: "*V;"
  }
}
struct {
  name: "_CERT_DSS_PARAMETERS"
  field {
    name: "p"
    type: "R_CRYPTOAPI_BLOB;"
  }
  field {
    name: "q"
    type: "R_CRYPTOAPI_BLOB;"
  }
  field {
    name: "g"
    type: "R_CRYPTOAPI_BLOB;"
  }
}
struct {
  name: "_CERT_DSS_PARAMETERS"
  field {
    name: "p"
    type: "R_CRYPTOAPI_BLOB;"
  }
  field {
    name: "q"
    type: "R_CRYPTOAPI_BLOB;"
  }
  field {
    name: "g"
    type: "R_CRYPTOAPI_BLOB;"
  }
}
struct {
  name: "_CERT_DH_PARAMETERS"
  field {
    name: "p"
    type: "R_CRYPTOAPI_BLOB;"
  }
  field {
    name: "g"
    type: "R_CRYPTOAPI_BLOB;"
  }
}
struct {
  name: "_CERT_DH_PARAMETERS"
  field {
    name: "p"
    type: "R_CRYPTOAPI_BLOB;"
  }
  field {
    name: "g"
    type: "R_CRYPTOAPI_BLOB;"
  }
}
struct {
  name: "_CERT_X942_DH_VALIDATION_PARAMS"
  field {
    name: "seed"
    type: "R_CRYPT_BIT_BLOB;"
  }
  field {
    name: "pgenCounter"
    type: "UI"
  }
}
struct {
  name: "_CERT_X942_DH_VALIDATION_PARAMS"
  field {
    name: "seed"
    type: "R_CRYPT_BIT_BLOB;"
  }
  field {
    name: "pgenCounter"
    type: "UI"
  }
}
struct {
  name: "_CERT_X942_DH_PARAMETERS"
  field {
    name: "p"
    type: "R_CRYPTOAPI_BLOB;"
  }
  field {
    name: "g"
    type: "R_CRYPTOAPI_BLOB;"
  }
  field {
    name: "q"
    type: "R_CRYPTOAPI_BLOB;"
  }
  field {
    name: "j"
    type: "R_CRYPTOAPI_BLOB;"
  }
  field {
    name: "pValidationParams"
    type: "*R_CERT_X942_DH_VALIDATION_PARAMS;;"
  }
}
struct {
  name: "_CERT_X942_DH_PARAMETERS"
  field {
    name: "p"
    type: "R_CRYPTOAPI_BLOB;"
  }
  field {
    name: "g"
    type: "R_CRYPTOAPI_BLOB;"
  }
  field {
    name: "q"
    type: "R_CRYPTOAPI_BLOB;"
  }
  field {
    name: "j"
    type: "R_CRYPTOAPI_BLOB;"
  }
  field {
    name: "pValidationParams"
    type: "*R_CERT_X942_DH_VALIDATION_PARAMS;;"
  }
}
struct {
  name: "_CRYPT_X942_OTHER_INFO"
  field {
    name: "pszContentEncryptionObjId"
    type: "*C;"
  }
  field {
    name: "rgbCounter"
    type: "X(ConstantArray.BYTE [4])"
  }
  field {
    name: "rgbKeyLength"
    type: "X(ConstantArray.BYTE [4])"
  }
  field {
    name: "PubInfo"
    type: "R_CRYPTOAPI_BLOB;"
  }
}
struct {
  name: "_CRYPT_X942_OTHER_INFO"
  field {
    name: "pszContentEncryptionObjId"
    type: "*C;"
  }
  field {
    name: "rgbCounter"
    type: "X(ConstantArray.BYTE [4])"
  }
  field {
    name: "rgbKeyLength"
    type: "X(ConstantArray.BYTE [4])"
  }
  field {
    name: "PubInfo"
    type: "R_CRYPTOAPI_BLOB;"
  }
}
struct {
  name: "_CRYPT_RC2_CBC_PARAMETERS"
  field {
    name: "dwVersion"
    type: "UI"
  }
  field {
    name: "fIV"
    type: "I"
  }
  field {
    name: "rgbIV"
    type: "X(ConstantArray.BYTE [4])"
  }
}
struct {
  name: "_CRYPT_RC2_CBC_PARAMETERS"
  field {
    name: "dwVersion"
    type: "UI"
  }
  field {
    name: "fIV"
    type: "I"
  }
  field {
    name: "rgbIV"
    type: "X(ConstantArray.BYTE [4])"
  }
}
struct {
  name: "_CRYPT_SMIME_CAPABILITY"
  field {
    name: "pszObjId"
    type: "*C;"
  }
  field {
    name: "Parameters"
    type: "R_CRYPTOAPI_BLOB;"
  }
}
struct {
  name: "_CRYPT_SMIME_CAPABILITY"
  field {
    name: "pszObjId"
    type: "*C;"
  }
  field {
    name: "Parameters"
    type: "R_CRYPTOAPI_BLOB;"
  }
}
struct {
  name: "_CRYPT_SMIME_CAPABILITIES"
  field {
    name: "cCapability"
    type: "UI"
  }
  field {
    name: "rgCapability"
    type: "*R_CRYPT_SMIME_CAPABILITY;;"
  }
}
struct {
  name: "_CRYPT_SMIME_CAPABILITIES"
  field {
    name: "cCapability"
    type: "UI"
  }
  field {
    name: "rgCapability"
    type: "*R_CRYPT_SMIME_CAPABILITY;;"
  }
}
struct {
  name: "_VTableProvStruc"
  field {
    name: "Version"
    type: "UI"
  }
  field {
    name: "FuncVerifyImage"
    type: "*(.)I;"
  }
  field {
    name: "FuncReturnhWnd"
    type: "*(.)I;"
  }
  field {
    name: "dwProvType"
    type: "UI"
  }
  field {
    name: "pbContextInfo"
    type: "*UB;"
  }
  field {
    name: "cbContextInfo"
    type: "UI"
  }
  field {
    name: "pszProvName"
    type: "*C;"
  }
}
struct {
  name: "_VTableProvStruc"
  field {
    name: "Version"
    type: "UI"
  }
  field {
    name: "FuncVerifyImage"
    type: "*(.)I;"
  }
  field {
    name: "FuncReturnhWnd"
    type: "*(.)I;"
  }
  field {
    name: "dwProvType"
    type: "UI"
  }
  field {
    name: "pbContextInfo"
    type: "*UB;"
  }
  field {
    name: "cbContextInfo"
    type: "UI"
  }
  field {
    name: "pszProvName"
    type: "*C;"
  }
}
struct {
  name: "_CERT_PRIVATE_KEY_INFO"
  field {
    name: "Version"
    type: "UI"
  }
  field {
    name: "Algorithm"
    type: "R_CRYPT_ALGORITHM_IDENTIFIER;"
  }
  field {
    name: "PrivateKey"
    type: "R_CRYPTOAPI_BLOB;"
  }
  field {
    name: "pAttributes"
    type: "*R_CRYPT_ATTRIBUTES;;"
  }
}
struct {
  name: "_CERT_PRIVATE_KEY_INFO"
  field {
    name: "Version"
    type: "UI"
  }
  field {
    name: "Algorithm"
    type: "R_CRYPT_ALGORITHM_IDENTIFIER;"
  }
  field {
    name: "PrivateKey"
    type: "R_CRYPTOAPI_BLOB;"
  }
  field {
    name: "pAttributes"
    type: "*R_CRYPT_ATTRIBUTES;;"
  }
}
struct {
  name: "_CTL_USAGE"
  field {
    name: "cUsageIdentifier"
    type: "UI"
  }
  field {
    name: "rgpszUsageIdentifier"
    type: "**C;;"
  }
}
struct {
  name: "_CTL_USAGE"
  field {
    name: "cUsageIdentifier"
    type: "UI"
  }
  field {
    name: "rgpszUsageIdentifier"
    type: "**C;;"
  }
}
struct {
  name: "_CTL_USAGE"
  field {
    name: "cUsageIdentifier"
    type: "UI"
  }
  field {
    name: "rgpszUsageIdentifier"
    type: "**C;;"
  }
}
struct {
  name: "_CTL_USAGE"
  field {
    name: "cUsageIdentifier"
    type: "UI"
  }
  field {
    name: "rgpszUsageIdentifier"
    type: "**C;;"
  }
}
struct {
  name: "_CTL_ENTRY"
  field {
    name: "SubjectIdentifier"
    type: "R_CRYPTOAPI_BLOB;"
  }
  field {
    name: "cAttribute"
    type: "UI"
  }
  field {
    name: "rgAttribute"
    type: "*R_CRYPT_ATTRIBUTE;;"
  }
}
struct {
  name: "_CTL_ENTRY"
  field {
    name: "SubjectIdentifier"
    type: "R_CRYPTOAPI_BLOB;"
  }
  field {
    name: "cAttribute"
    type: "UI"
  }
  field {
    name: "rgAttribute"
    type: "*R_CRYPT_ATTRIBUTE;;"
  }
}
struct {
  name: "_CTL_INFO"
  field {
    name: "dwVersion"
    type: "UI"
  }
  field {
    name: "SubjectUsage"
    type: "R_CTL_USAGE;"
  }
  field {
    name: "ListIdentifier"
    type: "R_CRYPTOAPI_BLOB;"
  }
  field {
    name: "SequenceNumber"
    type: "R_CRYPTOAPI_BLOB;"
  }
  field {
    name: "ThisUpdate"
    type: "R_FILETIME;"
  }
  field {
    name: "NextUpdate"
    type: "R_FILETIME;"
  }
  field {
    name: "SubjectAlgorithm"
    type: "R_CRYPT_ALGORITHM_IDENTIFIER;"
  }
  field {
    name: "cCTLEntry"
    type: "UI"
  }
  field {
    name: "rgCTLEntry"
    type: "*R_CTL_ENTRY;;"
  }
  field {
    name: "cExtension"
    type: "UI"
  }
  field {
    name: "rgExtension"
    type: "*R_CERT_EXTENSION;;"
  }
}
struct {
  name: "_CTL_INFO"
  field {
    name: "dwVersion"
    type: "UI"
  }
  field {
    name: "SubjectUsage"
    type: "R_CTL_USAGE;"
  }
  field {
    name: "ListIdentifier"
    type: "R_CRYPTOAPI_BLOB;"
  }
  field {
    name: "SequenceNumber"
    type: "R_CRYPTOAPI_BLOB;"
  }
  field {
    name: "ThisUpdate"
    type: "R_FILETIME;"
  }
  field {
    name: "NextUpdate"
    type: "R_FILETIME;"
  }
  field {
    name: "SubjectAlgorithm"
    type: "R_CRYPT_ALGORITHM_IDENTIFIER;"
  }
  field {
    name: "cCTLEntry"
    type: "UI"
  }
  field {
    name: "rgCTLEntry"
    type: "*R_CTL_ENTRY;;"
  }
  field {
    name: "cExtension"
    type: "UI"
  }
  field {
    name: "rgExtension"
    type: "*R_CERT_EXTENSION;;"
  }
}
struct {
  name: "_CTL_CONTEXT"
  field {
    name: "dwMsgAndCertEncodingType"
    type: "UI"
  }
  field {
    name: "pbCtlEncoded"
    type: "*UB;"
  }
  field {
    name: "cbCtlEncoded"
    type: "UI"
  }
  field {
    name: "pCtlInfo"
    type: "*R_CTL_INFO;;"
  }
  field {
    name: "hCertStore"
    type: "*V;"
  }
  field {
    name: "hCryptMsg"
    type: "*V;"
  }
  field {
    name: "pbCtlContext"
    type: "*UB;"
  }
  field {
    name: "cbCtlContext"
    type: "UI"
  }
}
struct {
  name: "_CTL_CONTEXT"
  field {
    name: "dwMsgAndCertEncodingType"
    type: "UI"
  }
  field {
    name: "pbCtlEncoded"
    type: "*UB;"
  }
  field {
    name: "cbCtlEncoded"
    type: "UI"
  }
  field {
    name: "pCtlInfo"
    type: "*R_CTL_INFO;;"
  }
  field {
    name: "hCertStore"
    type: "*V;"
  }
  field {
    name: "hCryptMsg"
    type: "*V;"
  }
  field {
    name: "pbCtlContext"
    type: "*UB;"
  }
  field {
    name: "cbCtlContext"
    type: "UI"
  }
}
struct {
  name: "_CRYPT_TIME_STAMP_REQUEST_INFO"
  field {
    name: "pszTimeStampAlgorithm"
    type: "*C;"
  }
  field {
    name: "pszContentType"
    type: "*C;"
  }
  field {
    name: "Content"
    type: "R_CRYPTOAPI_BLOB;"
  }
  field {
    name: "cAttribute"
    type: "UI"
  }
  field {
    name: "rgAttribute"
    type: "*R_CRYPT_ATTRIBUTE;;"
  }
}
struct {
  name: "_CRYPT_TIME_STAMP_REQUEST_INFO"
  field {
    name: "pszTimeStampAlgorithm"
    type: "*C;"
  }
  field {
    name: "pszContentType"
    type: "*C;"
  }
  field {
    name: "Content"
    type: "R_CRYPTOAPI_BLOB;"
  }
  field {
    name: "cAttribute"
    type: "UI"
  }
  field {
    name: "rgAttribute"
    type: "*R_CRYPT_ATTRIBUTE;;"
  }
}
struct {
  name: "_CRYPT_ENROLLMENT_NAME_VALUE_PAIR"
  field {
    name: "pwszName"
    type: "*US;"
  }
  field {
    name: "pwszValue"
    type: "*US;"
  }
}
struct {
  name: "_CRYPT_ENROLLMENT_NAME_VALUE_PAIR"
  field {
    name: "pwszName"
    type: "*US;"
  }
  field {
    name: "pwszValue"
    type: "*US;"
  }
}
struct {
  name: "_CMSG_SIGNER_INFO"
  field {
    name: "dwVersion"
    type: "UI"
  }
  field {
    name: "Issuer"
    type: "R_CRYPTOAPI_BLOB;"
  }
  field {
    name: "SerialNumber"
    type: "R_CRYPTOAPI_BLOB;"
  }
  field {
    name: "HashAlgorithm"
    type: "R_CRYPT_ALGORITHM_IDENTIFIER;"
  }
  field {
    name: "HashEncryptionAlgorithm"
    type: "R_CRYPT_ALGORITHM_IDENTIFIER;"
  }
  field {
    name: "EncryptedHash"
    type: "R_CRYPTOAPI_BLOB;"
  }
  field {
    name: "AuthAttrs"
    type: "R_CRYPT_ATTRIBUTES;"
  }
  field {
    name: "UnauthAttrs"
    type: "R_CRYPT_ATTRIBUTES;"
  }
}
struct {
  name: "_CMSG_SIGNER_INFO"
  field {
    name: "dwVersion"
    type: "UI"
  }
  field {
    name: "Issuer"
    type: "R_CRYPTOAPI_BLOB;"
  }
  field {
    name: "SerialNumber"
    type: "R_CRYPTOAPI_BLOB;"
  }
  field {
    name: "HashAlgorithm"
    type: "R_CRYPT_ALGORITHM_IDENTIFIER;"
  }
  field {
    name: "HashEncryptionAlgorithm"
    type: "R_CRYPT_ALGORITHM_IDENTIFIER;"
  }
  field {
    name: "EncryptedHash"
    type: "R_CRYPTOAPI_BLOB;"
  }
  field {
    name: "AuthAttrs"
    type: "R_CRYPT_ATTRIBUTES;"
  }
  field {
    name: "UnauthAttrs"
    type: "R_CRYPT_ATTRIBUTES;"
  }
}
struct {
  name: "_CERT_REVOCATION_CRL_INFO"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "pBaseCrlContext"
    type: "*cR_CRL_CONTEXT;;"
  }
  field {
    name: "pDeltaCrlContext"
    type: "*cR_CRL_CONTEXT;;"
  }
  field {
    name: "pCrlEntry"
    type: "*R_CRL_ENTRY;;"
  }
  field {
    name: "fDeltaCrlEntry"
    type: "I"
  }
}
struct {
  name: "_CERT_REVOCATION_CRL_INFO"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "pBaseCrlContext"
    type: "*cR_CRL_CONTEXT;;"
  }
  field {
    name: "pDeltaCrlContext"
    type: "*cR_CRL_CONTEXT;;"
  }
  field {
    name: "pCrlEntry"
    type: "*R_CRL_ENTRY;;"
  }
  field {
    name: "fDeltaCrlEntry"
    type: "I"
  }
}
struct {
  name: "_CERT_REVOCATION_INFO"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "dwRevocationResult"
    type: "UI"
  }
  field {
    name: "pszRevocationOid"
    type: "*cC;"
  }
  field {
    name: "pvOidSpecificInfo"
    type: "*V;"
  }
  field {
    name: "fHasFreshnessTime"
    type: "I"
  }
  field {
    name: "dwFreshnessTime"
    type: "UI"
  }
  field {
    name: "pCrlInfo"
    type: "*R_CERT_REVOCATION_CRL_INFO;;"
  }
}
struct {
  name: "_CERT_REVOCATION_INFO"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "dwRevocationResult"
    type: "UI"
  }
  field {
    name: "pszRevocationOid"
    type: "*cC;"
  }
  field {
    name: "pvOidSpecificInfo"
    type: "*V;"
  }
  field {
    name: "fHasFreshnessTime"
    type: "I"
  }
  field {
    name: "dwFreshnessTime"
    type: "UI"
  }
  field {
    name: "pCrlInfo"
    type: "*R_CERT_REVOCATION_CRL_INFO;;"
  }
}
struct {
  name: "_CERT_REVOCATION_PARA"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "pIssuerCert"
    type: "*cR_CERT_CONTEXT;;"
  }
  field {
    name: "cCertStore"
    type: "UI"
  }
  field {
    name: "rgCertStore"
    type: "**V;;"
  }
  field {
    name: "hCrlStore"
    type: "*V;"
  }
  field {
    name: "pftTimeToUse"
    type: "*R_FILETIME;;"
  }
}
struct {
  name: "_CERT_REVOCATION_PARA"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "pIssuerCert"
    type: "*cR_CERT_CONTEXT;;"
  }
  field {
    name: "cCertStore"
    type: "UI"
  }
  field {
    name: "rgCertStore"
    type: "**V;;"
  }
  field {
    name: "hCrlStore"
    type: "*V;"
  }
  field {
    name: "pftTimeToUse"
    type: "*R_FILETIME;;"
  }
}
struct {
  name: "_CTL_VERIFY_USAGE_PARA"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "ListIdentifier"
    type: "R_CRYPTOAPI_BLOB;"
  }
  field {
    name: "cCtlStore"
    type: "UI"
  }
  field {
    name: "rghCtlStore"
    type: "**V;;"
  }
  field {
    name: "cSignerStore"
    type: "UI"
  }
  field {
    name: "rghSignerStore"
    type: "**V;;"
  }
}
struct {
  name: "_CTL_VERIFY_USAGE_PARA"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "ListIdentifier"
    type: "R_CRYPTOAPI_BLOB;"
  }
  field {
    name: "cCtlStore"
    type: "UI"
  }
  field {
    name: "rghCtlStore"
    type: "**V;;"
  }
  field {
    name: "cSignerStore"
    type: "UI"
  }
  field {
    name: "rghSignerStore"
    type: "**V;;"
  }
}
struct {
  name: "_CTL_VERIFY_USAGE_STATUS"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "dwError"
    type: "UI"
  }
  field {
    name: "dwFlags"
    type: "UI"
  }
  field {
    name: "ppCtl"
    type: "**cR_CTL_CONTEXT;;;"
  }
  field {
    name: "dwCtlEntryIndex"
    type: "UI"
  }
  field {
    name: "ppSigner"
    type: "**cR_CERT_CONTEXT;;;"
  }
  field {
    name: "dwSignerIndex"
    type: "UI"
  }
}
struct {
  name: "_CTL_VERIFY_USAGE_STATUS"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "dwError"
    type: "UI"
  }
  field {
    name: "dwFlags"
    type: "UI"
  }
  field {
    name: "ppCtl"
    type: "**cR_CTL_CONTEXT;;;"
  }
  field {
    name: "dwCtlEntryIndex"
    type: "UI"
  }
  field {
    name: "ppSigner"
    type: "**cR_CERT_CONTEXT;;;"
  }
  field {
    name: "dwSignerIndex"
    type: "UI"
  }
}
struct {
  name: "_CERT_CHAIN"
  field {
    name: "cCerts"
    type: "UI"
  }
  field {
    name: "certs"
    type: "*R_CRYPTOAPI_BLOB;;"
  }
  field {
    name: "keyLocatorInfo"
    type: "R_CRYPT_KEY_PROV_INFO;"
  }
}
struct {
  name: "_CERT_CHAIN"
  field {
    name: "cCerts"
    type: "UI"
  }
  field {
    name: "certs"
    type: "*R_CRYPTOAPI_BLOB;;"
  }
  field {
    name: "keyLocatorInfo"
    type: "R_CRYPT_KEY_PROV_INFO;"
  }
}
struct {
  name: "_CERT_REVOCATION_STATUS"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "dwIndex"
    type: "UI"
  }
  field {
    name: "dwError"
    type: "UI"
  }
  field {
    name: "dwReason"
    type: "UI"
  }
  field {
    name: "fHasFreshnessTime"
    type: "I"
  }
  field {
    name: "dwFreshnessTime"
    type: "UI"
  }
}
struct {
  name: "_CERT_REVOCATION_STATUS"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "dwIndex"
    type: "UI"
  }
  field {
    name: "dwError"
    type: "UI"
  }
  field {
    name: "dwReason"
    type: "UI"
  }
  field {
    name: "fHasFreshnessTime"
    type: "I"
  }
  field {
    name: "dwFreshnessTime"
    type: "UI"
  }
}
struct {
  name: "_CERT_TRUST_LIST_INFO"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "pCtlEntry"
    type: "*R_CTL_ENTRY;;"
  }
  field {
    name: "pCtlContext"
    type: "*cR_CTL_CONTEXT;;"
  }
}
struct {
  name: "_CERT_TRUST_LIST_INFO"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "pCtlEntry"
    type: "*R_CTL_ENTRY;;"
  }
  field {
    name: "pCtlContext"
    type: "*cR_CTL_CONTEXT;;"
  }
}
struct {
  name: "_CERT_TRUST_STATUS"
  field {
    name: "dwErrorStatus"
    type: "UI"
  }
  field {
    name: "dwInfoStatus"
    type: "UI"
  }
}
struct {
  name: "_CERT_TRUST_STATUS"
  field {
    name: "dwErrorStatus"
    type: "UI"
  }
  field {
    name: "dwInfoStatus"
    type: "UI"
  }
}
struct {
  name: "_CERT_CHAIN_ELEMENT"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "pCertContext"
    type: "*cR_CERT_CONTEXT;;"
  }
  field {
    name: "TrustStatus"
    type: "R_CERT_TRUST_STATUS;"
  }
  field {
    name: "pRevocationInfo"
    type: "*R_CERT_REVOCATION_INFO;;"
  }
  field {
    name: "pIssuanceUsage"
    type: "*R_CTL_USAGE;;"
  }
  field {
    name: "pApplicationUsage"
    type: "*R_CTL_USAGE;;"
  }
  field {
    name: "pwszExtendedErrorInfo"
    type: "*cUS;"
  }
}
struct {
  name: "_CERT_CHAIN_ELEMENT"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "pCertContext"
    type: "*cR_CERT_CONTEXT;;"
  }
  field {
    name: "TrustStatus"
    type: "R_CERT_TRUST_STATUS;"
  }
  field {
    name: "pRevocationInfo"
    type: "*R_CERT_REVOCATION_INFO;;"
  }
  field {
    name: "pIssuanceUsage"
    type: "*R_CTL_USAGE;;"
  }
  field {
    name: "pApplicationUsage"
    type: "*R_CTL_USAGE;;"
  }
  field {
    name: "pwszExtendedErrorInfo"
    type: "*cUS;"
  }
}
struct {
  name: "_CERT_SIMPLE_CHAIN"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "TrustStatus"
    type: "R_CERT_TRUST_STATUS;"
  }
  field {
    name: "cElement"
    type: "UI"
  }
  field {
    name: "rgpElement"
    type: "**R_CERT_CHAIN_ELEMENT;;;"
  }
  field {
    name: "pTrustListInfo"
    type: "*R_CERT_TRUST_LIST_INFO;;"
  }
  field {
    name: "fHasRevocationFreshnessTime"
    type: "I"
  }
  field {
    name: "dwRevocationFreshnessTime"
    type: "UI"
  }
}
struct {
  name: "_CERT_SIMPLE_CHAIN"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "TrustStatus"
    type: "R_CERT_TRUST_STATUS;"
  }
  field {
    name: "cElement"
    type: "UI"
  }
  field {
    name: "rgpElement"
    type: "**R_CERT_CHAIN_ELEMENT;;;"
  }
  field {
    name: "pTrustListInfo"
    type: "*R_CERT_TRUST_LIST_INFO;;"
  }
  field {
    name: "fHasRevocationFreshnessTime"
    type: "I"
  }
  field {
    name: "dwRevocationFreshnessTime"
    type: "UI"
  }
}
struct {
  name: "_CERT_CHAIN_CONTEXT"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "TrustStatus"
    type: "R_CERT_TRUST_STATUS;"
  }
  field {
    name: "cChain"
    type: "UI"
  }
  field {
    name: "rgpChain"
    type: "**R_CERT_SIMPLE_CHAIN;;;"
  }
  field {
    name: "cLowerQualityChainContext"
    type: "UI"
  }
  field {
    name: "rgpLowerQualityChainContext"
    type: "**cR_CERT_CHAIN_CONTEXT;;;"
  }
  field {
    name: "fHasRevocationFreshnessTime"
    type: "I"
  }
  field {
    name: "dwRevocationFreshnessTime"
    type: "UI"
  }
}
struct {
  name: "_CERT_CHAIN_POLICY_PARA"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "dwFlags"
    type: "UI"
  }
  field {
    name: "pvExtraPolicyPara"
    type: "*V;"
  }
}
struct {
  name: "_CERT_CHAIN_POLICY_PARA"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "dwFlags"
    type: "UI"
  }
  field {
    name: "pvExtraPolicyPara"
    type: "*V;"
  }
}
struct {
  name: "_CERT_CHAIN_POLICY_STATUS"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "dwError"
    type: "UI"
  }
  field {
    name: "lChainIndex"
    type: "I"
  }
  field {
    name: "lElementIndex"
    type: "I"
  }
  field {
    name: "pvExtraPolicyStatus"
    type: "*V;"
  }
}
struct {
  name: "_CERT_CHAIN_POLICY_STATUS"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "dwError"
    type: "UI"
  }
  field {
    name: "lChainIndex"
    type: "I"
  }
  field {
    name: "lElementIndex"
    type: "I"
  }
  field {
    name: "pvExtraPolicyStatus"
    type: "*V;"
  }
}
struct {
  name: "_AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_PARA"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "dwRegPolicySettings"
    type: "UI"
  }
  field {
    name: "pSignerInfo"
    type: "*R_CMSG_SIGNER_INFO;;"
  }
}
struct {
  name: "_AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_PARA"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "dwRegPolicySettings"
    type: "UI"
  }
  field {
    name: "pSignerInfo"
    type: "*R_CMSG_SIGNER_INFO;;"
  }
}
struct {
  name: "_AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_STATUS"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "fCommercial"
    type: "I"
  }
}
struct {
  name: "_AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_STATUS"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "fCommercial"
    type: "I"
  }
}
struct {
  name: "_AUTHENTICODE_TS_EXTRA_CERT_CHAIN_POLICY_PARA"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "dwRegPolicySettings"
    type: "UI"
  }
  field {
    name: "fCommercial"
    type: "I"
  }
}
struct {
  name: "_AUTHENTICODE_TS_EXTRA_CERT_CHAIN_POLICY_PARA"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "dwRegPolicySettings"
    type: "UI"
  }
  field {
    name: "fCommercial"
    type: "I"
  }
}
struct {
  name: "_HTTPSPolicyCallbackData"
  field {
    name: "dwAuthType"
    type: "UI"
  }
  field {
    name: "fdwChecks"
    type: "UI"
  }
  field {
    name: "pwszServerName"
    type: "*US;"
  }
}
struct {
  name: "_HTTPSPolicyCallbackData"
  field {
    name: "dwAuthType"
    type: "UI"
  }
  field {
    name: "fdwChecks"
    type: "UI"
  }
  field {
    name: "pwszServerName"
    type: "*US;"
  }
}
struct {
  name: "_HTTPSPolicyCallbackData"
  field {
    name: "dwAuthType"
    type: "UI"
  }
  field {
    name: "fdwChecks"
    type: "UI"
  }
  field {
    name: "pwszServerName"
    type: "*US;"
  }
}
struct {
  name: "_HTTPSPolicyCallbackData"
  field {
    name: "dwAuthType"
    type: "UI"
  }
  field {
    name: "fdwChecks"
    type: "UI"
  }
  field {
    name: "pwszServerName"
    type: "*US;"
  }
}
struct {
  name: "_CERT_USAGE_MATCH"
  field {
    name: "dwType"
    type: "UI"
  }
  field {
    name: "Usage"
    type: "R_CTL_USAGE;"
  }
}
struct {
  name: "_CERT_USAGE_MATCH"
  field {
    name: "dwType"
    type: "UI"
  }
  field {
    name: "Usage"
    type: "R_CTL_USAGE;"
  }
}
struct {
  name: "_CTL_USAGE_MATCH"
  field {
    name: "dwType"
    type: "UI"
  }
  field {
    name: "Usage"
    type: "R_CTL_USAGE;"
  }
}
struct {
  name: "_CTL_USAGE_MATCH"
  field {
    name: "dwType"
    type: "UI"
  }
  field {
    name: "Usage"
    type: "R_CTL_USAGE;"
  }
}
struct {
  name: "_CERT_CHAIN_PARA"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "RequestedUsage"
    type: "R_CERT_USAGE_MATCH;"
  }
}
struct {
  name: "_CERT_CHAIN_PARA"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "RequestedUsage"
    type: "R_CERT_USAGE_MATCH;"
  }
}
struct {
  name: "_CERT_SYSTEM_STORE_INFO"
  field {
    name: "cbSize"
    type: "UI"
  }
}
struct {
  name: "_CERT_SYSTEM_STORE_INFO"
  field {
    name: "cbSize"
    type: "UI"
  }
}
struct {
  name: "_CERT_PHYSICAL_STORE_INFO"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "pszOpenStoreProvider"
    type: "*C;"
  }
  field {
    name: "dwOpenEncodingType"
    type: "UI"
  }
  field {
    name: "dwOpenFlags"
    type: "UI"
  }
  field {
    name: "OpenParameters"
    type: "R_CRYPTOAPI_BLOB;"
  }
  field {
    name: "dwFlags"
    type: "UI"
  }
  field {
    name: "dwPriority"
    type: "UI"
  }
}
struct {
  name: "_CERT_PHYSICAL_STORE_INFO"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "pszOpenStoreProvider"
    type: "*C;"
  }
  field {
    name: "dwOpenEncodingType"
    type: "UI"
  }
  field {
    name: "dwOpenFlags"
    type: "UI"
  }
  field {
    name: "OpenParameters"
    type: "R_CRYPTOAPI_BLOB;"
  }
  field {
    name: "dwFlags"
    type: "UI"
  }
  field {
    name: "dwPriority"
    type: "UI"
  }
}
struct {
  name: "_CERT_SYSTEM_STORE_RELOCATE_PARA"
}
struct {
  name: "_CERT_SYSTEM_STORE_RELOCATE_PARA"
}
struct {
  name: "_CRYPT_ENCODE_PARA"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "pfnAlloc"
    type: "*(UI)*V;;"
  }
  field {
    name: "pfnFree"
    type: "*(*V;)V;"
  }
}
struct {
  name: "_CRYPT_ENCODE_PARA"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "pfnAlloc"
    type: "*(UI)*V;;"
  }
  field {
    name: "pfnFree"
    type: "*(*V;)V;"
  }
}
struct {
  name: "_CRYPT_DECODE_PARA"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "pfnAlloc"
    type: "*(UI)*V;;"
  }
  field {
    name: "pfnFree"
    type: "*(*V;)V;"
  }
}
struct {
  name: "_CRYPT_DECODE_PARA"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "pfnAlloc"
    type: "*(UI)*V;;"
  }
  field {
    name: "pfnFree"
    type: "*(*V;)V;"
  }
}
struct {
  name: "_CERT_STORE_PROV_INFO"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "cStoreProvFunc"
    type: "UI"
  }
  field {
    name: "rgpvStoreProvFunc"
    type: "**V;;"
  }
  field {
    name: "hStoreProv"
    type: "*V;"
  }
  field {
    name: "dwStoreProvFlags"
    type: "UI"
  }
  field {
    name: "hStoreProvFuncAddr2"
    type: "*V;"
  }
}
struct {
  name: "_CERT_STORE_PROV_INFO"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "cStoreProvFunc"
    type: "UI"
  }
  field {
    name: "rgpvStoreProvFunc"
    type: "**V;;"
  }
  field {
    name: "hStoreProv"
    type: "*V;"
  }
  field {
    name: "dwStoreProvFlags"
    type: "UI"
  }
  field {
    name: "hStoreProvFuncAddr2"
    type: "*V;"
  }
}
struct {
  name: "_CERT_STORE_PROV_FIND_INFO"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "dwMsgAndCertEncodingType"
    type: "UI"
  }
  field {
    name: "dwFindFlags"
    type: "UI"
  }
  field {
    name: "dwFindType"
    type: "UI"
  }
  field {
    name: "pvFindPara"
    type: "*cV;"
  }
}
struct {
  name: "_CERT_STORE_PROV_FIND_INFO"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "dwMsgAndCertEncodingType"
    type: "UI"
  }
  field {
    name: "dwFindFlags"
    type: "UI"
  }
  field {
    name: "dwFindType"
    type: "UI"
  }
  field {
    name: "pvFindPara"
    type: "*cV;"
  }
}
struct {
  name: "_CERT_CREATE_CONTEXT_PARA"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "pfnFree"
    type: "*(*V;)V;"
  }
  field {
    name: "pvFree"
    type: "*V;"
  }
}
struct {
  name: "_CERT_CREATE_CONTEXT_PARA"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "pfnFree"
    type: "*(*V;)V;"
  }
  field {
    name: "pvFree"
    type: "*V;"
  }
}
struct {
  name: "_CRYPT_OID_FUNC_ENTRY"
  field {
    name: "pszOID"
    type: "*cC;"
  }
  field {
    name: "pvFuncAddr"
    type: "*V;"
  }
}
struct {
  name: "_CRYPT_OID_FUNC_ENTRY"
  field {
    name: "pszOID"
    type: "*cC;"
  }
  field {
    name: "pvFuncAddr"
    type: "*V;"
  }
}
struct {
  name: "_CRYPT_OID_INFO"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "pszOID"
    type: "*cC;"
  }
  field {
    name: "pwszName"
    type: "*cUS;"
  }
  field {
    name: "dwGroupId"
    type: "UI"
  }
  field {
    name: "ExtraInfo"
    type: "R_CRYPTOAPI_BLOB;"
  }
}
struct {
  name: "_CRYPT_OID_INFO"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "pszOID"
    type: "*cC;"
  }
  field {
    name: "pwszName"
    type: "*cUS;"
  }
  field {
    name: "dwGroupId"
    type: "UI"
  }
  field {
    name: "ExtraInfo"
    type: "R_CRYPTOAPI_BLOB;"
  }
}
struct {
  name: "_CRYPT_SIGN_MESSAGE_PARA"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "dwMsgEncodingType"
    type: "UI"
  }
  field {
    name: "pSigningCert"
    type: "*cR_CERT_CONTEXT;;"
  }
  field {
    name: "HashAlgorithm"
    type: "R_CRYPT_ALGORITHM_IDENTIFIER;"
  }
  field {
    name: "pvHashAuxInfo"
    type: "*V;"
  }
  field {
    name: "cMsgCert"
    type: "UI"
  }
  field {
    name: "rgpMsgCert"
    type: "**cR_CERT_CONTEXT;;;"
  }
  field {
    name: "cMsgCrl"
    type: "UI"
  }
  field {
    name: "rgpMsgCrl"
    type: "**cR_CRL_CONTEXT;;;"
  }
  field {
    name: "cAuthAttr"
    type: "UI"
  }
  field {
    name: "rgAuthAttr"
    type: "*R_CRYPT_ATTRIBUTE;;"
  }
  field {
    name: "cUnauthAttr"
    type: "UI"
  }
  field {
    name: "rgUnauthAttr"
    type: "*R_CRYPT_ATTRIBUTE;;"
  }
  field {
    name: "dwFlags"
    type: "UI"
  }
  field {
    name: "dwInnerContentType"
    type: "UI"
  }
}
struct {
  name: "_CRYPT_SIGN_MESSAGE_PARA"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "dwMsgEncodingType"
    type: "UI"
  }
  field {
    name: "pSigningCert"
    type: "*cR_CERT_CONTEXT;;"
  }
  field {
    name: "HashAlgorithm"
    type: "R_CRYPT_ALGORITHM_IDENTIFIER;"
  }
  field {
    name: "pvHashAuxInfo"
    type: "*V;"
  }
  field {
    name: "cMsgCert"
    type: "UI"
  }
  field {
    name: "rgpMsgCert"
    type: "**cR_CERT_CONTEXT;;;"
  }
  field {
    name: "cMsgCrl"
    type: "UI"
  }
  field {
    name: "rgpMsgCrl"
    type: "**cR_CRL_CONTEXT;;;"
  }
  field {
    name: "cAuthAttr"
    type: "UI"
  }
  field {
    name: "rgAuthAttr"
    type: "*R_CRYPT_ATTRIBUTE;;"
  }
  field {
    name: "cUnauthAttr"
    type: "UI"
  }
  field {
    name: "rgUnauthAttr"
    type: "*R_CRYPT_ATTRIBUTE;;"
  }
  field {
    name: "dwFlags"
    type: "UI"
  }
  field {
    name: "dwInnerContentType"
    type: "UI"
  }
}
struct {
  name: "_CRYPT_VERIFY_MESSAGE_PARA"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "dwMsgAndCertEncodingType"
    type: "UI"
  }
  field {
    name: "hCryptProv"
    type: "UI"
  }
  field {
    name: "pfnGetSignerCertificate"
    type: "*(*V;UI*R_CERT_INFO;;*V;)*cR_CERT_CONTEXT;;;"
  }
  field {
    name: "pvGetArg"
    type: "*V;"
  }
}
struct {
  name: "_CRYPT_VERIFY_MESSAGE_PARA"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "dwMsgAndCertEncodingType"
    type: "UI"
  }
  field {
    name: "hCryptProv"
    type: "UI"
  }
  field {
    name: "pfnGetSignerCertificate"
    type: "*(*V;UI*R_CERT_INFO;;*V;)*cR_CERT_CONTEXT;;;"
  }
  field {
    name: "pvGetArg"
    type: "*V;"
  }
}
struct {
  name: "_CRYPT_ENCRYPT_MESSAGE_PARA"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "dwMsgEncodingType"
    type: "UI"
  }
  field {
    name: "hCryptProv"
    type: "UI"
  }
  field {
    name: "ContentEncryptionAlgorithm"
    type: "R_CRYPT_ALGORITHM_IDENTIFIER;"
  }
  field {
    name: "pvEncryptionAuxInfo"
    type: "*V;"
  }
  field {
    name: "dwFlags"
    type: "UI"
  }
  field {
    name: "dwInnerContentType"
    type: "UI"
  }
}
struct {
  name: "_CRYPT_ENCRYPT_MESSAGE_PARA"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "dwMsgEncodingType"
    type: "UI"
  }
  field {
    name: "hCryptProv"
    type: "UI"
  }
  field {
    name: "ContentEncryptionAlgorithm"
    type: "R_CRYPT_ALGORITHM_IDENTIFIER;"
  }
  field {
    name: "pvEncryptionAuxInfo"
    type: "*V;"
  }
  field {
    name: "dwFlags"
    type: "UI"
  }
  field {
    name: "dwInnerContentType"
    type: "UI"
  }
}
struct {
  name: "_CRYPT_DECRYPT_MESSAGE_PARA"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "dwMsgAndCertEncodingType"
    type: "UI"
  }
  field {
    name: "cCertStore"
    type: "UI"
  }
  field {
    name: "rghCertStore"
    type: "**V;;"
  }
}
struct {
  name: "_CRYPT_DECRYPT_MESSAGE_PARA"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "dwMsgAndCertEncodingType"
    type: "UI"
  }
  field {
    name: "cCertStore"
    type: "UI"
  }
  field {
    name: "rghCertStore"
    type: "**V;;"
  }
}
struct {
  name: "_CRYPT_HASH_MESSAGE_PARA"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "dwMsgEncodingType"
    type: "UI"
  }
  field {
    name: "hCryptProv"
    type: "UI"
  }
  field {
    name: "HashAlgorithm"
    type: "R_CRYPT_ALGORITHM_IDENTIFIER;"
  }
  field {
    name: "pvHashAuxInfo"
    type: "*V;"
  }
}
struct {
  name: "_CRYPT_HASH_MESSAGE_PARA"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "dwMsgEncodingType"
    type: "UI"
  }
  field {
    name: "hCryptProv"
    type: "UI"
  }
  field {
    name: "HashAlgorithm"
    type: "R_CRYPT_ALGORITHM_IDENTIFIER;"
  }
  field {
    name: "pvHashAuxInfo"
    type: "*V;"
  }
}
struct {
  name: "_CRYPT_KEY_SIGN_MESSAGE_PARA"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "dwMsgAndCertEncodingType"
    type: "UI"
  }
  field {
    name: "hCryptProv"
    type: "UI"
  }
  field {
    name: "dwKeySpec"
    type: "UI"
  }
  field {
    name: "HashAlgorithm"
    type: "R_CRYPT_ALGORITHM_IDENTIFIER;"
  }
  field {
    name: "pvHashAuxInfo"
    type: "*V;"
  }
}
struct {
  name: "_CRYPT_KEY_SIGN_MESSAGE_PARA"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "dwMsgAndCertEncodingType"
    type: "UI"
  }
  field {
    name: "hCryptProv"
    type: "UI"
  }
  field {
    name: "dwKeySpec"
    type: "UI"
  }
  field {
    name: "HashAlgorithm"
    type: "R_CRYPT_ALGORITHM_IDENTIFIER;"
  }
  field {
    name: "pvHashAuxInfo"
    type: "*V;"
  }
}
struct {
  name: "_CRYPT_KEY_VERIFY_MESSAGE_PARA"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "dwMsgEncodingType"
    type: "UI"
  }
  field {
    name: "hCryptProv"
    type: "UI"
  }
}
struct {
  name: "_CRYPT_KEY_VERIFY_MESSAGE_PARA"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "dwMsgEncodingType"
    type: "UI"
  }
  field {
    name: "hCryptProv"
    type: "UI"
  }
}
struct {
  name: "_CRYPT_URL_ARRAY"
  field {
    name: "cUrl"
    type: "UI"
  }
  field {
    name: "rgwszUrl"
    type: "**US;;"
  }
}
struct {
  name: "_CRYPT_URL_ARRAY"
  field {
    name: "cUrl"
    type: "UI"
  }
  field {
    name: "rgwszUrl"
    type: "**US;;"
  }
}
struct {
  name: "_CRYPT_URL_INFO"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "dwSyncDeltaTime"
    type: "UI"
  }
  field {
    name: "cGroup"
    type: "UI"
  }
  field {
    name: "rgcGroupEntry"
    type: "*UI;"
  }
}
struct {
  name: "_CRYPT_URL_INFO"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "dwSyncDeltaTime"
    type: "UI"
  }
  field {
    name: "cGroup"
    type: "UI"
  }
  field {
    name: "rgcGroupEntry"
    type: "*UI;"
  }
}
struct {
  name: "_CRYPT_ASYNC_RETRIEVAL_COMPLETION"
  field {
    name: "pfnCompletion"
    type: "*(*V;UI*cC;*C;*V;)V;"
  }
  field {
    name: "pvCompletion"
    type: "*V;"
  }
}
struct {
  name: "_CRYPT_ASYNC_RETRIEVAL_COMPLETION"
  field {
    name: "pfnCompletion"
    type: "*(*V;UI*cC;*C;*V;)V;"
  }
  field {
    name: "pvCompletion"
    type: "*V;"
  }
}
struct {
  name: "_CRYPT_BLOB_ARRAY"
  field {
    name: "cBlob"
    type: "UI"
  }
  field {
    name: "rgBlob"
    type: "*R_CRYPTOAPI_BLOB;;"
  }
}
struct {
  name: "_CRYPT_BLOB_ARRAY"
  field {
    name: "cBlob"
    type: "UI"
  }
  field {
    name: "rgBlob"
    type: "*R_CRYPTOAPI_BLOB;;"
  }
}
struct {
  name: "_CRYPT_CREDENTIALS"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "pszCredentialsOid"
    type: "*cC;"
  }
  field {
    name: "pvCredentials"
    type: "*V;"
  }
}
struct {
  name: "_CRYPT_CREDENTIALS"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "pszCredentialsOid"
    type: "*cC;"
  }
  field {
    name: "pvCredentials"
    type: "*V;"
  }
}
struct {
  name: "_CRYPT_PASSWORD_CREDENTIALSA"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "pszUsername"
    type: "*C;"
  }
  field {
    name: "pszPassword"
    type: "*C;"
  }
}
struct {
  name: "_CRYPT_PASSWORD_CREDENTIALSA"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "pszUsername"
    type: "*C;"
  }
  field {
    name: "pszPassword"
    type: "*C;"
  }
}
struct {
  name: "_CRYPT_PASSWORD_CREDENTIALSW"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "pszUsername"
    type: "*US;"
  }
  field {
    name: "pszPassword"
    type: "*US;"
  }
}
struct {
  name: "_CRYPT_PASSWORD_CREDENTIALSW"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "pszUsername"
    type: "*US;"
  }
  field {
    name: "pszPassword"
    type: "*US;"
  }
}
struct {
  name: "_CRYPT_RETRIEVE_AUX_INFO"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "pLastSyncTime"
    type: "*R_FILETIME;;"
  }
  field {
    name: "dwMaxUrlRetrievalByteCount"
    type: "UI"
  }
}
struct {
  name: "_CRYPT_RETRIEVE_AUX_INFO"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "pLastSyncTime"
    type: "*R_FILETIME;;"
  }
  field {
    name: "dwMaxUrlRetrievalByteCount"
    type: "UI"
  }
}
struct {
  name: "_CERT_CRL_CONTEXT_PAIR"
  field {
    name: "pCertContext"
    type: "*cR_CERT_CONTEXT;;"
  }
  field {
    name: "pCrlContext"
    type: "*cR_CRL_CONTEXT;;"
  }
}
struct {
  name: "_CERT_CRL_CONTEXT_PAIR"
  field {
    name: "pCertContext"
    type: "*cR_CERT_CONTEXT;;"
  }
  field {
    name: "pCrlContext"
    type: "*cR_CRL_CONTEXT;;"
  }
}
struct {
  name: "_CRL_FIND_ISSUED_FOR_PARA"
  field {
    name: "pSubjectCert"
    type: "*cR_CERT_CONTEXT;;"
  }
  field {
    name: "pIssuerCert"
    type: "*cR_CERT_CONTEXT;;"
  }
}
struct {
  name: "_CRL_FIND_ISSUED_FOR_PARA"
  field {
    name: "pSubjectCert"
    type: "*cR_CERT_CONTEXT;;"
  }
  field {
    name: "pIssuerCert"
    type: "*cR_CERT_CONTEXT;;"
  }
}
struct {
  name: "_CTL_FIND_USAGE_PARA"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "SubjectUsage"
    type: "R_CTL_USAGE;"
  }
  field {
    name: "ListIdentifier"
    type: "R_CRYPTOAPI_BLOB;"
  }
  field {
    name: "pSigner"
    type: "*R_CERT_INFO;;"
  }
}
struct {
  name: "_CTL_FIND_USAGE_PARA"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "SubjectUsage"
    type: "R_CTL_USAGE;"
  }
  field {
    name: "ListIdentifier"
    type: "R_CRYPTOAPI_BLOB;"
  }
  field {
    name: "pSigner"
    type: "*R_CERT_INFO;;"
  }
}
struct {
  name: "_CTL_FIND_SUBJECT_PARA"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "pUsagePara"
    type: "*R_CTL_FIND_USAGE_PARA;;"
  }
  field {
    name: "dwSubjectType"
    type: "UI"
  }
  field {
    name: "pvSubject"
    type: "*V;"
  }
}
struct {
  name: "_CTL_FIND_SUBJECT_PARA"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "pUsagePara"
    type: "*R_CTL_FIND_USAGE_PARA;;"
  }
  field {
    name: "dwSubjectType"
    type: "UI"
  }
  field {
    name: "pvSubject"
    type: "*V;"
  }
}
struct {
  name: "_CERT_CHAIN_ENGINE_CONFIG"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "hRestrictedRoot"
    type: "*V;"
  }
  field {
    name: "hRestrictedTrust"
    type: "*V;"
  }
  field {
    name: "hRestrictedOther"
    type: "*V;"
  }
  field {
    name: "cAdditionalStore"
    type: "UI"
  }
  field {
    name: "rghAdditionalStore"
    type: "**V;;"
  }
  field {
    name: "dwFlags"
    type: "UI"
  }
  field {
    name: "dwUrlRetrievalTimeout"
    type: "UI"
  }
  field {
    name: "MaximumCachedCertificates"
    type: "UI"
  }
  field {
    name: "CycleDetectionModulus"
    type: "UI"
  }
  field {
    name: "hExclusiveRoot"
    type: "*V;"
  }
  field {
    name: "hExclusiveRootTrustedPeople"
    type: "*V;"
  }
}
struct {
  name: "_CERT_CHAIN_ENGINE_CONFIG"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "hRestrictedRoot"
    type: "*V;"
  }
  field {
    name: "hRestrictedTrust"
    type: "*V;"
  }
  field {
    name: "hRestrictedOther"
    type: "*V;"
  }
  field {
    name: "cAdditionalStore"
    type: "UI"
  }
  field {
    name: "rghAdditionalStore"
    type: "**V;;"
  }
  field {
    name: "dwFlags"
    type: "UI"
  }
  field {
    name: "dwUrlRetrievalTimeout"
    type: "UI"
  }
  field {
    name: "MaximumCachedCertificates"
    type: "UI"
  }
  field {
    name: "CycleDetectionModulus"
    type: "UI"
  }
  field {
    name: "hExclusiveRoot"
    type: "*V;"
  }
  field {
    name: "hExclusiveRootTrustedPeople"
    type: "*V;"
  }
}
struct {
  name: "_CMSG_STREAM_INFO"
  field {
    name: "cbContent"
    type: "UI"
  }
  field {
    name: "pfnStreamOutput"
    type: "*(*cV;*UB;UII)I;"
  }
  field {
    name: "pvArg"
    type: "*V;"
  }
}
struct {
  name: "_CMSG_STREAM_INFO"
  field {
    name: "cbContent"
    type: "UI"
  }
  field {
    name: "pfnStreamOutput"
    type: "*(*cV;*UB;UII)I;"
  }
  field {
    name: "pvArg"
    type: "*V;"
  }
}
struct {
  name: "_CERT_ISSUER_SERIAL_NUMBER"
  field {
    name: "Issuer"
    type: "R_CRYPTOAPI_BLOB;"
  }
  field {
    name: "SerialNumber"
    type: "R_CRYPTOAPI_BLOB;"
  }
}
struct {
  name: "_CERT_ISSUER_SERIAL_NUMBER"
  field {
    name: "Issuer"
    type: "R_CRYPTOAPI_BLOB;"
  }
  field {
    name: "SerialNumber"
    type: "R_CRYPTOAPI_BLOB;"
  }
}
struct {
  name: "_CERT_ID"
  field {
    name: "dwIdChoice"
    type: "UI"
  }
}
struct {
  name: "_CERT_ID"
  field {
    name: "dwIdChoice"
    type: "UI"
  }
}
struct {
  name: "_CMSG_SIGNER_ENCODE_INFO"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "pCertInfo"
    type: "*R_CERT_INFO;;"
  }
  field {
    name: "hCryptProv"
    type: "UI"
  }
  field {
    name: "dwKeySpec"
    type: "UI"
  }
  field {
    name: "HashAlgorithm"
    type: "R_CRYPT_ALGORITHM_IDENTIFIER;"
  }
  field {
    name: "pvHashAuxInfo"
    type: "*V;"
  }
  field {
    name: "cAuthAttr"
    type: "UI"
  }
  field {
    name: "rgAuthAttr"
    type: "*R_CRYPT_ATTRIBUTE;;"
  }
  field {
    name: "cUnauthAttr"
    type: "UI"
  }
  field {
    name: "rgUnauthAttr"
    type: "*R_CRYPT_ATTRIBUTE;;"
  }
}
struct {
  name: "_CMSG_SIGNER_ENCODE_INFO"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "pCertInfo"
    type: "*R_CERT_INFO;;"
  }
  field {
    name: "hCryptProv"
    type: "UI"
  }
  field {
    name: "dwKeySpec"
    type: "UI"
  }
  field {
    name: "HashAlgorithm"
    type: "R_CRYPT_ALGORITHM_IDENTIFIER;"
  }
  field {
    name: "pvHashAuxInfo"
    type: "*V;"
  }
  field {
    name: "cAuthAttr"
    type: "UI"
  }
  field {
    name: "rgAuthAttr"
    type: "*R_CRYPT_ATTRIBUTE;;"
  }
  field {
    name: "cUnauthAttr"
    type: "UI"
  }
  field {
    name: "rgUnauthAttr"
    type: "*R_CRYPT_ATTRIBUTE;;"
  }
}
struct {
  name: "_CMSG_SIGNED_ENCODE_INFO"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "cSigners"
    type: "UI"
  }
  field {
    name: "rgSigners"
    type: "*R_CMSG_SIGNER_ENCODE_INFO;;"
  }
  field {
    name: "cCertEncoded"
    type: "UI"
  }
  field {
    name: "rgCertEncoded"
    type: "*R_CRYPTOAPI_BLOB;;"
  }
  field {
    name: "cCrlEncoded"
    type: "UI"
  }
  field {
    name: "rgCrlEncoded"
    type: "*R_CRYPTOAPI_BLOB;;"
  }
}
struct {
  name: "_CMSG_SIGNED_ENCODE_INFO"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "cSigners"
    type: "UI"
  }
  field {
    name: "rgSigners"
    type: "*R_CMSG_SIGNER_ENCODE_INFO;;"
  }
  field {
    name: "cCertEncoded"
    type: "UI"
  }
  field {
    name: "rgCertEncoded"
    type: "*R_CRYPTOAPI_BLOB;;"
  }
  field {
    name: "cCrlEncoded"
    type: "UI"
  }
  field {
    name: "rgCrlEncoded"
    type: "*R_CRYPTOAPI_BLOB;;"
  }
}
struct {
  name: "_CMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "KeyEncryptionAlgorithm"
    type: "R_CRYPT_ALGORITHM_IDENTIFIER;"
  }
  field {
    name: "pvKeyEncryptionAuxInfo"
    type: "*V;"
  }
  field {
    name: "hCryptProv"
    type: "UI"
  }
  field {
    name: "RecipientPublicKey"
    type: "R_CRYPT_BIT_BLOB;"
  }
  field {
    name: "RecipientId"
    type: "R_CERT_ID;"
  }
}
struct {
  name: "_CMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "KeyEncryptionAlgorithm"
    type: "R_CRYPT_ALGORITHM_IDENTIFIER;"
  }
  field {
    name: "pvKeyEncryptionAuxInfo"
    type: "*V;"
  }
  field {
    name: "hCryptProv"
    type: "UI"
  }
  field {
    name: "RecipientPublicKey"
    type: "R_CRYPT_BIT_BLOB;"
  }
  field {
    name: "RecipientId"
    type: "R_CERT_ID;"
  }
}
struct {
  name: "_CMSG_RECIPIENT_ENCRYPTED_KEY_ENCODE_INFO"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "RecipientPublicKey"
    type: "R_CRYPT_BIT_BLOB;"
  }
  field {
    name: "RecipientId"
    type: "R_CERT_ID;"
  }
  field {
    name: "Date"
    type: "R_FILETIME;"
  }
  field {
    name: "pOtherAttr"
    type: "*R_CRYPT_ATTRIBUTE_TYPE_VALUE;;"
  }
}
struct {
  name: "_CMSG_RECIPIENT_ENCRYPTED_KEY_ENCODE_INFO"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "RecipientPublicKey"
    type: "R_CRYPT_BIT_BLOB;"
  }
  field {
    name: "RecipientId"
    type: "R_CERT_ID;"
  }
  field {
    name: "Date"
    type: "R_FILETIME;"
  }
  field {
    name: "pOtherAttr"
    type: "*R_CRYPT_ATTRIBUTE_TYPE_VALUE;;"
  }
}
struct {
  name: "_CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "KeyEncryptionAlgorithm"
    type: "R_CRYPT_ALGORITHM_IDENTIFIER;"
  }
  field {
    name: "pvKeyEncryptionAuxInfo"
    type: "*V;"
  }
  field {
    name: "KeyWrapAlgorithm"
    type: "R_CRYPT_ALGORITHM_IDENTIFIER;"
  }
  field {
    name: "pvKeyWrapAuxInfo"
    type: "*V;"
  }
  field {
    name: "hCryptProv"
    type: "UI"
  }
  field {
    name: "dwKeySpec"
    type: "UI"
  }
  field {
    name: "dwKeyChoice"
    type: "UI"
  }
  field {
    name: "UserKeyingMaterial"
    type: "R_CRYPTOAPI_BLOB;"
  }
  field {
    name: "cRecipientEncryptedKeys"
    type: "UI"
  }
  field {
    name: "rgpRecipientEncryptedKeys"
    type: "**R_CMSG_RECIPIENT_ENCRYPTED_KEY_ENCODE_INFO;;;"
  }
}
struct {
  name: "_CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "KeyEncryptionAlgorithm"
    type: "R_CRYPT_ALGORITHM_IDENTIFIER;"
  }
  field {
    name: "pvKeyEncryptionAuxInfo"
    type: "*V;"
  }
  field {
    name: "KeyWrapAlgorithm"
    type: "R_CRYPT_ALGORITHM_IDENTIFIER;"
  }
  field {
    name: "pvKeyWrapAuxInfo"
    type: "*V;"
  }
  field {
    name: "hCryptProv"
    type: "UI"
  }
  field {
    name: "dwKeySpec"
    type: "UI"
  }
  field {
    name: "dwKeyChoice"
    type: "UI"
  }
  field {
    name: "UserKeyingMaterial"
    type: "R_CRYPTOAPI_BLOB;"
  }
  field {
    name: "cRecipientEncryptedKeys"
    type: "UI"
  }
  field {
    name: "rgpRecipientEncryptedKeys"
    type: "**R_CMSG_RECIPIENT_ENCRYPTED_KEY_ENCODE_INFO;;;"
  }
}
struct {
  name: "_CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "KeyEncryptionAlgorithm"
    type: "R_CRYPT_ALGORITHM_IDENTIFIER;"
  }
  field {
    name: "pvKeyEncryptionAuxInfo"
    type: "*V;"
  }
  field {
    name: "hCryptProv"
    type: "UI"
  }
  field {
    name: "dwKeyChoice"
    type: "UI"
  }
  field {
    name: "KeyId"
    type: "R_CRYPTOAPI_BLOB;"
  }
  field {
    name: "Date"
    type: "R_FILETIME;"
  }
  field {
    name: "pOtherAttr"
    type: "*R_CRYPT_ATTRIBUTE_TYPE_VALUE;;"
  }
}
struct {
  name: "_CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "KeyEncryptionAlgorithm"
    type: "R_CRYPT_ALGORITHM_IDENTIFIER;"
  }
  field {
    name: "pvKeyEncryptionAuxInfo"
    type: "*V;"
  }
  field {
    name: "hCryptProv"
    type: "UI"
  }
  field {
    name: "dwKeyChoice"
    type: "UI"
  }
  field {
    name: "KeyId"
    type: "R_CRYPTOAPI_BLOB;"
  }
  field {
    name: "Date"
    type: "R_FILETIME;"
  }
  field {
    name: "pOtherAttr"
    type: "*R_CRYPT_ATTRIBUTE_TYPE_VALUE;;"
  }
}
struct {
  name: "_CMSG_RECIPIENT_ENCODE_INFO"
  field {
    name: "dwRecipientChoice"
    type: "UI"
  }
}
struct {
  name: "_CMSG_RECIPIENT_ENCODE_INFO"
  field {
    name: "dwRecipientChoice"
    type: "UI"
  }
}
struct {
  name: "_CMSG_ENVELOPED_ENCODE_INFO"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "hCryptProv"
    type: "UI"
  }
  field {
    name: "ContentEncryptionAlgorithm"
    type: "R_CRYPT_ALGORITHM_IDENTIFIER;"
  }
  field {
    name: "pvEncryptionAuxInfo"
    type: "*V;"
  }
  field {
    name: "cRecipients"
    type: "UI"
  }
  field {
    name: "rgpRecipientCert"
    type: "**R_CERT_INFO;;;"
  }
}
struct {
  name: "_CMSG_ENVELOPED_ENCODE_INFO"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "hCryptProv"
    type: "UI"
  }
  field {
    name: "ContentEncryptionAlgorithm"
    type: "R_CRYPT_ALGORITHM_IDENTIFIER;"
  }
  field {
    name: "pvEncryptionAuxInfo"
    type: "*V;"
  }
  field {
    name: "cRecipients"
    type: "UI"
  }
  field {
    name: "rgpRecipientCert"
    type: "**R_CERT_INFO;;;"
  }
}
struct {
  name: "_CMSG_SIGNED_AND_ENVELOPED_ENCODE_INFO"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "SignedInfo"
    type: "R_CMSG_SIGNED_ENCODE_INFO;"
  }
  field {
    name: "EnvelopedInfo"
    type: "R_CMSG_ENVELOPED_ENCODE_INFO;"
  }
}
struct {
  name: "_CMSG_SIGNED_AND_ENVELOPED_ENCODE_INFO"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "SignedInfo"
    type: "R_CMSG_SIGNED_ENCODE_INFO;"
  }
  field {
    name: "EnvelopedInfo"
    type: "R_CMSG_ENVELOPED_ENCODE_INFO;"
  }
}
struct {
  name: "_CMSG_HASHED_ENCODE_INFO"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "hCryptProv"
    type: "UI"
  }
  field {
    name: "HashAlgorithm"
    type: "R_CRYPT_ALGORITHM_IDENTIFIER;"
  }
  field {
    name: "pvHashAuxInfo"
    type: "*V;"
  }
}
struct {
  name: "_CMSG_HASHED_ENCODE_INFO"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "hCryptProv"
    type: "UI"
  }
  field {
    name: "HashAlgorithm"
    type: "R_CRYPT_ALGORITHM_IDENTIFIER;"
  }
  field {
    name: "pvHashAuxInfo"
    type: "*V;"
  }
}
struct {
  name: "_CMSG_ENCRYPTED_ENCODE_INFO"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "ContentEncryptionAlgorithm"
    type: "R_CRYPT_ALGORITHM_IDENTIFIER;"
  }
  field {
    name: "pvEncryptionAuxInfo"
    type: "*V;"
  }
}
struct {
  name: "_CMSG_ENCRYPTED_ENCODE_INFO"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "ContentEncryptionAlgorithm"
    type: "R_CRYPT_ALGORITHM_IDENTIFIER;"
  }
  field {
    name: "pvEncryptionAuxInfo"
    type: "*V;"
  }
}
struct {
  name: "_CMSG_CTRL_DECRYPT_PARA"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "hCryptProv"
    type: "UI"
  }
  field {
    name: "dwKeySpec"
    type: "UI"
  }
  field {
    name: "dwRecipientIndex"
    type: "UI"
  }
}
struct {
  name: "_CMSG_CTRL_DECRYPT_PARA"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "hCryptProv"
    type: "UI"
  }
  field {
    name: "dwKeySpec"
    type: "UI"
  }
  field {
    name: "dwRecipientIndex"
    type: "UI"
  }
}
struct {
  name: "_CMSG_CTRL_ADD_SIGNER_UNAUTH_ATTR_PARA"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "dwSignerIndex"
    type: "UI"
  }
  field {
    name: "blob"
    type: "R_CRYPTOAPI_BLOB;"
  }
}
struct {
  name: "_CMSG_CTRL_ADD_SIGNER_UNAUTH_ATTR_PARA"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "dwSignerIndex"
    type: "UI"
  }
  field {
    name: "blob"
    type: "R_CRYPTOAPI_BLOB;"
  }
}
struct {
  name: "_CMSG_CTRL_DEL_SIGNER_UNAUTH_ATTR_PARA"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "dwSignerIndex"
    type: "UI"
  }
  field {
    name: "dwUnauthAttrIndex"
    type: "UI"
  }
}
struct {
  name: "_CMSG_CTRL_DEL_SIGNER_UNAUTH_ATTR_PARA"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "dwSignerIndex"
    type: "UI"
  }
  field {
    name: "dwUnauthAttrIndex"
    type: "UI"
  }
}
struct {
  name: "_CMSG_CTRL_VERIFY_SIGNATURE_EX_PARA"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "hCryptProv"
    type: "UI"
  }
  field {
    name: "dwSignerIndex"
    type: "UI"
  }
  field {
    name: "dwSignerType"
    type: "UI"
  }
  field {
    name: "pvSigner"
    type: "*V;"
  }
}
struct {
  name: "_CMSG_CTRL_VERIFY_SIGNATURE_EX_PARA"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "hCryptProv"
    type: "UI"
  }
  field {
    name: "dwSignerIndex"
    type: "UI"
  }
  field {
    name: "dwSignerType"
    type: "UI"
  }
  field {
    name: "pvSigner"
    type: "*V;"
  }
}
struct {
  name: "_CMSG_CMS_SIGNER_INFO"
  field {
    name: "dwVersion"
    type: "UI"
  }
  field {
    name: "SignerId"
    type: "R_CERT_ID;"
  }
  field {
    name: "HashAlgorithm"
    type: "R_CRYPT_ALGORITHM_IDENTIFIER;"
  }
  field {
    name: "HashEncryptionAlgorithm"
    type: "R_CRYPT_ALGORITHM_IDENTIFIER;"
  }
  field {
    name: "EncryptedHash"
    type: "R_CRYPTOAPI_BLOB;"
  }
  field {
    name: "AuthAttrs"
    type: "R_CRYPT_ATTRIBUTES;"
  }
  field {
    name: "UnauthAttrs"
    type: "R_CRYPT_ATTRIBUTES;"
  }
}
struct {
  name: "_CMSG_CMS_SIGNER_INFO"
  field {
    name: "dwVersion"
    type: "UI"
  }
  field {
    name: "SignerId"
    type: "R_CERT_ID;"
  }
  field {
    name: "HashAlgorithm"
    type: "R_CRYPT_ALGORITHM_IDENTIFIER;"
  }
  field {
    name: "HashEncryptionAlgorithm"
    type: "R_CRYPT_ALGORITHM_IDENTIFIER;"
  }
  field {
    name: "EncryptedHash"
    type: "R_CRYPTOAPI_BLOB;"
  }
  field {
    name: "AuthAttrs"
    type: "R_CRYPT_ATTRIBUTES;"
  }
  field {
    name: "UnauthAttrs"
    type: "R_CRYPT_ATTRIBUTES;"
  }
}
struct {
  name: "_CMSG_KEY_TRANS_RECIPIENT_INFO"
  field {
    name: "dwVersion"
    type: "UI"
  }
  field {
    name: "RecipientId"
    type: "R_CERT_ID;"
  }
  field {
    name: "KeyEncryptionAlgorithm"
    type: "R_CRYPT_ALGORITHM_IDENTIFIER;"
  }
  field {
    name: "EncryptedKey"
    type: "R_CRYPTOAPI_BLOB;"
  }
}
struct {
  name: "_CMSG_KEY_TRANS_RECIPIENT_INFO"
  field {
    name: "dwVersion"
    type: "UI"
  }
  field {
    name: "RecipientId"
    type: "R_CERT_ID;"
  }
  field {
    name: "KeyEncryptionAlgorithm"
    type: "R_CRYPT_ALGORITHM_IDENTIFIER;"
  }
  field {
    name: "EncryptedKey"
    type: "R_CRYPTOAPI_BLOB;"
  }
}
struct {
  name: "_CMSG_RECIPIENT_ENCRYPTED_KEY_INFO"
  field {
    name: "RecipientId"
    type: "R_CERT_ID;"
  }
  field {
    name: "EncryptedKey"
    type: "R_CRYPTOAPI_BLOB;"
  }
  field {
    name: "pOtherAttr"
    type: "*R_CRYPT_ATTRIBUTE_TYPE_VALUE;;"
  }
}
struct {
  name: "_CMSG_RECIPIENT_ENCRYPTED_KEY_INFO"
  field {
    name: "RecipientId"
    type: "R_CERT_ID;"
  }
  field {
    name: "EncryptedKey"
    type: "R_CRYPTOAPI_BLOB;"
  }
  field {
    name: "pOtherAttr"
    type: "*R_CRYPT_ATTRIBUTE_TYPE_VALUE;;"
  }
}
struct {
  name: "_CMSG_KEY_AGREE_RECIPIENT_INFO"
  field {
    name: "dwVersion"
    type: "UI"
  }
  field {
    name: "dwOriginatorChoice"
    type: "UI"
  }
  field {
    name: "UserKeyingMaterial"
    type: "R_CRYPT_ALGORITHM_IDENTIFIER;"
  }
  field {
    name: "cRecipientEncryptedKeys"
    type: "UI"
  }
  field {
    name: "rgpRecipientEncryptedKeys"
    type: "**R_CMSG_RECIPIENT_ENCRYPTED_KEY_INFO;;;"
  }
}
struct {
  name: "_CMSG_KEY_AGREE_RECIPIENT_INFO"
  field {
    name: "dwVersion"
    type: "UI"
  }
  field {
    name: "dwOriginatorChoice"
    type: "UI"
  }
  field {
    name: "UserKeyingMaterial"
    type: "R_CRYPT_ALGORITHM_IDENTIFIER;"
  }
  field {
    name: "cRecipientEncryptedKeys"
    type: "UI"
  }
  field {
    name: "rgpRecipientEncryptedKeys"
    type: "**R_CMSG_RECIPIENT_ENCRYPTED_KEY_INFO;;;"
  }
}
struct {
  name: "_CMSG_MAIL_LIST_RECIPIENT_INFO"
  field {
    name: "dwVersion"
    type: "UI"
  }
  field {
    name: "KeyId"
    type: "R_CRYPTOAPI_BLOB;"
  }
  field {
    name: "KeyEncryptionAlgorithm"
    type: "R_CRYPT_ALGORITHM_IDENTIFIER;"
  }
  field {
    name: "EncryptedKey"
    type: "R_CRYPTOAPI_BLOB;"
  }
  field {
    name: "Date"
    type: "R_FILETIME;"
  }
  field {
    name: "pOtherAttr"
    type: "*R_CRYPT_ATTRIBUTE_TYPE_VALUE;;"
  }
}
struct {
  name: "_CMSG_MAIL_LIST_RECIPIENT_INFO"
  field {
    name: "dwVersion"
    type: "UI"
  }
  field {
    name: "KeyId"
    type: "R_CRYPTOAPI_BLOB;"
  }
  field {
    name: "KeyEncryptionAlgorithm"
    type: "R_CRYPT_ALGORITHM_IDENTIFIER;"
  }
  field {
    name: "EncryptedKey"
    type: "R_CRYPTOAPI_BLOB;"
  }
  field {
    name: "Date"
    type: "R_FILETIME;"
  }
  field {
    name: "pOtherAttr"
    type: "*R_CRYPT_ATTRIBUTE_TYPE_VALUE;;"
  }
}
struct {
  name: "_CMSG_CMS_RECIPIENT_INFO"
  field {
    name: "dwRecipientChoice"
    type: "UI"
  }
}
struct {
  name: "_CMSG_CMS_RECIPIENT_INFO"
  field {
    name: "dwRecipientChoice"
    type: "UI"
  }
}
struct {
  name: "_CMSG_CONTENT_ENCRYPT_INFO"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "hCryptProv"
    type: "UI"
  }
  field {
    name: "ContentEncryptionAlgorithm"
    type: "R_CRYPT_ALGORITHM_IDENTIFIER;"
  }
  field {
    name: "pvEncryptionAuxInfo"
    type: "*V;"
  }
  field {
    name: "cRecipients"
    type: "UI"
  }
  field {
    name: "rgCmsRecipients"
    type: "*R_CMSG_RECIPIENT_ENCODE_INFO;;"
  }
  field {
    name: "pfnAlloc"
    type: "*(UI)*V;;"
  }
  field {
    name: "pfnFree"
    type: "*(*V;)V;"
  }
  field {
    name: "dwEncryptFlags"
    type: "UI"
  }
  field {
    name: "hContentEncryptKey"
    type: "UI"
  }
  field {
    name: "dwFlags"
    type: "UI"
  }
}
struct {
  name: "_CMSG_CONTENT_ENCRYPT_INFO"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "hCryptProv"
    type: "UI"
  }
  field {
    name: "ContentEncryptionAlgorithm"
    type: "R_CRYPT_ALGORITHM_IDENTIFIER;"
  }
  field {
    name: "pvEncryptionAuxInfo"
    type: "*V;"
  }
  field {
    name: "cRecipients"
    type: "UI"
  }
  field {
    name: "rgCmsRecipients"
    type: "*R_CMSG_RECIPIENT_ENCODE_INFO;;"
  }
  field {
    name: "pfnAlloc"
    type: "*(UI)*V;;"
  }
  field {
    name: "pfnFree"
    type: "*(*V;)V;"
  }
  field {
    name: "dwEncryptFlags"
    type: "UI"
  }
  field {
    name: "hContentEncryptKey"
    type: "UI"
  }
  field {
    name: "dwFlags"
    type: "UI"
  }
}
struct {
  name: "_CMSG_KEY_TRANS_ENCRYPT_INFO"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "dwRecipientIndex"
    type: "UI"
  }
  field {
    name: "KeyEncryptionAlgorithm"
    type: "R_CRYPT_ALGORITHM_IDENTIFIER;"
  }
  field {
    name: "EncryptedKey"
    type: "R_CRYPTOAPI_BLOB;"
  }
  field {
    name: "dwFlags"
    type: "UI"
  }
}
struct {
  name: "_CMSG_KEY_TRANS_ENCRYPT_INFO"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "dwRecipientIndex"
    type: "UI"
  }
  field {
    name: "KeyEncryptionAlgorithm"
    type: "R_CRYPT_ALGORITHM_IDENTIFIER;"
  }
  field {
    name: "EncryptedKey"
    type: "R_CRYPTOAPI_BLOB;"
  }
  field {
    name: "dwFlags"
    type: "UI"
  }
}
struct {
  name: "_CMSG_CTRL_KEY_TRANS_DECRYPT_PARA"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "hCryptProv"
    type: "UI"
  }
  field {
    name: "dwKeySpec"
    type: "UI"
  }
  field {
    name: "pKeyTrans"
    type: "*R_CMSG_KEY_TRANS_RECIPIENT_INFO;;"
  }
  field {
    name: "dwRecipientIndex"
    type: "UI"
  }
}
struct {
  name: "_CMSG_CTRL_KEY_TRANS_DECRYPT_PARA"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "hCryptProv"
    type: "UI"
  }
  field {
    name: "dwKeySpec"
    type: "UI"
  }
  field {
    name: "pKeyTrans"
    type: "*R_CMSG_KEY_TRANS_RECIPIENT_INFO;;"
  }
  field {
    name: "dwRecipientIndex"
    type: "UI"
  }
}
struct {
  name: "struct (anonymous at /usr/local/include/wine/windows/rpcndr.h:127:9)"
  field {
    name: "pad"
    type: "X(ConstantArray.void *[2])"
  }
  field {
    name: "userContext"
    type: "*V;"
  }
}
struct {
  name: "ARRAY_INFO"
  field {
    name: "Dimension"
    type: "I"
  }
  field {
    name: "BufferConformanceMark"
    type: "*UI;"
  }
  field {
    name: "BufferVarianceMark"
    type: "*UI;"
  }
  field {
    name: "MaxCountArray"
    type: "*UI;"
  }
  field {
    name: "OffsetArray"
    type: "*UI;"
  }
  field {
    name: "ActualCountArray"
    type: "*UI;"
  }
}
struct {
  name: "ARRAY_INFO"
  field {
    name: "Dimension"
    type: "I"
  }
  field {
    name: "BufferConformanceMark"
    type: "*UI;"
  }
  field {
    name: "BufferVarianceMark"
    type: "*UI;"
  }
  field {
    name: "MaxCountArray"
    type: "*UI;"
  }
  field {
    name: "OffsetArray"
    type: "*UI;"
  }
  field {
    name: "ActualCountArray"
    type: "*UI;"
  }
}
struct {
  name: "CS_STUB_INFO"
  field {
    name: "WireCodeset"
    type: "UI"
  }
  field {
    name: "DesiredReceivingCodeset"
    type: "UI"
  }
  field {
    name: "CSArrayInfo"
    type: "*V;"
  }
}
struct {
  name: "_MIDL_STUB_MESSAGE"
  field {
    name: "RpcMsg"
    type: "*R_RPC_MESSAGE;;"
  }
  field {
    name: "Buffer"
    type: "*UB;"
  }
  field {
    name: "BufferStart"
    type: "*UB;"
  }
  field {
    name: "BufferEnd"
    type: "*UB;"
  }
  field {
    name: "BufferMark"
    type: "*UB;"
  }
  field {
    name: "BufferLength"
    type: "UI"
  }
  field {
    name: "MemorySize"
    type: "UI"
  }
  field {
    name: "Memory"
    type: "*UB;"
  }
  field {
    name: "IsClient"
    type: "UB"
  }
  field {
    name: "Pad"
    type: "UB"
  }
  field {
    name: "uFlags2"
    type: "US"
  }
  field {
    name: "ReuseBuffer"
    type: "I"
  }
  field {
    name: "pAllocAllNodesContext"
    type: "*RNDR_ALLOC_ALL_NODES_CONTEXT;;"
  }
  field {
    name: "pPointerQueueState"
    type: "*RNDR_POINTER_QUEUE_STATE;;"
  }
  field {
    name: "IgnoreEmbeddedPointers"
    type: "I"
  }
  field {
    name: "PointerBufferMark"
    type: "*UB;"
  }
  field {
    name: "CorrDespIncrement"
    type: "UB"
  }
  field {
    name: "uFlags"
    type: "UB"
  }
  field {
    name: "UniquePtrCount"
    type: "US"
  }
  field {
    name: "MaxCount"
    type: "UI"
  }
  field {
    name: "Offset"
    type: "UI"
  }
  field {
    name: "ActualCount"
    type: "UI"
  }
  field {
    name: "pfnAllocate"
    type: "*(UI)*V;;"
  }
  field {
    name: "pfnFree"
    type: "*(*V;)V;"
  }
  field {
    name: "StackTop"
    type: "*UB;"
  }
  field {
    name: "pPresentedType"
    type: "*UB;"
  }
  field {
    name: "pTransmitType"
    type: "*UB;"
  }
  field {
    name: "SavedHandle"
    type: "*V;"
  }
  field {
    name: "StubDesc"
    type: "*cR_MIDL_STUB_DESC;;"
  }
  field {
    name: "FullPtrXlatTables"
    type: "*R_FULL_PTR_XLAT_TABLES;;"
  }
  field {
    name: "FullPtrRefId"
    type: "UI"
  }
  field {
    name: "PointerLength"
    type: "UI"
  }
  field {
    name: "fInDontFree"
    type: "UI"
  }
  field {
    name: "fDontCallFreeInst"
    type: "UI"
  }
  field {
    name: "fInOnlyParam"
    type: "UI"
  }
  field {
    name: "fHasReturn"
    type: "UI"
  }
  field {
    name: "fHasExtensions"
    type: "UI"
  }
  field {
    name: "fHasNewCorrDesc"
    type: "UI"
  }
  field {
    name: "fIsIn"
    type: "UI"
  }
  field {
    name: "fIsOut"
    type: "UI"
  }
  field {
    name: "fIsOicf"
    type: "UI"
  }
  field {
    name: "fBufferValid"
    type: "UI"
  }
  field {
    name: "fHasMemoryValidateCallback"
    type: "UI"
  }
  field {
    name: "fInFree"
    type: "UI"
  }
  field {
    name: "fNeedMCCP"
    type: "UI"
  }
  field {
    name: "fUnused"
    type: "I"
  }
  field {
    name: "fUnused2"
    type: "I"
  }
  field {
    name: "dwDestContext"
    type: "UI"
  }
  field {
    name: "pvDestContext"
    type: "*V;"
  }
  field {
    name: "SavedContextHandles"
    type: "**R(anonymous at /usr/local/include/wine/windows/rpcndr.h:127:9);;;"
  }
  field {
    name: "ParamNumber"
    type: "I"
  }
  field {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  field {
    name: "pArrayInfo"
    type: "*RARRAY_INFO;;"
  }
  field {
    name: "SizePtrCountArray"
    type: "*UI;"
  }
  field {
    name: "SizePtrOffsetArray"
    type: "*UI;"
  }
  field {
    name: "SizePtrLengthArray"
    type: "*UI;"
  }
  field {
    name: "pArgQueue"
    type: "*V;"
  }
  field {
    name: "dwStubPhase"
    type: "UI"
  }
  field {
    name: "LowStackMark"
    type: "*V;"
  }
  field {
    name: "pAsyncMsg"
    type: "*R_NDR_ASYNC_MESSAGE;;"
  }
  field {
    name: "pCorrInfo"
    type: "*R_NDR_CORRELATION_INFO;;"
  }
  field {
    name: "pCorrMemory"
    type: "*UB;"
  }
  field {
    name: "pMemoryList"
    type: "*V;"
  }
  field {
    name: "pCSInfo"
    type: "*RCS_STUB_INFO;;"
  }
  field {
    name: "ConformanceMark"
    type: "*UB;"
  }
  field {
    name: "VarianceMark"
    type: "*UB;"
  }
  field {
    name: "Unused"
    type: "I"
  }
  field {
    name: "pContext"
    type: "*R_NDR_PROC_CONTEXT;;"
  }
  field {
    name: "ContextHandleHash"
    type: "*V;"
  }
  field {
    name: "pUserMarshalList"
    type: "*V;"
  }
  field {
    name: "Reserved51_3"
    type: "I"
  }
  field {
    name: "Reserved51_4"
    type: "I"
  }
  field {
    name: "Reserved51_5"
    type: "I"
  }
}
struct {
  name: "_MIDL_STUB_MESSAGE"
  field {
    name: "RpcMsg"
    type: "*R_RPC_MESSAGE;;"
  }
  field {
    name: "Buffer"
    type: "*UB;"
  }
  field {
    name: "BufferStart"
    type: "*UB;"
  }
  field {
    name: "BufferEnd"
    type: "*UB;"
  }
  field {
    name: "BufferMark"
    type: "*UB;"
  }
  field {
    name: "BufferLength"
    type: "UI"
  }
  field {
    name: "MemorySize"
    type: "UI"
  }
  field {
    name: "Memory"
    type: "*UB;"
  }
  field {
    name: "IsClient"
    type: "UB"
  }
  field {
    name: "Pad"
    type: "UB"
  }
  field {
    name: "uFlags2"
    type: "US"
  }
  field {
    name: "ReuseBuffer"
    type: "I"
  }
  field {
    name: "pAllocAllNodesContext"
    type: "*RNDR_ALLOC_ALL_NODES_CONTEXT;;"
  }
  field {
    name: "pPointerQueueState"
    type: "*RNDR_POINTER_QUEUE_STATE;;"
  }
  field {
    name: "IgnoreEmbeddedPointers"
    type: "I"
  }
  field {
    name: "PointerBufferMark"
    type: "*UB;"
  }
  field {
    name: "CorrDespIncrement"
    type: "UB"
  }
  field {
    name: "uFlags"
    type: "UB"
  }
  field {
    name: "UniquePtrCount"
    type: "US"
  }
  field {
    name: "MaxCount"
    type: "UI"
  }
  field {
    name: "Offset"
    type: "UI"
  }
  field {
    name: "ActualCount"
    type: "UI"
  }
  field {
    name: "pfnAllocate"
    type: "*(UI)*V;;"
  }
  field {
    name: "pfnFree"
    type: "*(*V;)V;"
  }
  field {
    name: "StackTop"
    type: "*UB;"
  }
  field {
    name: "pPresentedType"
    type: "*UB;"
  }
  field {
    name: "pTransmitType"
    type: "*UB;"
  }
  field {
    name: "SavedHandle"
    type: "*V;"
  }
  field {
    name: "StubDesc"
    type: "*cR_MIDL_STUB_DESC;;"
  }
  field {
    name: "FullPtrXlatTables"
    type: "*R_FULL_PTR_XLAT_TABLES;;"
  }
  field {
    name: "FullPtrRefId"
    type: "UI"
  }
  field {
    name: "PointerLength"
    type: "UI"
  }
  field {
    name: "fInDontFree"
    type: "UI"
  }
  field {
    name: "fDontCallFreeInst"
    type: "UI"
  }
  field {
    name: "fInOnlyParam"
    type: "UI"
  }
  field {
    name: "fHasReturn"
    type: "UI"
  }
  field {
    name: "fHasExtensions"
    type: "UI"
  }
  field {
    name: "fHasNewCorrDesc"
    type: "UI"
  }
  field {
    name: "fIsIn"
    type: "UI"
  }
  field {
    name: "fIsOut"
    type: "UI"
  }
  field {
    name: "fIsOicf"
    type: "UI"
  }
  field {
    name: "fBufferValid"
    type: "UI"
  }
  field {
    name: "fHasMemoryValidateCallback"
    type: "UI"
  }
  field {
    name: "fInFree"
    type: "UI"
  }
  field {
    name: "fNeedMCCP"
    type: "UI"
  }
  field {
    name: "fUnused"
    type: "I"
  }
  field {
    name: "fUnused2"
    type: "I"
  }
  field {
    name: "dwDestContext"
    type: "UI"
  }
  field {
    name: "pvDestContext"
    type: "*V;"
  }
  field {
    name: "SavedContextHandles"
    type: "**R(anonymous at /usr/local/include/wine/windows/rpcndr.h:127:9);;;"
  }
  field {
    name: "ParamNumber"
    type: "I"
  }
  field {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  field {
    name: "pArrayInfo"
    type: "*RARRAY_INFO;;"
  }
  field {
    name: "SizePtrCountArray"
    type: "*UI;"
  }
  field {
    name: "SizePtrOffsetArray"
    type: "*UI;"
  }
  field {
    name: "SizePtrLengthArray"
    type: "*UI;"
  }
  field {
    name: "pArgQueue"
    type: "*V;"
  }
  field {
    name: "dwStubPhase"
    type: "UI"
  }
  field {
    name: "LowStackMark"
    type: "*V;"
  }
  field {
    name: "pAsyncMsg"
    type: "*R_NDR_ASYNC_MESSAGE;;"
  }
  field {
    name: "pCorrInfo"
    type: "*R_NDR_CORRELATION_INFO;;"
  }
  field {
    name: "pCorrMemory"
    type: "*UB;"
  }
  field {
    name: "pMemoryList"
    type: "*V;"
  }
  field {
    name: "pCSInfo"
    type: "*RCS_STUB_INFO;;"
  }
  field {
    name: "ConformanceMark"
    type: "*UB;"
  }
  field {
    name: "VarianceMark"
    type: "*UB;"
  }
  field {
    name: "Unused"
    type: "I"
  }
  field {
    name: "pContext"
    type: "*R_NDR_PROC_CONTEXT;;"
  }
  field {
    name: "ContextHandleHash"
    type: "*V;"
  }
  field {
    name: "pUserMarshalList"
    type: "*V;"
  }
  field {
    name: "Reserved51_3"
    type: "I"
  }
  field {
    name: "Reserved51_4"
    type: "I"
  }
  field {
    name: "Reserved51_5"
    type: "I"
  }
}
struct {
  name: "_GENERIC_BINDING_ROUTINE_PAIR"
  field {
    name: "pfnBind"
    type: "*(*V;)*V;;"
  }
  field {
    name: "pfnUnbind"
    type: "*(*V;*UB;)V;"
  }
}
struct {
  name: "_GENERIC_BINDING_ROUTINE_PAIR"
  field {
    name: "pfnBind"
    type: "*(*V;)*V;;"
  }
  field {
    name: "pfnUnbind"
    type: "*(*V;*UB;)V;"
  }
}
struct {
  name: "__GENERIC_BINDING_INFO"
  field {
    name: "pObj"
    type: "*V;"
  }
  field {
    name: "Size"
    type: "UI"
  }
  field {
    name: "pfnBind"
    type: "*(*V;)*V;;"
  }
  field {
    name: "pfnUnbind"
    type: "*(*V;*UB;)V;"
  }
}
struct {
  name: "__GENERIC_BINDING_INFO"
  field {
    name: "pObj"
    type: "*V;"
  }
  field {
    name: "Size"
    type: "UI"
  }
  field {
    name: "pfnBind"
    type: "*(*V;)*V;;"
  }
  field {
    name: "pfnUnbind"
    type: "*(*V;*UB;)V;"
  }
}
struct {
  name: "_XMIT_ROUTINE_QUINTUPLE"
  field {
    name: "pfnTranslateToXmit"
    type: "*(*R_MIDL_STUB_MESSAGE;;)V;"
  }
  field {
    name: "pfnTranslateFromXmit"
    type: "*(*R_MIDL_STUB_MESSAGE;;)V;"
  }
  field {
    name: "pfnFreeXmit"
    type: "*(*R_MIDL_STUB_MESSAGE;;)V;"
  }
  field {
    name: "pfnFreeInst"
    type: "*(*R_MIDL_STUB_MESSAGE;;)V;"
  }
}
struct {
  name: "_XMIT_ROUTINE_QUINTUPLE"
  field {
    name: "pfnTranslateToXmit"
    type: "*(*R_MIDL_STUB_MESSAGE;;)V;"
  }
  field {
    name: "pfnTranslateFromXmit"
    type: "*(*R_MIDL_STUB_MESSAGE;;)V;"
  }
  field {
    name: "pfnFreeXmit"
    type: "*(*R_MIDL_STUB_MESSAGE;;)V;"
  }
  field {
    name: "pfnFreeInst"
    type: "*(*R_MIDL_STUB_MESSAGE;;)V;"
  }
}
struct {
  name: "_USER_MARSHAL_ROUTINE_QUADRUPLE"
  field {
    name: "pfnBufferSize"
    type: "*(*UI;UI*V;)UI;"
  }
  field {
    name: "pfnMarshall"
    type: "*(*UI;*UB;*V;)*UB;;"
  }
  field {
    name: "pfnUnmarshall"
    type: "*(*UI;*UB;*V;)*UB;;"
  }
  field {
    name: "pfnFree"
    type: "*(*UI;*V;)V;"
  }
}
struct {
  name: "_USER_MARSHAL_CB"
  field {
    name: "Flags"
    type: "UI"
  }
  field {
    name: "pStubMsg"
    type: "*R_MIDL_STUB_MESSAGE;;"
  }
  field {
    name: "pReserve"
    type: "*cUB;"
  }
  field {
    name: "Signature"
    type: "UI"
  }
  field {
    name: "CBType"
    type: "X(Enum.USER_MARSHAL_CB_TYPE)"
  }
  field {
    name: "pFormat"
    type: "*cUB;"
  }
  field {
    name: "pTypeFormat"
    type: "*cUB;"
  }
}
struct {
  name: "_MALLOC_FREE_STRUCT"
  field {
    name: "pfnAllocate"
    type: "*(UI)*V;;"
  }
  field {
    name: "pfnFree"
    type: "*(*V;)V;"
  }
}
struct {
  name: "_COMM_FAULT_OFFSETS"
  field {
    name: "CommOffset"
    type: "S"
  }
  field {
    name: "FaultOffset"
    type: "S"
  }
}
struct {
  name: "_MIDL_STUB_DESC"
  field {
    name: "RpcInterfaceInformation"
    type: "*V;"
  }
  field {
    name: "pfnAllocate"
    type: "*(UI)*V;;"
  }
  field {
    name: "pfnFree"
    type: "*(*V;)V;"
  }
  field {
    name: "IMPLICIT_HANDLE_INFO"
    type: "Runion _MIDL_STUB_DESC::(anonymous at /usr/local/include/wine/windows/rpcndr.h:341:3);"
  }
  field {
    name: "apfnNdrRundownRoutines"
    type: "*c*(*V;)V;;"
  }
  field {
    name: "aGenericBindingRoutinePairs"
    type: "*cR_GENERIC_BINDING_ROUTINE_PAIR;;"
  }
  field {
    name: "apfnExprEval"
    type: "*c*(*R_MIDL_STUB_MESSAGE;;)V;;"
  }
  field {
    name: "aXmitQuintuple"
    type: "*cR_XMIT_ROUTINE_QUINTUPLE;;"
  }
  field {
    name: "pFormatTypes"
    type: "*cUB;"
  }
  field {
    name: "fCheckBounds"
    type: "I"
  }
  field {
    name: "Version"
    type: "UI"
  }
  field {
    name: "pMallocFreeStruct"
    type: "*R_MALLOC_FREE_STRUCT;;"
  }
  field {
    name: "MIDLVersion"
    type: "I"
  }
  field {
    name: "CommFaultOffsets"
    type: "*cR_COMM_FAULT_OFFSETS;;"
  }
  field {
    name: "aUserMarshalQuadruple"
    type: "*cR_USER_MARSHAL_ROUTINE_QUADRUPLE;;"
  }
  field {
    name: "NotifyRoutineTable"
    type: "*c*()V;;"
  }
  field {
    name: "mFlags"
    type: "UI"
  }
  field {
    name: "Reserved3"
    type: "UI"
  }
  field {
    name: "Reserved4"
    type: "UI"
  }
  field {
    name: "Reserved5"
    type: "UI"
  }
}
struct {
  name: "_MIDL_FORMAT_STRING"
  field {
    name: "Pad"
    type: "S"
  }
  field {
    name: "Format"
    type: "X(ConstantArray.unsigned char [0])"
  }
}
struct {
  name: "_MIDL_SYNTAX_INFO"
  field {
    name: "TransferSyntax"
    type: "R_RPC_SYNTAX_IDENTIFIER;"
  }
  field {
    name: "DispatchTable"
    type: "*RRPC_DISPATCH_TABLE;;"
  }
  field {
    name: "ProcString"
    type: "*cUB;"
  }
  field {
    name: "FmtStringOffset"
    type: "*cUS;"
  }
  field {
    name: "TypeString"
    type: "*cUB;"
  }
  field {
    name: "aUserMarshalQuadruple"
    type: "*cV;"
  }
  field {
    name: "pReserved1"
    type: "UI"
  }
  field {
    name: "pReserved2"
    type: "UI"
  }
}
struct {
  name: "_MIDL_SYNTAX_INFO"
  field {
    name: "TransferSyntax"
    type: "R_RPC_SYNTAX_IDENTIFIER;"
  }
  field {
    name: "DispatchTable"
    type: "*RRPC_DISPATCH_TABLE;;"
  }
  field {
    name: "ProcString"
    type: "*cUB;"
  }
  field {
    name: "FmtStringOffset"
    type: "*cUS;"
  }
  field {
    name: "TypeString"
    type: "*cUB;"
  }
  field {
    name: "aUserMarshalQuadruple"
    type: "*cV;"
  }
  field {
    name: "pReserved1"
    type: "UI"
  }
  field {
    name: "pReserved2"
    type: "UI"
  }
}
struct {
  name: "_MIDL_SERVER_INFO_"
  field {
    name: "pStubDesc"
    type: "*cR_MIDL_STUB_DESC;;"
  }
  field {
    name: "DispatchTable"
    type: "*c*(.)I;;"
  }
  field {
    name: "ProcString"
    type: "*cUB;"
  }
  field {
    name: "FmtStringOffset"
    type: "*cUS;"
  }
  field {
    name: "ThunkTable"
    type: "*c*(*R_MIDL_STUB_MESSAGE;;)V;;"
  }
  field {
    name: "pTransferSyntax"
    type: "*R_RPC_SYNTAX_IDENTIFIER;;"
  }
  field {
    name: "nCount"
    type: "UI"
  }
  field {
    name: "pSyntaxInfo"
    type: "*R_MIDL_SYNTAX_INFO;;"
  }
}
struct {
  name: "_MIDL_SERVER_INFO_"
  field {
    name: "pStubDesc"
    type: "*cR_MIDL_STUB_DESC;;"
  }
  field {
    name: "DispatchTable"
    type: "*c*(.)I;;"
  }
  field {
    name: "ProcString"
    type: "*cUB;"
  }
  field {
    name: "FmtStringOffset"
    type: "*cUS;"
  }
  field {
    name: "ThunkTable"
    type: "*c*(*R_MIDL_STUB_MESSAGE;;)V;;"
  }
  field {
    name: "pTransferSyntax"
    type: "*R_RPC_SYNTAX_IDENTIFIER;;"
  }
  field {
    name: "nCount"
    type: "UI"
  }
  field {
    name: "pSyntaxInfo"
    type: "*R_MIDL_SYNTAX_INFO;;"
  }
}
struct {
  name: "_MIDL_STUBLESS_PROXY_INFO"
  field {
    name: "pStubDesc"
    type: "*cR_MIDL_STUB_DESC;;"
  }
  field {
    name: "ProcFormatString"
    type: "*cUB;"
  }
  field {
    name: "FormatStringOffset"
    type: "*cUS;"
  }
  field {
    name: "pTransferSyntax"
    type: "*R_RPC_SYNTAX_IDENTIFIER;;"
  }
  field {
    name: "nCount"
    type: "UI"
  }
  field {
    name: "pSyntaxInfo"
    type: "*R_MIDL_SYNTAX_INFO;;"
  }
}
struct {
  name: "_MIDL_STUBLESS_PROXY_INFO"
  field {
    name: "pStubDesc"
    type: "*cR_MIDL_STUB_DESC;;"
  }
  field {
    name: "ProcFormatString"
    type: "*cUB;"
  }
  field {
    name: "FormatStringOffset"
    type: "*cUS;"
  }
  field {
    name: "pTransferSyntax"
    type: "*R_RPC_SYNTAX_IDENTIFIER;;"
  }
  field {
    name: "nCount"
    type: "UI"
  }
  field {
    name: "pSyntaxInfo"
    type: "*R_MIDL_SYNTAX_INFO;;"
  }
}
struct {
  name: "_FULL_PTR_TO_REFID_ELEMENT"
  field {
    name: "Next"
    type: "*R_FULL_PTR_TO_REFID_ELEMENT;;"
  }
  field {
    name: "Pointer"
    type: "*V;"
  }
  field {
    name: "RefId"
    type: "UI"
  }
  field {
    name: "State"
    type: "UB"
  }
}
struct {
  name: "_FULL_PTR_TO_REFID_ELEMENT"
  field {
    name: "Next"
    type: "*R_FULL_PTR_TO_REFID_ELEMENT;;"
  }
  field {
    name: "Pointer"
    type: "*V;"
  }
  field {
    name: "RefId"
    type: "UI"
  }
  field {
    name: "State"
    type: "UB"
  }
}
struct {
  name: "_FULL_PTR_XLAT_TABLES"
  field {
    name: "RefIdToPointer"
    type: "R_FULL_PTR_XLAT_TABLES::(anonymous at /usr/local/include/wine/windows/rpcndr.h:458:3);"
  }
  field {
    name: "PointerToRefId"
    type: "R_FULL_PTR_XLAT_TABLES::(anonymous at /usr/local/include/wine/windows/rpcndr.h:464:3);"
  }
  field {
    name: "NextRefId"
    type: "UI"
  }
  field {
    name: "XlatSide"
    type: "X(Enum.XLAT_SIDE)"
  }
}
struct {
  name: "struct _FULL_PTR_XLAT_TABLES::(anonymous at /usr/local/include/wine/windows/rpcndr.h:458:3)"
  field {
    name: "XlatTable"
    type: "**V;;"
  }
  field {
    name: "StateTable"
    type: "*UB;"
  }
  field {
    name: "NumberOfEntries"
    type: "UI"
  }
}
struct {
  name: "struct _FULL_PTR_XLAT_TABLES::(anonymous at /usr/local/include/wine/windows/rpcndr.h:464:3)"
  field {
    name: "XlatTable"
    type: "**R_FULL_PTR_TO_REFID_ELEMENT;;;"
  }
  field {
    name: "NumberOfBuckets"
    type: "UI"
  }
  field {
    name: "HashMask"
    type: "UI"
  }
}
struct {
  name: "_FULL_PTR_XLAT_TABLES"
  field {
    name: "RefIdToPointer"
    type: "R_FULL_PTR_XLAT_TABLES::(anonymous at /usr/local/include/wine/windows/rpcndr.h:458:3);"
  }
  field {
    name: "PointerToRefId"
    type: "R_FULL_PTR_XLAT_TABLES::(anonymous at /usr/local/include/wine/windows/rpcndr.h:464:3);"
  }
  field {
    name: "NextRefId"
    type: "UI"
  }
  field {
    name: "XlatSide"
    type: "X(Enum.XLAT_SIDE)"
  }
}
struct {
  name: "struct _FULL_PTR_XLAT_TABLES::(anonymous at /usr/local/include/wine/windows/rpcndr.h:458:3)"
  field {
    name: "XlatTable"
    type: "**V;;"
  }
  field {
    name: "StateTable"
    type: "*UB;"
  }
  field {
    name: "NumberOfEntries"
    type: "UI"
  }
}
struct {
  name: "struct _FULL_PTR_XLAT_TABLES::(anonymous at /usr/local/include/wine/windows/rpcndr.h:464:3)"
  field {
    name: "XlatTable"
    type: "**R_FULL_PTR_TO_REFID_ELEMENT;;;"
  }
  field {
    name: "NumberOfBuckets"
    type: "UI"
  }
  field {
    name: "HashMask"
    type: "UI"
  }
}
struct {
  name: "_SCONTEXT_QUEUE"
  field {
    name: "NumberOfObjects"
    type: "UI"
  }
  field {
    name: "ArrayOfObjects"
    type: "**R(anonymous at /usr/local/include/wine/windows/rpcndr.h:127:9);;;"
  }
}
struct {
  name: "_SCONTEXT_QUEUE"
  field {
    name: "NumberOfObjects"
    type: "UI"
  }
  field {
    name: "ArrayOfObjects"
    type: "**R(anonymous at /usr/local/include/wine/windows/rpcndr.h:127:9);;;"
  }
}
struct {
  name: "_NDR_USER_MARSHAL_INFO_LEVEL1"
  field {
    name: "Buffer"
    type: "*V;"
  }
  field {
    name: "BufferSize"
    type: "UI"
  }
  field {
    name: "pfnAllocate"
    type: "*(UI)*V;;"
  }
  field {
    name: "pfnFree"
    type: "*(*V;)V;"
  }
  field {
    name: "pRpcChannelBuffer"
    type: "*RIRpcChannelBuffer;;"
  }
  field {
    name: "Reserved"
    type: "X(ConstantArray.ULONG_PTR [5])"
  }
}
struct {
  name: "_NDR_USER_MARSHAL_INFO"
  field {
    name: "InformationLevel"
    type: "UI"
  }
}
struct {
  name: "_COAUTHIDENTITY"
  field {
    name: "User"
    type: "*US;"
  }
  field {
    name: "UserLength"
    type: "UI"
  }
  field {
    name: "Domain"
    type: "*US;"
  }
  field {
    name: "DomainLength"
    type: "UI"
  }
  field {
    name: "Password"
    type: "*US;"
  }
  field {
    name: "PasswordLength"
    type: "UI"
  }
  field {
    name: "Flags"
    type: "UI"
  }
}
struct {
  name: "_COAUTHINFO"
  field {
    name: "dwAuthnSvc"
    type: "UI"
  }
  field {
    name: "dwAuthzSvc"
    type: "UI"
  }
  field {
    name: "pwszServerPrincName"
    type: "*US;"
  }
  field {
    name: "dwAuthnLevel"
    type: "UI"
  }
  field {
    name: "dwImpersonationLevel"
    type: "UI"
  }
  field {
    name: "pAuthIdentityData"
    type: "*R_COAUTHIDENTITY;;"
  }
  field {
    name: "dwCapabilities"
    type: "UI"
  }
}
struct {
  name: "_BYTE_BLOB"
  field {
    name: "clSize"
    type: "UI"
  }
  field {
    name: "abData"
    type: "X(ConstantArray.byte [1])"
  }
}
struct {
  name: "_FLAGGED_BYTE_BLOB"
  field {
    name: "fFlags"
    type: "UI"
  }
  field {
    name: "clSize"
    type: "UI"
  }
  field {
    name: "abData"
    type: "X(ConstantArray.byte [1])"
  }
}
struct {
  name: "_FLAGGED_WORD_BLOB"
  field {
    name: "fFlags"
    type: "UI"
  }
  field {
    name: "clSize"
    type: "UI"
  }
  field {
    name: "asData"
    type: "X(ConstantArray.unsigned short [1])"
  }
}
struct {
  name: "_BYTE_SIZEDARR"
  field {
    name: "clSize"
    type: "UI"
  }
  field {
    name: "pData"
    type: "*UB;"
  }
}
struct {
  name: "_SHORT_SIZEDARR"
  field {
    name: "clSize"
    type: "UI"
  }
  field {
    name: "pData"
    type: "*US;"
  }
}
struct {
  name: "_LONG_SIZEDARR"
  field {
    name: "clSize"
    type: "UI"
  }
  field {
    name: "pData"
    type: "*UI;"
  }
}
struct {
  name: "_HYPER_SIZEDARR"
  field {
    name: "clSize"
    type: "UI"
  }
  field {
    name: "pData"
    type: "*I;"
  }
}
struct {
  name: "_userCLIPFORMAT"
  field {
    name: "fContext"
    type: "I"
  }
  field {
    name: "u"
    type: "Runion _userCLIPFORMAT::(anonymous at /usr/local/include/wine/windows/wtypes.h:386:5);"
  }
}
struct {
  name: "tagRemHGLOBAL"
  field {
    name: "fNullHGlobal"
    type: "I"
  }
  field {
    name: "cbData"
    type: "UI"
  }
  field {
    name: "data"
    type: "X(ConstantArray.byte [1])"
  }
}
struct {
  name: "_userHGLOBAL"
  field {
    name: "fContext"
    type: "I"
  }
  field {
    name: "u"
    type: "Runion _userHGLOBAL::(anonymous at /usr/local/include/wine/windows/wtypes.h:400:5);"
  }
}
struct {
  name: "tagRemHMETAFILEPICT"
  field {
    name: "mm"
    type: "I"
  }
  field {
    name: "xExt"
    type: "I"
  }
  field {
    name: "yExt"
    type: "I"
  }
  field {
    name: "cbData"
    type: "UI"
  }
  field {
    name: "data"
    type: "X(ConstantArray.byte [1])"
  }
}
struct {
  name: "_userHMETAFILE"
  field {
    name: "fContext"
    type: "I"
  }
  field {
    name: "u"
    type: "Runion _userHMETAFILE::(anonymous at /usr/local/include/wine/windows/wtypes.h:416:5);"
  }
}
struct {
  name: "_remoteMETAFILEPICT"
  field {
    name: "mm"
    type: "I"
  }
  field {
    name: "xExt"
    type: "I"
  }
  field {
    name: "yExt"
    type: "I"
  }
  field {
    name: "hMF"
    type: "*R_userHMETAFILE;;"
  }
}
struct {
  name: "_userHMETAFILEPICT"
  field {
    name: "fContext"
    type: "I"
  }
  field {
    name: "u"
    type: "Runion _userHMETAFILEPICT::(anonymous at /usr/local/include/wine/windows/wtypes.h:431:5);"
  }
}
struct {
  name: "tagRemHENHMETAFILE"
  field {
    name: "cbData"
    type: "UI"
  }
  field {
    name: "data"
    type: "X(ConstantArray.byte [1])"
  }
}
struct {
  name: "_userHENHMETAFILE"
  field {
    name: "fContext"
    type: "I"
  }
  field {
    name: "u"
    type: "Runion _userHENHMETAFILE::(anonymous at /usr/local/include/wine/windows/wtypes.h:444:5);"
  }
}
struct {
  name: "tagRemHBITMAP"
  field {
    name: "cbData"
    type: "UI"
  }
  field {
    name: "data"
    type: "X(ConstantArray.byte [1])"
  }
}
struct {
  name: "_userBITMAP"
  field {
    name: "bmType"
    type: "I"
  }
  field {
    name: "bmWidth"
    type: "I"
  }
  field {
    name: "bmHeight"
    type: "I"
  }
  field {
    name: "bmWidthBytes"
    type: "I"
  }
  field {
    name: "bmPlanes"
    type: "US"
  }
  field {
    name: "bmBitsPixel"
    type: "US"
  }
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "pBuffer"
    type: "X(ConstantArray.byte [1])"
  }
}
struct {
  name: "_userHBITMAP"
  field {
    name: "fContext"
    type: "I"
  }
  field {
    name: "u"
    type: "Runion _userHBITMAP::(anonymous at /usr/local/include/wine/windows/wtypes.h:467:5);"
  }
}
struct {
  name: "tagRemHPALETTE"
  field {
    name: "cbData"
    type: "UI"
  }
  field {
    name: "data"
    type: "X(ConstantArray.byte [1])"
  }
}
struct {
  name: "tagrpcLOGPALETTE"
  field {
    name: "palVersion"
    type: "US"
  }
  field {
    name: "palNumEntries"
    type: "US"
  }
  field {
    name: "palPalEntry"
    type: "X(ConstantArray.PALETTEENTRY [1])"
  }
}
struct {
  name: "_userHPALETTE"
  field {
    name: "fContext"
    type: "I"
  }
  field {
    name: "u"
    type: "Runion _userHPALETTE::(anonymous at /usr/local/include/wine/windows/wtypes.h:485:5);"
  }
}
struct {
  name: "_RemotableHandle"
  field {
    name: "fContext"
    type: "I"
  }
  field {
    name: "u"
    type: "Runion _RemotableHandle::(anonymous at /usr/local/include/wine/windows/wtypes.h:503:5);"
  }
}
struct {
  name: "struct tagCY::(anonymous at /usr/local/include/wine/windows/wtypes.h:578:5)"
  field {
    name: "Lo"
    type: "UI"
  }
  field {
    name: "Hi"
    type: "I"
  }
}
struct {
  name: "tagDEC"
  field {
    name: "wReserved"
    type: "US"
  }
  field {
    name: "Hi32"
    type: "UI"
  }
}
struct {
  name: "struct tagDEC::(anonymous at /usr/local/include/wine/windows/wtypes.h:604:5)"
  field {
    name: "scale"
    type: "UB"
  }
  field {
    name: "sign"
    type: "UB"
  }
}
struct {
  name: "struct tagDEC::(anonymous at /usr/local/include/wine/windows/wtypes.h:612:5)"
  field {
    name: "Lo32"
    type: "UI"
  }
  field {
    name: "Mid32"
    type: "UI"
  }
}
struct {
  name: "tagBSTRBLOB"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "pData"
    type: "*UB;"
  }
}
struct {
  name: "tagBLOB"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "pBlobData"
    type: "*UB;"
  }
}
struct {
  name: "tagCLIPDATA"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "ulClipFmt"
    type: "I"
  }
  field {
    name: "pClipData"
    type: "*UB;"
  }
}
struct {
  name: "tagCSPLATFORM"
  field {
    name: "dwPlatformId"
    type: "UI"
  }
  field {
    name: "dwVersionHi"
    type: "UI"
  }
  field {
    name: "dwVersionLo"
    type: "UI"
  }
  field {
    name: "dwProcessorArch"
    type: "UI"
  }
}
struct {
  name: "tagQUERYCONTEXT"
  field {
    name: "dwContext"
    type: "UI"
  }
  field {
    name: "Platform"
    type: "RtagCSPLATFORM;"
  }
  field {
    name: "Locale"
    type: "UI"
  }
  field {
    name: "dwVersionHi"
    type: "UI"
  }
  field {
    name: "dwVersionLo"
    type: "UI"
  }
}
struct {
  name: "__WIDL_wtypes_generated_name_00000000"
  field {
    name: "tyspec"
    type: "UI"
  }
  field {
    name: "tagged_union"
    type: "Runion __WIDL_wtypes_generated_name_00000000::(anonymous at /usr/local/include/wine/windows/wtypes.h:737:5);"
  }
}
struct {
  name: "struct __WIDL_wtypes_generated_name_00000000::(anonymous at /usr/local/include/wine/windows/wtypes.h:743:9)"
  field {
    name: "pPackageName"
    type: "*US;"
  }
  field {
    name: "PolicyId"
    type: "R_GUID;"
  }
}
struct {
  name: "struct __WIDL_wtypes_generated_name_00000000::(anonymous at /usr/local/include/wine/windows/wtypes.h:747:9)"
  field {
    name: "ObjectId"
    type: "R_GUID;"
  }
  field {
    name: "PolicyId"
    type: "R_GUID;"
  }
}
struct {
  name: "_tagpropertykey"
  field {
    name: "fmtid"
    type: "R_GUID;"
  }
  field {
    name: "pid"
    type: "UI"
  }
}
struct {
  name: "IUnknownVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIUnknown;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIUnknown;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIUnknown;;)UI;"
  }
}
struct {
  name: "IUnknown"
  field {
    name: "lpVtbl"
    type: "*RIUnknownVtbl;;"
  }
}
struct {
  name: "IClassFactoryVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIClassFactory;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIClassFactory;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIClassFactory;;)UI;"
  }
  field {
    name: "CreateInstance"
    type: "*(*RIClassFactory;;*RIUnknown;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "LockServer"
    type: "*(*RIClassFactory;;I)I;"
  }
}
struct {
  name: "IClassFactory"
  field {
    name: "lpVtbl"
    type: "*RIClassFactoryVtbl;;"
  }
}
struct {
  name: "_COSERVERINFO"
  field {
    name: "dwReserved1"
    type: "UI"
  }
  field {
    name: "pwszName"
    type: "*US;"
  }
  field {
    name: "pAuthInfo"
    type: "*R_COAUTHINFO;;"
  }
  field {
    name: "dwReserved2"
    type: "UI"
  }
}
struct {
  name: "IMarshalVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIMarshal;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIMarshal;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIMarshal;;)UI;"
  }
  field {
    name: "GetUnmarshalClass"
    type: "*(*RIMarshal;;*cR_GUID;;*V;UI*V;UI*R_GUID;;)I;"
  }
  field {
    name: "GetMarshalSizeMax"
    type: "*(*RIMarshal;;*cR_GUID;;*V;UI*V;UI*UI;)I;"
  }
  field {
    name: "MarshalInterface"
    type: "*(*RIMarshal;;*RIStream;;*cR_GUID;;*V;UI*V;UI)I;"
  }
  field {
    name: "UnmarshalInterface"
    type: "*(*RIMarshal;;*RIStream;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "ReleaseMarshalData"
    type: "*(*RIMarshal;;*RIStream;;)I;"
  }
  field {
    name: "DisconnectObject"
    type: "*(*RIMarshal;;UI)I;"
  }
}
struct {
  name: "IMarshal"
  field {
    name: "lpVtbl"
    type: "*RIMarshalVtbl;;"
  }
}
struct {
  name: "IMarshal2Vtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIMarshal2;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIMarshal2;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIMarshal2;;)UI;"
  }
  field {
    name: "GetUnmarshalClass"
    type: "*(*RIMarshal2;;*cR_GUID;;*V;UI*V;UI*R_GUID;;)I;"
  }
  field {
    name: "GetMarshalSizeMax"
    type: "*(*RIMarshal2;;*cR_GUID;;*V;UI*V;UI*UI;)I;"
  }
  field {
    name: "MarshalInterface"
    type: "*(*RIMarshal2;;*RIStream;;*cR_GUID;;*V;UI*V;UI)I;"
  }
  field {
    name: "UnmarshalInterface"
    type: "*(*RIMarshal2;;*RIStream;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "ReleaseMarshalData"
    type: "*(*RIMarshal2;;*RIStream;;)I;"
  }
  field {
    name: "DisconnectObject"
    type: "*(*RIMarshal2;;UI)I;"
  }
}
struct {
  name: "IMarshal2"
  field {
    name: "lpVtbl"
    type: "*RIMarshal2Vtbl;;"
  }
}
struct {
  name: "IStdMarshalInfoVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIStdMarshalInfo;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIStdMarshalInfo;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIStdMarshalInfo;;)UI;"
  }
  field {
    name: "GetClassForHandler"
    type: "*(*RIStdMarshalInfo;;UI*V;*R_GUID;;)I;"
  }
}
struct {
  name: "IStdMarshalInfo"
  field {
    name: "lpVtbl"
    type: "*RIStdMarshalInfoVtbl;;"
  }
}
struct {
  name: "IExternalConnectionVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIExternalConnection;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIExternalConnection;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIExternalConnection;;)UI;"
  }
  field {
    name: "AddConnection"
    type: "*(*RIExternalConnection;;UIUI)UI;"
  }
  field {
    name: "ReleaseConnection"
    type: "*(*RIExternalConnection;;UIUII)UI;"
  }
}
struct {
  name: "IExternalConnection"
  field {
    name: "lpVtbl"
    type: "*RIExternalConnectionVtbl;;"
  }
}
struct {
  name: "tagMULTI_QI"
  field {
    name: "pIID"
    type: "*cR_GUID;;"
  }
  field {
    name: "pItf"
    type: "*RIUnknown;;"
  }
  field {
    name: "hr"
    type: "I"
  }
}
struct {
  name: "IMultiQIVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIMultiQI;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIMultiQI;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIMultiQI;;)UI;"
  }
  field {
    name: "QueryMultipleInterfaces"
    type: "*(*RIMultiQI;;UI*RtagMULTI_QI;;)I;"
  }
}
struct {
  name: "IMultiQI"
  field {
    name: "lpVtbl"
    type: "*RIMultiQIVtbl;;"
  }
}
struct {
  name: "IMallocVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIMalloc;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIMalloc;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIMalloc;;)UI;"
  }
  field {
    name: "Alloc"
    type: "*(*RIMalloc;;UI)*V;;"
  }
  field {
    name: "Realloc"
    type: "*(*RIMalloc;;*V;UI)*V;;"
  }
  field {
    name: "Free"
    type: "*(*RIMalloc;;*V;)V;"
  }
  field {
    name: "GetSize"
    type: "*(*RIMalloc;;*V;)UI;"
  }
  field {
    name: "DidAlloc"
    type: "*(*RIMalloc;;*V;)I;"
  }
  field {
    name: "HeapMinimize"
    type: "*(*RIMalloc;;)V;"
  }
}
struct {
  name: "IMalloc"
  field {
    name: "lpVtbl"
    type: "*RIMallocVtbl;;"
  }
}
struct {
  name: "IMallocSpyVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIMallocSpy;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIMallocSpy;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIMallocSpy;;)UI;"
  }
  field {
    name: "PreAlloc"
    type: "*(*RIMallocSpy;;UI)UI;"
  }
  field {
    name: "PostAlloc"
    type: "*(*RIMallocSpy;;*V;)*V;;"
  }
  field {
    name: "PreFree"
    type: "*(*RIMallocSpy;;*V;I)*V;;"
  }
  field {
    name: "PostFree"
    type: "*(*RIMallocSpy;;I)V;"
  }
  field {
    name: "PreRealloc"
    type: "*(*RIMallocSpy;;*V;UI**V;;I)UI;"
  }
  field {
    name: "PostRealloc"
    type: "*(*RIMallocSpy;;*V;I)*V;;"
  }
  field {
    name: "PreGetSize"
    type: "*(*RIMallocSpy;;*V;I)*V;;"
  }
  field {
    name: "PostGetSize"
    type: "*(*RIMallocSpy;;UII)UI;"
  }
  field {
    name: "PreDidAlloc"
    type: "*(*RIMallocSpy;;*V;I)*V;;"
  }
  field {
    name: "PostDidAlloc"
    type: "*(*RIMallocSpy;;*V;II)I;"
  }
  field {
    name: "PreHeapMinimize"
    type: "*(*RIMallocSpy;;)V;"
  }
  field {
    name: "PostHeapMinimize"
    type: "*(*RIMallocSpy;;)V;"
  }
}
struct {
  name: "IMallocSpy"
  field {
    name: "lpVtbl"
    type: "*RIMallocSpyVtbl;;"
  }
}
struct {
  name: "IInternalUnknownVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIInternalUnknown;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIInternalUnknown;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIInternalUnknown;;)UI;"
  }
  field {
    name: "QueryInternalInterface"
    type: "*(*RIInternalUnknown;;*cR_GUID;;**V;;)I;"
  }
}
struct {
  name: "IInternalUnknown"
  field {
    name: "lpVtbl"
    type: "*RIInternalUnknownVtbl;;"
  }
}
struct {
  name: "IEnumUnknownVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIEnumUnknown;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIEnumUnknown;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIEnumUnknown;;)UI;"
  }
  field {
    name: "Next"
    type: "*(*RIEnumUnknown;;UI**RIUnknown;;;*UI;)I;"
  }
  field {
    name: "Skip"
    type: "*(*RIEnumUnknown;;UI)I;"
  }
  field {
    name: "Reset"
    type: "*(*RIEnumUnknown;;)I;"
  }
  field {
    name: "Clone"
    type: "*(*RIEnumUnknown;;**RIEnumUnknown;;;)I;"
  }
}
struct {
  name: "IEnumUnknown"
  field {
    name: "lpVtbl"
    type: "*RIEnumUnknownVtbl;;"
  }
}
struct {
  name: "ISurrogateVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RISurrogate;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RISurrogate;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RISurrogate;;)UI;"
  }
  field {
    name: "LoadDllServer"
    type: "*(*RISurrogate;;*cR_GUID;;)I;"
  }
  field {
    name: "FreeSurrogate"
    type: "*(*RISurrogate;;)I;"
  }
}
struct {
  name: "ISurrogate"
  field {
    name: "lpVtbl"
    type: "*RISurrogateVtbl;;"
  }
}
struct {
  name: "IGlobalInterfaceTableVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIGlobalInterfaceTable;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIGlobalInterfaceTable;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIGlobalInterfaceTable;;)UI;"
  }
  field {
    name: "RegisterInterfaceInGlobal"
    type: "*(*RIGlobalInterfaceTable;;*RIUnknown;;*cR_GUID;;*UI;)I;"
  }
  field {
    name: "RevokeInterfaceFromGlobal"
    type: "*(*RIGlobalInterfaceTable;;UI)I;"
  }
  field {
    name: "GetInterfaceFromGlobal"
    type: "*(*RIGlobalInterfaceTable;;UI*cR_GUID;;**V;;)I;"
  }
}
struct {
  name: "IGlobalInterfaceTable"
  field {
    name: "lpVtbl"
    type: "*RIGlobalInterfaceTableVtbl;;"
  }
}
struct {
  name: "tagBIND_OPTS"
  field {
    name: "cbStruct"
    type: "UI"
  }
  field {
    name: "grfFlags"
    type: "UI"
  }
  field {
    name: "grfMode"
    type: "UI"
  }
  field {
    name: "dwTickCountDeadline"
    type: "UI"
  }
}
struct {
  name: "tagBIND_OPTS2"
  field {
    name: "cbStruct"
    type: "UI"
  }
  field {
    name: "grfFlags"
    type: "UI"
  }
  field {
    name: "grfMode"
    type: "UI"
  }
  field {
    name: "dwTickCountDeadline"
    type: "UI"
  }
  field {
    name: "dwTrackFlags"
    type: "UI"
  }
  field {
    name: "dwClassContext"
    type: "UI"
  }
  field {
    name: "locale"
    type: "UI"
  }
  field {
    name: "pServerInfo"
    type: "*R_COSERVERINFO;;"
  }
}
struct {
  name: "tagBIND_OPTS3"
  field {
    name: "cbStruct"
    type: "UI"
  }
  field {
    name: "grfFlags"
    type: "UI"
  }
  field {
    name: "grfMode"
    type: "UI"
  }
  field {
    name: "dwTickCountDeadline"
    type: "UI"
  }
  field {
    name: "dwTrackFlags"
    type: "UI"
  }
  field {
    name: "dwClassContext"
    type: "UI"
  }
  field {
    name: "locale"
    type: "UI"
  }
  field {
    name: "pServerInfo"
    type: "*R_COSERVERINFO;;"
  }
  field {
    name: "hwnd"
    type: "*RHWND__;;"
  }
}
struct {
  name: "IBindCtxVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIBindCtx;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIBindCtx;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIBindCtx;;)UI;"
  }
  field {
    name: "RegisterObjectBound"
    type: "*(*RIBindCtx;;*RIUnknown;;)I;"
  }
  field {
    name: "RevokeObjectBound"
    type: "*(*RIBindCtx;;*RIUnknown;;)I;"
  }
  field {
    name: "ReleaseBoundObjects"
    type: "*(*RIBindCtx;;)I;"
  }
  field {
    name: "SetBindOptions"
    type: "*(*RIBindCtx;;*RtagBIND_OPTS;;)I;"
  }
  field {
    name: "GetBindOptions"
    type: "*(*RIBindCtx;;*RtagBIND_OPTS;;)I;"
  }
  field {
    name: "GetRunningObjectTable"
    type: "*(*RIBindCtx;;**RIRunningObjectTable;;;)I;"
  }
  field {
    name: "RegisterObjectParam"
    type: "*(*RIBindCtx;;*US;*RIUnknown;;)I;"
  }
  field {
    name: "GetObjectParam"
    type: "*(*RIBindCtx;;*US;**RIUnknown;;;)I;"
  }
  field {
    name: "EnumObjectParam"
    type: "*(*RIBindCtx;;**RIEnumString;;;)I;"
  }
  field {
    name: "RevokeObjectParam"
    type: "*(*RIBindCtx;;*US;)I;"
  }
}
struct {
  name: "IBindCtx"
  field {
    name: "lpVtbl"
    type: "*RIBindCtxVtbl;;"
  }
}
struct {
  name: "IEnumMonikerVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIEnumMoniker;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIEnumMoniker;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIEnumMoniker;;)UI;"
  }
  field {
    name: "Next"
    type: "*(*RIEnumMoniker;;UI**RIMoniker;;;*UI;)I;"
  }
  field {
    name: "Skip"
    type: "*(*RIEnumMoniker;;UI)I;"
  }
  field {
    name: "Reset"
    type: "*(*RIEnumMoniker;;)I;"
  }
  field {
    name: "Clone"
    type: "*(*RIEnumMoniker;;**RIEnumMoniker;;;)I;"
  }
}
struct {
  name: "IEnumMoniker"
  field {
    name: "lpVtbl"
    type: "*RIEnumMonikerVtbl;;"
  }
}
struct {
  name: "IRunnableObjectVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIRunnableObject;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIRunnableObject;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIRunnableObject;;)UI;"
  }
  field {
    name: "GetRunningClass"
    type: "*(*RIRunnableObject;;*R_GUID;;)I;"
  }
  field {
    name: "Run"
    type: "*(*RIRunnableObject;;*RIBindCtx;;)I;"
  }
  field {
    name: "IsRunning"
    type: "*(*RIRunnableObject;;)I;"
  }
  field {
    name: "LockRunning"
    type: "*(*RIRunnableObject;;II)I;"
  }
  field {
    name: "SetContainedObject"
    type: "*(*RIRunnableObject;;I)I;"
  }
}
struct {
  name: "IRunnableObject"
  field {
    name: "lpVtbl"
    type: "*RIRunnableObjectVtbl;;"
  }
}
struct {
  name: "IRunningObjectTableVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIRunningObjectTable;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIRunningObjectTable;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIRunningObjectTable;;)UI;"
  }
  field {
    name: "Register"
    type: "*(*RIRunningObjectTable;;UI*RIUnknown;;*RIMoniker;;*UI;)I;"
  }
  field {
    name: "Revoke"
    type: "*(*RIRunningObjectTable;;UI)I;"
  }
  field {
    name: "IsRunning"
    type: "*(*RIRunningObjectTable;;*RIMoniker;;)I;"
  }
  field {
    name: "GetObjectA"
    type: "*(*RIRunningObjectTable;;*RIMoniker;;**RIUnknown;;;)I;"
  }
  field {
    name: "NoteChangeTime"
    type: "*(*RIRunningObjectTable;;UI*R_FILETIME;;)I;"
  }
  field {
    name: "GetTimeOfLastChange"
    type: "*(*RIRunningObjectTable;;*RIMoniker;;*R_FILETIME;;)I;"
  }
  field {
    name: "EnumRunning"
    type: "*(*RIRunningObjectTable;;**RIEnumMoniker;;;)I;"
  }
}
struct {
  name: "IRunningObjectTable"
  field {
    name: "lpVtbl"
    type: "*RIRunningObjectTableVtbl;;"
  }
}
struct {
  name: "IPersistVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIPersist;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIPersist;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIPersist;;)UI;"
  }
  field {
    name: "GetClassID"
    type: "*(*RIPersist;;*R_GUID;;)I;"
  }
}
struct {
  name: "IPersist"
  field {
    name: "lpVtbl"
    type: "*RIPersistVtbl;;"
  }
}
struct {
  name: "IPersistStreamVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIPersistStream;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIPersistStream;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIPersistStream;;)UI;"
  }
  field {
    name: "GetClassID"
    type: "*(*RIPersistStream;;*R_GUID;;)I;"
  }
  field {
    name: "IsDirty"
    type: "*(*RIPersistStream;;)I;"
  }
  field {
    name: "Load"
    type: "*(*RIPersistStream;;*RIStream;;)I;"
  }
  field {
    name: "Save"
    type: "*(*RIPersistStream;;*RIStream;;I)I;"
  }
  field {
    name: "GetSizeMax"
    type: "*(*RIPersistStream;;*Runion _ULARGE_INTEGER;;)I;"
  }
}
struct {
  name: "IPersistStream"
  field {
    name: "lpVtbl"
    type: "*RIPersistStreamVtbl;;"
  }
}
struct {
  name: "IMonikerVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIMoniker;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIMoniker;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIMoniker;;)UI;"
  }
  field {
    name: "GetClassID"
    type: "*(*RIMoniker;;*R_GUID;;)I;"
  }
  field {
    name: "IsDirty"
    type: "*(*RIMoniker;;)I;"
  }
  field {
    name: "Load"
    type: "*(*RIMoniker;;*RIStream;;)I;"
  }
  field {
    name: "Save"
    type: "*(*RIMoniker;;*RIStream;;I)I;"
  }
  field {
    name: "GetSizeMax"
    type: "*(*RIMoniker;;*Runion _ULARGE_INTEGER;;)I;"
  }
  field {
    name: "BindToObject"
    type: "*(*RIMoniker;;*RIBindCtx;;*RIMoniker;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "BindToStorage"
    type: "*(*RIMoniker;;*RIBindCtx;;*RIMoniker;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "Reduce"
    type: "*(*RIMoniker;;*RIBindCtx;;UI**RIMoniker;;;**RIMoniker;;;)I;"
  }
  field {
    name: "ComposeWith"
    type: "*(*RIMoniker;;*RIMoniker;;I**RIMoniker;;;)I;"
  }
  field {
    name: "Enum"
    type: "*(*RIMoniker;;I**RIEnumMoniker;;;)I;"
  }
  field {
    name: "IsEqual"
    type: "*(*RIMoniker;;*RIMoniker;;)I;"
  }
  field {
    name: "Hash"
    type: "*(*RIMoniker;;*UI;)I;"
  }
  field {
    name: "IsRunning"
    type: "*(*RIMoniker;;*RIBindCtx;;*RIMoniker;;*RIMoniker;;)I;"
  }
  field {
    name: "GetTimeOfLastChange"
    type: "*(*RIMoniker;;*RIBindCtx;;*RIMoniker;;*R_FILETIME;;)I;"
  }
  field {
    name: "Inverse"
    type: "*(*RIMoniker;;**RIMoniker;;;)I;"
  }
  field {
    name: "CommonPrefixWith"
    type: "*(*RIMoniker;;*RIMoniker;;**RIMoniker;;;)I;"
  }
  field {
    name: "RelativePathTo"
    type: "*(*RIMoniker;;*RIMoniker;;**RIMoniker;;;)I;"
  }
  field {
    name: "GetDisplayName"
    type: "*(*RIMoniker;;*RIBindCtx;;*RIMoniker;;**US;;)I;"
  }
  field {
    name: "ParseDisplayName"
    type: "*(*RIMoniker;;*RIBindCtx;;*RIMoniker;;*US;*UI;**RIMoniker;;;)I;"
  }
  field {
    name: "IsSystemMoniker"
    type: "*(*RIMoniker;;*UI;)I;"
  }
}
struct {
  name: "IMoniker"
  field {
    name: "lpVtbl"
    type: "*RIMonikerVtbl;;"
  }
}
struct {
  name: "IROTDataVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIROTData;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIROTData;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIROTData;;)UI;"
  }
  field {
    name: "GetComparisonData"
    type: "*(*RIROTData;;*UB;UI*UI;)I;"
  }
}
struct {
  name: "IROTData"
  field {
    name: "lpVtbl"
    type: "*RIROTDataVtbl;;"
  }
}
struct {
  name: "IEnumStringVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIEnumString;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIEnumString;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIEnumString;;)UI;"
  }
  field {
    name: "Next"
    type: "*(*RIEnumString;;UI**US;;*UI;)I;"
  }
  field {
    name: "Skip"
    type: "*(*RIEnumString;;UI)I;"
  }
  field {
    name: "Reset"
    type: "*(*RIEnumString;;)I;"
  }
  field {
    name: "Clone"
    type: "*(*RIEnumString;;**RIEnumString;;;)I;"
  }
}
struct {
  name: "IEnumString"
  field {
    name: "lpVtbl"
    type: "*RIEnumStringVtbl;;"
  }
}
struct {
  name: "IClassActivatorVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIClassActivator;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIClassActivator;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIClassActivator;;)UI;"
  }
  field {
    name: "GetClassObject"
    type: "*(*RIClassActivator;;*cR_GUID;;UIUI*cR_GUID;;**V;;)I;"
  }
}
struct {
  name: "IClassActivator"
  field {
    name: "lpVtbl"
    type: "*RIClassActivatorVtbl;;"
  }
}
struct {
  name: "ISequentialStreamVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RISequentialStream;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RISequentialStream;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RISequentialStream;;)UI;"
  }
  field {
    name: "Read"
    type: "*(*RISequentialStream;;*V;UI*UI;)I;"
  }
  field {
    name: "Write"
    type: "*(*RISequentialStream;;*cV;UI*UI;)I;"
  }
}
struct {
  name: "ISequentialStream"
  field {
    name: "lpVtbl"
    type: "*RISequentialStreamVtbl;;"
  }
}
struct {
  name: "tagSTATSTG"
  field {
    name: "pwcsName"
    type: "*US;"
  }
  field {
    name: "type"
    type: "UI"
  }
  field {
    name: "cbSize"
    type: "Runion _ULARGE_INTEGER;"
  }
  field {
    name: "mtime"
    type: "R_FILETIME;"
  }
  field {
    name: "ctime"
    type: "R_FILETIME;"
  }
  field {
    name: "atime"
    type: "R_FILETIME;"
  }
  field {
    name: "grfMode"
    type: "UI"
  }
  field {
    name: "grfLocksSupported"
    type: "UI"
  }
  field {
    name: "clsid"
    type: "R_GUID;"
  }
  field {
    name: "grfStateBits"
    type: "UI"
  }
  field {
    name: "reserved"
    type: "UI"
  }
}
struct {
  name: "IStreamVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIStream;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIStream;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIStream;;)UI;"
  }
  field {
    name: "Read"
    type: "*(*RIStream;;*V;UI*UI;)I;"
  }
  field {
    name: "Write"
    type: "*(*RIStream;;*cV;UI*UI;)I;"
  }
  field {
    name: "Seek"
    type: "*(*RIStream;;Runion _LARGE_INTEGER;UI*Runion _ULARGE_INTEGER;;)I;"
  }
  field {
    name: "SetSize"
    type: "*(*RIStream;;Runion _ULARGE_INTEGER;)I;"
  }
  field {
    name: "CopyTo"
    type: "*(*RIStream;;*RIStream;;Runion _ULARGE_INTEGER;*Runion _ULARGE_INTEGER;;*Runion _ULARGE_INTEGER;;)I;"
  }
  field {
    name: "Commit"
    type: "*(*RIStream;;UI)I;"
  }
  field {
    name: "Revert"
    type: "*(*RIStream;;)I;"
  }
  field {
    name: "LockRegion"
    type: "*(*RIStream;;Runion _ULARGE_INTEGER;Runion _ULARGE_INTEGER;UI)I;"
  }
  field {
    name: "UnlockRegion"
    type: "*(*RIStream;;Runion _ULARGE_INTEGER;Runion _ULARGE_INTEGER;UI)I;"
  }
  field {
    name: "Stat"
    type: "*(*RIStream;;*RtagSTATSTG;;UI)I;"
  }
  field {
    name: "Clone"
    type: "*(*RIStream;;**RIStream;;;)I;"
  }
}
struct {
  name: "IStream"
  field {
    name: "lpVtbl"
    type: "*RIStreamVtbl;;"
  }
}
struct {
  name: "IEnumSTATSTGVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIEnumSTATSTG;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIEnumSTATSTG;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIEnumSTATSTG;;)UI;"
  }
  field {
    name: "Next"
    type: "*(*RIEnumSTATSTG;;UI*RtagSTATSTG;;*UI;)I;"
  }
  field {
    name: "Skip"
    type: "*(*RIEnumSTATSTG;;UI)I;"
  }
  field {
    name: "Reset"
    type: "*(*RIEnumSTATSTG;;)I;"
  }
  field {
    name: "Clone"
    type: "*(*RIEnumSTATSTG;;**RIEnumSTATSTG;;;)I;"
  }
}
struct {
  name: "IEnumSTATSTG"
  field {
    name: "lpVtbl"
    type: "*RIEnumSTATSTGVtbl;;"
  }
}
struct {
  name: "tagRemSNB"
  field {
    name: "ulCntStr"
    type: "UI"
  }
  field {
    name: "ulCntChar"
    type: "UI"
  }
  field {
    name: "rgString"
    type: "X(ConstantArray.OLECHAR [1])"
  }
}
struct {
  name: "IStorageVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIStorage;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIStorage;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIStorage;;)UI;"
  }
  field {
    name: "CreateStream"
    type: "*(*RIStorage;;*cUS;UIUIUI**RIStream;;;)I;"
  }
  field {
    name: "OpenStream"
    type: "*(*RIStorage;;*cUS;*V;UIUI**RIStream;;;)I;"
  }
  field {
    name: "CreateStorage"
    type: "*(*RIStorage;;*cUS;UIUIUI**RIStorage;;;)I;"
  }
  field {
    name: "OpenStorage"
    type: "*(*RIStorage;;*cUS;*RIStorage;;UI**US;;UI**RIStorage;;;)I;"
  }
  field {
    name: "CopyTo"
    type: "*(*RIStorage;;UI*cR_GUID;;**US;;*RIStorage;;)I;"
  }
  field {
    name: "MoveElementTo"
    type: "*(*RIStorage;;*cUS;*RIStorage;;*cUS;UI)I;"
  }
  field {
    name: "Commit"
    type: "*(*RIStorage;;UI)I;"
  }
  field {
    name: "Revert"
    type: "*(*RIStorage;;)I;"
  }
  field {
    name: "EnumElements"
    type: "*(*RIStorage;;UI*V;UI**RIEnumSTATSTG;;;)I;"
  }
  field {
    name: "DestroyElement"
    type: "*(*RIStorage;;*cUS;)I;"
  }
  field {
    name: "RenameElement"
    type: "*(*RIStorage;;*cUS;*cUS;)I;"
  }
  field {
    name: "SetElementTimes"
    type: "*(*RIStorage;;*cUS;*cR_FILETIME;;*cR_FILETIME;;*cR_FILETIME;;)I;"
  }
  field {
    name: "SetClass"
    type: "*(*RIStorage;;*cR_GUID;;)I;"
  }
  field {
    name: "SetStateBits"
    type: "*(*RIStorage;;UIUI)I;"
  }
  field {
    name: "Stat"
    type: "*(*RIStorage;;*RtagSTATSTG;;UI)I;"
  }
}
struct {
  name: "IStorage"
  field {
    name: "lpVtbl"
    type: "*RIStorageVtbl;;"
  }
}
struct {
  name: "IPersistFileVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIPersistFile;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIPersistFile;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIPersistFile;;)UI;"
  }
  field {
    name: "GetClassID"
    type: "*(*RIPersistFile;;*R_GUID;;)I;"
  }
  field {
    name: "IsDirty"
    type: "*(*RIPersistFile;;)I;"
  }
  field {
    name: "Load"
    type: "*(*RIPersistFile;;*cUS;UI)I;"
  }
  field {
    name: "Save"
    type: "*(*RIPersistFile;;*cUS;I)I;"
  }
  field {
    name: "SaveCompleted"
    type: "*(*RIPersistFile;;*cUS;)I;"
  }
  field {
    name: "GetCurFile"
    type: "*(*RIPersistFile;;**US;;)I;"
  }
}
struct {
  name: "IPersistFile"
  field {
    name: "lpVtbl"
    type: "*RIPersistFileVtbl;;"
  }
}
struct {
  name: "IPersistStorageVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIPersistStorage;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIPersistStorage;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIPersistStorage;;)UI;"
  }
  field {
    name: "GetClassID"
    type: "*(*RIPersistStorage;;*R_GUID;;)I;"
  }
  field {
    name: "IsDirty"
    type: "*(*RIPersistStorage;;)I;"
  }
  field {
    name: "InitNew"
    type: "*(*RIPersistStorage;;*RIStorage;;)I;"
  }
  field {
    name: "Load"
    type: "*(*RIPersistStorage;;*RIStorage;;)I;"
  }
  field {
    name: "Save"
    type: "*(*RIPersistStorage;;*RIStorage;;I)I;"
  }
  field {
    name: "SaveCompleted"
    type: "*(*RIPersistStorage;;*RIStorage;;)I;"
  }
  field {
    name: "HandsOffStorage"
    type: "*(*RIPersistStorage;;)I;"
  }
}
struct {
  name: "IPersistStorage"
  field {
    name: "lpVtbl"
    type: "*RIPersistStorageVtbl;;"
  }
}
struct {
  name: "IRootStorageVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIRootStorage;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIRootStorage;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIRootStorage;;)UI;"
  }
  field {
    name: "SwitchToFile"
    type: "*(*RIRootStorage;;*US;)I;"
  }
}
struct {
  name: "IRootStorage"
  field {
    name: "lpVtbl"
    type: "*RIRootStorageVtbl;;"
  }
}
struct {
  name: "ILockBytesVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RILockBytes;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RILockBytes;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RILockBytes;;)UI;"
  }
  field {
    name: "ReadAt"
    type: "*(*RILockBytes;;Runion _ULARGE_INTEGER;*V;UI*UI;)I;"
  }
  field {
    name: "WriteAt"
    type: "*(*RILockBytes;;Runion _ULARGE_INTEGER;*cV;UI*UI;)I;"
  }
  field {
    name: "Flush"
    type: "*(*RILockBytes;;)I;"
  }
  field {
    name: "SetSize"
    type: "*(*RILockBytes;;Runion _ULARGE_INTEGER;)I;"
  }
  field {
    name: "LockRegion"
    type: "*(*RILockBytes;;Runion _ULARGE_INTEGER;Runion _ULARGE_INTEGER;UI)I;"
  }
  field {
    name: "UnlockRegion"
    type: "*(*RILockBytes;;Runion _ULARGE_INTEGER;Runion _ULARGE_INTEGER;UI)I;"
  }
  field {
    name: "Stat"
    type: "*(*RILockBytes;;*RtagSTATSTG;;UI)I;"
  }
}
struct {
  name: "ILockBytes"
  field {
    name: "lpVtbl"
    type: "*RILockBytesVtbl;;"
  }
}
struct {
  name: "IFillLockBytesVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIFillLockBytes;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIFillLockBytes;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIFillLockBytes;;)UI;"
  }
  field {
    name: "FillAppend"
    type: "*(*RIFillLockBytes;;*cV;UI*UI;)I;"
  }
  field {
    name: "FillAt"
    type: "*(*RIFillLockBytes;;Runion _ULARGE_INTEGER;*cV;UI*UI;)I;"
  }
  field {
    name: "SetFillSize"
    type: "*(*RIFillLockBytes;;Runion _ULARGE_INTEGER;)I;"
  }
  field {
    name: "Terminate"
    type: "*(*RIFillLockBytes;;I)I;"
  }
}
struct {
  name: "IFillLockBytes"
  field {
    name: "lpVtbl"
    type: "*RIFillLockBytesVtbl;;"
  }
}
struct {
  name: "IProgressNotifyVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIProgressNotify;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIProgressNotify;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIProgressNotify;;)UI;"
  }
  field {
    name: "OnProgress"
    type: "*(*RIProgressNotify;;UIUIII)I;"
  }
}
struct {
  name: "IProgressNotify"
  field {
    name: "lpVtbl"
    type: "*RIProgressNotifyVtbl;;"
  }
}
struct {
  name: "tagStorageLayout"
  field {
    name: "LayoutType"
    type: "UI"
  }
  field {
    name: "pwcsElementName"
    type: "*US;"
  }
  field {
    name: "cOffset"
    type: "Runion _LARGE_INTEGER;"
  }
  field {
    name: "cBytes"
    type: "Runion _LARGE_INTEGER;"
  }
}
struct {
  name: "ILayoutStorageVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RILayoutStorage;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RILayoutStorage;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RILayoutStorage;;)UI;"
  }
  field {
    name: "LayoutScript"
    type: "*(*RILayoutStorage;;*RtagStorageLayout;;UIUI)I;"
  }
  field {
    name: "BeginMonitor"
    type: "*(*RILayoutStorage;;)I;"
  }
  field {
    name: "EndMonitor"
    type: "*(*RILayoutStorage;;)I;"
  }
  field {
    name: "ReLayoutDocfile"
    type: "*(*RILayoutStorage;;*US;)I;"
  }
  field {
    name: "ReLayoutDocfileOnILockBytes"
    type: "*(*RILayoutStorage;;*RILockBytes;;)I;"
  }
}
struct {
  name: "ILayoutStorage"
  field {
    name: "lpVtbl"
    type: "*RILayoutStorageVtbl;;"
  }
}
struct {
  name: "IBlockingLockVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIBlockingLock;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIBlockingLock;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIBlockingLock;;)UI;"
  }
  field {
    name: "Lock"
    type: "*(*RIBlockingLock;;UI)I;"
  }
  field {
    name: "Unlock"
    type: "*(*RIBlockingLock;;)I;"
  }
}
struct {
  name: "IBlockingLock"
  field {
    name: "lpVtbl"
    type: "*RIBlockingLockVtbl;;"
  }
}
struct {
  name: "ITimeAndNoticeControlVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RITimeAndNoticeControl;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RITimeAndNoticeControl;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RITimeAndNoticeControl;;)UI;"
  }
  field {
    name: "SuppressChanges"
    type: "*(*RITimeAndNoticeControl;;UIUI)I;"
  }
}
struct {
  name: "ITimeAndNoticeControl"
  field {
    name: "lpVtbl"
    type: "*RITimeAndNoticeControlVtbl;;"
  }
}
struct {
  name: "IOplockStorageVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIOplockStorage;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIOplockStorage;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIOplockStorage;;)UI;"
  }
  field {
    name: "CreateStorageEx"
    type: "*(*RIOplockStorage;;*cUS;UIUIUI*cR_GUID;;**V;;)I;"
  }
  field {
    name: "OpenStorageEx"
    type: "*(*RIOplockStorage;;*cUS;UIUIUI*cR_GUID;;**V;;)I;"
  }
}
struct {
  name: "IOplockStorage"
  field {
    name: "lpVtbl"
    type: "*RIOplockStorageVtbl;;"
  }
}
struct {
  name: "tagDVTARGETDEVICE"
  field {
    name: "tdSize"
    type: "UI"
  }
  field {
    name: "tdDriverNameOffset"
    type: "US"
  }
  field {
    name: "tdDeviceNameOffset"
    type: "US"
  }
  field {
    name: "tdPortNameOffset"
    type: "US"
  }
  field {
    name: "tdExtDevmodeOffset"
    type: "US"
  }
  field {
    name: "tdData"
    type: "X(ConstantArray.BYTE [1])"
  }
}
struct {
  name: "tagFORMATETC"
  field {
    name: "cfFormat"
    type: "US"
  }
  field {
    name: "ptd"
    type: "*RtagDVTARGETDEVICE;;"
  }
  field {
    name: "dwAspect"
    type: "UI"
  }
  field {
    name: "lindex"
    type: "I"
  }
  field {
    name: "tymed"
    type: "UI"
  }
}
struct {
  name: "IEnumFORMATETCVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIEnumFORMATETC;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIEnumFORMATETC;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIEnumFORMATETC;;)UI;"
  }
  field {
    name: "Next"
    type: "*(*RIEnumFORMATETC;;UI*RtagFORMATETC;;*UI;)I;"
  }
  field {
    name: "Skip"
    type: "*(*RIEnumFORMATETC;;UI)I;"
  }
  field {
    name: "Reset"
    type: "*(*RIEnumFORMATETC;;)I;"
  }
  field {
    name: "Clone"
    type: "*(*RIEnumFORMATETC;;**RIEnumFORMATETC;;;)I;"
  }
}
struct {
  name: "IEnumFORMATETC"
  field {
    name: "lpVtbl"
    type: "*RIEnumFORMATETCVtbl;;"
  }
}
struct {
  name: "tagSTATDATA"
  field {
    name: "formatetc"
    type: "RtagFORMATETC;"
  }
  field {
    name: "advf"
    type: "UI"
  }
  field {
    name: "pAdvSink"
    type: "*RIAdviseSink;;"
  }
  field {
    name: "dwConnection"
    type: "UI"
  }
}
struct {
  name: "IEnumSTATDATAVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIEnumSTATDATA;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIEnumSTATDATA;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIEnumSTATDATA;;)UI;"
  }
  field {
    name: "Next"
    type: "*(*RIEnumSTATDATA;;UI*RtagSTATDATA;;*UI;)I;"
  }
  field {
    name: "Skip"
    type: "*(*RIEnumSTATDATA;;UI)I;"
  }
  field {
    name: "Reset"
    type: "*(*RIEnumSTATDATA;;)I;"
  }
  field {
    name: "Clone"
    type: "*(*RIEnumSTATDATA;;**RIEnumSTATDATA;;;)I;"
  }
}
struct {
  name: "IEnumSTATDATA"
  field {
    name: "lpVtbl"
    type: "*RIEnumSTATDATAVtbl;;"
  }
}
struct {
  name: "tagRemSTGMEDIUM"
  field {
    name: "tymed"
    type: "UI"
  }
  field {
    name: "dwHandleType"
    type: "UI"
  }
  field {
    name: "pData"
    type: "UI"
  }
  field {
    name: "pUnkForRelease"
    type: "UI"
  }
  field {
    name: "cbData"
    type: "UI"
  }
  field {
    name: "data"
    type: "X(ConstantArray.byte [1])"
  }
}
struct {
  name: "tagSTGMEDIUM"
  field {
    name: "tymed"
    type: "UI"
  }
  field {
    name: "pUnkForRelease"
    type: "*RIUnknown;;"
  }
}
struct {
  name: "_GDI_OBJECT"
  field {
    name: "ObjectType"
    type: "UI"
  }
  field {
    name: "u"
    type: "Runion _GDI_OBJECT::(anonymous at /usr/local/include/wine/windows/objidl.h:7013:5);"
  }
}
struct {
  name: "_userSTGMEDIUM"
  field {
    name: "pUnkForRelease"
    type: "*RIUnknown;;"
  }
}
struct {
  name: "struct _userSTGMEDIUM::(anonymous at /usr/local/include/wine/windows/objidl.h:7020:5)"
  field {
    name: "tymed"
    type: "UI"
  }
  field {
    name: "u"
    type: "Runion _userSTGMEDIUM::(anonymous at /usr/local/include/wine/windows/objidl.h:7022:9);"
  }
}
struct {
  name: "_userFLAG_STGMEDIUM"
  field {
    name: "ContextFlags"
    type: "I"
  }
  field {
    name: "fPassOwnership"
    type: "I"
  }
  field {
    name: "Stgmed"
    type: "R_userSTGMEDIUM;"
  }
}
struct {
  name: "_FLAG_STGMEDIUM"
  field {
    name: "ContextFlags"
    type: "I"
  }
  field {
    name: "fPassOwnership"
    type: "I"
  }
  field {
    name: "Stgmed"
    type: "RtagSTGMEDIUM;"
  }
}
struct {
  name: "IAdviseSinkVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIAdviseSink;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIAdviseSink;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIAdviseSink;;)UI;"
  }
  field {
    name: "OnDataChange"
    type: "*(*RIAdviseSink;;*RtagFORMATETC;;*RtagSTGMEDIUM;;)V;"
  }
  field {
    name: "OnViewChange"
    type: "*(*RIAdviseSink;;UII)V;"
  }
  field {
    name: "OnRename"
    type: "*(*RIAdviseSink;;*RIMoniker;;)V;"
  }
  field {
    name: "OnSave"
    type: "*(*RIAdviseSink;;)V;"
  }
  field {
    name: "OnClose"
    type: "*(*RIAdviseSink;;)V;"
  }
}
struct {
  name: "IAdviseSink"
  field {
    name: "lpVtbl"
    type: "*RIAdviseSinkVtbl;;"
  }
}
struct {
  name: "IAdviseSink2Vtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIAdviseSink2;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIAdviseSink2;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIAdviseSink2;;)UI;"
  }
  field {
    name: "OnDataChange"
    type: "*(*RIAdviseSink2;;*RtagFORMATETC;;*RtagSTGMEDIUM;;)V;"
  }
  field {
    name: "OnViewChange"
    type: "*(*RIAdviseSink2;;UII)V;"
  }
  field {
    name: "OnRename"
    type: "*(*RIAdviseSink2;;*RIMoniker;;)V;"
  }
  field {
    name: "OnSave"
    type: "*(*RIAdviseSink2;;)V;"
  }
  field {
    name: "OnClose"
    type: "*(*RIAdviseSink2;;)V;"
  }
  field {
    name: "OnLinkSrcChange"
    type: "*(*RIAdviseSink2;;*RIMoniker;;)V;"
  }
}
struct {
  name: "IAdviseSink2"
  field {
    name: "lpVtbl"
    type: "*RIAdviseSink2Vtbl;;"
  }
}
struct {
  name: "IDataObjectVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIDataObject;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIDataObject;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIDataObject;;)UI;"
  }
  field {
    name: "GetData"
    type: "*(*RIDataObject;;*RtagFORMATETC;;*RtagSTGMEDIUM;;)I;"
  }
  field {
    name: "GetDataHere"
    type: "*(*RIDataObject;;*RtagFORMATETC;;*RtagSTGMEDIUM;;)I;"
  }
  field {
    name: "QueryGetData"
    type: "*(*RIDataObject;;*RtagFORMATETC;;)I;"
  }
  field {
    name: "GetCanonicalFormatEtc"
    type: "*(*RIDataObject;;*RtagFORMATETC;;*RtagFORMATETC;;)I;"
  }
  field {
    name: "SetData"
    type: "*(*RIDataObject;;*RtagFORMATETC;;*RtagSTGMEDIUM;;I)I;"
  }
  field {
    name: "EnumFormatEtc"
    type: "*(*RIDataObject;;UI**RIEnumFORMATETC;;;)I;"
  }
  field {
    name: "DAdvise"
    type: "*(*RIDataObject;;*RtagFORMATETC;;UI*RIAdviseSink;;*UI;)I;"
  }
  field {
    name: "DUnadvise"
    type: "*(*RIDataObject;;UI)I;"
  }
  field {
    name: "EnumDAdvise"
    type: "*(*RIDataObject;;**RIEnumSTATDATA;;;)I;"
  }
}
struct {
  name: "IDataObject"
  field {
    name: "lpVtbl"
    type: "*RIDataObjectVtbl;;"
  }
}
struct {
  name: "IDataAdviseHolderVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIDataAdviseHolder;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIDataAdviseHolder;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIDataAdviseHolder;;)UI;"
  }
  field {
    name: "Advise"
    type: "*(*RIDataAdviseHolder;;*RIDataObject;;*RtagFORMATETC;;UI*RIAdviseSink;;*UI;)I;"
  }
  field {
    name: "Unadvise"
    type: "*(*RIDataAdviseHolder;;UI)I;"
  }
  field {
    name: "EnumAdvise"
    type: "*(*RIDataAdviseHolder;;**RIEnumSTATDATA;;;)I;"
  }
  field {
    name: "SendOnDataChange"
    type: "*(*RIDataAdviseHolder;;*RIDataObject;;UIUI)I;"
  }
}
struct {
  name: "IDataAdviseHolder"
  field {
    name: "lpVtbl"
    type: "*RIDataAdviseHolderVtbl;;"
  }
}
struct {
  name: "tagINTERFACEINFO"
  field {
    name: "pUnk"
    type: "*RIUnknown;;"
  }
  field {
    name: "iid"
    type: "R_GUID;"
  }
  field {
    name: "wMethod"
    type: "US"
  }
}
struct {
  name: "IMessageFilterVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIMessageFilter;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIMessageFilter;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIMessageFilter;;)UI;"
  }
  field {
    name: "HandleInComingCall"
    type: "*(*RIMessageFilter;;UI*RHTASK__;;UI*RtagINTERFACEINFO;;)UI;"
  }
  field {
    name: "RetryRejectedCall"
    type: "*(*RIMessageFilter;;*RHTASK__;;UIUI)UI;"
  }
  field {
    name: "MessagePending"
    type: "*(*RIMessageFilter;;*RHTASK__;;UIUI)UI;"
  }
}
struct {
  name: "IMessageFilter"
  field {
    name: "lpVtbl"
    type: "*RIMessageFilterVtbl;;"
  }
}
struct {
  name: "tagRPCOLEMESSAGE"
  field {
    name: "reserved1"
    type: "*V;"
  }
  field {
    name: "dataRepresentation"
    type: "UI"
  }
  field {
    name: "Buffer"
    type: "*V;"
  }
  field {
    name: "cbBuffer"
    type: "UI"
  }
  field {
    name: "iMethod"
    type: "UI"
  }
  field {
    name: "reserved2"
    type: "X(ConstantArray.void *[5])"
  }
  field {
    name: "rpcFlags"
    type: "UI"
  }
}
struct {
  name: "IRpcChannelBufferVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIRpcChannelBuffer;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIRpcChannelBuffer;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIRpcChannelBuffer;;)UI;"
  }
  field {
    name: "GetBuffer"
    type: "*(*RIRpcChannelBuffer;;*RtagRPCOLEMESSAGE;;*cR_GUID;;)I;"
  }
  field {
    name: "SendReceive"
    type: "*(*RIRpcChannelBuffer;;*RtagRPCOLEMESSAGE;;*UI;)I;"
  }
  field {
    name: "FreeBuffer"
    type: "*(*RIRpcChannelBuffer;;*RtagRPCOLEMESSAGE;;)I;"
  }
  field {
    name: "GetDestCtx"
    type: "*(*RIRpcChannelBuffer;;*UI;**V;;)I;"
  }
  field {
    name: "IsConnected"
    type: "*(*RIRpcChannelBuffer;;)I;"
  }
}
struct {
  name: "IRpcChannelBuffer"
  field {
    name: "lpVtbl"
    type: "*RIRpcChannelBufferVtbl;;"
  }
}
struct {
  name: "IRpcChannelBuffer2Vtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIRpcChannelBuffer2;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIRpcChannelBuffer2;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIRpcChannelBuffer2;;)UI;"
  }
  field {
    name: "GetBuffer"
    type: "*(*RIRpcChannelBuffer2;;*RtagRPCOLEMESSAGE;;*cR_GUID;;)I;"
  }
  field {
    name: "SendReceive"
    type: "*(*RIRpcChannelBuffer2;;*RtagRPCOLEMESSAGE;;*UI;)I;"
  }
  field {
    name: "FreeBuffer"
    type: "*(*RIRpcChannelBuffer2;;*RtagRPCOLEMESSAGE;;)I;"
  }
  field {
    name: "GetDestCtx"
    type: "*(*RIRpcChannelBuffer2;;*UI;**V;;)I;"
  }
  field {
    name: "IsConnected"
    type: "*(*RIRpcChannelBuffer2;;)I;"
  }
  field {
    name: "GetProtocolVersion"
    type: "*(*RIRpcChannelBuffer2;;*UI;)I;"
  }
}
struct {
  name: "IRpcChannelBuffer2"
  field {
    name: "lpVtbl"
    type: "*RIRpcChannelBuffer2Vtbl;;"
  }
}
struct {
  name: "IRpcChannelBuffer3Vtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIRpcChannelBuffer3;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIRpcChannelBuffer3;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIRpcChannelBuffer3;;)UI;"
  }
  field {
    name: "GetBuffer"
    type: "*(*RIRpcChannelBuffer3;;*RtagRPCOLEMESSAGE;;*cR_GUID;;)I;"
  }
  field {
    name: "SendReceive"
    type: "*(*RIRpcChannelBuffer3;;*RtagRPCOLEMESSAGE;;*UI;)I;"
  }
  field {
    name: "FreeBuffer"
    type: "*(*RIRpcChannelBuffer3;;*RtagRPCOLEMESSAGE;;)I;"
  }
  field {
    name: "GetDestCtx"
    type: "*(*RIRpcChannelBuffer3;;*UI;**V;;)I;"
  }
  field {
    name: "IsConnected"
    type: "*(*RIRpcChannelBuffer3;;)I;"
  }
  field {
    name: "GetProtocolVersion"
    type: "*(*RIRpcChannelBuffer3;;*UI;)I;"
  }
  field {
    name: "Send"
    type: "*(*RIRpcChannelBuffer3;;*RtagRPCOLEMESSAGE;;*UI;)I;"
  }
  field {
    name: "Receive"
    type: "*(*RIRpcChannelBuffer3;;*RtagRPCOLEMESSAGE;;UI*UI;)I;"
  }
  field {
    name: "Cancel"
    type: "*(*RIRpcChannelBuffer3;;*RtagRPCOLEMESSAGE;;)I;"
  }
  field {
    name: "GetCallContext"
    type: "*(*RIRpcChannelBuffer3;;*RtagRPCOLEMESSAGE;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "GetDestCtxEx"
    type: "*(*RIRpcChannelBuffer3;;*RtagRPCOLEMESSAGE;;*UI;**V;;)I;"
  }
  field {
    name: "GetState"
    type: "*(*RIRpcChannelBuffer3;;*RtagRPCOLEMESSAGE;;*UI;)I;"
  }
  field {
    name: "RegisterAsync"
    type: "*(*RIRpcChannelBuffer3;;*RtagRPCOLEMESSAGE;;*RIAsyncManager;;)I;"
  }
}
struct {
  name: "IRpcChannelBuffer3"
  field {
    name: "lpVtbl"
    type: "*RIRpcChannelBuffer3Vtbl;;"
  }
}
struct {
  name: "IAsyncRpcChannelBufferVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIAsyncRpcChannelBuffer;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIAsyncRpcChannelBuffer;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIAsyncRpcChannelBuffer;;)UI;"
  }
  field {
    name: "GetBuffer"
    type: "*(*RIAsyncRpcChannelBuffer;;*RtagRPCOLEMESSAGE;;*cR_GUID;;)I;"
  }
  field {
    name: "SendReceive"
    type: "*(*RIAsyncRpcChannelBuffer;;*RtagRPCOLEMESSAGE;;*UI;)I;"
  }
  field {
    name: "FreeBuffer"
    type: "*(*RIAsyncRpcChannelBuffer;;*RtagRPCOLEMESSAGE;;)I;"
  }
  field {
    name: "GetDestCtx"
    type: "*(*RIAsyncRpcChannelBuffer;;*UI;**V;;)I;"
  }
  field {
    name: "IsConnected"
    type: "*(*RIAsyncRpcChannelBuffer;;)I;"
  }
  field {
    name: "GetProtocolVersion"
    type: "*(*RIAsyncRpcChannelBuffer;;*UI;)I;"
  }
  field {
    name: "Send"
    type: "*(*RIAsyncRpcChannelBuffer;;*RtagRPCOLEMESSAGE;;*RISynchronize;;*UI;)I;"
  }
  field {
    name: "Receive"
    type: "*(*RIAsyncRpcChannelBuffer;;*RtagRPCOLEMESSAGE;;*UI;)I;"
  }
  field {
    name: "GetDestCtxEx"
    type: "*(*RIAsyncRpcChannelBuffer;;*RtagRPCOLEMESSAGE;;*UI;**V;;)I;"
  }
}
struct {
  name: "IAsyncRpcChannelBuffer"
  field {
    name: "lpVtbl"
    type: "*RIAsyncRpcChannelBufferVtbl;;"
  }
}
struct {
  name: "IRpcSyntaxNegotiateVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIRpcSyntaxNegotiate;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIRpcSyntaxNegotiate;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIRpcSyntaxNegotiate;;)UI;"
  }
  field {
    name: "NegotiateSyntax"
    type: "*(*RIRpcSyntaxNegotiate;;*RtagRPCOLEMESSAGE;;)I;"
  }
}
struct {
  name: "IRpcSyntaxNegotiate"
  field {
    name: "lpVtbl"
    type: "*RIRpcSyntaxNegotiateVtbl;;"
  }
}
struct {
  name: "IRpcProxyBufferVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIRpcProxyBuffer;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIRpcProxyBuffer;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIRpcProxyBuffer;;)UI;"
  }
  field {
    name: "Connect"
    type: "*(*RIRpcProxyBuffer;;*RIRpcChannelBuffer;;)I;"
  }
  field {
    name: "Disconnect"
    type: "*(*RIRpcProxyBuffer;;)V;"
  }
}
struct {
  name: "IRpcProxyBuffer"
  field {
    name: "lpVtbl"
    type: "*RIRpcProxyBufferVtbl;;"
  }
}
struct {
  name: "IRpcStubBufferVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIRpcStubBuffer;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIRpcStubBuffer;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIRpcStubBuffer;;)UI;"
  }
  field {
    name: "Connect"
    type: "*(*RIRpcStubBuffer;;*RIUnknown;;)I;"
  }
  field {
    name: "Disconnect"
    type: "*(*RIRpcStubBuffer;;)V;"
  }
  field {
    name: "Invoke"
    type: "*(*RIRpcStubBuffer;;*RtagRPCOLEMESSAGE;;*RIRpcChannelBuffer;;)I;"
  }
  field {
    name: "IsIIDSupported"
    type: "*(*RIRpcStubBuffer;;*cR_GUID;;)*RIRpcStubBuffer;;;"
  }
  field {
    name: "CountRefs"
    type: "*(*RIRpcStubBuffer;;)UI;"
  }
  field {
    name: "DebugServerQueryInterface"
    type: "*(*RIRpcStubBuffer;;**V;;)I;"
  }
  field {
    name: "DebugServerRelease"
    type: "*(*RIRpcStubBuffer;;*V;)V;"
  }
}
struct {
  name: "IRpcStubBuffer"
  field {
    name: "lpVtbl"
    type: "*RIRpcStubBufferVtbl;;"
  }
}
struct {
  name: "IPSFactoryBufferVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIPSFactoryBuffer;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIPSFactoryBuffer;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIPSFactoryBuffer;;)UI;"
  }
  field {
    name: "CreateProxy"
    type: "*(*RIPSFactoryBuffer;;*RIUnknown;;*cR_GUID;;**RIRpcProxyBuffer;;;**V;;)I;"
  }
  field {
    name: "CreateStub"
    type: "*(*RIPSFactoryBuffer;;*cR_GUID;;*RIUnknown;;**RIRpcStubBuffer;;;)I;"
  }
}
struct {
  name: "IPSFactoryBuffer"
  field {
    name: "lpVtbl"
    type: "*RIPSFactoryBufferVtbl;;"
  }
}
struct {
  name: "SChannelHookCallInfo"
  field {
    name: "iid"
    type: "R_GUID;"
  }
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "uCausality"
    type: "R_GUID;"
  }
  field {
    name: "dwServerPid"
    type: "UI"
  }
  field {
    name: "iMethod"
    type: "UI"
  }
  field {
    name: "pObject"
    type: "*V;"
  }
}
struct {
  name: "IChannelHookVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIChannelHook;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIChannelHook;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIChannelHook;;)UI;"
  }
  field {
    name: "ClientGetSize"
    type: "*(*RIChannelHook;;*cR_GUID;;*cR_GUID;;*UI;)V;"
  }
  field {
    name: "ClientFillBuffer"
    type: "*(*RIChannelHook;;*cR_GUID;;*cR_GUID;;*UI;*V;)V;"
  }
  field {
    name: "ClientNotify"
    type: "*(*RIChannelHook;;*cR_GUID;;*cR_GUID;;UI*V;UII)V;"
  }
  field {
    name: "ServerNotify"
    type: "*(*RIChannelHook;;*cR_GUID;;*cR_GUID;;UI*V;UI)V;"
  }
  field {
    name: "ServerGetSize"
    type: "*(*RIChannelHook;;*cR_GUID;;*cR_GUID;;I*UI;)V;"
  }
  field {
    name: "ServerFillBuffer"
    type: "*(*RIChannelHook;;*cR_GUID;;*cR_GUID;;*UI;*V;I)V;"
  }
}
struct {
  name: "IChannelHook"
  field {
    name: "lpVtbl"
    type: "*RIChannelHookVtbl;;"
  }
}
struct {
  name: "tagSOLE_AUTHENTICATION_SERVICE"
  field {
    name: "dwAuthnSvc"
    type: "UI"
  }
  field {
    name: "dwAuthzSvc"
    type: "UI"
  }
  field {
    name: "pPrincipalName"
    type: "*US;"
  }
  field {
    name: "hr"
    type: "I"
  }
}
struct {
  name: "tagSOLE_AUTHENTICATION_INFO"
  field {
    name: "dwAuthnSvc"
    type: "UI"
  }
  field {
    name: "dwAuthzSvc"
    type: "UI"
  }
  field {
    name: "pAuthInfo"
    type: "*V;"
  }
}
struct {
  name: "tagSOLE_AUTHENTICATION_LIST"
  field {
    name: "cAuthInfo"
    type: "UI"
  }
  field {
    name: "aAuthInfo"
    type: "*RtagSOLE_AUTHENTICATION_INFO;;"
  }
}
struct {
  name: "IClientSecurityVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIClientSecurity;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIClientSecurity;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIClientSecurity;;)UI;"
  }
  field {
    name: "QueryBlanket"
    type: "*(*RIClientSecurity;;*RIUnknown;;*UI;*UI;**US;;*UI;*UI;**V;;*UI;)I;"
  }
  field {
    name: "SetBlanket"
    type: "*(*RIClientSecurity;;*RIUnknown;;UIUI*US;UIUI*V;UI)I;"
  }
  field {
    name: "CopyProxy"
    type: "*(*RIClientSecurity;;*RIUnknown;;**RIUnknown;;;)I;"
  }
}
struct {
  name: "IClientSecurity"
  field {
    name: "lpVtbl"
    type: "*RIClientSecurityVtbl;;"
  }
}
struct {
  name: "IServerSecurityVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIServerSecurity;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIServerSecurity;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIServerSecurity;;)UI;"
  }
  field {
    name: "QueryBlanket"
    type: "*(*RIServerSecurity;;*UI;*UI;**US;;*UI;*UI;**V;;*UI;)I;"
  }
  field {
    name: "ImpersonateClient"
    type: "*(*RIServerSecurity;;)I;"
  }
  field {
    name: "RevertToSelf"
    type: "*(*RIServerSecurity;;)I;"
  }
  field {
    name: "IsImpersonating"
    type: "*(*RIServerSecurity;;)I;"
  }
}
struct {
  name: "IServerSecurity"
  field {
    name: "lpVtbl"
    type: "*RIServerSecurityVtbl;;"
  }
}
struct {
  name: "IAsyncSetupVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIAsyncSetup;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIAsyncSetup;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIAsyncSetup;;)UI;"
  }
  field {
    name: "GetAsyncManager"
    type: "*(*RIAsyncSetup;;*cR_GUID;;*RIUnknown;;UI**RIUnknown;;;**RIAsyncManager;;;)I;"
  }
}
struct {
  name: "IAsyncSetup"
  field {
    name: "lpVtbl"
    type: "*RIAsyncSetupVtbl;;"
  }
}
struct {
  name: "IDirectWriterLockVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIDirectWriterLock;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIDirectWriterLock;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIDirectWriterLock;;)UI;"
  }
  field {
    name: "WaitForWriteAccess"
    type: "*(*RIDirectWriterLock;;UI)I;"
  }
  field {
    name: "ReleaseWriteAccess"
    type: "*(*RIDirectWriterLock;;)I;"
  }
  field {
    name: "HaveWriteAccess"
    type: "*(*RIDirectWriterLock;;)I;"
  }
}
struct {
  name: "IDirectWriterLock"
  field {
    name: "lpVtbl"
    type: "*RIDirectWriterLockVtbl;;"
  }
}
struct {
  name: "ISynchronizeVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RISynchronize;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RISynchronize;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RISynchronize;;)UI;"
  }
  field {
    name: "Wait"
    type: "*(*RISynchronize;;UIUI)I;"
  }
  field {
    name: "Signal"
    type: "*(*RISynchronize;;)I;"
  }
  field {
    name: "Reset"
    type: "*(*RISynchronize;;)I;"
  }
}
struct {
  name: "ISynchronize"
  field {
    name: "lpVtbl"
    type: "*RISynchronizeVtbl;;"
  }
}
struct {
  name: "ISynchronizeHandleVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RISynchronizeHandle;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RISynchronizeHandle;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RISynchronizeHandle;;)UI;"
  }
  field {
    name: "GetHandle"
    type: "*(*RISynchronizeHandle;;**V;;)I;"
  }
}
struct {
  name: "ISynchronizeHandle"
  field {
    name: "lpVtbl"
    type: "*RISynchronizeHandleVtbl;;"
  }
}
struct {
  name: "ISynchronizeEventVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RISynchronizeEvent;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RISynchronizeEvent;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RISynchronizeEvent;;)UI;"
  }
  field {
    name: "GetHandle"
    type: "*(*RISynchronizeEvent;;**V;;)I;"
  }
  field {
    name: "SetEventHandle"
    type: "*(*RISynchronizeEvent;;**V;;)I;"
  }
}
struct {
  name: "ISynchronizeEvent"
  field {
    name: "lpVtbl"
    type: "*RISynchronizeEventVtbl;;"
  }
}
struct {
  name: "ISynchronizeContainerVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RISynchronizeContainer;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RISynchronizeContainer;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RISynchronizeContainer;;)UI;"
  }
  field {
    name: "AddSynchronize"
    type: "*(*RISynchronizeContainer;;*RISynchronize;;)I;"
  }
  field {
    name: "WaitMultiple"
    type: "*(*RISynchronizeContainer;;UIUI**RISynchronize;;;)I;"
  }
}
struct {
  name: "ISynchronizeContainer"
  field {
    name: "lpVtbl"
    type: "*RISynchronizeContainerVtbl;;"
  }
}
struct {
  name: "ISynchronizeMutexVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RISynchronizeMutex;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RISynchronizeMutex;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RISynchronizeMutex;;)UI;"
  }
  field {
    name: "Wait"
    type: "*(*RISynchronizeMutex;;UIUI)I;"
  }
  field {
    name: "Signal"
    type: "*(*RISynchronizeMutex;;)I;"
  }
  field {
    name: "Reset"
    type: "*(*RISynchronizeMutex;;)I;"
  }
  field {
    name: "ReleaseMutex"
    type: "*(*RISynchronizeMutex;;)I;"
  }
}
struct {
  name: "ISynchronizeMutex"
  field {
    name: "lpVtbl"
    type: "*RISynchronizeMutexVtbl;;"
  }
}
struct {
  name: "ICancelMethodCallsVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RICancelMethodCalls;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RICancelMethodCalls;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RICancelMethodCalls;;)UI;"
  }
  field {
    name: "Cancel"
    type: "*(*RICancelMethodCalls;;UI)I;"
  }
  field {
    name: "TestCancel"
    type: "*(*RICancelMethodCalls;;)I;"
  }
}
struct {
  name: "ICancelMethodCalls"
  field {
    name: "lpVtbl"
    type: "*RICancelMethodCallsVtbl;;"
  }
}
struct {
  name: "IAsyncManagerVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIAsyncManager;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIAsyncManager;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIAsyncManager;;)UI;"
  }
  field {
    name: "CompleteCall"
    type: "*(*RIAsyncManager;;I)I;"
  }
  field {
    name: "GetCallContext"
    type: "*(*RIAsyncManager;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "GetState"
    type: "*(*RIAsyncManager;;*UI;)I;"
  }
}
struct {
  name: "IAsyncManager"
  field {
    name: "lpVtbl"
    type: "*RIAsyncManagerVtbl;;"
  }
}
struct {
  name: "ICallFactoryVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RICallFactory;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RICallFactory;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RICallFactory;;)UI;"
  }
  field {
    name: "CreateCall"
    type: "*(*RICallFactory;;*cR_GUID;;*RIUnknown;;*cR_GUID;;**RIUnknown;;;)I;"
  }
}
struct {
  name: "ICallFactory"
  field {
    name: "lpVtbl"
    type: "*RICallFactoryVtbl;;"
  }
}
struct {
  name: "IRpcOptionsVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIRpcOptions;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIRpcOptions;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIRpcOptions;;)UI;"
  }
  field {
    name: "Set"
    type: "*(*RIRpcOptions;;*RIUnknown;;UIUI)I;"
  }
  field {
    name: "Query"
    type: "*(*RIRpcOptions;;*RIUnknown;;UI*UI;)I;"
  }
}
struct {
  name: "IRpcOptions"
  field {
    name: "lpVtbl"
    type: "*RIRpcOptionsVtbl;;"
  }
}
struct {
  name: "IRpcHelperVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIRpcHelper;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIRpcHelper;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIRpcHelper;;)UI;"
  }
  field {
    name: "GetDCOMProtocolVersion"
    type: "*(*RIRpcHelper;;*UI;)I;"
  }
  field {
    name: "GetIIDFromOBJREF"
    type: "*(*RIRpcHelper;;*V;**R_GUID;;;)I;"
  }
}
struct {
  name: "IRpcHelper"
  field {
    name: "lpVtbl"
    type: "*RIRpcHelperVtbl;;"
  }
}
struct {
  name: "IReleaseMarshalBuffersVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIReleaseMarshalBuffers;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIReleaseMarshalBuffers;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIReleaseMarshalBuffers;;)UI;"
  }
  field {
    name: "ReleaseMarshalBuffer"
    type: "*(*RIReleaseMarshalBuffers;;*RtagRPCOLEMESSAGE;;UI*RIUnknown;;)I;"
  }
}
struct {
  name: "IReleaseMarshalBuffers"
  field {
    name: "lpVtbl"
    type: "*RIReleaseMarshalBuffersVtbl;;"
  }
}
struct {
  name: "IWaitMultipleVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIWaitMultiple;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIWaitMultiple;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIWaitMultiple;;)UI;"
  }
  field {
    name: "WaitMultiple"
    type: "*(*RIWaitMultiple;;UI**RISynchronize;;;)I;"
  }
  field {
    name: "AddSynchronize"
    type: "*(*RIWaitMultiple;;*RISynchronize;;)I;"
  }
}
struct {
  name: "IWaitMultiple"
  field {
    name: "lpVtbl"
    type: "*RIWaitMultipleVtbl;;"
  }
}
struct {
  name: "IUrlMonVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIUrlMon;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIUrlMon;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIUrlMon;;)UI;"
  }
  field {
    name: "AsyncGetClassBits"
    type: "*(*RIUrlMon;;*cR_GUID;;*cUS;*cUS;UIUI*cUS;*RIBindCtx;;UI*cR_GUID;;UI)I;"
  }
}
struct {
  name: "IUrlMon"
  field {
    name: "lpVtbl"
    type: "*RIUrlMonVtbl;;"
  }
}
struct {
  name: "IForegroundTransferVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIForegroundTransfer;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIForegroundTransfer;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIForegroundTransfer;;)UI;"
  }
  field {
    name: "AllowForegroundTransfer"
    type: "*(*RIForegroundTransfer;;*V;)I;"
  }
}
struct {
  name: "IForegroundTransfer"
  field {
    name: "lpVtbl"
    type: "*RIForegroundTransferVtbl;;"
  }
}
struct {
  name: "IAddrTrackingControlVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIAddrTrackingControl;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIAddrTrackingControl;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIAddrTrackingControl;;)UI;"
  }
  field {
    name: "EnableCOMDynamicAddrTracking"
    type: "*(*RIAddrTrackingControl;;)I;"
  }
  field {
    name: "DisableCOMDynamicAddrTracking"
    type: "*(*RIAddrTrackingControl;;)I;"
  }
}
struct {
  name: "IAddrTrackingControl"
  field {
    name: "lpVtbl"
    type: "*RIAddrTrackingControlVtbl;;"
  }
}
struct {
  name: "IAddrExclusionControlVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIAddrExclusionControl;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIAddrExclusionControl;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIAddrExclusionControl;;)UI;"
  }
  field {
    name: "GetCurrentAddrExclusionList"
    type: "*(*RIAddrExclusionControl;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "UpdateAddrExclusionList"
    type: "*(*RIAddrExclusionControl;;*RIUnknown;;)I;"
  }
}
struct {
  name: "IAddrExclusionControl"
  field {
    name: "lpVtbl"
    type: "*RIAddrExclusionControlVtbl;;"
  }
}
struct {
  name: "IComThreadingInfoVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIComThreadingInfo;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIComThreadingInfo;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIComThreadingInfo;;)UI;"
  }
  field {
    name: "GetCurrentApartmentType"
    type: "*(*RIComThreadingInfo;;*X(Enum.enum _APTTYPE);)I;"
  }
  field {
    name: "GetCurrentThreadType"
    type: "*(*RIComThreadingInfo;;*X(Enum.enum _THDTYPE);)I;"
  }
  field {
    name: "GetCurrentLogicalThreadId"
    type: "*(*RIComThreadingInfo;;*R_GUID;;)I;"
  }
  field {
    name: "SetCurrentLogicalThreadId"
    type: "*(*RIComThreadingInfo;;*cR_GUID;;)I;"
  }
}
struct {
  name: "IComThreadingInfo"
  field {
    name: "lpVtbl"
    type: "*RIComThreadingInfoVtbl;;"
  }
}
struct {
  name: "IProcessInitControlVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIProcessInitControl;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIProcessInitControl;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIProcessInitControl;;)UI;"
  }
  field {
    name: "ResetInitializerTimeout"
    type: "*(*RIProcessInitControl;;UI)I;"
  }
}
struct {
  name: "IProcessInitControl"
  field {
    name: "lpVtbl"
    type: "*RIProcessInitControlVtbl;;"
  }
}
struct {
  name: "IInitializeSpyVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIInitializeSpy;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIInitializeSpy;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIInitializeSpy;;)UI;"
  }
  field {
    name: "PreInitialize"
    type: "*(*RIInitializeSpy;;UIUI)I;"
  }
  field {
    name: "PostInitialize"
    type: "*(*RIInitializeSpy;;IUIUI)I;"
  }
  field {
    name: "PreUninitialize"
    type: "*(*RIInitializeSpy;;UI)I;"
  }
  field {
    name: "PostUninitialize"
    type: "*(*RIInitializeSpy;;UI)I;"
  }
}
struct {
  name: "IInitializeSpy"
  field {
    name: "lpVtbl"
    type: "*RIInitializeSpyVtbl;;"
  }
}
struct {
  name: "IThumbnailExtractorVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIThumbnailExtractor;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIThumbnailExtractor;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIThumbnailExtractor;;)UI;"
  }
  field {
    name: "ExtractThumbnail"
    type: "*(*RIThumbnailExtractor;;*RIStorage;;UIUI*UI;*UI;**RHBITMAP__;;;)I;"
  }
  field {
    name: "OnFileUpdated"
    type: "*(*RIThumbnailExtractor;;*RIStorage;;)I;"
  }
}
struct {
  name: "IThumbnailExtractor"
  field {
    name: "lpVtbl"
    type: "*RIThumbnailExtractorVtbl;;"
  }
}
struct {
  name: "IGlobalOptionsVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIGlobalOptions;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIGlobalOptions;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIGlobalOptions;;)UI;"
  }
  field {
    name: "Set"
    type: "*(*RIGlobalOptions;;X(Enum.enum tagGLOBALOPT_PROPERTIES)UI)I;"
  }
  field {
    name: "Query"
    type: "*(*RIGlobalOptions;;X(Enum.enum tagGLOBALOPT_PROPERTIES)*UI;)I;"
  }
}
struct {
  name: "IGlobalOptions"
  field {
    name: "lpVtbl"
    type: "*RIGlobalOptionsVtbl;;"
  }
}
struct {
  name: "tagSTGOPTIONS"
  field {
    name: "usVersion"
    type: "US"
  }
  field {
    name: "reserved"
    type: "US"
  }
  field {
    name: "ulSectorSize"
    type: "UI"
  }
  field {
    name: "pwcsTemplateFile"
    type: "*cUS;"
  }
}
struct {
  name: "tagOBJECTDESCRIPTOR"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "clsid"
    type: "R_GUID;"
  }
  field {
    name: "dwDrawAspect"
    type: "UI"
  }
  field {
    name: "sizel"
    type: "RtagSIZE;"
  }
  field {
    name: "pointl"
    type: "R_POINTL;"
  }
  field {
    name: "dwStatus"
    type: "UI"
  }
  field {
    name: "dwFullUserTypeName"
    type: "UI"
  }
  field {
    name: "dwSrcOfCopy"
    type: "UI"
  }
}
struct {
  name: "IOleWindowVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIOleWindow;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIOleWindow;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIOleWindow;;)UI;"
  }
  field {
    name: "GetWindow"
    type: "*(*RIOleWindow;;**RHWND__;;;)I;"
  }
  field {
    name: "ContextSensitiveHelp"
    type: "*(*RIOleWindow;;I)I;"
  }
}
struct {
  name: "IOleWindow"
  field {
    name: "lpVtbl"
    type: "*RIOleWindowVtbl;;"
  }
}
struct {
  name: "IOleInPlaceObjectVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIOleInPlaceObject;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIOleInPlaceObject;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIOleInPlaceObject;;)UI;"
  }
  field {
    name: "GetWindow"
    type: "*(*RIOleInPlaceObject;;**RHWND__;;;)I;"
  }
  field {
    name: "ContextSensitiveHelp"
    type: "*(*RIOleInPlaceObject;;I)I;"
  }
  field {
    name: "InPlaceDeactivate"
    type: "*(*RIOleInPlaceObject;;)I;"
  }
  field {
    name: "UIDeactivate"
    type: "*(*RIOleInPlaceObject;;)I;"
  }
  field {
    name: "SetObjectRects"
    type: "*(*RIOleInPlaceObject;;*cRtagRECT;;*cRtagRECT;;)I;"
  }
  field {
    name: "ReactivateAndUndo"
    type: "*(*RIOleInPlaceObject;;)I;"
  }
}
struct {
  name: "IOleInPlaceObject"
  field {
    name: "lpVtbl"
    type: "*RIOleInPlaceObjectVtbl;;"
  }
}
struct {
  name: "IOleInPlaceUIWindowVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIOleInPlaceUIWindow;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIOleInPlaceUIWindow;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIOleInPlaceUIWindow;;)UI;"
  }
  field {
    name: "GetWindow"
    type: "*(*RIOleInPlaceUIWindow;;**RHWND__;;;)I;"
  }
  field {
    name: "ContextSensitiveHelp"
    type: "*(*RIOleInPlaceUIWindow;;I)I;"
  }
  field {
    name: "GetBorder"
    type: "*(*RIOleInPlaceUIWindow;;*RtagRECT;;)I;"
  }
  field {
    name: "RequestBorderSpace"
    type: "*(*RIOleInPlaceUIWindow;;*cRtagRECT;;)I;"
  }
  field {
    name: "SetBorderSpace"
    type: "*(*RIOleInPlaceUIWindow;;*cRtagRECT;;)I;"
  }
  field {
    name: "SetActiveObject"
    type: "*(*RIOleInPlaceUIWindow;;*RIOleInPlaceActiveObject;;*cUS;)I;"
  }
}
struct {
  name: "IOleInPlaceUIWindow"
  field {
    name: "lpVtbl"
    type: "*RIOleInPlaceUIWindowVtbl;;"
  }
}
struct {
  name: "tagOleInPlaceFrameInfo"
  field {
    name: "cb"
    type: "UI"
  }
  field {
    name: "fMDIApp"
    type: "I"
  }
  field {
    name: "hwndFrame"
    type: "*RHWND__;;"
  }
  field {
    name: "haccel"
    type: "*RHACCEL__;;"
  }
  field {
    name: "cAccelEntries"
    type: "UI"
  }
}
struct {
  name: "tagOleMenuGroupWidths"
  field {
    name: "width"
    type: "X(ConstantArray.LONG [6])"
  }
}
struct {
  name: "IOleInPlaceFrameVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIOleInPlaceFrame;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIOleInPlaceFrame;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIOleInPlaceFrame;;)UI;"
  }
  field {
    name: "GetWindow"
    type: "*(*RIOleInPlaceFrame;;**RHWND__;;;)I;"
  }
  field {
    name: "ContextSensitiveHelp"
    type: "*(*RIOleInPlaceFrame;;I)I;"
  }
  field {
    name: "GetBorder"
    type: "*(*RIOleInPlaceFrame;;*RtagRECT;;)I;"
  }
  field {
    name: "RequestBorderSpace"
    type: "*(*RIOleInPlaceFrame;;*cRtagRECT;;)I;"
  }
  field {
    name: "SetBorderSpace"
    type: "*(*RIOleInPlaceFrame;;*cRtagRECT;;)I;"
  }
  field {
    name: "SetActiveObject"
    type: "*(*RIOleInPlaceFrame;;*RIOleInPlaceActiveObject;;*cUS;)I;"
  }
  field {
    name: "InsertMenus"
    type: "*(*RIOleInPlaceFrame;;*RHMENU__;;*RtagOleMenuGroupWidths;;)I;"
  }
  field {
    name: "SetMenu"
    type: "*(*RIOleInPlaceFrame;;*RHMENU__;;*V;*RHWND__;;)I;"
  }
  field {
    name: "RemoveMenus"
    type: "*(*RIOleInPlaceFrame;;*RHMENU__;;)I;"
  }
  field {
    name: "SetStatusText"
    type: "*(*RIOleInPlaceFrame;;*cUS;)I;"
  }
  field {
    name: "EnableModeless"
    type: "*(*RIOleInPlaceFrame;;I)I;"
  }
  field {
    name: "TranslateAcceleratorA"
    type: "*(*RIOleInPlaceFrame;;*RtagMSG;;US)I;"
  }
}
struct {
  name: "IOleInPlaceFrame"
  field {
    name: "lpVtbl"
    type: "*RIOleInPlaceFrameVtbl;;"
  }
}
struct {
  name: "IOleInPlaceActiveObjectVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIOleInPlaceActiveObject;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIOleInPlaceActiveObject;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIOleInPlaceActiveObject;;)UI;"
  }
  field {
    name: "GetWindow"
    type: "*(*RIOleInPlaceActiveObject;;**RHWND__;;;)I;"
  }
  field {
    name: "ContextSensitiveHelp"
    type: "*(*RIOleInPlaceActiveObject;;I)I;"
  }
  field {
    name: "TranslateAcceleratorA"
    type: "*(*RIOleInPlaceActiveObject;;*RtagMSG;;)I;"
  }
  field {
    name: "OnFrameWindowActivate"
    type: "*(*RIOleInPlaceActiveObject;;I)I;"
  }
  field {
    name: "OnDocWindowActivate"
    type: "*(*RIOleInPlaceActiveObject;;I)I;"
  }
  field {
    name: "ResizeBorder"
    type: "*(*RIOleInPlaceActiveObject;;*cRtagRECT;;*RIOleInPlaceUIWindow;;I)I;"
  }
  field {
    name: "EnableModeless"
    type: "*(*RIOleInPlaceActiveObject;;I)I;"
  }
}
struct {
  name: "IOleInPlaceActiveObject"
  field {
    name: "lpVtbl"
    type: "*RIOleInPlaceActiveObjectVtbl;;"
  }
}
struct {
  name: "IOleInPlaceSiteVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIOleInPlaceSite;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIOleInPlaceSite;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIOleInPlaceSite;;)UI;"
  }
  field {
    name: "GetWindow"
    type: "*(*RIOleInPlaceSite;;**RHWND__;;;)I;"
  }
  field {
    name: "ContextSensitiveHelp"
    type: "*(*RIOleInPlaceSite;;I)I;"
  }
  field {
    name: "CanInPlaceActivate"
    type: "*(*RIOleInPlaceSite;;)I;"
  }
  field {
    name: "OnInPlaceActivate"
    type: "*(*RIOleInPlaceSite;;)I;"
  }
  field {
    name: "OnUIActivate"
    type: "*(*RIOleInPlaceSite;;)I;"
  }
  field {
    name: "GetWindowContext"
    type: "*(*RIOleInPlaceSite;;**RIOleInPlaceFrame;;;**RIOleInPlaceUIWindow;;;*RtagRECT;;*RtagRECT;;*RtagOleInPlaceFrameInfo;;)I;"
  }
  field {
    name: "Scroll"
    type: "*(*RIOleInPlaceSite;;RtagSIZE;)I;"
  }
  field {
    name: "OnUIDeactivate"
    type: "*(*RIOleInPlaceSite;;I)I;"
  }
  field {
    name: "OnInPlaceDeactivate"
    type: "*(*RIOleInPlaceSite;;)I;"
  }
  field {
    name: "DiscardUndoState"
    type: "*(*RIOleInPlaceSite;;)I;"
  }
  field {
    name: "DeactivateAndUndo"
    type: "*(*RIOleInPlaceSite;;)I;"
  }
  field {
    name: "OnPosRectChange"
    type: "*(*RIOleInPlaceSite;;*cRtagRECT;;)I;"
  }
}
struct {
  name: "IOleInPlaceSite"
  field {
    name: "lpVtbl"
    type: "*RIOleInPlaceSiteVtbl;;"
  }
}
struct {
  name: "IParseDisplayNameVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIParseDisplayName;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIParseDisplayName;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIParseDisplayName;;)UI;"
  }
  field {
    name: "ParseDisplayName"
    type: "*(*RIParseDisplayName;;*RIBindCtx;;*US;*UI;**RIMoniker;;;)I;"
  }
}
struct {
  name: "IParseDisplayName"
  field {
    name: "lpVtbl"
    type: "*RIParseDisplayNameVtbl;;"
  }
}
struct {
  name: "IOleContainerVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIOleContainer;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIOleContainer;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIOleContainer;;)UI;"
  }
  field {
    name: "ParseDisplayName"
    type: "*(*RIOleContainer;;*RIBindCtx;;*US;*UI;**RIMoniker;;;)I;"
  }
  field {
    name: "EnumObjects"
    type: "*(*RIOleContainer;;UI**RIEnumUnknown;;;)I;"
  }
  field {
    name: "LockContainer"
    type: "*(*RIOleContainer;;I)I;"
  }
}
struct {
  name: "IOleContainer"
  field {
    name: "lpVtbl"
    type: "*RIOleContainerVtbl;;"
  }
}
struct {
  name: "IOleItemContainerVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIOleItemContainer;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIOleItemContainer;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIOleItemContainer;;)UI;"
  }
  field {
    name: "ParseDisplayName"
    type: "*(*RIOleItemContainer;;*RIBindCtx;;*US;*UI;**RIMoniker;;;)I;"
  }
  field {
    name: "EnumObjects"
    type: "*(*RIOleItemContainer;;UI**RIEnumUnknown;;;)I;"
  }
  field {
    name: "LockContainer"
    type: "*(*RIOleItemContainer;;I)I;"
  }
  field {
    name: "GetObjectA"
    type: "*(*RIOleItemContainer;;*US;UI*RIBindCtx;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "GetObjectStorage"
    type: "*(*RIOleItemContainer;;*US;*RIBindCtx;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "IsRunning"
    type: "*(*RIOleItemContainer;;*US;)I;"
  }
}
struct {
  name: "IOleItemContainer"
  field {
    name: "lpVtbl"
    type: "*RIOleItemContainerVtbl;;"
  }
}
struct {
  name: "IOleLinkVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIOleLink;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIOleLink;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIOleLink;;)UI;"
  }
  field {
    name: "SetUpdateOptions"
    type: "*(*RIOleLink;;UI)I;"
  }
  field {
    name: "GetUpdateOptions"
    type: "*(*RIOleLink;;*UI;)I;"
  }
  field {
    name: "SetSourceMoniker"
    type: "*(*RIOleLink;;*RIMoniker;;*cR_GUID;;)I;"
  }
  field {
    name: "GetSourceMoniker"
    type: "*(*RIOleLink;;**RIMoniker;;;)I;"
  }
  field {
    name: "SetSourceDisplayName"
    type: "*(*RIOleLink;;*cUS;)I;"
  }
  field {
    name: "GetSourceDisplayName"
    type: "*(*RIOleLink;;**US;;)I;"
  }
  field {
    name: "BindToSource"
    type: "*(*RIOleLink;;UI*RIBindCtx;;)I;"
  }
  field {
    name: "BindIfRunning"
    type: "*(*RIOleLink;;)I;"
  }
  field {
    name: "GetBoundSource"
    type: "*(*RIOleLink;;**RIUnknown;;;)I;"
  }
  field {
    name: "UnbindSource"
    type: "*(*RIOleLink;;)I;"
  }
  field {
    name: "Update"
    type: "*(*RIOleLink;;*RIBindCtx;;)I;"
  }
}
struct {
  name: "IOleLink"
  field {
    name: "lpVtbl"
    type: "*RIOleLinkVtbl;;"
  }
}
struct {
  name: "IOleClientSiteVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIOleClientSite;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIOleClientSite;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIOleClientSite;;)UI;"
  }
  field {
    name: "SaveObject"
    type: "*(*RIOleClientSite;;)I;"
  }
  field {
    name: "GetMoniker"
    type: "*(*RIOleClientSite;;UIUI**RIMoniker;;;)I;"
  }
  field {
    name: "GetContainer"
    type: "*(*RIOleClientSite;;**RIOleContainer;;;)I;"
  }
  field {
    name: "ShowObject"
    type: "*(*RIOleClientSite;;)I;"
  }
  field {
    name: "OnShowWindow"
    type: "*(*RIOleClientSite;;I)I;"
  }
  field {
    name: "RequestNewObjectLayout"
    type: "*(*RIOleClientSite;;)I;"
  }
}
struct {
  name: "IOleClientSite"
  field {
    name: "lpVtbl"
    type: "*RIOleClientSiteVtbl;;"
  }
}
struct {
  name: "IOleCacheVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIOleCache;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIOleCache;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIOleCache;;)UI;"
  }
  field {
    name: "Cache"
    type: "*(*RIOleCache;;*RtagFORMATETC;;UI*UI;)I;"
  }
  field {
    name: "Uncache"
    type: "*(*RIOleCache;;UI)I;"
  }
  field {
    name: "EnumCache"
    type: "*(*RIOleCache;;**RIEnumSTATDATA;;;)I;"
  }
  field {
    name: "InitCache"
    type: "*(*RIOleCache;;*RIDataObject;;)I;"
  }
  field {
    name: "SetData"
    type: "*(*RIOleCache;;*RtagFORMATETC;;*RtagSTGMEDIUM;;I)I;"
  }
}
struct {
  name: "IOleCache"
  field {
    name: "lpVtbl"
    type: "*RIOleCacheVtbl;;"
  }
}
struct {
  name: "IOleCache2Vtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIOleCache2;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIOleCache2;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIOleCache2;;)UI;"
  }
  field {
    name: "Cache"
    type: "*(*RIOleCache2;;*RtagFORMATETC;;UI*UI;)I;"
  }
  field {
    name: "Uncache"
    type: "*(*RIOleCache2;;UI)I;"
  }
  field {
    name: "EnumCache"
    type: "*(*RIOleCache2;;**RIEnumSTATDATA;;;)I;"
  }
  field {
    name: "InitCache"
    type: "*(*RIOleCache2;;*RIDataObject;;)I;"
  }
  field {
    name: "SetData"
    type: "*(*RIOleCache2;;*RtagFORMATETC;;*RtagSTGMEDIUM;;I)I;"
  }
  field {
    name: "UpdateCache"
    type: "*(*RIOleCache2;;*RIDataObject;;UI*V;)I;"
  }
  field {
    name: "DiscardCache"
    type: "*(*RIOleCache2;;UI)I;"
  }
}
struct {
  name: "IOleCache2"
  field {
    name: "lpVtbl"
    type: "*RIOleCache2Vtbl;;"
  }
}
struct {
  name: "IOleCacheControlVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIOleCacheControl;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIOleCacheControl;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIOleCacheControl;;)UI;"
  }
  field {
    name: "OnRun"
    type: "*(*RIOleCacheControl;;*RIDataObject;;)I;"
  }
  field {
    name: "OnStop"
    type: "*(*RIOleCacheControl;;)I;"
  }
}
struct {
  name: "IOleCacheControl"
  field {
    name: "lpVtbl"
    type: "*RIOleCacheControlVtbl;;"
  }
}
struct {
  name: "tagOLEVERB"
  field {
    name: "lVerb"
    type: "I"
  }
  field {
    name: "lpszVerbName"
    type: "*US;"
  }
  field {
    name: "fuFlags"
    type: "UI"
  }
  field {
    name: "grfAttribs"
    type: "UI"
  }
}
struct {
  name: "IEnumOLEVERBVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIEnumOLEVERB;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIEnumOLEVERB;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIEnumOLEVERB;;)UI;"
  }
  field {
    name: "Next"
    type: "*(*RIEnumOLEVERB;;UI*RtagOLEVERB;;*UI;)I;"
  }
  field {
    name: "Skip"
    type: "*(*RIEnumOLEVERB;;UI)I;"
  }
  field {
    name: "Reset"
    type: "*(*RIEnumOLEVERB;;)I;"
  }
  field {
    name: "Clone"
    type: "*(*RIEnumOLEVERB;;**RIEnumOLEVERB;;;)I;"
  }
}
struct {
  name: "IEnumOLEVERB"
  field {
    name: "lpVtbl"
    type: "*RIEnumOLEVERBVtbl;;"
  }
}
struct {
  name: "IOleObjectVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIOleObject;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIOleObject;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIOleObject;;)UI;"
  }
  field {
    name: "SetClientSite"
    type: "*(*RIOleObject;;*RIOleClientSite;;)I;"
  }
  field {
    name: "GetClientSite"
    type: "*(*RIOleObject;;**RIOleClientSite;;;)I;"
  }
  field {
    name: "SetHostNames"
    type: "*(*RIOleObject;;*cUS;*cUS;)I;"
  }
  field {
    name: "Close"
    type: "*(*RIOleObject;;UI)I;"
  }
  field {
    name: "SetMoniker"
    type: "*(*RIOleObject;;UI*RIMoniker;;)I;"
  }
  field {
    name: "GetMoniker"
    type: "*(*RIOleObject;;UIUI**RIMoniker;;;)I;"
  }
  field {
    name: "InitFromData"
    type: "*(*RIOleObject;;*RIDataObject;;IUI)I;"
  }
  field {
    name: "GetClipboardData"
    type: "*(*RIOleObject;;UI**RIDataObject;;;)I;"
  }
  field {
    name: "DoVerb"
    type: "*(*RIOleObject;;I*RtagMSG;;*RIOleClientSite;;I*RHWND__;;*cRtagRECT;;)I;"
  }
  field {
    name: "EnumVerbs"
    type: "*(*RIOleObject;;**RIEnumOLEVERB;;;)I;"
  }
  field {
    name: "Update"
    type: "*(*RIOleObject;;)I;"
  }
  field {
    name: "IsUpToDate"
    type: "*(*RIOleObject;;)I;"
  }
  field {
    name: "GetUserClassID"
    type: "*(*RIOleObject;;*R_GUID;;)I;"
  }
  field {
    name: "GetUserType"
    type: "*(*RIOleObject;;UI**US;;)I;"
  }
  field {
    name: "SetExtent"
    type: "*(*RIOleObject;;UI*RtagSIZE;;)I;"
  }
  field {
    name: "GetExtent"
    type: "*(*RIOleObject;;UI*RtagSIZE;;)I;"
  }
  field {
    name: "Advise"
    type: "*(*RIOleObject;;*RIAdviseSink;;*UI;)I;"
  }
  field {
    name: "Unadvise"
    type: "*(*RIOleObject;;UI)I;"
  }
  field {
    name: "EnumAdvise"
    type: "*(*RIOleObject;;**RIEnumSTATDATA;;;)I;"
  }
  field {
    name: "GetMiscStatus"
    type: "*(*RIOleObject;;UI*UI;)I;"
  }
  field {
    name: "SetColorScheme"
    type: "*(*RIOleObject;;*RtagLOGPALETTE;;)I;"
  }
}
struct {
  name: "IOleObject"
  field {
    name: "lpVtbl"
    type: "*RIOleObjectVtbl;;"
  }
}
struct {
  name: "IOleAdviseHolderVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIOleAdviseHolder;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIOleAdviseHolder;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIOleAdviseHolder;;)UI;"
  }
  field {
    name: "Advise"
    type: "*(*RIOleAdviseHolder;;*RIAdviseSink;;*UI;)I;"
  }
  field {
    name: "Unadvise"
    type: "*(*RIOleAdviseHolder;;UI)I;"
  }
  field {
    name: "EnumAdvise"
    type: "*(*RIOleAdviseHolder;;**RIEnumSTATDATA;;;)I;"
  }
  field {
    name: "SendOnRename"
    type: "*(*RIOleAdviseHolder;;*RIMoniker;;)I;"
  }
  field {
    name: "SendOnSave"
    type: "*(*RIOleAdviseHolder;;)I;"
  }
  field {
    name: "SendOnClose"
    type: "*(*RIOleAdviseHolder;;)I;"
  }
}
struct {
  name: "IOleAdviseHolder"
  field {
    name: "lpVtbl"
    type: "*RIOleAdviseHolderVtbl;;"
  }
}
struct {
  name: "IContinueVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIContinue;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIContinue;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIContinue;;)UI;"
  }
  field {
    name: "FContinue"
    type: "*(*RIContinue;;)I;"
  }
}
struct {
  name: "IContinue"
  field {
    name: "lpVtbl"
    type: "*RIContinueVtbl;;"
  }
}
struct {
  name: "IViewObjectVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIViewObject;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIViewObject;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIViewObject;;)UI;"
  }
  field {
    name: "Draw"
    type: "*(*RIViewObject;;UII*V;*RtagDVTARGETDEVICE;;*RHDC__;;*RHDC__;;*cR_RECTL;;*cR_RECTL;;*(UI)I;UI)I;"
  }
  field {
    name: "GetColorSet"
    type: "*(*RIViewObject;;UII*V;*RtagDVTARGETDEVICE;;*RHDC__;;**RtagLOGPALETTE;;;)I;"
  }
  field {
    name: "Freeze"
    type: "*(*RIViewObject;;UII*V;*UI;)I;"
  }
  field {
    name: "Unfreeze"
    type: "*(*RIViewObject;;UI)I;"
  }
  field {
    name: "SetAdvise"
    type: "*(*RIViewObject;;UIUI*RIAdviseSink;;)I;"
  }
  field {
    name: "GetAdvise"
    type: "*(*RIViewObject;;*UI;*UI;**RIAdviseSink;;;)I;"
  }
}
struct {
  name: "IViewObject"
  field {
    name: "lpVtbl"
    type: "*RIViewObjectVtbl;;"
  }
}
struct {
  name: "IViewObject2Vtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIViewObject2;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIViewObject2;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIViewObject2;;)UI;"
  }
  field {
    name: "Draw"
    type: "*(*RIViewObject2;;UII*V;*RtagDVTARGETDEVICE;;*RHDC__;;*RHDC__;;*cR_RECTL;;*cR_RECTL;;*(UI)I;UI)I;"
  }
  field {
    name: "GetColorSet"
    type: "*(*RIViewObject2;;UII*V;*RtagDVTARGETDEVICE;;*RHDC__;;**RtagLOGPALETTE;;;)I;"
  }
  field {
    name: "Freeze"
    type: "*(*RIViewObject2;;UII*V;*UI;)I;"
  }
  field {
    name: "Unfreeze"
    type: "*(*RIViewObject2;;UI)I;"
  }
  field {
    name: "SetAdvise"
    type: "*(*RIViewObject2;;UIUI*RIAdviseSink;;)I;"
  }
  field {
    name: "GetAdvise"
    type: "*(*RIViewObject2;;*UI;*UI;**RIAdviseSink;;;)I;"
  }
  field {
    name: "GetExtent"
    type: "*(*RIViewObject2;;UII*RtagDVTARGETDEVICE;;*RtagSIZE;;)I;"
  }
}
struct {
  name: "IViewObject2"
  field {
    name: "lpVtbl"
    type: "*RIViewObject2Vtbl;;"
  }
}
struct {
  name: "IDropSourceVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIDropSource;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIDropSource;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIDropSource;;)UI;"
  }
  field {
    name: "QueryContinueDrag"
    type: "*(*RIDropSource;;IUI)I;"
  }
  field {
    name: "GiveFeedback"
    type: "*(*RIDropSource;;UI)I;"
  }
}
struct {
  name: "IDropSource"
  field {
    name: "lpVtbl"
    type: "*RIDropSourceVtbl;;"
  }
}
struct {
  name: "IDropTargetVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIDropTarget;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIDropTarget;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIDropTarget;;)UI;"
  }
  field {
    name: "DragEnter"
    type: "*(*RIDropTarget;;*RIDataObject;;UIR_POINTL;*UI;)I;"
  }
  field {
    name: "DragOver"
    type: "*(*RIDropTarget;;UIR_POINTL;*UI;)I;"
  }
  field {
    name: "DragLeave"
    type: "*(*RIDropTarget;;)I;"
  }
  field {
    name: "Drop"
    type: "*(*RIDropTarget;;*RIDataObject;;UIR_POINTL;*UI;)I;"
  }
}
struct {
  name: "IDropTarget"
  field {
    name: "lpVtbl"
    type: "*RIDropTargetVtbl;;"
  }
}
struct {
  name: "IServiceProviderVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIServiceProvider;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIServiceProvider;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIServiceProvider;;)UI;"
  }
  field {
    name: "QueryService"
    type: "*(*RIServiceProvider;;*cR_GUID;;*cR_GUID;;**V;;)I;"
  }
}
struct {
  name: "IServiceProvider"
  field {
    name: "lpVtbl"
    type: "*RIServiceProviderVtbl;;"
  }
}
struct {
  name: "tagSAFEARRAYBOUND"
  field {
    name: "cElements"
    type: "UI"
  }
  field {
    name: "lLbound"
    type: "I"
  }
}
struct {
  name: "_wireSAFEARR_BSTR"
  field {
    name: "Size"
    type: "UI"
  }
  field {
    name: "aBstr"
    type: "**R_FLAGGED_WORD_BLOB;;;"
  }
}
struct {
  name: "_wireSAFEARR_UNKNOWN"
  field {
    name: "Size"
    type: "UI"
  }
  field {
    name: "apUnknown"
    type: "**RIUnknown;;;"
  }
}
struct {
  name: "_wireSAFEARR_DISPATCH"
  field {
    name: "Size"
    type: "UI"
  }
  field {
    name: "apDispatch"
    type: "**RIDispatch;;;"
  }
}
struct {
  name: "_wireSAFEARR_VARIANT"
  field {
    name: "Size"
    type: "UI"
  }
  field {
    name: "aVariant"
    type: "**R_wireVARIANT;;;"
  }
}
struct {
  name: "_wireSAFEARR_BRECORD"
  field {
    name: "Size"
    type: "UI"
  }
  field {
    name: "aRecord"
    type: "**R_wireBRECORD;;;"
  }
}
struct {
  name: "_wireSAFEARR_HAVEIID"
  field {
    name: "Size"
    type: "UI"
  }
  field {
    name: "apUnknown"
    type: "**RIUnknown;;;"
  }
  field {
    name: "iid"
    type: "R_GUID;"
  }
}
struct {
  name: "_wireSAFEARRAY_UNION"
  field {
    name: "sfType"
    type: "UI"
  }
  field {
    name: "u"
    type: "Runion _wireSAFEARRAY_UNION::(anonymous at /usr/local/include/wine/windows/oaidl.h:204:5);"
  }
}
struct {
  name: "_wireSAFEARRAY"
  field {
    name: "cDims"
    type: "US"
  }
  field {
    name: "fFeatures"
    type: "US"
  }
  field {
    name: "cbElements"
    type: "UI"
  }
  field {
    name: "cLocks"
    type: "UI"
  }
  field {
    name: "uArrayStructs"
    type: "R_wireSAFEARRAY_UNION;"
  }
  field {
    name: "rgsabound"
    type: "X(ConstantArray.SAFEARRAYBOUND [1])"
  }
}
struct {
  name: "tagSAFEARRAY"
  field {
    name: "cDims"
    type: "US"
  }
  field {
    name: "fFeatures"
    type: "US"
  }
  field {
    name: "cbElements"
    type: "UI"
  }
  field {
    name: "cLocks"
    type: "UI"
  }
  field {
    name: "pvData"
    type: "*V;"
  }
  field {
    name: "rgsabound"
    type: "X(ConstantArray.SAFEARRAYBOUND [1])"
  }
}
struct {
  name: "tagVARIANT"
  field {
    name: "n1"
    type: "Runion tagVARIANT::(anonymous at /usr/local/include/wine/windows/oaidl.h:278:5);"
  }
}
struct {
  name: "__tagVARIANT"
  field {
    name: "vt"
    type: "US"
  }
  field {
    name: "wReserved1"
    type: "US"
  }
  field {
    name: "wReserved2"
    type: "US"
  }
  field {
    name: "wReserved3"
    type: "US"
  }
  field {
    name: "n3"
    type: "Runion __tagVARIANT::(anonymous at /usr/local/include/wine/windows/oaidl.h:284:13);"
  }
}
struct {
  name: "__tagBRECORD"
  field {
    name: "pvRecord"
    type: "*V;"
  }
  field {
    name: "pRecInfo"
    type: "*RIRecordInfo;;"
  }
}
struct {
  name: "_wireBRECORD"
  field {
    name: "fFlags"
    type: "UI"
  }
  field {
    name: "clSize"
    type: "UI"
  }
  field {
    name: "pRecInfo"
    type: "*RIRecordInfo;;"
  }
  field {
    name: "pRecord"
    type: "*UB;"
  }
}
struct {
  name: "_wireVARIANT"
  field {
    name: "clSize"
    type: "UI"
  }
  field {
    name: "rpcReserved"
    type: "UI"
  }
  field {
    name: "vt"
    type: "US"
  }
  field {
    name: "wReserved1"
    type: "US"
  }
  field {
    name: "wReserved2"
    type: "US"
  }
  field {
    name: "wReserved3"
    type: "US"
  }
}
struct {
  name: "tagTYPEDESC"
  field {
    name: "vt"
    type: "US"
  }
}
struct {
  name: "tagARRAYDESC"
  field {
    name: "tdescElem"
    type: "RtagTYPEDESC;"
  }
  field {
    name: "cDims"
    type: "US"
  }
  field {
    name: "rgbounds"
    type: "X(ConstantArray.SAFEARRAYBOUND [1])"
  }
}
struct {
  name: "tagPARAMDESCEX"
  field {
    name: "cBytes"
    type: "UI"
  }
  field {
    name: "varDefaultValue"
    type: "RtagVARIANT;"
  }
}
struct {
  name: "tagPARAMDESC"
  field {
    name: "pparamdescex"
    type: "*RtagPARAMDESCEX;;"
  }
  field {
    name: "wParamFlags"
    type: "US"
  }
}
struct {
  name: "tagIDLDESC"
  field {
    name: "dwReserved"
    type: "UI"
  }
  field {
    name: "wIDLFlags"
    type: "US"
  }
}
struct {
  name: "tagELEMDESC"
  field {
    name: "tdesc"
    type: "RtagTYPEDESC;"
  }
}
struct {
  name: "tagELEMDESC"
  field {
    name: "tdesc"
    type: "RtagTYPEDESC;"
  }
}
struct {
  name: "tagTYPEATTR"
  field {
    name: "guid"
    type: "R_GUID;"
  }
  field {
    name: "lcid"
    type: "UI"
  }
  field {
    name: "dwReserved"
    type: "UI"
  }
  field {
    name: "memidConstructor"
    type: "I"
  }
  field {
    name: "memidDestructor"
    type: "I"
  }
  field {
    name: "lpstrSchema"
    type: "*US;"
  }
  field {
    name: "cbSizeInstance"
    type: "UI"
  }
  field {
    name: "typekind"
    type: "X(Enum.enum tagTYPEKIND)"
  }
  field {
    name: "cFuncs"
    type: "US"
  }
  field {
    name: "cVars"
    type: "US"
  }
  field {
    name: "cImplTypes"
    type: "US"
  }
  field {
    name: "cbSizeVft"
    type: "US"
  }
  field {
    name: "cbAlignment"
    type: "US"
  }
  field {
    name: "wTypeFlags"
    type: "US"
  }
  field {
    name: "wMajorVerNum"
    type: "US"
  }
  field {
    name: "wMinorVerNum"
    type: "US"
  }
  field {
    name: "tdescAlias"
    type: "RtagTYPEDESC;"
  }
  field {
    name: "idldescType"
    type: "RtagIDLDESC;"
  }
}
struct {
  name: "tagDISPPARAMS"
  field {
    name: "rgvarg"
    type: "*RtagVARIANT;;"
  }
  field {
    name: "rgdispidNamedArgs"
    type: "*I;"
  }
  field {
    name: "cArgs"
    type: "UI"
  }
  field {
    name: "cNamedArgs"
    type: "UI"
  }
}
struct {
  name: "tagEXCEPINFO"
  field {
    name: "wCode"
    type: "US"
  }
  field {
    name: "wReserved"
    type: "US"
  }
  field {
    name: "bstrSource"
    type: "*US;"
  }
  field {
    name: "bstrDescription"
    type: "*US;"
  }
  field {
    name: "bstrHelpFile"
    type: "*US;"
  }
  field {
    name: "dwHelpContext"
    type: "UI"
  }
  field {
    name: "pvReserved"
    type: "*V;"
  }
  field {
    name: "pfnDeferredFillIn"
    type: "*(*RtagEXCEPINFO;;)I;"
  }
  field {
    name: "scode"
    type: "I"
  }
}
struct {
  name: "tagEXCEPINFO"
  field {
    name: "wCode"
    type: "US"
  }
  field {
    name: "wReserved"
    type: "US"
  }
  field {
    name: "bstrSource"
    type: "*US;"
  }
  field {
    name: "bstrDescription"
    type: "*US;"
  }
  field {
    name: "bstrHelpFile"
    type: "*US;"
  }
  field {
    name: "dwHelpContext"
    type: "UI"
  }
  field {
    name: "pvReserved"
    type: "*V;"
  }
  field {
    name: "pfnDeferredFillIn"
    type: "*(*RtagEXCEPINFO;;)I;"
  }
  field {
    name: "scode"
    type: "I"
  }
}
struct {
  name: "tagFUNCDESC"
  field {
    name: "memid"
    type: "I"
  }
  field {
    name: "lprgscode"
    type: "*I;"
  }
  field {
    name: "lprgelemdescParam"
    type: "*RtagELEMDESC;;"
  }
  field {
    name: "funckind"
    type: "X(Enum.enum tagFUNCKIND)"
  }
  field {
    name: "invkind"
    type: "X(Enum.enum tagINVOKEKIND)"
  }
  field {
    name: "callconv"
    type: "X(Enum.enum tagCALLCONV)"
  }
  field {
    name: "cParams"
    type: "S"
  }
  field {
    name: "cParamsOpt"
    type: "S"
  }
  field {
    name: "oVft"
    type: "S"
  }
  field {
    name: "cScodes"
    type: "S"
  }
  field {
    name: "elemdescFunc"
    type: "RtagELEMDESC;"
  }
  field {
    name: "wFuncFlags"
    type: "US"
  }
}
struct {
  name: "tagVARDESC"
  field {
    name: "memid"
    type: "I"
  }
  field {
    name: "lpstrSchema"
    type: "*US;"
  }
  field {
    name: "elemdescVar"
    type: "RtagELEMDESC;"
  }
  field {
    name: "wVarFlags"
    type: "US"
  }
  field {
    name: "varkind"
    type: "X(Enum.enum tagVARKIND)"
  }
}
struct {
  name: "tagCLEANLOCALSTORAGE"
  field {
    name: "pInterface"
    type: "*RIUnknown;;"
  }
  field {
    name: "pStorage"
    type: "*V;"
  }
  field {
    name: "flags"
    type: "UI"
  }
}
struct {
  name: "tagCUSTDATAITEM"
  field {
    name: "guid"
    type: "R_GUID;"
  }
  field {
    name: "varValue"
    type: "RtagVARIANT;"
  }
}
struct {
  name: "tagCUSTDATA"
  field {
    name: "cCustData"
    type: "UI"
  }
  field {
    name: "prgCustData"
    type: "*RtagCUSTDATAITEM;;"
  }
}
struct {
  name: "IDispatchVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIDispatch;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIDispatch;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIDispatch;;)UI;"
  }
  field {
    name: "GetTypeInfoCount"
    type: "*(*RIDispatch;;*UI;)I;"
  }
  field {
    name: "GetTypeInfo"
    type: "*(*RIDispatch;;UIUI**RITypeInfo;;;)I;"
  }
  field {
    name: "GetIDsOfNames"
    type: "*(*RIDispatch;;*cR_GUID;;**US;;UIUI*I;)I;"
  }
  field {
    name: "Invoke"
    type: "*(*RIDispatch;;I*cR_GUID;;UIUS*RtagDISPPARAMS;;*RtagVARIANT;;*RtagEXCEPINFO;;*UI;)I;"
  }
}
struct {
  name: "IDispatch"
  field {
    name: "lpVtbl"
    type: "*RIDispatchVtbl;;"
  }
}
struct {
  name: "IEnumVARIANTVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIEnumVARIANT;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIEnumVARIANT;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIEnumVARIANT;;)UI;"
  }
  field {
    name: "Next"
    type: "*(*RIEnumVARIANT;;UI*RtagVARIANT;;*UI;)I;"
  }
  field {
    name: "Skip"
    type: "*(*RIEnumVARIANT;;UI)I;"
  }
  field {
    name: "Reset"
    type: "*(*RIEnumVARIANT;;)I;"
  }
  field {
    name: "Clone"
    type: "*(*RIEnumVARIANT;;**RIEnumVARIANT;;;)I;"
  }
}
struct {
  name: "IEnumVARIANT"
  field {
    name: "lpVtbl"
    type: "*RIEnumVARIANTVtbl;;"
  }
}
struct {
  name: "ITypeCompVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RITypeComp;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RITypeComp;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RITypeComp;;)UI;"
  }
  field {
    name: "Bind"
    type: "*(*RITypeComp;;*US;UIUS**RITypeInfo;;;*X(Enum.enum tagDESCKIND);*Runion tagBINDPTR;;)I;"
  }
  field {
    name: "BindType"
    type: "*(*RITypeComp;;*US;UI**RITypeInfo;;;**RITypeComp;;;)I;"
  }
}
struct {
  name: "ITypeComp"
  field {
    name: "lpVtbl"
    type: "*RITypeCompVtbl;;"
  }
}
struct {
  name: "ITypeInfoVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RITypeInfo;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RITypeInfo;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RITypeInfo;;)UI;"
  }
  field {
    name: "GetTypeAttr"
    type: "*(*RITypeInfo;;**RtagTYPEATTR;;;)I;"
  }
  field {
    name: "GetTypeComp"
    type: "*(*RITypeInfo;;**RITypeComp;;;)I;"
  }
  field {
    name: "GetFuncDesc"
    type: "*(*RITypeInfo;;UI**RtagFUNCDESC;;;)I;"
  }
  field {
    name: "GetVarDesc"
    type: "*(*RITypeInfo;;UI**RtagVARDESC;;;)I;"
  }
  field {
    name: "GetNames"
    type: "*(*RITypeInfo;;I**US;;UI*UI;)I;"
  }
  field {
    name: "GetRefTypeOfImplType"
    type: "*(*RITypeInfo;;UI*UI;)I;"
  }
  field {
    name: "GetImplTypeFlags"
    type: "*(*RITypeInfo;;UI*I;)I;"
  }
  field {
    name: "GetIDsOfNames"
    type: "*(*RITypeInfo;;**US;;UI*I;)I;"
  }
  field {
    name: "Invoke"
    type: "*(*RITypeInfo;;*V;IUS*RtagDISPPARAMS;;*RtagVARIANT;;*RtagEXCEPINFO;;*UI;)I;"
  }
  field {
    name: "GetDocumentation"
    type: "*(*RITypeInfo;;I**US;;**US;;*UI;**US;;)I;"
  }
  field {
    name: "GetDllEntry"
    type: "*(*RITypeInfo;;IX(Enum.enum tagINVOKEKIND)**US;;**US;;*US;)I;"
  }
  field {
    name: "GetRefTypeInfo"
    type: "*(*RITypeInfo;;UI**RITypeInfo;;;)I;"
  }
  field {
    name: "AddressOfMember"
    type: "*(*RITypeInfo;;IX(Enum.enum tagINVOKEKIND)**V;;)I;"
  }
  field {
    name: "CreateInstance"
    type: "*(*RITypeInfo;;*RIUnknown;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "GetMops"
    type: "*(*RITypeInfo;;I**US;;)I;"
  }
  field {
    name: "GetContainingTypeLib"
    type: "*(*RITypeInfo;;**RITypeLib;;;*UI;)I;"
  }
  field {
    name: "ReleaseTypeAttr"
    type: "*(*RITypeInfo;;*RtagTYPEATTR;;)V;"
  }
  field {
    name: "ReleaseFuncDesc"
    type: "*(*RITypeInfo;;*RtagFUNCDESC;;)V;"
  }
  field {
    name: "ReleaseVarDesc"
    type: "*(*RITypeInfo;;*RtagVARDESC;;)V;"
  }
}
struct {
  name: "ITypeInfo"
  field {
    name: "lpVtbl"
    type: "*RITypeInfoVtbl;;"
  }
}
struct {
  name: "ITypeInfo2Vtbl"
  field {
    name: "QueryInterface"
    type: "*(*RITypeInfo2;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RITypeInfo2;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RITypeInfo2;;)UI;"
  }
  field {
    name: "GetTypeAttr"
    type: "*(*RITypeInfo2;;**RtagTYPEATTR;;;)I;"
  }
  field {
    name: "GetTypeComp"
    type: "*(*RITypeInfo2;;**RITypeComp;;;)I;"
  }
  field {
    name: "GetFuncDesc"
    type: "*(*RITypeInfo2;;UI**RtagFUNCDESC;;;)I;"
  }
  field {
    name: "GetVarDesc"
    type: "*(*RITypeInfo2;;UI**RtagVARDESC;;;)I;"
  }
  field {
    name: "GetNames"
    type: "*(*RITypeInfo2;;I**US;;UI*UI;)I;"
  }
  field {
    name: "GetRefTypeOfImplType"
    type: "*(*RITypeInfo2;;UI*UI;)I;"
  }
  field {
    name: "GetImplTypeFlags"
    type: "*(*RITypeInfo2;;UI*I;)I;"
  }
  field {
    name: "GetIDsOfNames"
    type: "*(*RITypeInfo2;;**US;;UI*I;)I;"
  }
  field {
    name: "Invoke"
    type: "*(*RITypeInfo2;;*V;IUS*RtagDISPPARAMS;;*RtagVARIANT;;*RtagEXCEPINFO;;*UI;)I;"
  }
  field {
    name: "GetDocumentation"
    type: "*(*RITypeInfo2;;I**US;;**US;;*UI;**US;;)I;"
  }
  field {
    name: "GetDllEntry"
    type: "*(*RITypeInfo2;;IX(Enum.enum tagINVOKEKIND)**US;;**US;;*US;)I;"
  }
  field {
    name: "GetRefTypeInfo"
    type: "*(*RITypeInfo2;;UI**RITypeInfo;;;)I;"
  }
  field {
    name: "AddressOfMember"
    type: "*(*RITypeInfo2;;IX(Enum.enum tagINVOKEKIND)**V;;)I;"
  }
  field {
    name: "CreateInstance"
    type: "*(*RITypeInfo2;;*RIUnknown;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "GetMops"
    type: "*(*RITypeInfo2;;I**US;;)I;"
  }
  field {
    name: "GetContainingTypeLib"
    type: "*(*RITypeInfo2;;**RITypeLib;;;*UI;)I;"
  }
  field {
    name: "ReleaseTypeAttr"
    type: "*(*RITypeInfo2;;*RtagTYPEATTR;;)V;"
  }
  field {
    name: "ReleaseFuncDesc"
    type: "*(*RITypeInfo2;;*RtagFUNCDESC;;)V;"
  }
  field {
    name: "ReleaseVarDesc"
    type: "*(*RITypeInfo2;;*RtagVARDESC;;)V;"
  }
  field {
    name: "GetTypeKind"
    type: "*(*RITypeInfo2;;*X(Enum.enum tagTYPEKIND);)I;"
  }
  field {
    name: "GetTypeFlags"
    type: "*(*RITypeInfo2;;*UI;)I;"
  }
  field {
    name: "GetFuncIndexOfMemId"
    type: "*(*RITypeInfo2;;IX(Enum.enum tagINVOKEKIND)*UI;)I;"
  }
  field {
    name: "GetVarIndexOfMemId"
    type: "*(*RITypeInfo2;;I*UI;)I;"
  }
  field {
    name: "GetCustData"
    type: "*(*RITypeInfo2;;*cR_GUID;;*RtagVARIANT;;)I;"
  }
  field {
    name: "GetFuncCustData"
    type: "*(*RITypeInfo2;;UI*cR_GUID;;*RtagVARIANT;;)I;"
  }
  field {
    name: "GetParamCustData"
    type: "*(*RITypeInfo2;;UIUI*cR_GUID;;*RtagVARIANT;;)I;"
  }
  field {
    name: "GetVarCustData"
    type: "*(*RITypeInfo2;;UI*cR_GUID;;*RtagVARIANT;;)I;"
  }
  field {
    name: "GetImplTypeCustData"
    type: "*(*RITypeInfo2;;UI*cR_GUID;;*RtagVARIANT;;)I;"
  }
  field {
    name: "GetDocumentation2"
    type: "*(*RITypeInfo2;;IUI**US;;*UI;**US;;)I;"
  }
  field {
    name: "GetAllCustData"
    type: "*(*RITypeInfo2;;*RtagCUSTDATA;;)I;"
  }
  field {
    name: "GetAllFuncCustData"
    type: "*(*RITypeInfo2;;UI*RtagCUSTDATA;;)I;"
  }
  field {
    name: "GetAllParamCustData"
    type: "*(*RITypeInfo2;;UIUI*RtagCUSTDATA;;)I;"
  }
  field {
    name: "GetAllVarCustData"
    type: "*(*RITypeInfo2;;UI*RtagCUSTDATA;;)I;"
  }
  field {
    name: "GetAllImplTypeCustData"
    type: "*(*RITypeInfo2;;UI*RtagCUSTDATA;;)I;"
  }
}
struct {
  name: "ITypeInfo2"
  field {
    name: "lpVtbl"
    type: "*RITypeInfo2Vtbl;;"
  }
}
struct {
  name: "tagTLIBATTR"
  field {
    name: "guid"
    type: "R_GUID;"
  }
  field {
    name: "lcid"
    type: "UI"
  }
  field {
    name: "syskind"
    type: "X(Enum.enum tagSYSKIND)"
  }
  field {
    name: "wMajorVerNum"
    type: "US"
  }
  field {
    name: "wMinorVerNum"
    type: "US"
  }
  field {
    name: "wLibFlags"
    type: "US"
  }
}
struct {
  name: "ITypeLibVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RITypeLib;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RITypeLib;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RITypeLib;;)UI;"
  }
  field {
    name: "GetTypeInfoCount"
    type: "*(*RITypeLib;;)UI;"
  }
  field {
    name: "GetTypeInfo"
    type: "*(*RITypeLib;;UI**RITypeInfo;;;)I;"
  }
  field {
    name: "GetTypeInfoType"
    type: "*(*RITypeLib;;UI*X(Enum.enum tagTYPEKIND);)I;"
  }
  field {
    name: "GetTypeInfoOfGuid"
    type: "*(*RITypeLib;;*cR_GUID;;**RITypeInfo;;;)I;"
  }
  field {
    name: "GetLibAttr"
    type: "*(*RITypeLib;;**RtagTLIBATTR;;;)I;"
  }
  field {
    name: "GetTypeComp"
    type: "*(*RITypeLib;;**RITypeComp;;;)I;"
  }
  field {
    name: "GetDocumentation"
    type: "*(*RITypeLib;;I**US;;**US;;*UI;**US;;)I;"
  }
  field {
    name: "IsName"
    type: "*(*RITypeLib;;*US;UI*I;)I;"
  }
  field {
    name: "FindName"
    type: "*(*RITypeLib;;*US;UI**RITypeInfo;;;*I;*US;)I;"
  }
  field {
    name: "ReleaseTLibAttr"
    type: "*(*RITypeLib;;*RtagTLIBATTR;;)V;"
  }
}
struct {
  name: "ITypeLib"
  field {
    name: "lpVtbl"
    type: "*RITypeLibVtbl;;"
  }
}
struct {
  name: "ITypeLib2Vtbl"
  field {
    name: "QueryInterface"
    type: "*(*RITypeLib2;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RITypeLib2;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RITypeLib2;;)UI;"
  }
  field {
    name: "GetTypeInfoCount"
    type: "*(*RITypeLib2;;)UI;"
  }
  field {
    name: "GetTypeInfo"
    type: "*(*RITypeLib2;;UI**RITypeInfo;;;)I;"
  }
  field {
    name: "GetTypeInfoType"
    type: "*(*RITypeLib2;;UI*X(Enum.enum tagTYPEKIND);)I;"
  }
  field {
    name: "GetTypeInfoOfGuid"
    type: "*(*RITypeLib2;;*cR_GUID;;**RITypeInfo;;;)I;"
  }
  field {
    name: "GetLibAttr"
    type: "*(*RITypeLib2;;**RtagTLIBATTR;;;)I;"
  }
  field {
    name: "GetTypeComp"
    type: "*(*RITypeLib2;;**RITypeComp;;;)I;"
  }
  field {
    name: "GetDocumentation"
    type: "*(*RITypeLib2;;I**US;;**US;;*UI;**US;;)I;"
  }
  field {
    name: "IsName"
    type: "*(*RITypeLib2;;*US;UI*I;)I;"
  }
  field {
    name: "FindName"
    type: "*(*RITypeLib2;;*US;UI**RITypeInfo;;;*I;*US;)I;"
  }
  field {
    name: "ReleaseTLibAttr"
    type: "*(*RITypeLib2;;*RtagTLIBATTR;;)V;"
  }
  field {
    name: "GetCustData"
    type: "*(*RITypeLib2;;*cR_GUID;;*RtagVARIANT;;)I;"
  }
  field {
    name: "GetLibStatistics"
    type: "*(*RITypeLib2;;*UI;*UI;)I;"
  }
  field {
    name: "GetDocumentation2"
    type: "*(*RITypeLib2;;IUI**US;;*UI;**US;;)I;"
  }
  field {
    name: "GetAllCustData"
    type: "*(*RITypeLib2;;*RtagCUSTDATA;;)I;"
  }
}
struct {
  name: "ITypeLib2"
  field {
    name: "lpVtbl"
    type: "*RITypeLib2Vtbl;;"
  }
}
struct {
  name: "ITypeChangeEventsVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RITypeChangeEvents;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RITypeChangeEvents;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RITypeChangeEvents;;)UI;"
  }
  field {
    name: "RequestTypeChange"
    type: "*(*RITypeChangeEvents;;X(Enum.enum tagCHANGEKIND)*RITypeInfo;;*US;*I;)I;"
  }
  field {
    name: "AfterTypeChange"
    type: "*(*RITypeChangeEvents;;X(Enum.enum tagCHANGEKIND)*RITypeInfo;;*US;)I;"
  }
}
struct {
  name: "ITypeChangeEvents"
  field {
    name: "lpVtbl"
    type: "*RITypeChangeEventsVtbl;;"
  }
}
struct {
  name: "IErrorInfoVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIErrorInfo;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIErrorInfo;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIErrorInfo;;)UI;"
  }
  field {
    name: "GetGUID"
    type: "*(*RIErrorInfo;;*R_GUID;;)I;"
  }
  field {
    name: "GetSource"
    type: "*(*RIErrorInfo;;**US;;)I;"
  }
  field {
    name: "GetDescription"
    type: "*(*RIErrorInfo;;**US;;)I;"
  }
  field {
    name: "GetHelpFile"
    type: "*(*RIErrorInfo;;**US;;)I;"
  }
  field {
    name: "GetHelpContext"
    type: "*(*RIErrorInfo;;*UI;)I;"
  }
}
struct {
  name: "IErrorInfo"
  field {
    name: "lpVtbl"
    type: "*RIErrorInfoVtbl;;"
  }
}
struct {
  name: "ICreateErrorInfoVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RICreateErrorInfo;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RICreateErrorInfo;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RICreateErrorInfo;;)UI;"
  }
  field {
    name: "SetGUID"
    type: "*(*RICreateErrorInfo;;*cR_GUID;;)I;"
  }
  field {
    name: "SetSource"
    type: "*(*RICreateErrorInfo;;*US;)I;"
  }
  field {
    name: "SetDescription"
    type: "*(*RICreateErrorInfo;;*US;)I;"
  }
  field {
    name: "SetHelpFile"
    type: "*(*RICreateErrorInfo;;*US;)I;"
  }
  field {
    name: "SetHelpContext"
    type: "*(*RICreateErrorInfo;;UI)I;"
  }
}
struct {
  name: "ICreateErrorInfo"
  field {
    name: "lpVtbl"
    type: "*RICreateErrorInfoVtbl;;"
  }
}
struct {
  name: "ISupportErrorInfoVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RISupportErrorInfo;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RISupportErrorInfo;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RISupportErrorInfo;;)UI;"
  }
  field {
    name: "InterfaceSupportsErrorInfo"
    type: "*(*RISupportErrorInfo;;*cR_GUID;;)I;"
  }
}
struct {
  name: "ISupportErrorInfo"
  field {
    name: "lpVtbl"
    type: "*RISupportErrorInfoVtbl;;"
  }
}
struct {
  name: "ITypeFactoryVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RITypeFactory;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RITypeFactory;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RITypeFactory;;)UI;"
  }
  field {
    name: "CreateFromTypeInfo"
    type: "*(*RITypeFactory;;*RITypeInfo;;*cR_GUID;;**RIUnknown;;;)I;"
  }
}
struct {
  name: "ITypeFactory"
  field {
    name: "lpVtbl"
    type: "*RITypeFactoryVtbl;;"
  }
}
struct {
  name: "ITypeMarshalVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RITypeMarshal;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RITypeMarshal;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RITypeMarshal;;)UI;"
  }
  field {
    name: "Size"
    type: "*(*RITypeMarshal;;*V;UI*V;*UI;)I;"
  }
  field {
    name: "Marshal"
    type: "*(*RITypeMarshal;;*V;UI*V;UI*UB;*UI;)I;"
  }
  field {
    name: "Unmarshal"
    type: "*(*RITypeMarshal;;*V;UIUI*UB;*UI;)I;"
  }
  field {
    name: "Free"
    type: "*(*RITypeMarshal;;*V;)I;"
  }
}
struct {
  name: "ITypeMarshal"
  field {
    name: "lpVtbl"
    type: "*RITypeMarshalVtbl;;"
  }
}
struct {
  name: "IRecordInfoVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIRecordInfo;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIRecordInfo;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIRecordInfo;;)UI;"
  }
  field {
    name: "RecordInit"
    type: "*(*RIRecordInfo;;*V;)I;"
  }
  field {
    name: "RecordClear"
    type: "*(*RIRecordInfo;;*V;)I;"
  }
  field {
    name: "RecordCopy"
    type: "*(*RIRecordInfo;;*V;*V;)I;"
  }
  field {
    name: "GetGuid"
    type: "*(*RIRecordInfo;;*R_GUID;;)I;"
  }
  field {
    name: "GetName"
    type: "*(*RIRecordInfo;;**US;;)I;"
  }
  field {
    name: "GetSize"
    type: "*(*RIRecordInfo;;*UI;)I;"
  }
  field {
    name: "GetTypeInfo"
    type: "*(*RIRecordInfo;;**RITypeInfo;;;)I;"
  }
  field {
    name: "GetField"
    type: "*(*RIRecordInfo;;*V;*cUS;*RtagVARIANT;;)I;"
  }
  field {
    name: "GetFieldNoCopy"
    type: "*(*RIRecordInfo;;*V;*cUS;*RtagVARIANT;;**V;;)I;"
  }
  field {
    name: "PutField"
    type: "*(*RIRecordInfo;;UI*V;*cUS;*RtagVARIANT;;)I;"
  }
  field {
    name: "PutFieldNoCopy"
    type: "*(*RIRecordInfo;;UI*V;*cUS;*RtagVARIANT;;)I;"
  }
  field {
    name: "GetFieldNames"
    type: "*(*RIRecordInfo;;*UI;**US;;)I;"
  }
  field {
    name: "IsMatchingType"
    type: "*(*RIRecordInfo;;*RIRecordInfo;;)I;"
  }
  field {
    name: "RecordCreate"
    type: "*(*RIRecordInfo;;)*V;;"
  }
  field {
    name: "RecordCreateCopy"
    type: "*(*RIRecordInfo;;*V;**V;;)I;"
  }
  field {
    name: "RecordDestroy"
    type: "*(*RIRecordInfo;;*V;)I;"
  }
}
struct {
  name: "IRecordInfo"
  field {
    name: "lpVtbl"
    type: "*RIRecordInfoVtbl;;"
  }
}
struct {
  name: "ICreateTypeInfoVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RICreateTypeInfo;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RICreateTypeInfo;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RICreateTypeInfo;;)UI;"
  }
  field {
    name: "SetGuid"
    type: "*(*RICreateTypeInfo;;*cR_GUID;;)I;"
  }
  field {
    name: "SetTypeFlags"
    type: "*(*RICreateTypeInfo;;UI)I;"
  }
  field {
    name: "SetDocString"
    type: "*(*RICreateTypeInfo;;*US;)I;"
  }
  field {
    name: "SetHelpContext"
    type: "*(*RICreateTypeInfo;;UI)I;"
  }
  field {
    name: "SetVersion"
    type: "*(*RICreateTypeInfo;;USUS)I;"
  }
  field {
    name: "AddRefTypeInfo"
    type: "*(*RICreateTypeInfo;;*RITypeInfo;;*UI;)I;"
  }
  field {
    name: "AddFuncDesc"
    type: "*(*RICreateTypeInfo;;UI*RtagFUNCDESC;;)I;"
  }
  field {
    name: "AddImplType"
    type: "*(*RICreateTypeInfo;;UIUI)I;"
  }
  field {
    name: "SetImplTypeFlags"
    type: "*(*RICreateTypeInfo;;UII)I;"
  }
  field {
    name: "SetAlignment"
    type: "*(*RICreateTypeInfo;;US)I;"
  }
  field {
    name: "SetSchema"
    type: "*(*RICreateTypeInfo;;*US;)I;"
  }
  field {
    name: "AddVarDesc"
    type: "*(*RICreateTypeInfo;;UI*RtagVARDESC;;)I;"
  }
  field {
    name: "SetFuncAndParamNames"
    type: "*(*RICreateTypeInfo;;UI**US;;UI)I;"
  }
  field {
    name: "SetVarName"
    type: "*(*RICreateTypeInfo;;UI*US;)I;"
  }
  field {
    name: "SetTypeDescAlias"
    type: "*(*RICreateTypeInfo;;*RtagTYPEDESC;;)I;"
  }
  field {
    name: "DefineFuncAsDllEntry"
    type: "*(*RICreateTypeInfo;;UI*US;*US;)I;"
  }
  field {
    name: "SetFuncDocString"
    type: "*(*RICreateTypeInfo;;UI*US;)I;"
  }
  field {
    name: "SetVarDocString"
    type: "*(*RICreateTypeInfo;;UI*US;)I;"
  }
  field {
    name: "SetFuncHelpContext"
    type: "*(*RICreateTypeInfo;;UIUI)I;"
  }
  field {
    name: "SetVarHelpContext"
    type: "*(*RICreateTypeInfo;;UIUI)I;"
  }
  field {
    name: "SetMops"
    type: "*(*RICreateTypeInfo;;UI*US;)I;"
  }
  field {
    name: "SetTypeIdldesc"
    type: "*(*RICreateTypeInfo;;*RtagIDLDESC;;)I;"
  }
  field {
    name: "LayOut"
    type: "*(*RICreateTypeInfo;;)I;"
  }
}
struct {
  name: "ICreateTypeInfo"
  field {
    name: "lpVtbl"
    type: "*RICreateTypeInfoVtbl;;"
  }
}
struct {
  name: "ICreateTypeInfo2Vtbl"
  field {
    name: "QueryInterface"
    type: "*(*RICreateTypeInfo2;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RICreateTypeInfo2;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RICreateTypeInfo2;;)UI;"
  }
  field {
    name: "SetGuid"
    type: "*(*RICreateTypeInfo2;;*cR_GUID;;)I;"
  }
  field {
    name: "SetTypeFlags"
    type: "*(*RICreateTypeInfo2;;UI)I;"
  }
  field {
    name: "SetDocString"
    type: "*(*RICreateTypeInfo2;;*US;)I;"
  }
  field {
    name: "SetHelpContext"
    type: "*(*RICreateTypeInfo2;;UI)I;"
  }
  field {
    name: "SetVersion"
    type: "*(*RICreateTypeInfo2;;USUS)I;"
  }
  field {
    name: "AddRefTypeInfo"
    type: "*(*RICreateTypeInfo2;;*RITypeInfo;;*UI;)I;"
  }
  field {
    name: "AddFuncDesc"
    type: "*(*RICreateTypeInfo2;;UI*RtagFUNCDESC;;)I;"
  }
  field {
    name: "AddImplType"
    type: "*(*RICreateTypeInfo2;;UIUI)I;"
  }
  field {
    name: "SetImplTypeFlags"
    type: "*(*RICreateTypeInfo2;;UII)I;"
  }
  field {
    name: "SetAlignment"
    type: "*(*RICreateTypeInfo2;;US)I;"
  }
  field {
    name: "SetSchema"
    type: "*(*RICreateTypeInfo2;;*US;)I;"
  }
  field {
    name: "AddVarDesc"
    type: "*(*RICreateTypeInfo2;;UI*RtagVARDESC;;)I;"
  }
  field {
    name: "SetFuncAndParamNames"
    type: "*(*RICreateTypeInfo2;;UI**US;;UI)I;"
  }
  field {
    name: "SetVarName"
    type: "*(*RICreateTypeInfo2;;UI*US;)I;"
  }
  field {
    name: "SetTypeDescAlias"
    type: "*(*RICreateTypeInfo2;;*RtagTYPEDESC;;)I;"
  }
  field {
    name: "DefineFuncAsDllEntry"
    type: "*(*RICreateTypeInfo2;;UI*US;*US;)I;"
  }
  field {
    name: "SetFuncDocString"
    type: "*(*RICreateTypeInfo2;;UI*US;)I;"
  }
  field {
    name: "SetVarDocString"
    type: "*(*RICreateTypeInfo2;;UI*US;)I;"
  }
  field {
    name: "SetFuncHelpContext"
    type: "*(*RICreateTypeInfo2;;UIUI)I;"
  }
  field {
    name: "SetVarHelpContext"
    type: "*(*RICreateTypeInfo2;;UIUI)I;"
  }
  field {
    name: "SetMops"
    type: "*(*RICreateTypeInfo2;;UI*US;)I;"
  }
  field {
    name: "SetTypeIdldesc"
    type: "*(*RICreateTypeInfo2;;*RtagIDLDESC;;)I;"
  }
  field {
    name: "LayOut"
    type: "*(*RICreateTypeInfo2;;)I;"
  }
  field {
    name: "DeleteFuncDesc"
    type: "*(*RICreateTypeInfo2;;UI)I;"
  }
  field {
    name: "DeleteFuncDescByMemId"
    type: "*(*RICreateTypeInfo2;;IX(Enum.enum tagINVOKEKIND))I;"
  }
  field {
    name: "DeleteVarDesc"
    type: "*(*RICreateTypeInfo2;;UI)I;"
  }
  field {
    name: "DeleteVarDescByMemId"
    type: "*(*RICreateTypeInfo2;;I)I;"
  }
  field {
    name: "DeleteImplType"
    type: "*(*RICreateTypeInfo2;;UI)I;"
  }
  field {
    name: "SetCustData"
    type: "*(*RICreateTypeInfo2;;*cR_GUID;;*RtagVARIANT;;)I;"
  }
  field {
    name: "SetFuncCustData"
    type: "*(*RICreateTypeInfo2;;UI*cR_GUID;;*RtagVARIANT;;)I;"
  }
  field {
    name: "SetParamCustData"
    type: "*(*RICreateTypeInfo2;;UIUI*cR_GUID;;*RtagVARIANT;;)I;"
  }
  field {
    name: "SetVarCustData"
    type: "*(*RICreateTypeInfo2;;UI*cR_GUID;;*RtagVARIANT;;)I;"
  }
  field {
    name: "SetImplTypeCustData"
    type: "*(*RICreateTypeInfo2;;UI*cR_GUID;;*RtagVARIANT;;)I;"
  }
  field {
    name: "SetHelpStringContext"
    type: "*(*RICreateTypeInfo2;;UI)I;"
  }
  field {
    name: "SetFuncHelpStringContext"
    type: "*(*RICreateTypeInfo2;;UIUI)I;"
  }
  field {
    name: "SetVarHelpStringContext"
    type: "*(*RICreateTypeInfo2;;UIUI)I;"
  }
  field {
    name: "Invalidate"
    type: "*(*RICreateTypeInfo2;;)I;"
  }
  field {
    name: "SetName"
    type: "*(*RICreateTypeInfo2;;*US;)I;"
  }
}
struct {
  name: "ICreateTypeInfo2"
  field {
    name: "lpVtbl"
    type: "*RICreateTypeInfo2Vtbl;;"
  }
}
struct {
  name: "ICreateTypeLibVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RICreateTypeLib;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RICreateTypeLib;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RICreateTypeLib;;)UI;"
  }
  field {
    name: "CreateTypeInfo"
    type: "*(*RICreateTypeLib;;*US;X(Enum.enum tagTYPEKIND)**RICreateTypeInfo;;;)I;"
  }
  field {
    name: "SetName"
    type: "*(*RICreateTypeLib;;*US;)I;"
  }
  field {
    name: "SetVersion"
    type: "*(*RICreateTypeLib;;USUS)I;"
  }
  field {
    name: "SetGuid"
    type: "*(*RICreateTypeLib;;*cR_GUID;;)I;"
  }
  field {
    name: "SetDocString"
    type: "*(*RICreateTypeLib;;*US;)I;"
  }
  field {
    name: "SetHelpFileName"
    type: "*(*RICreateTypeLib;;*US;)I;"
  }
  field {
    name: "SetHelpContext"
    type: "*(*RICreateTypeLib;;UI)I;"
  }
  field {
    name: "SetLcid"
    type: "*(*RICreateTypeLib;;UI)I;"
  }
  field {
    name: "SetLibFlags"
    type: "*(*RICreateTypeLib;;UI)I;"
  }
  field {
    name: "SaveAllChanges"
    type: "*(*RICreateTypeLib;;)I;"
  }
}
struct {
  name: "ICreateTypeLib"
  field {
    name: "lpVtbl"
    type: "*RICreateTypeLibVtbl;;"
  }
}
struct {
  name: "ICreateTypeLib2Vtbl"
  field {
    name: "QueryInterface"
    type: "*(*RICreateTypeLib2;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RICreateTypeLib2;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RICreateTypeLib2;;)UI;"
  }
  field {
    name: "CreateTypeInfo"
    type: "*(*RICreateTypeLib2;;*US;X(Enum.enum tagTYPEKIND)**RICreateTypeInfo;;;)I;"
  }
  field {
    name: "SetName"
    type: "*(*RICreateTypeLib2;;*US;)I;"
  }
  field {
    name: "SetVersion"
    type: "*(*RICreateTypeLib2;;USUS)I;"
  }
  field {
    name: "SetGuid"
    type: "*(*RICreateTypeLib2;;*cR_GUID;;)I;"
  }
  field {
    name: "SetDocString"
    type: "*(*RICreateTypeLib2;;*US;)I;"
  }
  field {
    name: "SetHelpFileName"
    type: "*(*RICreateTypeLib2;;*US;)I;"
  }
  field {
    name: "SetHelpContext"
    type: "*(*RICreateTypeLib2;;UI)I;"
  }
  field {
    name: "SetLcid"
    type: "*(*RICreateTypeLib2;;UI)I;"
  }
  field {
    name: "SetLibFlags"
    type: "*(*RICreateTypeLib2;;UI)I;"
  }
  field {
    name: "SaveAllChanges"
    type: "*(*RICreateTypeLib2;;)I;"
  }
  field {
    name: "DeleteTypeInfo"
    type: "*(*RICreateTypeLib2;;*US;)I;"
  }
  field {
    name: "SetCustData"
    type: "*(*RICreateTypeLib2;;*cR_GUID;;*RtagVARIANT;;)I;"
  }
  field {
    name: "SetHelpStringContext"
    type: "*(*RICreateTypeLib2;;UI)I;"
  }
  field {
    name: "SetHelpStringDll"
    type: "*(*RICreateTypeLib2;;*US;)I;"
  }
}
struct {
  name: "ICreateTypeLib2"
  field {
    name: "lpVtbl"
    type: "*RICreateTypeLib2Vtbl;;"
  }
}
struct {
  name: "IErrorLogVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIErrorLog;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIErrorLog;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIErrorLog;;)UI;"
  }
  field {
    name: "AddError"
    type: "*(*RIErrorLog;;*cUS;*RtagEXCEPINFO;;)I;"
  }
}
struct {
  name: "IErrorLog"
  field {
    name: "lpVtbl"
    type: "*RIErrorLogVtbl;;"
  }
}
struct {
  name: "IPropertyBagVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIPropertyBag;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIPropertyBag;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIPropertyBag;;)UI;"
  }
  field {
    name: "Read"
    type: "*(*RIPropertyBag;;*cUS;*RtagVARIANT;;*RIErrorLog;;)I;"
  }
  field {
    name: "Write"
    type: "*(*RIPropertyBag;;*cUS;*RtagVARIANT;;)I;"
  }
}
struct {
  name: "IPropertyBag"
  field {
    name: "lpVtbl"
    type: "*RIPropertyBagVtbl;;"
  }
}
struct {
  name: "IXMLDOMNodeVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIXMLDOMNode;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIXMLDOMNode;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIXMLDOMNode;;)UI;"
  }
  field {
    name: "GetTypeInfoCount"
    type: "*(*RIXMLDOMNode;;*UI;)I;"
  }
  field {
    name: "GetTypeInfo"
    type: "*(*RIXMLDOMNode;;UIUI**RITypeInfo;;;)I;"
  }
  field {
    name: "GetIDsOfNames"
    type: "*(*RIXMLDOMNode;;*cR_GUID;;**US;;UIUI*I;)I;"
  }
  field {
    name: "Invoke"
    type: "*(*RIXMLDOMNode;;I*cR_GUID;;UIUS*RtagDISPPARAMS;;*RtagVARIANT;;*RtagEXCEPINFO;;*UI;)I;"
  }
  field {
    name: "get_nodeName"
    type: "*(*RIXMLDOMNode;;**US;;)I;"
  }
  field {
    name: "get_nodeValue"
    type: "*(*RIXMLDOMNode;;*RtagVARIANT;;)I;"
  }
  field {
    name: "put_nodeValue"
    type: "*(*RIXMLDOMNode;;RtagVARIANT;)I;"
  }
  field {
    name: "get_nodeType"
    type: "*(*RIXMLDOMNode;;*X(Enum.enum tagDOMNodeType);)I;"
  }
  field {
    name: "get_parentNode"
    type: "*(*RIXMLDOMNode;;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "get_childNodes"
    type: "*(*RIXMLDOMNode;;**RIXMLDOMNodeList;;;)I;"
  }
  field {
    name: "get_firstChild"
    type: "*(*RIXMLDOMNode;;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "get_lastChild"
    type: "*(*RIXMLDOMNode;;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "get_previousSibling"
    type: "*(*RIXMLDOMNode;;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "get_nextSibling"
    type: "*(*RIXMLDOMNode;;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "get_attributes"
    type: "*(*RIXMLDOMNode;;**RIXMLDOMNamedNodeMap;;;)I;"
  }
  field {
    name: "insertBefore"
    type: "*(*RIXMLDOMNode;;*RIXMLDOMNode;;RtagVARIANT;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "replaceChild"
    type: "*(*RIXMLDOMNode;;*RIXMLDOMNode;;*RIXMLDOMNode;;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "removeChild"
    type: "*(*RIXMLDOMNode;;*RIXMLDOMNode;;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "appendChild"
    type: "*(*RIXMLDOMNode;;*RIXMLDOMNode;;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "hasChildNodes"
    type: "*(*RIXMLDOMNode;;*S;)I;"
  }
  field {
    name: "get_ownerDocument"
    type: "*(*RIXMLDOMNode;;**RIXMLDOMDocument;;;)I;"
  }
  field {
    name: "cloneNode"
    type: "*(*RIXMLDOMNode;;S**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "get_nodeTypeString"
    type: "*(*RIXMLDOMNode;;**US;;)I;"
  }
  field {
    name: "get_text"
    type: "*(*RIXMLDOMNode;;**US;;)I;"
  }
  field {
    name: "put_text"
    type: "*(*RIXMLDOMNode;;*US;)I;"
  }
  field {
    name: "get_specified"
    type: "*(*RIXMLDOMNode;;*S;)I;"
  }
  field {
    name: "get_definition"
    type: "*(*RIXMLDOMNode;;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "get_nodeTypedValue"
    type: "*(*RIXMLDOMNode;;*RtagVARIANT;;)I;"
  }
  field {
    name: "put_nodeTypedValue"
    type: "*(*RIXMLDOMNode;;RtagVARIANT;)I;"
  }
  field {
    name: "get_dataType"
    type: "*(*RIXMLDOMNode;;*RtagVARIANT;;)I;"
  }
  field {
    name: "put_dataType"
    type: "*(*RIXMLDOMNode;;*US;)I;"
  }
  field {
    name: "get_xml"
    type: "*(*RIXMLDOMNode;;**US;;)I;"
  }
  field {
    name: "transformNode"
    type: "*(*RIXMLDOMNode;;*RIXMLDOMNode;;**US;;)I;"
  }
  field {
    name: "selectNodes"
    type: "*(*RIXMLDOMNode;;*US;**RIXMLDOMNodeList;;;)I;"
  }
  field {
    name: "selectSingleNode"
    type: "*(*RIXMLDOMNode;;*US;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "get_parsed"
    type: "*(*RIXMLDOMNode;;*S;)I;"
  }
  field {
    name: "get_namespaceURI"
    type: "*(*RIXMLDOMNode;;**US;;)I;"
  }
  field {
    name: "get_prefix"
    type: "*(*RIXMLDOMNode;;**US;;)I;"
  }
  field {
    name: "get_baseName"
    type: "*(*RIXMLDOMNode;;**US;;)I;"
  }
  field {
    name: "transformNodeToObject"
    type: "*(*RIXMLDOMNode;;*RIXMLDOMNode;;RtagVARIANT;)I;"
  }
}
struct {
  name: "IXMLDOMNode"
  field {
    name: "lpVtbl"
    type: "*RIXMLDOMNodeVtbl;;"
  }
}
struct {
  name: "IXMLDOMDocumentVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIXMLDOMDocument;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIXMLDOMDocument;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIXMLDOMDocument;;)UI;"
  }
  field {
    name: "GetTypeInfoCount"
    type: "*(*RIXMLDOMDocument;;*UI;)I;"
  }
  field {
    name: "GetTypeInfo"
    type: "*(*RIXMLDOMDocument;;UIUI**RITypeInfo;;;)I;"
  }
  field {
    name: "GetIDsOfNames"
    type: "*(*RIXMLDOMDocument;;*cR_GUID;;**US;;UIUI*I;)I;"
  }
  field {
    name: "Invoke"
    type: "*(*RIXMLDOMDocument;;I*cR_GUID;;UIUS*RtagDISPPARAMS;;*RtagVARIANT;;*RtagEXCEPINFO;;*UI;)I;"
  }
  field {
    name: "get_nodeName"
    type: "*(*RIXMLDOMDocument;;**US;;)I;"
  }
  field {
    name: "get_nodeValue"
    type: "*(*RIXMLDOMDocument;;*RtagVARIANT;;)I;"
  }
  field {
    name: "put_nodeValue"
    type: "*(*RIXMLDOMDocument;;RtagVARIANT;)I;"
  }
  field {
    name: "get_nodeType"
    type: "*(*RIXMLDOMDocument;;*X(Enum.enum tagDOMNodeType);)I;"
  }
  field {
    name: "get_parentNode"
    type: "*(*RIXMLDOMDocument;;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "get_childNodes"
    type: "*(*RIXMLDOMDocument;;**RIXMLDOMNodeList;;;)I;"
  }
  field {
    name: "get_firstChild"
    type: "*(*RIXMLDOMDocument;;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "get_lastChild"
    type: "*(*RIXMLDOMDocument;;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "get_previousSibling"
    type: "*(*RIXMLDOMDocument;;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "get_nextSibling"
    type: "*(*RIXMLDOMDocument;;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "get_attributes"
    type: "*(*RIXMLDOMDocument;;**RIXMLDOMNamedNodeMap;;;)I;"
  }
  field {
    name: "insertBefore"
    type: "*(*RIXMLDOMDocument;;*RIXMLDOMNode;;RtagVARIANT;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "replaceChild"
    type: "*(*RIXMLDOMDocument;;*RIXMLDOMNode;;*RIXMLDOMNode;;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "removeChild"
    type: "*(*RIXMLDOMDocument;;*RIXMLDOMNode;;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "appendChild"
    type: "*(*RIXMLDOMDocument;;*RIXMLDOMNode;;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "hasChildNodes"
    type: "*(*RIXMLDOMDocument;;*S;)I;"
  }
  field {
    name: "get_ownerDocument"
    type: "*(*RIXMLDOMDocument;;**RIXMLDOMDocument;;;)I;"
  }
  field {
    name: "cloneNode"
    type: "*(*RIXMLDOMDocument;;S**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "get_nodeTypeString"
    type: "*(*RIXMLDOMDocument;;**US;;)I;"
  }
  field {
    name: "get_text"
    type: "*(*RIXMLDOMDocument;;**US;;)I;"
  }
  field {
    name: "put_text"
    type: "*(*RIXMLDOMDocument;;*US;)I;"
  }
  field {
    name: "get_specified"
    type: "*(*RIXMLDOMDocument;;*S;)I;"
  }
  field {
    name: "get_definition"
    type: "*(*RIXMLDOMDocument;;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "get_nodeTypedValue"
    type: "*(*RIXMLDOMDocument;;*RtagVARIANT;;)I;"
  }
  field {
    name: "put_nodeTypedValue"
    type: "*(*RIXMLDOMDocument;;RtagVARIANT;)I;"
  }
  field {
    name: "get_dataType"
    type: "*(*RIXMLDOMDocument;;*RtagVARIANT;;)I;"
  }
  field {
    name: "put_dataType"
    type: "*(*RIXMLDOMDocument;;*US;)I;"
  }
  field {
    name: "get_xml"
    type: "*(*RIXMLDOMDocument;;**US;;)I;"
  }
  field {
    name: "transformNode"
    type: "*(*RIXMLDOMDocument;;*RIXMLDOMNode;;**US;;)I;"
  }
  field {
    name: "selectNodes"
    type: "*(*RIXMLDOMDocument;;*US;**RIXMLDOMNodeList;;;)I;"
  }
  field {
    name: "selectSingleNode"
    type: "*(*RIXMLDOMDocument;;*US;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "get_parsed"
    type: "*(*RIXMLDOMDocument;;*S;)I;"
  }
  field {
    name: "get_namespaceURI"
    type: "*(*RIXMLDOMDocument;;**US;;)I;"
  }
  field {
    name: "get_prefix"
    type: "*(*RIXMLDOMDocument;;**US;;)I;"
  }
  field {
    name: "get_baseName"
    type: "*(*RIXMLDOMDocument;;**US;;)I;"
  }
  field {
    name: "transformNodeToObject"
    type: "*(*RIXMLDOMDocument;;*RIXMLDOMNode;;RtagVARIANT;)I;"
  }
  field {
    name: "get_doctype"
    type: "*(*RIXMLDOMDocument;;**RIXMLDOMDocumentType;;;)I;"
  }
  field {
    name: "get_implementation"
    type: "*(*RIXMLDOMDocument;;**RIXMLDOMImplementation;;;)I;"
  }
  field {
    name: "get_documentElement"
    type: "*(*RIXMLDOMDocument;;**RIXMLDOMElement;;;)I;"
  }
  field {
    name: "putref_documentElement"
    type: "*(*RIXMLDOMDocument;;*RIXMLDOMElement;;)I;"
  }
  field {
    name: "createElement"
    type: "*(*RIXMLDOMDocument;;*US;**RIXMLDOMElement;;;)I;"
  }
  field {
    name: "createDocumentFragment"
    type: "*(*RIXMLDOMDocument;;**RIXMLDOMDocumentFragment;;;)I;"
  }
  field {
    name: "createTextNode"
    type: "*(*RIXMLDOMDocument;;*US;**RIXMLDOMText;;;)I;"
  }
  field {
    name: "createComment"
    type: "*(*RIXMLDOMDocument;;*US;**RIXMLDOMComment;;;)I;"
  }
  field {
    name: "createCDATASection"
    type: "*(*RIXMLDOMDocument;;*US;**RIXMLDOMCDATASection;;;)I;"
  }
  field {
    name: "createProcessingInstruction"
    type: "*(*RIXMLDOMDocument;;*US;*US;**RIXMLDOMProcessingInstruction;;;)I;"
  }
  field {
    name: "createAttribute"
    type: "*(*RIXMLDOMDocument;;*US;**RIXMLDOMAttribute;;;)I;"
  }
  field {
    name: "createEntityReference"
    type: "*(*RIXMLDOMDocument;;*US;**RIXMLDOMEntityReference;;;)I;"
  }
  field {
    name: "getElementsByTagName"
    type: "*(*RIXMLDOMDocument;;*US;**RIXMLDOMNodeList;;;)I;"
  }
  field {
    name: "createNode"
    type: "*(*RIXMLDOMDocument;;RtagVARIANT;*US;*US;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "nodeFromID"
    type: "*(*RIXMLDOMDocument;;*US;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "load"
    type: "*(*RIXMLDOMDocument;;RtagVARIANT;*S;)I;"
  }
  field {
    name: "get_readyState"
    type: "*(*RIXMLDOMDocument;;*I;)I;"
  }
  field {
    name: "get_parseError"
    type: "*(*RIXMLDOMDocument;;**RIXMLDOMParseError;;;)I;"
  }
  field {
    name: "get_url"
    type: "*(*RIXMLDOMDocument;;**US;;)I;"
  }
  field {
    name: "get_async"
    type: "*(*RIXMLDOMDocument;;*S;)I;"
  }
  field {
    name: "put_async"
    type: "*(*RIXMLDOMDocument;;S)I;"
  }
  field {
    name: "abort"
    type: "*(*RIXMLDOMDocument;;)I;"
  }
  field {
    name: "loadXML"
    type: "*(*RIXMLDOMDocument;;*US;*S;)I;"
  }
  field {
    name: "save"
    type: "*(*RIXMLDOMDocument;;RtagVARIANT;)I;"
  }
  field {
    name: "get_validateOnParse"
    type: "*(*RIXMLDOMDocument;;*S;)I;"
  }
  field {
    name: "put_validateOnParse"
    type: "*(*RIXMLDOMDocument;;S)I;"
  }
  field {
    name: "get_resolveExternals"
    type: "*(*RIXMLDOMDocument;;*S;)I;"
  }
  field {
    name: "put_resolveExternals"
    type: "*(*RIXMLDOMDocument;;S)I;"
  }
  field {
    name: "get_preserveWhiteSpace"
    type: "*(*RIXMLDOMDocument;;*S;)I;"
  }
  field {
    name: "put_preserveWhiteSpace"
    type: "*(*RIXMLDOMDocument;;S)I;"
  }
  field {
    name: "put_onreadystatechange"
    type: "*(*RIXMLDOMDocument;;RtagVARIANT;)I;"
  }
  field {
    name: "put_ondataavailable"
    type: "*(*RIXMLDOMDocument;;RtagVARIANT;)I;"
  }
  field {
    name: "put_ontransformnode"
    type: "*(*RIXMLDOMDocument;;RtagVARIANT;)I;"
  }
}
struct {
  name: "IXMLDOMDocument"
  field {
    name: "lpVtbl"
    type: "*RIXMLDOMDocumentVtbl;;"
  }
}
struct {
  name: "IXMLDOMNodeListVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIXMLDOMNodeList;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIXMLDOMNodeList;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIXMLDOMNodeList;;)UI;"
  }
  field {
    name: "GetTypeInfoCount"
    type: "*(*RIXMLDOMNodeList;;*UI;)I;"
  }
  field {
    name: "GetTypeInfo"
    type: "*(*RIXMLDOMNodeList;;UIUI**RITypeInfo;;;)I;"
  }
  field {
    name: "GetIDsOfNames"
    type: "*(*RIXMLDOMNodeList;;*cR_GUID;;**US;;UIUI*I;)I;"
  }
  field {
    name: "Invoke"
    type: "*(*RIXMLDOMNodeList;;I*cR_GUID;;UIUS*RtagDISPPARAMS;;*RtagVARIANT;;*RtagEXCEPINFO;;*UI;)I;"
  }
  field {
    name: "get_item"
    type: "*(*RIXMLDOMNodeList;;I**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "get_length"
    type: "*(*RIXMLDOMNodeList;;*I;)I;"
  }
  field {
    name: "nextNode"
    type: "*(*RIXMLDOMNodeList;;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "reset"
    type: "*(*RIXMLDOMNodeList;;)I;"
  }
  field {
    name: "_newEnum"
    type: "*(*RIXMLDOMNodeList;;**RIUnknown;;;)I;"
  }
}
struct {
  name: "IXMLDOMNodeList"
  field {
    name: "lpVtbl"
    type: "*RIXMLDOMNodeListVtbl;;"
  }
}
struct {
  name: "IXMLDOMNamedNodeMapVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIXMLDOMNamedNodeMap;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIXMLDOMNamedNodeMap;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIXMLDOMNamedNodeMap;;)UI;"
  }
  field {
    name: "GetTypeInfoCount"
    type: "*(*RIXMLDOMNamedNodeMap;;*UI;)I;"
  }
  field {
    name: "GetTypeInfo"
    type: "*(*RIXMLDOMNamedNodeMap;;UIUI**RITypeInfo;;;)I;"
  }
  field {
    name: "GetIDsOfNames"
    type: "*(*RIXMLDOMNamedNodeMap;;*cR_GUID;;**US;;UIUI*I;)I;"
  }
  field {
    name: "Invoke"
    type: "*(*RIXMLDOMNamedNodeMap;;I*cR_GUID;;UIUS*RtagDISPPARAMS;;*RtagVARIANT;;*RtagEXCEPINFO;;*UI;)I;"
  }
  field {
    name: "getNamedItem"
    type: "*(*RIXMLDOMNamedNodeMap;;*US;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "setNamedItem"
    type: "*(*RIXMLDOMNamedNodeMap;;*RIXMLDOMNode;;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "removeNamedItem"
    type: "*(*RIXMLDOMNamedNodeMap;;*US;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "get_item"
    type: "*(*RIXMLDOMNamedNodeMap;;I**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "get_length"
    type: "*(*RIXMLDOMNamedNodeMap;;*I;)I;"
  }
  field {
    name: "getQualifiedItem"
    type: "*(*RIXMLDOMNamedNodeMap;;*US;*US;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "removeQualifiedItem"
    type: "*(*RIXMLDOMNamedNodeMap;;*US;*US;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "nextNode"
    type: "*(*RIXMLDOMNamedNodeMap;;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "reset"
    type: "*(*RIXMLDOMNamedNodeMap;;)I;"
  }
  field {
    name: "_newEnum"
    type: "*(*RIXMLDOMNamedNodeMap;;**RIUnknown;;;)I;"
  }
}
struct {
  name: "IXMLDOMNamedNodeMap"
  field {
    name: "lpVtbl"
    type: "*RIXMLDOMNamedNodeMapVtbl;;"
  }
}
struct {
  name: "IXMLDOMDocumentFragmentVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIXMLDOMDocumentFragment;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIXMLDOMDocumentFragment;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIXMLDOMDocumentFragment;;)UI;"
  }
  field {
    name: "GetTypeInfoCount"
    type: "*(*RIXMLDOMDocumentFragment;;*UI;)I;"
  }
  field {
    name: "GetTypeInfo"
    type: "*(*RIXMLDOMDocumentFragment;;UIUI**RITypeInfo;;;)I;"
  }
  field {
    name: "GetIDsOfNames"
    type: "*(*RIXMLDOMDocumentFragment;;*cR_GUID;;**US;;UIUI*I;)I;"
  }
  field {
    name: "Invoke"
    type: "*(*RIXMLDOMDocumentFragment;;I*cR_GUID;;UIUS*RtagDISPPARAMS;;*RtagVARIANT;;*RtagEXCEPINFO;;*UI;)I;"
  }
  field {
    name: "get_nodeName"
    type: "*(*RIXMLDOMDocumentFragment;;**US;;)I;"
  }
  field {
    name: "get_nodeValue"
    type: "*(*RIXMLDOMDocumentFragment;;*RtagVARIANT;;)I;"
  }
  field {
    name: "put_nodeValue"
    type: "*(*RIXMLDOMDocumentFragment;;RtagVARIANT;)I;"
  }
  field {
    name: "get_nodeType"
    type: "*(*RIXMLDOMDocumentFragment;;*X(Enum.enum tagDOMNodeType);)I;"
  }
  field {
    name: "get_parentNode"
    type: "*(*RIXMLDOMDocumentFragment;;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "get_childNodes"
    type: "*(*RIXMLDOMDocumentFragment;;**RIXMLDOMNodeList;;;)I;"
  }
  field {
    name: "get_firstChild"
    type: "*(*RIXMLDOMDocumentFragment;;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "get_lastChild"
    type: "*(*RIXMLDOMDocumentFragment;;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "get_previousSibling"
    type: "*(*RIXMLDOMDocumentFragment;;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "get_nextSibling"
    type: "*(*RIXMLDOMDocumentFragment;;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "get_attributes"
    type: "*(*RIXMLDOMDocumentFragment;;**RIXMLDOMNamedNodeMap;;;)I;"
  }
  field {
    name: "insertBefore"
    type: "*(*RIXMLDOMDocumentFragment;;*RIXMLDOMNode;;RtagVARIANT;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "replaceChild"
    type: "*(*RIXMLDOMDocumentFragment;;*RIXMLDOMNode;;*RIXMLDOMNode;;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "removeChild"
    type: "*(*RIXMLDOMDocumentFragment;;*RIXMLDOMNode;;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "appendChild"
    type: "*(*RIXMLDOMDocumentFragment;;*RIXMLDOMNode;;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "hasChildNodes"
    type: "*(*RIXMLDOMDocumentFragment;;*S;)I;"
  }
  field {
    name: "get_ownerDocument"
    type: "*(*RIXMLDOMDocumentFragment;;**RIXMLDOMDocument;;;)I;"
  }
  field {
    name: "cloneNode"
    type: "*(*RIXMLDOMDocumentFragment;;S**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "get_nodeTypeString"
    type: "*(*RIXMLDOMDocumentFragment;;**US;;)I;"
  }
  field {
    name: "get_text"
    type: "*(*RIXMLDOMDocumentFragment;;**US;;)I;"
  }
  field {
    name: "put_text"
    type: "*(*RIXMLDOMDocumentFragment;;*US;)I;"
  }
  field {
    name: "get_specified"
    type: "*(*RIXMLDOMDocumentFragment;;*S;)I;"
  }
  field {
    name: "get_definition"
    type: "*(*RIXMLDOMDocumentFragment;;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "get_nodeTypedValue"
    type: "*(*RIXMLDOMDocumentFragment;;*RtagVARIANT;;)I;"
  }
  field {
    name: "put_nodeTypedValue"
    type: "*(*RIXMLDOMDocumentFragment;;RtagVARIANT;)I;"
  }
  field {
    name: "get_dataType"
    type: "*(*RIXMLDOMDocumentFragment;;*RtagVARIANT;;)I;"
  }
  field {
    name: "put_dataType"
    type: "*(*RIXMLDOMDocumentFragment;;*US;)I;"
  }
  field {
    name: "get_xml"
    type: "*(*RIXMLDOMDocumentFragment;;**US;;)I;"
  }
  field {
    name: "transformNode"
    type: "*(*RIXMLDOMDocumentFragment;;*RIXMLDOMNode;;**US;;)I;"
  }
  field {
    name: "selectNodes"
    type: "*(*RIXMLDOMDocumentFragment;;*US;**RIXMLDOMNodeList;;;)I;"
  }
  field {
    name: "selectSingleNode"
    type: "*(*RIXMLDOMDocumentFragment;;*US;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "get_parsed"
    type: "*(*RIXMLDOMDocumentFragment;;*S;)I;"
  }
  field {
    name: "get_namespaceURI"
    type: "*(*RIXMLDOMDocumentFragment;;**US;;)I;"
  }
  field {
    name: "get_prefix"
    type: "*(*RIXMLDOMDocumentFragment;;**US;;)I;"
  }
  field {
    name: "get_baseName"
    type: "*(*RIXMLDOMDocumentFragment;;**US;;)I;"
  }
  field {
    name: "transformNodeToObject"
    type: "*(*RIXMLDOMDocumentFragment;;*RIXMLDOMNode;;RtagVARIANT;)I;"
  }
}
struct {
  name: "IXMLDOMDocumentFragment"
  field {
    name: "lpVtbl"
    type: "*RIXMLDOMDocumentFragmentVtbl;;"
  }
}
struct {
  name: "IXMLDOMCharacterDataVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIXMLDOMCharacterData;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIXMLDOMCharacterData;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIXMLDOMCharacterData;;)UI;"
  }
  field {
    name: "GetTypeInfoCount"
    type: "*(*RIXMLDOMCharacterData;;*UI;)I;"
  }
  field {
    name: "GetTypeInfo"
    type: "*(*RIXMLDOMCharacterData;;UIUI**RITypeInfo;;;)I;"
  }
  field {
    name: "GetIDsOfNames"
    type: "*(*RIXMLDOMCharacterData;;*cR_GUID;;**US;;UIUI*I;)I;"
  }
  field {
    name: "Invoke"
    type: "*(*RIXMLDOMCharacterData;;I*cR_GUID;;UIUS*RtagDISPPARAMS;;*RtagVARIANT;;*RtagEXCEPINFO;;*UI;)I;"
  }
  field {
    name: "get_nodeName"
    type: "*(*RIXMLDOMCharacterData;;**US;;)I;"
  }
  field {
    name: "get_nodeValue"
    type: "*(*RIXMLDOMCharacterData;;*RtagVARIANT;;)I;"
  }
  field {
    name: "put_nodeValue"
    type: "*(*RIXMLDOMCharacterData;;RtagVARIANT;)I;"
  }
  field {
    name: "get_nodeType"
    type: "*(*RIXMLDOMCharacterData;;*X(Enum.enum tagDOMNodeType);)I;"
  }
  field {
    name: "get_parentNode"
    type: "*(*RIXMLDOMCharacterData;;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "get_childNodes"
    type: "*(*RIXMLDOMCharacterData;;**RIXMLDOMNodeList;;;)I;"
  }
  field {
    name: "get_firstChild"
    type: "*(*RIXMLDOMCharacterData;;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "get_lastChild"
    type: "*(*RIXMLDOMCharacterData;;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "get_previousSibling"
    type: "*(*RIXMLDOMCharacterData;;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "get_nextSibling"
    type: "*(*RIXMLDOMCharacterData;;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "get_attributes"
    type: "*(*RIXMLDOMCharacterData;;**RIXMLDOMNamedNodeMap;;;)I;"
  }
  field {
    name: "insertBefore"
    type: "*(*RIXMLDOMCharacterData;;*RIXMLDOMNode;;RtagVARIANT;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "replaceChild"
    type: "*(*RIXMLDOMCharacterData;;*RIXMLDOMNode;;*RIXMLDOMNode;;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "removeChild"
    type: "*(*RIXMLDOMCharacterData;;*RIXMLDOMNode;;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "appendChild"
    type: "*(*RIXMLDOMCharacterData;;*RIXMLDOMNode;;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "hasChildNodes"
    type: "*(*RIXMLDOMCharacterData;;*S;)I;"
  }
  field {
    name: "get_ownerDocument"
    type: "*(*RIXMLDOMCharacterData;;**RIXMLDOMDocument;;;)I;"
  }
  field {
    name: "cloneNode"
    type: "*(*RIXMLDOMCharacterData;;S**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "get_nodeTypeString"
    type: "*(*RIXMLDOMCharacterData;;**US;;)I;"
  }
  field {
    name: "get_text"
    type: "*(*RIXMLDOMCharacterData;;**US;;)I;"
  }
  field {
    name: "put_text"
    type: "*(*RIXMLDOMCharacterData;;*US;)I;"
  }
  field {
    name: "get_specified"
    type: "*(*RIXMLDOMCharacterData;;*S;)I;"
  }
  field {
    name: "get_definition"
    type: "*(*RIXMLDOMCharacterData;;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "get_nodeTypedValue"
    type: "*(*RIXMLDOMCharacterData;;*RtagVARIANT;;)I;"
  }
  field {
    name: "put_nodeTypedValue"
    type: "*(*RIXMLDOMCharacterData;;RtagVARIANT;)I;"
  }
  field {
    name: "get_dataType"
    type: "*(*RIXMLDOMCharacterData;;*RtagVARIANT;;)I;"
  }
  field {
    name: "put_dataType"
    type: "*(*RIXMLDOMCharacterData;;*US;)I;"
  }
  field {
    name: "get_xml"
    type: "*(*RIXMLDOMCharacterData;;**US;;)I;"
  }
  field {
    name: "transformNode"
    type: "*(*RIXMLDOMCharacterData;;*RIXMLDOMNode;;**US;;)I;"
  }
  field {
    name: "selectNodes"
    type: "*(*RIXMLDOMCharacterData;;*US;**RIXMLDOMNodeList;;;)I;"
  }
  field {
    name: "selectSingleNode"
    type: "*(*RIXMLDOMCharacterData;;*US;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "get_parsed"
    type: "*(*RIXMLDOMCharacterData;;*S;)I;"
  }
  field {
    name: "get_namespaceURI"
    type: "*(*RIXMLDOMCharacterData;;**US;;)I;"
  }
  field {
    name: "get_prefix"
    type: "*(*RIXMLDOMCharacterData;;**US;;)I;"
  }
  field {
    name: "get_baseName"
    type: "*(*RIXMLDOMCharacterData;;**US;;)I;"
  }
  field {
    name: "transformNodeToObject"
    type: "*(*RIXMLDOMCharacterData;;*RIXMLDOMNode;;RtagVARIANT;)I;"
  }
  field {
    name: "get_data"
    type: "*(*RIXMLDOMCharacterData;;**US;;)I;"
  }
  field {
    name: "put_data"
    type: "*(*RIXMLDOMCharacterData;;*US;)I;"
  }
  field {
    name: "get_length"
    type: "*(*RIXMLDOMCharacterData;;*I;)I;"
  }
  field {
    name: "substringData"
    type: "*(*RIXMLDOMCharacterData;;II**US;;)I;"
  }
  field {
    name: "appendData"
    type: "*(*RIXMLDOMCharacterData;;*US;)I;"
  }
  field {
    name: "insertData"
    type: "*(*RIXMLDOMCharacterData;;I*US;)I;"
  }
  field {
    name: "deleteData"
    type: "*(*RIXMLDOMCharacterData;;II)I;"
  }
  field {
    name: "replaceData"
    type: "*(*RIXMLDOMCharacterData;;II*US;)I;"
  }
}
struct {
  name: "IXMLDOMCharacterData"
  field {
    name: "lpVtbl"
    type: "*RIXMLDOMCharacterDataVtbl;;"
  }
}
struct {
  name: "IXMLDOMAttributeVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIXMLDOMAttribute;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIXMLDOMAttribute;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIXMLDOMAttribute;;)UI;"
  }
  field {
    name: "GetTypeInfoCount"
    type: "*(*RIXMLDOMAttribute;;*UI;)I;"
  }
  field {
    name: "GetTypeInfo"
    type: "*(*RIXMLDOMAttribute;;UIUI**RITypeInfo;;;)I;"
  }
  field {
    name: "GetIDsOfNames"
    type: "*(*RIXMLDOMAttribute;;*cR_GUID;;**US;;UIUI*I;)I;"
  }
  field {
    name: "Invoke"
    type: "*(*RIXMLDOMAttribute;;I*cR_GUID;;UIUS*RtagDISPPARAMS;;*RtagVARIANT;;*RtagEXCEPINFO;;*UI;)I;"
  }
  field {
    name: "get_nodeName"
    type: "*(*RIXMLDOMAttribute;;**US;;)I;"
  }
  field {
    name: "get_nodeValue"
    type: "*(*RIXMLDOMAttribute;;*RtagVARIANT;;)I;"
  }
  field {
    name: "put_nodeValue"
    type: "*(*RIXMLDOMAttribute;;RtagVARIANT;)I;"
  }
  field {
    name: "get_nodeType"
    type: "*(*RIXMLDOMAttribute;;*X(Enum.enum tagDOMNodeType);)I;"
  }
  field {
    name: "get_parentNode"
    type: "*(*RIXMLDOMAttribute;;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "get_childNodes"
    type: "*(*RIXMLDOMAttribute;;**RIXMLDOMNodeList;;;)I;"
  }
  field {
    name: "get_firstChild"
    type: "*(*RIXMLDOMAttribute;;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "get_lastChild"
    type: "*(*RIXMLDOMAttribute;;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "get_previousSibling"
    type: "*(*RIXMLDOMAttribute;;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "get_nextSibling"
    type: "*(*RIXMLDOMAttribute;;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "get_attributes"
    type: "*(*RIXMLDOMAttribute;;**RIXMLDOMNamedNodeMap;;;)I;"
  }
  field {
    name: "insertBefore"
    type: "*(*RIXMLDOMAttribute;;*RIXMLDOMNode;;RtagVARIANT;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "replaceChild"
    type: "*(*RIXMLDOMAttribute;;*RIXMLDOMNode;;*RIXMLDOMNode;;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "removeChild"
    type: "*(*RIXMLDOMAttribute;;*RIXMLDOMNode;;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "appendChild"
    type: "*(*RIXMLDOMAttribute;;*RIXMLDOMNode;;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "hasChildNodes"
    type: "*(*RIXMLDOMAttribute;;*S;)I;"
  }
  field {
    name: "get_ownerDocument"
    type: "*(*RIXMLDOMAttribute;;**RIXMLDOMDocument;;;)I;"
  }
  field {
    name: "cloneNode"
    type: "*(*RIXMLDOMAttribute;;S**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "get_nodeTypeString"
    type: "*(*RIXMLDOMAttribute;;**US;;)I;"
  }
  field {
    name: "get_text"
    type: "*(*RIXMLDOMAttribute;;**US;;)I;"
  }
  field {
    name: "put_text"
    type: "*(*RIXMLDOMAttribute;;*US;)I;"
  }
  field {
    name: "get_specified"
    type: "*(*RIXMLDOMAttribute;;*S;)I;"
  }
  field {
    name: "get_definition"
    type: "*(*RIXMLDOMAttribute;;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "get_nodeTypedValue"
    type: "*(*RIXMLDOMAttribute;;*RtagVARIANT;;)I;"
  }
  field {
    name: "put_nodeTypedValue"
    type: "*(*RIXMLDOMAttribute;;RtagVARIANT;)I;"
  }
  field {
    name: "get_dataType"
    type: "*(*RIXMLDOMAttribute;;*RtagVARIANT;;)I;"
  }
  field {
    name: "put_dataType"
    type: "*(*RIXMLDOMAttribute;;*US;)I;"
  }
  field {
    name: "get_xml"
    type: "*(*RIXMLDOMAttribute;;**US;;)I;"
  }
  field {
    name: "transformNode"
    type: "*(*RIXMLDOMAttribute;;*RIXMLDOMNode;;**US;;)I;"
  }
  field {
    name: "selectNodes"
    type: "*(*RIXMLDOMAttribute;;*US;**RIXMLDOMNodeList;;;)I;"
  }
  field {
    name: "selectSingleNode"
    type: "*(*RIXMLDOMAttribute;;*US;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "get_parsed"
    type: "*(*RIXMLDOMAttribute;;*S;)I;"
  }
  field {
    name: "get_namespaceURI"
    type: "*(*RIXMLDOMAttribute;;**US;;)I;"
  }
  field {
    name: "get_prefix"
    type: "*(*RIXMLDOMAttribute;;**US;;)I;"
  }
  field {
    name: "get_baseName"
    type: "*(*RIXMLDOMAttribute;;**US;;)I;"
  }
  field {
    name: "transformNodeToObject"
    type: "*(*RIXMLDOMAttribute;;*RIXMLDOMNode;;RtagVARIANT;)I;"
  }
  field {
    name: "get_name"
    type: "*(*RIXMLDOMAttribute;;**US;;)I;"
  }
  field {
    name: "get_value"
    type: "*(*RIXMLDOMAttribute;;*RtagVARIANT;;)I;"
  }
  field {
    name: "put_value"
    type: "*(*RIXMLDOMAttribute;;RtagVARIANT;)I;"
  }
}
struct {
  name: "IXMLDOMAttribute"
  field {
    name: "lpVtbl"
    type: "*RIXMLDOMAttributeVtbl;;"
  }
}
struct {
  name: "IXMLDOMElementVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIXMLDOMElement;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIXMLDOMElement;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIXMLDOMElement;;)UI;"
  }
  field {
    name: "GetTypeInfoCount"
    type: "*(*RIXMLDOMElement;;*UI;)I;"
  }
  field {
    name: "GetTypeInfo"
    type: "*(*RIXMLDOMElement;;UIUI**RITypeInfo;;;)I;"
  }
  field {
    name: "GetIDsOfNames"
    type: "*(*RIXMLDOMElement;;*cR_GUID;;**US;;UIUI*I;)I;"
  }
  field {
    name: "Invoke"
    type: "*(*RIXMLDOMElement;;I*cR_GUID;;UIUS*RtagDISPPARAMS;;*RtagVARIANT;;*RtagEXCEPINFO;;*UI;)I;"
  }
  field {
    name: "get_nodeName"
    type: "*(*RIXMLDOMElement;;**US;;)I;"
  }
  field {
    name: "get_nodeValue"
    type: "*(*RIXMLDOMElement;;*RtagVARIANT;;)I;"
  }
  field {
    name: "put_nodeValue"
    type: "*(*RIXMLDOMElement;;RtagVARIANT;)I;"
  }
  field {
    name: "get_nodeType"
    type: "*(*RIXMLDOMElement;;*X(Enum.enum tagDOMNodeType);)I;"
  }
  field {
    name: "get_parentNode"
    type: "*(*RIXMLDOMElement;;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "get_childNodes"
    type: "*(*RIXMLDOMElement;;**RIXMLDOMNodeList;;;)I;"
  }
  field {
    name: "get_firstChild"
    type: "*(*RIXMLDOMElement;;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "get_lastChild"
    type: "*(*RIXMLDOMElement;;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "get_previousSibling"
    type: "*(*RIXMLDOMElement;;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "get_nextSibling"
    type: "*(*RIXMLDOMElement;;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "get_attributes"
    type: "*(*RIXMLDOMElement;;**RIXMLDOMNamedNodeMap;;;)I;"
  }
  field {
    name: "insertBefore"
    type: "*(*RIXMLDOMElement;;*RIXMLDOMNode;;RtagVARIANT;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "replaceChild"
    type: "*(*RIXMLDOMElement;;*RIXMLDOMNode;;*RIXMLDOMNode;;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "removeChild"
    type: "*(*RIXMLDOMElement;;*RIXMLDOMNode;;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "appendChild"
    type: "*(*RIXMLDOMElement;;*RIXMLDOMNode;;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "hasChildNodes"
    type: "*(*RIXMLDOMElement;;*S;)I;"
  }
  field {
    name: "get_ownerDocument"
    type: "*(*RIXMLDOMElement;;**RIXMLDOMDocument;;;)I;"
  }
  field {
    name: "cloneNode"
    type: "*(*RIXMLDOMElement;;S**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "get_nodeTypeString"
    type: "*(*RIXMLDOMElement;;**US;;)I;"
  }
  field {
    name: "get_text"
    type: "*(*RIXMLDOMElement;;**US;;)I;"
  }
  field {
    name: "put_text"
    type: "*(*RIXMLDOMElement;;*US;)I;"
  }
  field {
    name: "get_specified"
    type: "*(*RIXMLDOMElement;;*S;)I;"
  }
  field {
    name: "get_definition"
    type: "*(*RIXMLDOMElement;;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "get_nodeTypedValue"
    type: "*(*RIXMLDOMElement;;*RtagVARIANT;;)I;"
  }
  field {
    name: "put_nodeTypedValue"
    type: "*(*RIXMLDOMElement;;RtagVARIANT;)I;"
  }
  field {
    name: "get_dataType"
    type: "*(*RIXMLDOMElement;;*RtagVARIANT;;)I;"
  }
  field {
    name: "put_dataType"
    type: "*(*RIXMLDOMElement;;*US;)I;"
  }
  field {
    name: "get_xml"
    type: "*(*RIXMLDOMElement;;**US;;)I;"
  }
  field {
    name: "transformNode"
    type: "*(*RIXMLDOMElement;;*RIXMLDOMNode;;**US;;)I;"
  }
  field {
    name: "selectNodes"
    type: "*(*RIXMLDOMElement;;*US;**RIXMLDOMNodeList;;;)I;"
  }
  field {
    name: "selectSingleNode"
    type: "*(*RIXMLDOMElement;;*US;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "get_parsed"
    type: "*(*RIXMLDOMElement;;*S;)I;"
  }
  field {
    name: "get_namespaceURI"
    type: "*(*RIXMLDOMElement;;**US;;)I;"
  }
  field {
    name: "get_prefix"
    type: "*(*RIXMLDOMElement;;**US;;)I;"
  }
  field {
    name: "get_baseName"
    type: "*(*RIXMLDOMElement;;**US;;)I;"
  }
  field {
    name: "transformNodeToObject"
    type: "*(*RIXMLDOMElement;;*RIXMLDOMNode;;RtagVARIANT;)I;"
  }
  field {
    name: "get_tagName"
    type: "*(*RIXMLDOMElement;;**US;;)I;"
  }
  field {
    name: "getAttribute"
    type: "*(*RIXMLDOMElement;;*US;*RtagVARIANT;;)I;"
  }
  field {
    name: "setAttribute"
    type: "*(*RIXMLDOMElement;;*US;RtagVARIANT;)I;"
  }
  field {
    name: "removeAttribute"
    type: "*(*RIXMLDOMElement;;*US;)I;"
  }
  field {
    name: "getAttributeNode"
    type: "*(*RIXMLDOMElement;;*US;**RIXMLDOMAttribute;;;)I;"
  }
  field {
    name: "setAttributeNode"
    type: "*(*RIXMLDOMElement;;*RIXMLDOMAttribute;;**RIXMLDOMAttribute;;;)I;"
  }
  field {
    name: "removeAttributeNode"
    type: "*(*RIXMLDOMElement;;*RIXMLDOMAttribute;;**RIXMLDOMAttribute;;;)I;"
  }
  field {
    name: "getElementsByTagName"
    type: "*(*RIXMLDOMElement;;*US;**RIXMLDOMNodeList;;;)I;"
  }
  field {
    name: "normalize"
    type: "*(*RIXMLDOMElement;;)I;"
  }
}
struct {
  name: "IXMLDOMElement"
  field {
    name: "lpVtbl"
    type: "*RIXMLDOMElementVtbl;;"
  }
}
struct {
  name: "IXMLDOMTextVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIXMLDOMText;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIXMLDOMText;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIXMLDOMText;;)UI;"
  }
  field {
    name: "GetTypeInfoCount"
    type: "*(*RIXMLDOMText;;*UI;)I;"
  }
  field {
    name: "GetTypeInfo"
    type: "*(*RIXMLDOMText;;UIUI**RITypeInfo;;;)I;"
  }
  field {
    name: "GetIDsOfNames"
    type: "*(*RIXMLDOMText;;*cR_GUID;;**US;;UIUI*I;)I;"
  }
  field {
    name: "Invoke"
    type: "*(*RIXMLDOMText;;I*cR_GUID;;UIUS*RtagDISPPARAMS;;*RtagVARIANT;;*RtagEXCEPINFO;;*UI;)I;"
  }
  field {
    name: "get_nodeName"
    type: "*(*RIXMLDOMText;;**US;;)I;"
  }
  field {
    name: "get_nodeValue"
    type: "*(*RIXMLDOMText;;*RtagVARIANT;;)I;"
  }
  field {
    name: "put_nodeValue"
    type: "*(*RIXMLDOMText;;RtagVARIANT;)I;"
  }
  field {
    name: "get_nodeType"
    type: "*(*RIXMLDOMText;;*X(Enum.enum tagDOMNodeType);)I;"
  }
  field {
    name: "get_parentNode"
    type: "*(*RIXMLDOMText;;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "get_childNodes"
    type: "*(*RIXMLDOMText;;**RIXMLDOMNodeList;;;)I;"
  }
  field {
    name: "get_firstChild"
    type: "*(*RIXMLDOMText;;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "get_lastChild"
    type: "*(*RIXMLDOMText;;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "get_previousSibling"
    type: "*(*RIXMLDOMText;;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "get_nextSibling"
    type: "*(*RIXMLDOMText;;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "get_attributes"
    type: "*(*RIXMLDOMText;;**RIXMLDOMNamedNodeMap;;;)I;"
  }
  field {
    name: "insertBefore"
    type: "*(*RIXMLDOMText;;*RIXMLDOMNode;;RtagVARIANT;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "replaceChild"
    type: "*(*RIXMLDOMText;;*RIXMLDOMNode;;*RIXMLDOMNode;;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "removeChild"
    type: "*(*RIXMLDOMText;;*RIXMLDOMNode;;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "appendChild"
    type: "*(*RIXMLDOMText;;*RIXMLDOMNode;;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "hasChildNodes"
    type: "*(*RIXMLDOMText;;*S;)I;"
  }
  field {
    name: "get_ownerDocument"
    type: "*(*RIXMLDOMText;;**RIXMLDOMDocument;;;)I;"
  }
  field {
    name: "cloneNode"
    type: "*(*RIXMLDOMText;;S**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "get_nodeTypeString"
    type: "*(*RIXMLDOMText;;**US;;)I;"
  }
  field {
    name: "get_text"
    type: "*(*RIXMLDOMText;;**US;;)I;"
  }
  field {
    name: "put_text"
    type: "*(*RIXMLDOMText;;*US;)I;"
  }
  field {
    name: "get_specified"
    type: "*(*RIXMLDOMText;;*S;)I;"
  }
  field {
    name: "get_definition"
    type: "*(*RIXMLDOMText;;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "get_nodeTypedValue"
    type: "*(*RIXMLDOMText;;*RtagVARIANT;;)I;"
  }
  field {
    name: "put_nodeTypedValue"
    type: "*(*RIXMLDOMText;;RtagVARIANT;)I;"
  }
  field {
    name: "get_dataType"
    type: "*(*RIXMLDOMText;;*RtagVARIANT;;)I;"
  }
  field {
    name: "put_dataType"
    type: "*(*RIXMLDOMText;;*US;)I;"
  }
  field {
    name: "get_xml"
    type: "*(*RIXMLDOMText;;**US;;)I;"
  }
  field {
    name: "transformNode"
    type: "*(*RIXMLDOMText;;*RIXMLDOMNode;;**US;;)I;"
  }
  field {
    name: "selectNodes"
    type: "*(*RIXMLDOMText;;*US;**RIXMLDOMNodeList;;;)I;"
  }
  field {
    name: "selectSingleNode"
    type: "*(*RIXMLDOMText;;*US;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "get_parsed"
    type: "*(*RIXMLDOMText;;*S;)I;"
  }
  field {
    name: "get_namespaceURI"
    type: "*(*RIXMLDOMText;;**US;;)I;"
  }
  field {
    name: "get_prefix"
    type: "*(*RIXMLDOMText;;**US;;)I;"
  }
  field {
    name: "get_baseName"
    type: "*(*RIXMLDOMText;;**US;;)I;"
  }
  field {
    name: "transformNodeToObject"
    type: "*(*RIXMLDOMText;;*RIXMLDOMNode;;RtagVARIANT;)I;"
  }
  field {
    name: "get_data"
    type: "*(*RIXMLDOMText;;**US;;)I;"
  }
  field {
    name: "put_data"
    type: "*(*RIXMLDOMText;;*US;)I;"
  }
  field {
    name: "get_length"
    type: "*(*RIXMLDOMText;;*I;)I;"
  }
  field {
    name: "substringData"
    type: "*(*RIXMLDOMText;;II**US;;)I;"
  }
  field {
    name: "appendData"
    type: "*(*RIXMLDOMText;;*US;)I;"
  }
  field {
    name: "insertData"
    type: "*(*RIXMLDOMText;;I*US;)I;"
  }
  field {
    name: "deleteData"
    type: "*(*RIXMLDOMText;;II)I;"
  }
  field {
    name: "replaceData"
    type: "*(*RIXMLDOMText;;II*US;)I;"
  }
  field {
    name: "splitText"
    type: "*(*RIXMLDOMText;;I**RIXMLDOMText;;;)I;"
  }
}
struct {
  name: "IXMLDOMText"
  field {
    name: "lpVtbl"
    type: "*RIXMLDOMTextVtbl;;"
  }
}
struct {
  name: "IXMLDOMCommentVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIXMLDOMComment;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIXMLDOMComment;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIXMLDOMComment;;)UI;"
  }
  field {
    name: "GetTypeInfoCount"
    type: "*(*RIXMLDOMComment;;*UI;)I;"
  }
  field {
    name: "GetTypeInfo"
    type: "*(*RIXMLDOMComment;;UIUI**RITypeInfo;;;)I;"
  }
  field {
    name: "GetIDsOfNames"
    type: "*(*RIXMLDOMComment;;*cR_GUID;;**US;;UIUI*I;)I;"
  }
  field {
    name: "Invoke"
    type: "*(*RIXMLDOMComment;;I*cR_GUID;;UIUS*RtagDISPPARAMS;;*RtagVARIANT;;*RtagEXCEPINFO;;*UI;)I;"
  }
  field {
    name: "get_nodeName"
    type: "*(*RIXMLDOMComment;;**US;;)I;"
  }
  field {
    name: "get_nodeValue"
    type: "*(*RIXMLDOMComment;;*RtagVARIANT;;)I;"
  }
  field {
    name: "put_nodeValue"
    type: "*(*RIXMLDOMComment;;RtagVARIANT;)I;"
  }
  field {
    name: "get_nodeType"
    type: "*(*RIXMLDOMComment;;*X(Enum.enum tagDOMNodeType);)I;"
  }
  field {
    name: "get_parentNode"
    type: "*(*RIXMLDOMComment;;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "get_childNodes"
    type: "*(*RIXMLDOMComment;;**RIXMLDOMNodeList;;;)I;"
  }
  field {
    name: "get_firstChild"
    type: "*(*RIXMLDOMComment;;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "get_lastChild"
    type: "*(*RIXMLDOMComment;;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "get_previousSibling"
    type: "*(*RIXMLDOMComment;;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "get_nextSibling"
    type: "*(*RIXMLDOMComment;;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "get_attributes"
    type: "*(*RIXMLDOMComment;;**RIXMLDOMNamedNodeMap;;;)I;"
  }
  field {
    name: "insertBefore"
    type: "*(*RIXMLDOMComment;;*RIXMLDOMNode;;RtagVARIANT;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "replaceChild"
    type: "*(*RIXMLDOMComment;;*RIXMLDOMNode;;*RIXMLDOMNode;;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "removeChild"
    type: "*(*RIXMLDOMComment;;*RIXMLDOMNode;;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "appendChild"
    type: "*(*RIXMLDOMComment;;*RIXMLDOMNode;;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "hasChildNodes"
    type: "*(*RIXMLDOMComment;;*S;)I;"
  }
  field {
    name: "get_ownerDocument"
    type: "*(*RIXMLDOMComment;;**RIXMLDOMDocument;;;)I;"
  }
  field {
    name: "cloneNode"
    type: "*(*RIXMLDOMComment;;S**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "get_nodeTypeString"
    type: "*(*RIXMLDOMComment;;**US;;)I;"
  }
  field {
    name: "get_text"
    type: "*(*RIXMLDOMComment;;**US;;)I;"
  }
  field {
    name: "put_text"
    type: "*(*RIXMLDOMComment;;*US;)I;"
  }
  field {
    name: "get_specified"
    type: "*(*RIXMLDOMComment;;*S;)I;"
  }
  field {
    name: "get_definition"
    type: "*(*RIXMLDOMComment;;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "get_nodeTypedValue"
    type: "*(*RIXMLDOMComment;;*RtagVARIANT;;)I;"
  }
  field {
    name: "put_nodeTypedValue"
    type: "*(*RIXMLDOMComment;;RtagVARIANT;)I;"
  }
  field {
    name: "get_dataType"
    type: "*(*RIXMLDOMComment;;*RtagVARIANT;;)I;"
  }
  field {
    name: "put_dataType"
    type: "*(*RIXMLDOMComment;;*US;)I;"
  }
  field {
    name: "get_xml"
    type: "*(*RIXMLDOMComment;;**US;;)I;"
  }
  field {
    name: "transformNode"
    type: "*(*RIXMLDOMComment;;*RIXMLDOMNode;;**US;;)I;"
  }
  field {
    name: "selectNodes"
    type: "*(*RIXMLDOMComment;;*US;**RIXMLDOMNodeList;;;)I;"
  }
  field {
    name: "selectSingleNode"
    type: "*(*RIXMLDOMComment;;*US;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "get_parsed"
    type: "*(*RIXMLDOMComment;;*S;)I;"
  }
  field {
    name: "get_namespaceURI"
    type: "*(*RIXMLDOMComment;;**US;;)I;"
  }
  field {
    name: "get_prefix"
    type: "*(*RIXMLDOMComment;;**US;;)I;"
  }
  field {
    name: "get_baseName"
    type: "*(*RIXMLDOMComment;;**US;;)I;"
  }
  field {
    name: "transformNodeToObject"
    type: "*(*RIXMLDOMComment;;*RIXMLDOMNode;;RtagVARIANT;)I;"
  }
  field {
    name: "get_data"
    type: "*(*RIXMLDOMComment;;**US;;)I;"
  }
  field {
    name: "put_data"
    type: "*(*RIXMLDOMComment;;*US;)I;"
  }
  field {
    name: "get_length"
    type: "*(*RIXMLDOMComment;;*I;)I;"
  }
  field {
    name: "substringData"
    type: "*(*RIXMLDOMComment;;II**US;;)I;"
  }
  field {
    name: "appendData"
    type: "*(*RIXMLDOMComment;;*US;)I;"
  }
  field {
    name: "insertData"
    type: "*(*RIXMLDOMComment;;I*US;)I;"
  }
  field {
    name: "deleteData"
    type: "*(*RIXMLDOMComment;;II)I;"
  }
  field {
    name: "replaceData"
    type: "*(*RIXMLDOMComment;;II*US;)I;"
  }
}
struct {
  name: "IXMLDOMComment"
  field {
    name: "lpVtbl"
    type: "*RIXMLDOMCommentVtbl;;"
  }
}
struct {
  name: "IXMLDOMProcessingInstructionVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIXMLDOMProcessingInstruction;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIXMLDOMProcessingInstruction;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIXMLDOMProcessingInstruction;;)UI;"
  }
  field {
    name: "GetTypeInfoCount"
    type: "*(*RIXMLDOMProcessingInstruction;;*UI;)I;"
  }
  field {
    name: "GetTypeInfo"
    type: "*(*RIXMLDOMProcessingInstruction;;UIUI**RITypeInfo;;;)I;"
  }
  field {
    name: "GetIDsOfNames"
    type: "*(*RIXMLDOMProcessingInstruction;;*cR_GUID;;**US;;UIUI*I;)I;"
  }
  field {
    name: "Invoke"
    type: "*(*RIXMLDOMProcessingInstruction;;I*cR_GUID;;UIUS*RtagDISPPARAMS;;*RtagVARIANT;;*RtagEXCEPINFO;;*UI;)I;"
  }
  field {
    name: "get_nodeName"
    type: "*(*RIXMLDOMProcessingInstruction;;**US;;)I;"
  }
  field {
    name: "get_nodeValue"
    type: "*(*RIXMLDOMProcessingInstruction;;*RtagVARIANT;;)I;"
  }
  field {
    name: "put_nodeValue"
    type: "*(*RIXMLDOMProcessingInstruction;;RtagVARIANT;)I;"
  }
  field {
    name: "get_nodeType"
    type: "*(*RIXMLDOMProcessingInstruction;;*X(Enum.enum tagDOMNodeType);)I;"
  }
  field {
    name: "get_parentNode"
    type: "*(*RIXMLDOMProcessingInstruction;;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "get_childNodes"
    type: "*(*RIXMLDOMProcessingInstruction;;**RIXMLDOMNodeList;;;)I;"
  }
  field {
    name: "get_firstChild"
    type: "*(*RIXMLDOMProcessingInstruction;;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "get_lastChild"
    type: "*(*RIXMLDOMProcessingInstruction;;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "get_previousSibling"
    type: "*(*RIXMLDOMProcessingInstruction;;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "get_nextSibling"
    type: "*(*RIXMLDOMProcessingInstruction;;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "get_attributes"
    type: "*(*RIXMLDOMProcessingInstruction;;**RIXMLDOMNamedNodeMap;;;)I;"
  }
  field {
    name: "insertBefore"
    type: "*(*RIXMLDOMProcessingInstruction;;*RIXMLDOMNode;;RtagVARIANT;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "replaceChild"
    type: "*(*RIXMLDOMProcessingInstruction;;*RIXMLDOMNode;;*RIXMLDOMNode;;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "removeChild"
    type: "*(*RIXMLDOMProcessingInstruction;;*RIXMLDOMNode;;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "appendChild"
    type: "*(*RIXMLDOMProcessingInstruction;;*RIXMLDOMNode;;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "hasChildNodes"
    type: "*(*RIXMLDOMProcessingInstruction;;*S;)I;"
  }
  field {
    name: "get_ownerDocument"
    type: "*(*RIXMLDOMProcessingInstruction;;**RIXMLDOMDocument;;;)I;"
  }
  field {
    name: "cloneNode"
    type: "*(*RIXMLDOMProcessingInstruction;;S**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "get_nodeTypeString"
    type: "*(*RIXMLDOMProcessingInstruction;;**US;;)I;"
  }
  field {
    name: "get_text"
    type: "*(*RIXMLDOMProcessingInstruction;;**US;;)I;"
  }
  field {
    name: "put_text"
    type: "*(*RIXMLDOMProcessingInstruction;;*US;)I;"
  }
  field {
    name: "get_specified"
    type: "*(*RIXMLDOMProcessingInstruction;;*S;)I;"
  }
  field {
    name: "get_definition"
    type: "*(*RIXMLDOMProcessingInstruction;;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "get_nodeTypedValue"
    type: "*(*RIXMLDOMProcessingInstruction;;*RtagVARIANT;;)I;"
  }
  field {
    name: "put_nodeTypedValue"
    type: "*(*RIXMLDOMProcessingInstruction;;RtagVARIANT;)I;"
  }
  field {
    name: "get_dataType"
    type: "*(*RIXMLDOMProcessingInstruction;;*RtagVARIANT;;)I;"
  }
  field {
    name: "put_dataType"
    type: "*(*RIXMLDOMProcessingInstruction;;*US;)I;"
  }
  field {
    name: "get_xml"
    type: "*(*RIXMLDOMProcessingInstruction;;**US;;)I;"
  }
  field {
    name: "transformNode"
    type: "*(*RIXMLDOMProcessingInstruction;;*RIXMLDOMNode;;**US;;)I;"
  }
  field {
    name: "selectNodes"
    type: "*(*RIXMLDOMProcessingInstruction;;*US;**RIXMLDOMNodeList;;;)I;"
  }
  field {
    name: "selectSingleNode"
    type: "*(*RIXMLDOMProcessingInstruction;;*US;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "get_parsed"
    type: "*(*RIXMLDOMProcessingInstruction;;*S;)I;"
  }
  field {
    name: "get_namespaceURI"
    type: "*(*RIXMLDOMProcessingInstruction;;**US;;)I;"
  }
  field {
    name: "get_prefix"
    type: "*(*RIXMLDOMProcessingInstruction;;**US;;)I;"
  }
  field {
    name: "get_baseName"
    type: "*(*RIXMLDOMProcessingInstruction;;**US;;)I;"
  }
  field {
    name: "transformNodeToObject"
    type: "*(*RIXMLDOMProcessingInstruction;;*RIXMLDOMNode;;RtagVARIANT;)I;"
  }
  field {
    name: "get_target"
    type: "*(*RIXMLDOMProcessingInstruction;;**US;;)I;"
  }
  field {
    name: "get_data"
    type: "*(*RIXMLDOMProcessingInstruction;;**US;;)I;"
  }
  field {
    name: "put_data"
    type: "*(*RIXMLDOMProcessingInstruction;;*US;)I;"
  }
}
struct {
  name: "IXMLDOMProcessingInstruction"
  field {
    name: "lpVtbl"
    type: "*RIXMLDOMProcessingInstructionVtbl;;"
  }
}
struct {
  name: "IXMLDOMCDATASectionVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIXMLDOMCDATASection;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIXMLDOMCDATASection;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIXMLDOMCDATASection;;)UI;"
  }
  field {
    name: "GetTypeInfoCount"
    type: "*(*RIXMLDOMCDATASection;;*UI;)I;"
  }
  field {
    name: "GetTypeInfo"
    type: "*(*RIXMLDOMCDATASection;;UIUI**RITypeInfo;;;)I;"
  }
  field {
    name: "GetIDsOfNames"
    type: "*(*RIXMLDOMCDATASection;;*cR_GUID;;**US;;UIUI*I;)I;"
  }
  field {
    name: "Invoke"
    type: "*(*RIXMLDOMCDATASection;;I*cR_GUID;;UIUS*RtagDISPPARAMS;;*RtagVARIANT;;*RtagEXCEPINFO;;*UI;)I;"
  }
  field {
    name: "get_nodeName"
    type: "*(*RIXMLDOMCDATASection;;**US;;)I;"
  }
  field {
    name: "get_nodeValue"
    type: "*(*RIXMLDOMCDATASection;;*RtagVARIANT;;)I;"
  }
  field {
    name: "put_nodeValue"
    type: "*(*RIXMLDOMCDATASection;;RtagVARIANT;)I;"
  }
  field {
    name: "get_nodeType"
    type: "*(*RIXMLDOMCDATASection;;*X(Enum.enum tagDOMNodeType);)I;"
  }
  field {
    name: "get_parentNode"
    type: "*(*RIXMLDOMCDATASection;;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "get_childNodes"
    type: "*(*RIXMLDOMCDATASection;;**RIXMLDOMNodeList;;;)I;"
  }
  field {
    name: "get_firstChild"
    type: "*(*RIXMLDOMCDATASection;;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "get_lastChild"
    type: "*(*RIXMLDOMCDATASection;;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "get_previousSibling"
    type: "*(*RIXMLDOMCDATASection;;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "get_nextSibling"
    type: "*(*RIXMLDOMCDATASection;;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "get_attributes"
    type: "*(*RIXMLDOMCDATASection;;**RIXMLDOMNamedNodeMap;;;)I;"
  }
  field {
    name: "insertBefore"
    type: "*(*RIXMLDOMCDATASection;;*RIXMLDOMNode;;RtagVARIANT;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "replaceChild"
    type: "*(*RIXMLDOMCDATASection;;*RIXMLDOMNode;;*RIXMLDOMNode;;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "removeChild"
    type: "*(*RIXMLDOMCDATASection;;*RIXMLDOMNode;;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "appendChild"
    type: "*(*RIXMLDOMCDATASection;;*RIXMLDOMNode;;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "hasChildNodes"
    type: "*(*RIXMLDOMCDATASection;;*S;)I;"
  }
  field {
    name: "get_ownerDocument"
    type: "*(*RIXMLDOMCDATASection;;**RIXMLDOMDocument;;;)I;"
  }
  field {
    name: "cloneNode"
    type: "*(*RIXMLDOMCDATASection;;S**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "get_nodeTypeString"
    type: "*(*RIXMLDOMCDATASection;;**US;;)I;"
  }
  field {
    name: "get_text"
    type: "*(*RIXMLDOMCDATASection;;**US;;)I;"
  }
  field {
    name: "put_text"
    type: "*(*RIXMLDOMCDATASection;;*US;)I;"
  }
  field {
    name: "get_specified"
    type: "*(*RIXMLDOMCDATASection;;*S;)I;"
  }
  field {
    name: "get_definition"
    type: "*(*RIXMLDOMCDATASection;;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "get_nodeTypedValue"
    type: "*(*RIXMLDOMCDATASection;;*RtagVARIANT;;)I;"
  }
  field {
    name: "put_nodeTypedValue"
    type: "*(*RIXMLDOMCDATASection;;RtagVARIANT;)I;"
  }
  field {
    name: "get_dataType"
    type: "*(*RIXMLDOMCDATASection;;*RtagVARIANT;;)I;"
  }
  field {
    name: "put_dataType"
    type: "*(*RIXMLDOMCDATASection;;*US;)I;"
  }
  field {
    name: "get_xml"
    type: "*(*RIXMLDOMCDATASection;;**US;;)I;"
  }
  field {
    name: "transformNode"
    type: "*(*RIXMLDOMCDATASection;;*RIXMLDOMNode;;**US;;)I;"
  }
  field {
    name: "selectNodes"
    type: "*(*RIXMLDOMCDATASection;;*US;**RIXMLDOMNodeList;;;)I;"
  }
  field {
    name: "selectSingleNode"
    type: "*(*RIXMLDOMCDATASection;;*US;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "get_parsed"
    type: "*(*RIXMLDOMCDATASection;;*S;)I;"
  }
  field {
    name: "get_namespaceURI"
    type: "*(*RIXMLDOMCDATASection;;**US;;)I;"
  }
  field {
    name: "get_prefix"
    type: "*(*RIXMLDOMCDATASection;;**US;;)I;"
  }
  field {
    name: "get_baseName"
    type: "*(*RIXMLDOMCDATASection;;**US;;)I;"
  }
  field {
    name: "transformNodeToObject"
    type: "*(*RIXMLDOMCDATASection;;*RIXMLDOMNode;;RtagVARIANT;)I;"
  }
  field {
    name: "get_data"
    type: "*(*RIXMLDOMCDATASection;;**US;;)I;"
  }
  field {
    name: "put_data"
    type: "*(*RIXMLDOMCDATASection;;*US;)I;"
  }
  field {
    name: "get_length"
    type: "*(*RIXMLDOMCDATASection;;*I;)I;"
  }
  field {
    name: "substringData"
    type: "*(*RIXMLDOMCDATASection;;II**US;;)I;"
  }
  field {
    name: "appendData"
    type: "*(*RIXMLDOMCDATASection;;*US;)I;"
  }
  field {
    name: "insertData"
    type: "*(*RIXMLDOMCDATASection;;I*US;)I;"
  }
  field {
    name: "deleteData"
    type: "*(*RIXMLDOMCDATASection;;II)I;"
  }
  field {
    name: "replaceData"
    type: "*(*RIXMLDOMCDATASection;;II*US;)I;"
  }
  field {
    name: "splitText"
    type: "*(*RIXMLDOMCDATASection;;I**RIXMLDOMText;;;)I;"
  }
}
struct {
  name: "IXMLDOMCDATASection"
  field {
    name: "lpVtbl"
    type: "*RIXMLDOMCDATASectionVtbl;;"
  }
}
struct {
  name: "IXMLDOMDocumentTypeVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIXMLDOMDocumentType;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIXMLDOMDocumentType;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIXMLDOMDocumentType;;)UI;"
  }
  field {
    name: "GetTypeInfoCount"
    type: "*(*RIXMLDOMDocumentType;;*UI;)I;"
  }
  field {
    name: "GetTypeInfo"
    type: "*(*RIXMLDOMDocumentType;;UIUI**RITypeInfo;;;)I;"
  }
  field {
    name: "GetIDsOfNames"
    type: "*(*RIXMLDOMDocumentType;;*cR_GUID;;**US;;UIUI*I;)I;"
  }
  field {
    name: "Invoke"
    type: "*(*RIXMLDOMDocumentType;;I*cR_GUID;;UIUS*RtagDISPPARAMS;;*RtagVARIANT;;*RtagEXCEPINFO;;*UI;)I;"
  }
  field {
    name: "get_nodeName"
    type: "*(*RIXMLDOMDocumentType;;**US;;)I;"
  }
  field {
    name: "get_nodeValue"
    type: "*(*RIXMLDOMDocumentType;;*RtagVARIANT;;)I;"
  }
  field {
    name: "put_nodeValue"
    type: "*(*RIXMLDOMDocumentType;;RtagVARIANT;)I;"
  }
  field {
    name: "get_nodeType"
    type: "*(*RIXMLDOMDocumentType;;*X(Enum.enum tagDOMNodeType);)I;"
  }
  field {
    name: "get_parentNode"
    type: "*(*RIXMLDOMDocumentType;;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "get_childNodes"
    type: "*(*RIXMLDOMDocumentType;;**RIXMLDOMNodeList;;;)I;"
  }
  field {
    name: "get_firstChild"
    type: "*(*RIXMLDOMDocumentType;;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "get_lastChild"
    type: "*(*RIXMLDOMDocumentType;;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "get_previousSibling"
    type: "*(*RIXMLDOMDocumentType;;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "get_nextSibling"
    type: "*(*RIXMLDOMDocumentType;;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "get_attributes"
    type: "*(*RIXMLDOMDocumentType;;**RIXMLDOMNamedNodeMap;;;)I;"
  }
  field {
    name: "insertBefore"
    type: "*(*RIXMLDOMDocumentType;;*RIXMLDOMNode;;RtagVARIANT;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "replaceChild"
    type: "*(*RIXMLDOMDocumentType;;*RIXMLDOMNode;;*RIXMLDOMNode;;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "removeChild"
    type: "*(*RIXMLDOMDocumentType;;*RIXMLDOMNode;;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "appendChild"
    type: "*(*RIXMLDOMDocumentType;;*RIXMLDOMNode;;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "hasChildNodes"
    type: "*(*RIXMLDOMDocumentType;;*S;)I;"
  }
  field {
    name: "get_ownerDocument"
    type: "*(*RIXMLDOMDocumentType;;**RIXMLDOMDocument;;;)I;"
  }
  field {
    name: "cloneNode"
    type: "*(*RIXMLDOMDocumentType;;S**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "get_nodeTypeString"
    type: "*(*RIXMLDOMDocumentType;;**US;;)I;"
  }
  field {
    name: "get_text"
    type: "*(*RIXMLDOMDocumentType;;**US;;)I;"
  }
  field {
    name: "put_text"
    type: "*(*RIXMLDOMDocumentType;;*US;)I;"
  }
  field {
    name: "get_specified"
    type: "*(*RIXMLDOMDocumentType;;*S;)I;"
  }
  field {
    name: "get_definition"
    type: "*(*RIXMLDOMDocumentType;;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "get_nodeTypedValue"
    type: "*(*RIXMLDOMDocumentType;;*RtagVARIANT;;)I;"
  }
  field {
    name: "put_nodeTypedValue"
    type: "*(*RIXMLDOMDocumentType;;RtagVARIANT;)I;"
  }
  field {
    name: "get_dataType"
    type: "*(*RIXMLDOMDocumentType;;*RtagVARIANT;;)I;"
  }
  field {
    name: "put_dataType"
    type: "*(*RIXMLDOMDocumentType;;*US;)I;"
  }
  field {
    name: "get_xml"
    type: "*(*RIXMLDOMDocumentType;;**US;;)I;"
  }
  field {
    name: "transformNode"
    type: "*(*RIXMLDOMDocumentType;;*RIXMLDOMNode;;**US;;)I;"
  }
  field {
    name: "selectNodes"
    type: "*(*RIXMLDOMDocumentType;;*US;**RIXMLDOMNodeList;;;)I;"
  }
  field {
    name: "selectSingleNode"
    type: "*(*RIXMLDOMDocumentType;;*US;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "get_parsed"
    type: "*(*RIXMLDOMDocumentType;;*S;)I;"
  }
  field {
    name: "get_namespaceURI"
    type: "*(*RIXMLDOMDocumentType;;**US;;)I;"
  }
  field {
    name: "get_prefix"
    type: "*(*RIXMLDOMDocumentType;;**US;;)I;"
  }
  field {
    name: "get_baseName"
    type: "*(*RIXMLDOMDocumentType;;**US;;)I;"
  }
  field {
    name: "transformNodeToObject"
    type: "*(*RIXMLDOMDocumentType;;*RIXMLDOMNode;;RtagVARIANT;)I;"
  }
  field {
    name: "get_name"
    type: "*(*RIXMLDOMDocumentType;;**US;;)I;"
  }
  field {
    name: "get_entities"
    type: "*(*RIXMLDOMDocumentType;;**RIXMLDOMNamedNodeMap;;;)I;"
  }
  field {
    name: "get_notations"
    type: "*(*RIXMLDOMDocumentType;;**RIXMLDOMNamedNodeMap;;;)I;"
  }
}
struct {
  name: "IXMLDOMDocumentType"
  field {
    name: "lpVtbl"
    type: "*RIXMLDOMDocumentTypeVtbl;;"
  }
}
struct {
  name: "IXMLDOMNotationVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIXMLDOMNotation;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIXMLDOMNotation;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIXMLDOMNotation;;)UI;"
  }
  field {
    name: "GetTypeInfoCount"
    type: "*(*RIXMLDOMNotation;;*UI;)I;"
  }
  field {
    name: "GetTypeInfo"
    type: "*(*RIXMLDOMNotation;;UIUI**RITypeInfo;;;)I;"
  }
  field {
    name: "GetIDsOfNames"
    type: "*(*RIXMLDOMNotation;;*cR_GUID;;**US;;UIUI*I;)I;"
  }
  field {
    name: "Invoke"
    type: "*(*RIXMLDOMNotation;;I*cR_GUID;;UIUS*RtagDISPPARAMS;;*RtagVARIANT;;*RtagEXCEPINFO;;*UI;)I;"
  }
  field {
    name: "get_nodeName"
    type: "*(*RIXMLDOMNotation;;**US;;)I;"
  }
  field {
    name: "get_nodeValue"
    type: "*(*RIXMLDOMNotation;;*RtagVARIANT;;)I;"
  }
  field {
    name: "put_nodeValue"
    type: "*(*RIXMLDOMNotation;;RtagVARIANT;)I;"
  }
  field {
    name: "get_nodeType"
    type: "*(*RIXMLDOMNotation;;*X(Enum.enum tagDOMNodeType);)I;"
  }
  field {
    name: "get_parentNode"
    type: "*(*RIXMLDOMNotation;;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "get_childNodes"
    type: "*(*RIXMLDOMNotation;;**RIXMLDOMNodeList;;;)I;"
  }
  field {
    name: "get_firstChild"
    type: "*(*RIXMLDOMNotation;;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "get_lastChild"
    type: "*(*RIXMLDOMNotation;;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "get_previousSibling"
    type: "*(*RIXMLDOMNotation;;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "get_nextSibling"
    type: "*(*RIXMLDOMNotation;;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "get_attributes"
    type: "*(*RIXMLDOMNotation;;**RIXMLDOMNamedNodeMap;;;)I;"
  }
  field {
    name: "insertBefore"
    type: "*(*RIXMLDOMNotation;;*RIXMLDOMNode;;RtagVARIANT;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "replaceChild"
    type: "*(*RIXMLDOMNotation;;*RIXMLDOMNode;;*RIXMLDOMNode;;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "removeChild"
    type: "*(*RIXMLDOMNotation;;*RIXMLDOMNode;;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "appendChild"
    type: "*(*RIXMLDOMNotation;;*RIXMLDOMNode;;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "hasChildNodes"
    type: "*(*RIXMLDOMNotation;;*S;)I;"
  }
  field {
    name: "get_ownerDocument"
    type: "*(*RIXMLDOMNotation;;**RIXMLDOMDocument;;;)I;"
  }
  field {
    name: "cloneNode"
    type: "*(*RIXMLDOMNotation;;S**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "get_nodeTypeString"
    type: "*(*RIXMLDOMNotation;;**US;;)I;"
  }
  field {
    name: "get_text"
    type: "*(*RIXMLDOMNotation;;**US;;)I;"
  }
  field {
    name: "put_text"
    type: "*(*RIXMLDOMNotation;;*US;)I;"
  }
  field {
    name: "get_specified"
    type: "*(*RIXMLDOMNotation;;*S;)I;"
  }
  field {
    name: "get_definition"
    type: "*(*RIXMLDOMNotation;;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "get_nodeTypedValue"
    type: "*(*RIXMLDOMNotation;;*RtagVARIANT;;)I;"
  }
  field {
    name: "put_nodeTypedValue"
    type: "*(*RIXMLDOMNotation;;RtagVARIANT;)I;"
  }
  field {
    name: "get_dataType"
    type: "*(*RIXMLDOMNotation;;*RtagVARIANT;;)I;"
  }
  field {
    name: "put_dataType"
    type: "*(*RIXMLDOMNotation;;*US;)I;"
  }
  field {
    name: "get_xml"
    type: "*(*RIXMLDOMNotation;;**US;;)I;"
  }
  field {
    name: "transformNode"
    type: "*(*RIXMLDOMNotation;;*RIXMLDOMNode;;**US;;)I;"
  }
  field {
    name: "selectNodes"
    type: "*(*RIXMLDOMNotation;;*US;**RIXMLDOMNodeList;;;)I;"
  }
  field {
    name: "selectSingleNode"
    type: "*(*RIXMLDOMNotation;;*US;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "get_parsed"
    type: "*(*RIXMLDOMNotation;;*S;)I;"
  }
  field {
    name: "get_namespaceURI"
    type: "*(*RIXMLDOMNotation;;**US;;)I;"
  }
  field {
    name: "get_prefix"
    type: "*(*RIXMLDOMNotation;;**US;;)I;"
  }
  field {
    name: "get_baseName"
    type: "*(*RIXMLDOMNotation;;**US;;)I;"
  }
  field {
    name: "transformNodeToObject"
    type: "*(*RIXMLDOMNotation;;*RIXMLDOMNode;;RtagVARIANT;)I;"
  }
  field {
    name: "get_publicId"
    type: "*(*RIXMLDOMNotation;;*RtagVARIANT;;)I;"
  }
  field {
    name: "get_systemId"
    type: "*(*RIXMLDOMNotation;;*RtagVARIANT;;)I;"
  }
}
struct {
  name: "IXMLDOMNotation"
  field {
    name: "lpVtbl"
    type: "*RIXMLDOMNotationVtbl;;"
  }
}
struct {
  name: "IXMLDOMEntityVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIXMLDOMEntity;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIXMLDOMEntity;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIXMLDOMEntity;;)UI;"
  }
  field {
    name: "GetTypeInfoCount"
    type: "*(*RIXMLDOMEntity;;*UI;)I;"
  }
  field {
    name: "GetTypeInfo"
    type: "*(*RIXMLDOMEntity;;UIUI**RITypeInfo;;;)I;"
  }
  field {
    name: "GetIDsOfNames"
    type: "*(*RIXMLDOMEntity;;*cR_GUID;;**US;;UIUI*I;)I;"
  }
  field {
    name: "Invoke"
    type: "*(*RIXMLDOMEntity;;I*cR_GUID;;UIUS*RtagDISPPARAMS;;*RtagVARIANT;;*RtagEXCEPINFO;;*UI;)I;"
  }
  field {
    name: "get_nodeName"
    type: "*(*RIXMLDOMEntity;;**US;;)I;"
  }
  field {
    name: "get_nodeValue"
    type: "*(*RIXMLDOMEntity;;*RtagVARIANT;;)I;"
  }
  field {
    name: "put_nodeValue"
    type: "*(*RIXMLDOMEntity;;RtagVARIANT;)I;"
  }
  field {
    name: "get_nodeType"
    type: "*(*RIXMLDOMEntity;;*X(Enum.enum tagDOMNodeType);)I;"
  }
  field {
    name: "get_parentNode"
    type: "*(*RIXMLDOMEntity;;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "get_childNodes"
    type: "*(*RIXMLDOMEntity;;**RIXMLDOMNodeList;;;)I;"
  }
  field {
    name: "get_firstChild"
    type: "*(*RIXMLDOMEntity;;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "get_lastChild"
    type: "*(*RIXMLDOMEntity;;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "get_previousSibling"
    type: "*(*RIXMLDOMEntity;;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "get_nextSibling"
    type: "*(*RIXMLDOMEntity;;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "get_attributes"
    type: "*(*RIXMLDOMEntity;;**RIXMLDOMNamedNodeMap;;;)I;"
  }
  field {
    name: "insertBefore"
    type: "*(*RIXMLDOMEntity;;*RIXMLDOMNode;;RtagVARIANT;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "replaceChild"
    type: "*(*RIXMLDOMEntity;;*RIXMLDOMNode;;*RIXMLDOMNode;;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "removeChild"
    type: "*(*RIXMLDOMEntity;;*RIXMLDOMNode;;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "appendChild"
    type: "*(*RIXMLDOMEntity;;*RIXMLDOMNode;;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "hasChildNodes"
    type: "*(*RIXMLDOMEntity;;*S;)I;"
  }
  field {
    name: "get_ownerDocument"
    type: "*(*RIXMLDOMEntity;;**RIXMLDOMDocument;;;)I;"
  }
  field {
    name: "cloneNode"
    type: "*(*RIXMLDOMEntity;;S**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "get_nodeTypeString"
    type: "*(*RIXMLDOMEntity;;**US;;)I;"
  }
  field {
    name: "get_text"
    type: "*(*RIXMLDOMEntity;;**US;;)I;"
  }
  field {
    name: "put_text"
    type: "*(*RIXMLDOMEntity;;*US;)I;"
  }
  field {
    name: "get_specified"
    type: "*(*RIXMLDOMEntity;;*S;)I;"
  }
  field {
    name: "get_definition"
    type: "*(*RIXMLDOMEntity;;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "get_nodeTypedValue"
    type: "*(*RIXMLDOMEntity;;*RtagVARIANT;;)I;"
  }
  field {
    name: "put_nodeTypedValue"
    type: "*(*RIXMLDOMEntity;;RtagVARIANT;)I;"
  }
  field {
    name: "get_dataType"
    type: "*(*RIXMLDOMEntity;;*RtagVARIANT;;)I;"
  }
  field {
    name: "put_dataType"
    type: "*(*RIXMLDOMEntity;;*US;)I;"
  }
  field {
    name: "get_xml"
    type: "*(*RIXMLDOMEntity;;**US;;)I;"
  }
  field {
    name: "transformNode"
    type: "*(*RIXMLDOMEntity;;*RIXMLDOMNode;;**US;;)I;"
  }
  field {
    name: "selectNodes"
    type: "*(*RIXMLDOMEntity;;*US;**RIXMLDOMNodeList;;;)I;"
  }
  field {
    name: "selectSingleNode"
    type: "*(*RIXMLDOMEntity;;*US;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "get_parsed"
    type: "*(*RIXMLDOMEntity;;*S;)I;"
  }
  field {
    name: "get_namespaceURI"
    type: "*(*RIXMLDOMEntity;;**US;;)I;"
  }
  field {
    name: "get_prefix"
    type: "*(*RIXMLDOMEntity;;**US;;)I;"
  }
  field {
    name: "get_baseName"
    type: "*(*RIXMLDOMEntity;;**US;;)I;"
  }
  field {
    name: "transformNodeToObject"
    type: "*(*RIXMLDOMEntity;;*RIXMLDOMNode;;RtagVARIANT;)I;"
  }
  field {
    name: "get_publicId"
    type: "*(*RIXMLDOMEntity;;*RtagVARIANT;;)I;"
  }
  field {
    name: "get_systemId"
    type: "*(*RIXMLDOMEntity;;*RtagVARIANT;;)I;"
  }
  field {
    name: "get_notationName"
    type: "*(*RIXMLDOMEntity;;**US;;)I;"
  }
}
struct {
  name: "IXMLDOMEntity"
  field {
    name: "lpVtbl"
    type: "*RIXMLDOMEntityVtbl;;"
  }
}
struct {
  name: "IXMLDOMEntityReferenceVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIXMLDOMEntityReference;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIXMLDOMEntityReference;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIXMLDOMEntityReference;;)UI;"
  }
  field {
    name: "GetTypeInfoCount"
    type: "*(*RIXMLDOMEntityReference;;*UI;)I;"
  }
  field {
    name: "GetTypeInfo"
    type: "*(*RIXMLDOMEntityReference;;UIUI**RITypeInfo;;;)I;"
  }
  field {
    name: "GetIDsOfNames"
    type: "*(*RIXMLDOMEntityReference;;*cR_GUID;;**US;;UIUI*I;)I;"
  }
  field {
    name: "Invoke"
    type: "*(*RIXMLDOMEntityReference;;I*cR_GUID;;UIUS*RtagDISPPARAMS;;*RtagVARIANT;;*RtagEXCEPINFO;;*UI;)I;"
  }
  field {
    name: "get_nodeName"
    type: "*(*RIXMLDOMEntityReference;;**US;;)I;"
  }
  field {
    name: "get_nodeValue"
    type: "*(*RIXMLDOMEntityReference;;*RtagVARIANT;;)I;"
  }
  field {
    name: "put_nodeValue"
    type: "*(*RIXMLDOMEntityReference;;RtagVARIANT;)I;"
  }
  field {
    name: "get_nodeType"
    type: "*(*RIXMLDOMEntityReference;;*X(Enum.enum tagDOMNodeType);)I;"
  }
  field {
    name: "get_parentNode"
    type: "*(*RIXMLDOMEntityReference;;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "get_childNodes"
    type: "*(*RIXMLDOMEntityReference;;**RIXMLDOMNodeList;;;)I;"
  }
  field {
    name: "get_firstChild"
    type: "*(*RIXMLDOMEntityReference;;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "get_lastChild"
    type: "*(*RIXMLDOMEntityReference;;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "get_previousSibling"
    type: "*(*RIXMLDOMEntityReference;;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "get_nextSibling"
    type: "*(*RIXMLDOMEntityReference;;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "get_attributes"
    type: "*(*RIXMLDOMEntityReference;;**RIXMLDOMNamedNodeMap;;;)I;"
  }
  field {
    name: "insertBefore"
    type: "*(*RIXMLDOMEntityReference;;*RIXMLDOMNode;;RtagVARIANT;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "replaceChild"
    type: "*(*RIXMLDOMEntityReference;;*RIXMLDOMNode;;*RIXMLDOMNode;;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "removeChild"
    type: "*(*RIXMLDOMEntityReference;;*RIXMLDOMNode;;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "appendChild"
    type: "*(*RIXMLDOMEntityReference;;*RIXMLDOMNode;;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "hasChildNodes"
    type: "*(*RIXMLDOMEntityReference;;*S;)I;"
  }
  field {
    name: "get_ownerDocument"
    type: "*(*RIXMLDOMEntityReference;;**RIXMLDOMDocument;;;)I;"
  }
  field {
    name: "cloneNode"
    type: "*(*RIXMLDOMEntityReference;;S**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "get_nodeTypeString"
    type: "*(*RIXMLDOMEntityReference;;**US;;)I;"
  }
  field {
    name: "get_text"
    type: "*(*RIXMLDOMEntityReference;;**US;;)I;"
  }
  field {
    name: "put_text"
    type: "*(*RIXMLDOMEntityReference;;*US;)I;"
  }
  field {
    name: "get_specified"
    type: "*(*RIXMLDOMEntityReference;;*S;)I;"
  }
  field {
    name: "get_definition"
    type: "*(*RIXMLDOMEntityReference;;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "get_nodeTypedValue"
    type: "*(*RIXMLDOMEntityReference;;*RtagVARIANT;;)I;"
  }
  field {
    name: "put_nodeTypedValue"
    type: "*(*RIXMLDOMEntityReference;;RtagVARIANT;)I;"
  }
  field {
    name: "get_dataType"
    type: "*(*RIXMLDOMEntityReference;;*RtagVARIANT;;)I;"
  }
  field {
    name: "put_dataType"
    type: "*(*RIXMLDOMEntityReference;;*US;)I;"
  }
  field {
    name: "get_xml"
    type: "*(*RIXMLDOMEntityReference;;**US;;)I;"
  }
  field {
    name: "transformNode"
    type: "*(*RIXMLDOMEntityReference;;*RIXMLDOMNode;;**US;;)I;"
  }
  field {
    name: "selectNodes"
    type: "*(*RIXMLDOMEntityReference;;*US;**RIXMLDOMNodeList;;;)I;"
  }
  field {
    name: "selectSingleNode"
    type: "*(*RIXMLDOMEntityReference;;*US;**RIXMLDOMNode;;;)I;"
  }
  field {
    name: "get_parsed"
    type: "*(*RIXMLDOMEntityReference;;*S;)I;"
  }
  field {
    name: "get_namespaceURI"
    type: "*(*RIXMLDOMEntityReference;;**US;;)I;"
  }
  field {
    name: "get_prefix"
    type: "*(*RIXMLDOMEntityReference;;**US;;)I;"
  }
  field {
    name: "get_baseName"
    type: "*(*RIXMLDOMEntityReference;;**US;;)I;"
  }
  field {
    name: "transformNodeToObject"
    type: "*(*RIXMLDOMEntityReference;;*RIXMLDOMNode;;RtagVARIANT;)I;"
  }
}
struct {
  name: "IXMLDOMEntityReference"
  field {
    name: "lpVtbl"
    type: "*RIXMLDOMEntityReferenceVtbl;;"
  }
}
struct {
  name: "IXMLDOMImplementationVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIXMLDOMImplementation;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIXMLDOMImplementation;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIXMLDOMImplementation;;)UI;"
  }
  field {
    name: "GetTypeInfoCount"
    type: "*(*RIXMLDOMImplementation;;*UI;)I;"
  }
  field {
    name: "GetTypeInfo"
    type: "*(*RIXMLDOMImplementation;;UIUI**RITypeInfo;;;)I;"
  }
  field {
    name: "GetIDsOfNames"
    type: "*(*RIXMLDOMImplementation;;*cR_GUID;;**US;;UIUI*I;)I;"
  }
  field {
    name: "Invoke"
    type: "*(*RIXMLDOMImplementation;;I*cR_GUID;;UIUS*RtagDISPPARAMS;;*RtagVARIANT;;*RtagEXCEPINFO;;*UI;)I;"
  }
  field {
    name: "hasFeature"
    type: "*(*RIXMLDOMImplementation;;*US;*US;*S;)I;"
  }
}
struct {
  name: "IXMLDOMImplementation"
  field {
    name: "lpVtbl"
    type: "*RIXMLDOMImplementationVtbl;;"
  }
}
struct {
  name: "IXMLDOMParseErrorVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIXMLDOMParseError;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIXMLDOMParseError;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIXMLDOMParseError;;)UI;"
  }
  field {
    name: "GetTypeInfoCount"
    type: "*(*RIXMLDOMParseError;;*UI;)I;"
  }
  field {
    name: "GetTypeInfo"
    type: "*(*RIXMLDOMParseError;;UIUI**RITypeInfo;;;)I;"
  }
  field {
    name: "GetIDsOfNames"
    type: "*(*RIXMLDOMParseError;;*cR_GUID;;**US;;UIUI*I;)I;"
  }
  field {
    name: "Invoke"
    type: "*(*RIXMLDOMParseError;;I*cR_GUID;;UIUS*RtagDISPPARAMS;;*RtagVARIANT;;*RtagEXCEPINFO;;*UI;)I;"
  }
  field {
    name: "get_errorCode"
    type: "*(*RIXMLDOMParseError;;*I;)I;"
  }
  field {
    name: "get_url"
    type: "*(*RIXMLDOMParseError;;**US;;)I;"
  }
  field {
    name: "get_reason"
    type: "*(*RIXMLDOMParseError;;**US;;)I;"
  }
  field {
    name: "get_srcText"
    type: "*(*RIXMLDOMParseError;;**US;;)I;"
  }
  field {
    name: "get_line"
    type: "*(*RIXMLDOMParseError;;*I;)I;"
  }
  field {
    name: "get_linepos"
    type: "*(*RIXMLDOMParseError;;*I;)I;"
  }
  field {
    name: "get_filepos"
    type: "*(*RIXMLDOMParseError;;*I;)I;"
  }
}
struct {
  name: "IXMLDOMParseError"
  field {
    name: "lpVtbl"
    type: "*RIXMLDOMParseErrorVtbl;;"
  }
}
struct {
  name: "XMLDOMDocumentEventsVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RXMLDOMDocumentEvents;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RXMLDOMDocumentEvents;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RXMLDOMDocumentEvents;;)UI;"
  }
  field {
    name: "GetTypeInfoCount"
    type: "*(*RXMLDOMDocumentEvents;;*UI;)I;"
  }
  field {
    name: "GetTypeInfo"
    type: "*(*RXMLDOMDocumentEvents;;UIUI**RITypeInfo;;;)I;"
  }
  field {
    name: "GetIDsOfNames"
    type: "*(*RXMLDOMDocumentEvents;;*cR_GUID;;**US;;UIUI*I;)I;"
  }
  field {
    name: "Invoke"
    type: "*(*RXMLDOMDocumentEvents;;I*cR_GUID;;UIUS*RtagDISPPARAMS;;*RtagVARIANT;;*RtagEXCEPINFO;;*UI;)I;"
  }
}
struct {
  name: "XMLDOMDocumentEvents"
  field {
    name: "lpVtbl"
    type: "*RXMLDOMDocumentEventsVtbl;;"
  }
}
struct {
  name: "IXMLHttpRequestVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIXMLHttpRequest;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIXMLHttpRequest;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIXMLHttpRequest;;)UI;"
  }
  field {
    name: "GetTypeInfoCount"
    type: "*(*RIXMLHttpRequest;;*UI;)I;"
  }
  field {
    name: "GetTypeInfo"
    type: "*(*RIXMLHttpRequest;;UIUI**RITypeInfo;;;)I;"
  }
  field {
    name: "GetIDsOfNames"
    type: "*(*RIXMLHttpRequest;;*cR_GUID;;**US;;UIUI*I;)I;"
  }
  field {
    name: "Invoke"
    type: "*(*RIXMLHttpRequest;;I*cR_GUID;;UIUS*RtagDISPPARAMS;;*RtagVARIANT;;*RtagEXCEPINFO;;*UI;)I;"
  }
  field {
    name: "open"
    type: "*(*RIXMLHttpRequest;;*US;*US;RtagVARIANT;RtagVARIANT;RtagVARIANT;)I;"
  }
  field {
    name: "setRequestHeader"
    type: "*(*RIXMLHttpRequest;;*US;*US;)I;"
  }
  field {
    name: "getResponseHeader"
    type: "*(*RIXMLHttpRequest;;*US;**US;;)I;"
  }
  field {
    name: "getAllResponseHeaders"
    type: "*(*RIXMLHttpRequest;;**US;;)I;"
  }
  field {
    name: "send"
    type: "*(*RIXMLHttpRequest;;RtagVARIANT;)I;"
  }
  field {
    name: "abort"
    type: "*(*RIXMLHttpRequest;;)I;"
  }
  field {
    name: "get_status"
    type: "*(*RIXMLHttpRequest;;*I;)I;"
  }
  field {
    name: "get_statusText"
    type: "*(*RIXMLHttpRequest;;**US;;)I;"
  }
  field {
    name: "get_responseXML"
    type: "*(*RIXMLHttpRequest;;**RIDispatch;;;)I;"
  }
  field {
    name: "get_responseText"
    type: "*(*RIXMLHttpRequest;;**US;;)I;"
  }
  field {
    name: "get_responseBody"
    type: "*(*RIXMLHttpRequest;;*RtagVARIANT;;)I;"
  }
  field {
    name: "get_responseStream"
    type: "*(*RIXMLHttpRequest;;*RtagVARIANT;;)I;"
  }
  field {
    name: "get_readyState"
    type: "*(*RIXMLHttpRequest;;*I;)I;"
  }
  field {
    name: "put_onreadystatechange"
    type: "*(*RIXMLHttpRequest;;*RIDispatch;;)I;"
  }
}
struct {
  name: "IXMLHttpRequest"
  field {
    name: "lpVtbl"
    type: "*RIXMLHttpRequestVtbl;;"
  }
}
struct {
  name: "IXMLDSOControlVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIXMLDSOControl;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIXMLDSOControl;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIXMLDSOControl;;)UI;"
  }
  field {
    name: "GetTypeInfoCount"
    type: "*(*RIXMLDSOControl;;*UI;)I;"
  }
  field {
    name: "GetTypeInfo"
    type: "*(*RIXMLDSOControl;;UIUI**RITypeInfo;;;)I;"
  }
  field {
    name: "GetIDsOfNames"
    type: "*(*RIXMLDSOControl;;*cR_GUID;;**US;;UIUI*I;)I;"
  }
  field {
    name: "Invoke"
    type: "*(*RIXMLDSOControl;;I*cR_GUID;;UIUS*RtagDISPPARAMS;;*RtagVARIANT;;*RtagEXCEPINFO;;*UI;)I;"
  }
  field {
    name: "get_XMLDocument"
    type: "*(*RIXMLDSOControl;;**RIXMLDOMDocument;;;)I;"
  }
  field {
    name: "put_XMLDocument"
    type: "*(*RIXMLDSOControl;;*RIXMLDOMDocument;;)I;"
  }
  field {
    name: "get_JavaDSOCompatible"
    type: "*(*RIXMLDSOControl;;*I;)I;"
  }
  field {
    name: "put_JavaDSOCompatible"
    type: "*(*RIXMLDSOControl;;I)I;"
  }
  field {
    name: "get_readyState"
    type: "*(*RIXMLDSOControl;;*I;)I;"
  }
}
struct {
  name: "IXMLDSOControl"
  field {
    name: "lpVtbl"
    type: "*RIXMLDSOControlVtbl;;"
  }
}
struct {
  name: "IXMLElementCollectionVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIXMLElementCollection;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIXMLElementCollection;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIXMLElementCollection;;)UI;"
  }
  field {
    name: "GetTypeInfoCount"
    type: "*(*RIXMLElementCollection;;*UI;)I;"
  }
  field {
    name: "GetTypeInfo"
    type: "*(*RIXMLElementCollection;;UIUI**RITypeInfo;;;)I;"
  }
  field {
    name: "GetIDsOfNames"
    type: "*(*RIXMLElementCollection;;*cR_GUID;;**US;;UIUI*I;)I;"
  }
  field {
    name: "Invoke"
    type: "*(*RIXMLElementCollection;;I*cR_GUID;;UIUS*RtagDISPPARAMS;;*RtagVARIANT;;*RtagEXCEPINFO;;*UI;)I;"
  }
  field {
    name: "put_length"
    type: "*(*RIXMLElementCollection;;I)I;"
  }
  field {
    name: "get_length"
    type: "*(*RIXMLElementCollection;;*I;)I;"
  }
  field {
    name: "get__newEnum"
    type: "*(*RIXMLElementCollection;;**RIUnknown;;;)I;"
  }
  field {
    name: "item"
    type: "*(*RIXMLElementCollection;;RtagVARIANT;RtagVARIANT;**RIDispatch;;;)I;"
  }
}
struct {
  name: "IXMLElementCollection"
  field {
    name: "lpVtbl"
    type: "*RIXMLElementCollectionVtbl;;"
  }
}
struct {
  name: "IXMLElementVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIXMLElement;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIXMLElement;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIXMLElement;;)UI;"
  }
  field {
    name: "GetTypeInfoCount"
    type: "*(*RIXMLElement;;*UI;)I;"
  }
  field {
    name: "GetTypeInfo"
    type: "*(*RIXMLElement;;UIUI**RITypeInfo;;;)I;"
  }
  field {
    name: "GetIDsOfNames"
    type: "*(*RIXMLElement;;*cR_GUID;;**US;;UIUI*I;)I;"
  }
  field {
    name: "Invoke"
    type: "*(*RIXMLElement;;I*cR_GUID;;UIUS*RtagDISPPARAMS;;*RtagVARIANT;;*RtagEXCEPINFO;;*UI;)I;"
  }
  field {
    name: "get_tagName"
    type: "*(*RIXMLElement;;**US;;)I;"
  }
  field {
    name: "put_tagName"
    type: "*(*RIXMLElement;;*US;)I;"
  }
  field {
    name: "get_parent"
    type: "*(*RIXMLElement;;**RIXMLElement;;;)I;"
  }
  field {
    name: "setAttribute"
    type: "*(*RIXMLElement;;*US;RtagVARIANT;)I;"
  }
  field {
    name: "getAttribute"
    type: "*(*RIXMLElement;;*US;*RtagVARIANT;;)I;"
  }
  field {
    name: "removeAttribute"
    type: "*(*RIXMLElement;;*US;)I;"
  }
  field {
    name: "get_children"
    type: "*(*RIXMLElement;;**RIXMLElementCollection;;;)I;"
  }
  field {
    name: "get_type"
    type: "*(*RIXMLElement;;*I;)I;"
  }
  field {
    name: "get_text"
    type: "*(*RIXMLElement;;**US;;)I;"
  }
  field {
    name: "put_text"
    type: "*(*RIXMLElement;;*US;)I;"
  }
  field {
    name: "addChild"
    type: "*(*RIXMLElement;;*RIXMLElement;;II)I;"
  }
  field {
    name: "removeChild"
    type: "*(*RIXMLElement;;*RIXMLElement;;)I;"
  }
}
struct {
  name: "IXMLElement"
  field {
    name: "lpVtbl"
    type: "*RIXMLElementVtbl;;"
  }
}
struct {
  name: "IXMLDocumentVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIXMLDocument;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIXMLDocument;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIXMLDocument;;)UI;"
  }
  field {
    name: "GetTypeInfoCount"
    type: "*(*RIXMLDocument;;*UI;)I;"
  }
  field {
    name: "GetTypeInfo"
    type: "*(*RIXMLDocument;;UIUI**RITypeInfo;;;)I;"
  }
  field {
    name: "GetIDsOfNames"
    type: "*(*RIXMLDocument;;*cR_GUID;;**US;;UIUI*I;)I;"
  }
  field {
    name: "Invoke"
    type: "*(*RIXMLDocument;;I*cR_GUID;;UIUS*RtagDISPPARAMS;;*RtagVARIANT;;*RtagEXCEPINFO;;*UI;)I;"
  }
  field {
    name: "get_root"
    type: "*(*RIXMLDocument;;**RIXMLElement;;;)I;"
  }
  field {
    name: "get_fileSize"
    type: "*(*RIXMLDocument;;**US;;)I;"
  }
  field {
    name: "get_fileModifiedDate"
    type: "*(*RIXMLDocument;;**US;;)I;"
  }
  field {
    name: "get_fileUpdatedDate"
    type: "*(*RIXMLDocument;;**US;;)I;"
  }
  field {
    name: "get_URL"
    type: "*(*RIXMLDocument;;**US;;)I;"
  }
  field {
    name: "put_URL"
    type: "*(*RIXMLDocument;;*US;)I;"
  }
  field {
    name: "get_mimeType"
    type: "*(*RIXMLDocument;;**US;;)I;"
  }
  field {
    name: "get_readyState"
    type: "*(*RIXMLDocument;;*I;)I;"
  }
  field {
    name: "get_charset"
    type: "*(*RIXMLDocument;;**US;;)I;"
  }
  field {
    name: "put_charset"
    type: "*(*RIXMLDocument;;*US;)I;"
  }
  field {
    name: "get_version"
    type: "*(*RIXMLDocument;;**US;;)I;"
  }
  field {
    name: "get_doctype"
    type: "*(*RIXMLDocument;;**US;;)I;"
  }
  field {
    name: "get_dtdURl"
    type: "*(*RIXMLDocument;;**US;;)I;"
  }
  field {
    name: "createElement"
    type: "*(*RIXMLDocument;;RtagVARIANT;RtagVARIANT;**RIXMLElement;;;)I;"
  }
}
struct {
  name: "IXMLDocument"
  field {
    name: "lpVtbl"
    type: "*RIXMLDocumentVtbl;;"
  }
}
struct {
  name: "IXMLElement2Vtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIXMLElement2;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIXMLElement2;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIXMLElement2;;)UI;"
  }
  field {
    name: "GetTypeInfoCount"
    type: "*(*RIXMLElement2;;*UI;)I;"
  }
  field {
    name: "GetTypeInfo"
    type: "*(*RIXMLElement2;;UIUI**RITypeInfo;;;)I;"
  }
  field {
    name: "GetIDsOfNames"
    type: "*(*RIXMLElement2;;*cR_GUID;;**US;;UIUI*I;)I;"
  }
  field {
    name: "Invoke"
    type: "*(*RIXMLElement2;;I*cR_GUID;;UIUS*RtagDISPPARAMS;;*RtagVARIANT;;*RtagEXCEPINFO;;*UI;)I;"
  }
  field {
    name: "get_tagName"
    type: "*(*RIXMLElement2;;**US;;)I;"
  }
  field {
    name: "put_tagName"
    type: "*(*RIXMLElement2;;*US;)I;"
  }
  field {
    name: "get_parent"
    type: "*(*RIXMLElement2;;**RIXMLElement2;;;)I;"
  }
  field {
    name: "setAttribute"
    type: "*(*RIXMLElement2;;*US;RtagVARIANT;)I;"
  }
  field {
    name: "getAttribute"
    type: "*(*RIXMLElement2;;*US;*RtagVARIANT;;)I;"
  }
  field {
    name: "removeAttribute"
    type: "*(*RIXMLElement2;;*US;)I;"
  }
  field {
    name: "get_children"
    type: "*(*RIXMLElement2;;**RIXMLElementCollection;;;)I;"
  }
  field {
    name: "get_type"
    type: "*(*RIXMLElement2;;*I;)I;"
  }
  field {
    name: "get_text"
    type: "*(*RIXMLElement2;;**US;;)I;"
  }
  field {
    name: "put_text"
    type: "*(*RIXMLElement2;;*US;)I;"
  }
  field {
    name: "addChild"
    type: "*(*RIXMLElement2;;*RIXMLElement2;;II)I;"
  }
  field {
    name: "removeChild"
    type: "*(*RIXMLElement2;;*RIXMLElement2;;)I;"
  }
  field {
    name: "get_attributes"
    type: "*(*RIXMLElement2;;**RIXMLElementCollection;;;)I;"
  }
}
struct {
  name: "IXMLElement2"
  field {
    name: "lpVtbl"
    type: "*RIXMLElement2Vtbl;;"
  }
}
struct {
  name: "IXMLDocument2Vtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIXMLDocument2;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIXMLDocument2;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIXMLDocument2;;)UI;"
  }
  field {
    name: "GetTypeInfoCount"
    type: "*(*RIXMLDocument2;;*UI;)I;"
  }
  field {
    name: "GetTypeInfo"
    type: "*(*RIXMLDocument2;;UIUI**RITypeInfo;;;)I;"
  }
  field {
    name: "GetIDsOfNames"
    type: "*(*RIXMLDocument2;;*cR_GUID;;**US;;UIUI*I;)I;"
  }
  field {
    name: "Invoke"
    type: "*(*RIXMLDocument2;;I*cR_GUID;;UIUS*RtagDISPPARAMS;;*RtagVARIANT;;*RtagEXCEPINFO;;*UI;)I;"
  }
  field {
    name: "get_root"
    type: "*(*RIXMLDocument2;;**RIXMLElement2;;;)I;"
  }
  field {
    name: "get_fileSize"
    type: "*(*RIXMLDocument2;;**US;;)I;"
  }
  field {
    name: "get_fileModifiedDate"
    type: "*(*RIXMLDocument2;;**US;;)I;"
  }
  field {
    name: "get_fileUpdatedDate"
    type: "*(*RIXMLDocument2;;**US;;)I;"
  }
  field {
    name: "get_URL"
    type: "*(*RIXMLDocument2;;**US;;)I;"
  }
  field {
    name: "put_URL"
    type: "*(*RIXMLDocument2;;*US;)I;"
  }
  field {
    name: "get_mimeType"
    type: "*(*RIXMLDocument2;;**US;;)I;"
  }
  field {
    name: "get_readyState"
    type: "*(*RIXMLDocument2;;*I;)I;"
  }
  field {
    name: "get_charset"
    type: "*(*RIXMLDocument2;;**US;;)I;"
  }
  field {
    name: "put_charset"
    type: "*(*RIXMLDocument2;;*US;)I;"
  }
  field {
    name: "get_version"
    type: "*(*RIXMLDocument2;;**US;;)I;"
  }
  field {
    name: "get_doctype"
    type: "*(*RIXMLDocument2;;**US;;)I;"
  }
  field {
    name: "get_dtdURL"
    type: "*(*RIXMLDocument2;;**US;;)I;"
  }
  field {
    name: "createElement"
    type: "*(*RIXMLDocument2;;RtagVARIANT;RtagVARIANT;**RIXMLElement2;;;)I;"
  }
  field {
    name: "get_async"
    type: "*(*RIXMLDocument2;;*S;)I;"
  }
  field {
    name: "put_async"
    type: "*(*RIXMLDocument2;;S)I;"
  }
}
struct {
  name: "IXMLDocument2"
  field {
    name: "lpVtbl"
    type: "*RIXMLDocument2Vtbl;;"
  }
}
struct {
  name: "_xml_error"
  field {
    name: "_nLine"
    type: "UI"
  }
  field {
    name: "_pchBuf"
    type: "*US;"
  }
  field {
    name: "_cchBuf"
    type: "*US;"
  }
  field {
    name: "_ich"
    type: "UI"
  }
  field {
    name: "_pszFound"
    type: "*US;"
  }
  field {
    name: "_pszExpected"
    type: "*US;"
  }
  field {
    name: "_reserved1"
    type: "UI"
  }
  field {
    name: "_reserved2"
    type: "UI"
  }
}
struct {
  name: "IXMLAttributeVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIXMLAttribute;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIXMLAttribute;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIXMLAttribute;;)UI;"
  }
  field {
    name: "GetTypeInfoCount"
    type: "*(*RIXMLAttribute;;*UI;)I;"
  }
  field {
    name: "GetTypeInfo"
    type: "*(*RIXMLAttribute;;UIUI**RITypeInfo;;;)I;"
  }
  field {
    name: "GetIDsOfNames"
    type: "*(*RIXMLAttribute;;*cR_GUID;;**US;;UIUI*I;)I;"
  }
  field {
    name: "Invoke"
    type: "*(*RIXMLAttribute;;I*cR_GUID;;UIUS*RtagDISPPARAMS;;*RtagVARIANT;;*RtagEXCEPINFO;;*UI;)I;"
  }
  field {
    name: "get_name"
    type: "*(*RIXMLAttribute;;**US;;)I;"
  }
  field {
    name: "get_value"
    type: "*(*RIXMLAttribute;;**US;;)I;"
  }
}
struct {
  name: "IXMLAttribute"
  field {
    name: "lpVtbl"
    type: "*RIXMLAttributeVtbl;;"
  }
}
struct {
  name: "IXMLErrorVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIXMLError;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIXMLError;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIXMLError;;)UI;"
  }
  field {
    name: "GetErrorInfo"
    type: "*(*RIXMLError;;*R_xml_error;;)I;"
  }
}
struct {
  name: "IXMLError"
  field {
    name: "lpVtbl"
    type: "*RIXMLErrorVtbl;;"
  }
}
struct {
  name: "IXMLElementNotificationSinkVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIXMLElementNotificationSink;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIXMLElementNotificationSink;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIXMLElementNotificationSink;;)UI;"
  }
  field {
    name: "GetTypeInfoCount"
    type: "*(*RIXMLElementNotificationSink;;*UI;)I;"
  }
  field {
    name: "GetTypeInfo"
    type: "*(*RIXMLElementNotificationSink;;UIUI**RITypeInfo;;;)I;"
  }
  field {
    name: "GetIDsOfNames"
    type: "*(*RIXMLElementNotificationSink;;*cR_GUID;;**US;;UIUI*I;)I;"
  }
  field {
    name: "Invoke"
    type: "*(*RIXMLElementNotificationSink;;I*cR_GUID;;UIUS*RtagDISPPARAMS;;*RtagVARIANT;;*RtagEXCEPINFO;;*UI;)I;"
  }
  field {
    name: "ChildAdded"
    type: "*(*RIXMLElementNotificationSink;;*RIDispatch;;)I;"
  }
}
struct {
  name: "IXMLElementNotificationSink"
  field {
    name: "lpVtbl"
    type: "*RIXMLElementNotificationSinkVtbl;;"
  }
}
struct {
  name: "IInternetVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIInternet;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIInternet;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIInternet;;)UI;"
  }
}
struct {
  name: "IInternet"
  field {
    name: "lpVtbl"
    type: "*RIInternetVtbl;;"
  }
}
struct {
  name: "IBindingVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIBinding;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIBinding;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIBinding;;)UI;"
  }
  field {
    name: "Abort"
    type: "*(*RIBinding;;)I;"
  }
  field {
    name: "Suspend"
    type: "*(*RIBinding;;)I;"
  }
  field {
    name: "Resume"
    type: "*(*RIBinding;;)I;"
  }
  field {
    name: "SetPriority"
    type: "*(*RIBinding;;I)I;"
  }
  field {
    name: "GetPriority"
    type: "*(*RIBinding;;*I;)I;"
  }
  field {
    name: "GetBindResult"
    type: "*(*RIBinding;;*R_GUID;;*UI;**US;;*UI;)I;"
  }
}
struct {
  name: "IBinding"
  field {
    name: "lpVtbl"
    type: "*RIBindingVtbl;;"
  }
}
struct {
  name: "_tagBINDINFO"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "szExtraInfo"
    type: "*US;"
  }
  field {
    name: "stgmedData"
    type: "RtagSTGMEDIUM;"
  }
  field {
    name: "grfBindInfoF"
    type: "UI"
  }
  field {
    name: "dwBindVerb"
    type: "UI"
  }
  field {
    name: "szCustomVerb"
    type: "*US;"
  }
  field {
    name: "cbstgmedData"
    type: "UI"
  }
  field {
    name: "dwOptions"
    type: "UI"
  }
  field {
    name: "dwOptionsFlags"
    type: "UI"
  }
  field {
    name: "dwCodePage"
    type: "UI"
  }
  field {
    name: "securityAttributes"
    type: "R_SECURITY_ATTRIBUTES;"
  }
  field {
    name: "iid"
    type: "R_GUID;"
  }
  field {
    name: "pUnk"
    type: "*RIUnknown;;"
  }
  field {
    name: "dwReserved"
    type: "UI"
  }
}
struct {
  name: "_REMSECURITY_ATTRIBUTES"
  field {
    name: "nLength"
    type: "UI"
  }
  field {
    name: "lpSecurityDescriptor"
    type: "UI"
  }
  field {
    name: "bInheritHandle"
    type: "I"
  }
}
struct {
  name: "_tagRemBINDINFO"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "szExtraInfo"
    type: "*US;"
  }
  field {
    name: "grfBindInfoF"
    type: "UI"
  }
  field {
    name: "dwBindVerb"
    type: "UI"
  }
  field {
    name: "szCustomVerb"
    type: "*US;"
  }
  field {
    name: "cbstgmedData"
    type: "UI"
  }
  field {
    name: "dwOptions"
    type: "UI"
  }
  field {
    name: "dwOptionsFlags"
    type: "UI"
  }
  field {
    name: "dwCodePage"
    type: "UI"
  }
  field {
    name: "securityAttributes"
    type: "R_REMSECURITY_ATTRIBUTES;"
  }
  field {
    name: "iid"
    type: "R_GUID;"
  }
  field {
    name: "pUnk"
    type: "*RIUnknown;;"
  }
  field {
    name: "dwReserved"
    type: "UI"
  }
}
struct {
  name: "tagRemFORMATETC"
  field {
    name: "cfFormat"
    type: "UI"
  }
  field {
    name: "ptd"
    type: "UI"
  }
  field {
    name: "dwAspect"
    type: "UI"
  }
  field {
    name: "lindex"
    type: "I"
  }
  field {
    name: "tymed"
    type: "UI"
  }
}
struct {
  name: "IBindStatusCallbackVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIBindStatusCallback;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIBindStatusCallback;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIBindStatusCallback;;)UI;"
  }
  field {
    name: "OnStartBinding"
    type: "*(*RIBindStatusCallback;;UI*RIBinding;;)I;"
  }
  field {
    name: "GetPriority"
    type: "*(*RIBindStatusCallback;;*I;)I;"
  }
  field {
    name: "OnLowResource"
    type: "*(*RIBindStatusCallback;;UI)I;"
  }
  field {
    name: "OnProgress"
    type: "*(*RIBindStatusCallback;;UIUIUI*cUS;)I;"
  }
  field {
    name: "OnStopBinding"
    type: "*(*RIBindStatusCallback;;I*cUS;)I;"
  }
  field {
    name: "GetBindInfo"
    type: "*(*RIBindStatusCallback;;*UI;*R_tagBINDINFO;;)I;"
  }
  field {
    name: "OnDataAvailable"
    type: "*(*RIBindStatusCallback;;UIUI*RtagFORMATETC;;*RtagSTGMEDIUM;;)I;"
  }
  field {
    name: "OnObjectAvailable"
    type: "*(*RIBindStatusCallback;;*cR_GUID;;*RIUnknown;;)I;"
  }
}
struct {
  name: "IBindStatusCallback"
  field {
    name: "lpVtbl"
    type: "*RIBindStatusCallbackVtbl;;"
  }
}
struct {
  name: "IBindStatusCallbackExVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIBindStatusCallbackEx;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIBindStatusCallbackEx;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIBindStatusCallbackEx;;)UI;"
  }
  field {
    name: "OnStartBinding"
    type: "*(*RIBindStatusCallbackEx;;UI*RIBinding;;)I;"
  }
  field {
    name: "GetPriority"
    type: "*(*RIBindStatusCallbackEx;;*I;)I;"
  }
  field {
    name: "OnLowResource"
    type: "*(*RIBindStatusCallbackEx;;UI)I;"
  }
  field {
    name: "OnProgress"
    type: "*(*RIBindStatusCallbackEx;;UIUIUI*cUS;)I;"
  }
  field {
    name: "OnStopBinding"
    type: "*(*RIBindStatusCallbackEx;;I*cUS;)I;"
  }
  field {
    name: "GetBindInfo"
    type: "*(*RIBindStatusCallbackEx;;*UI;*R_tagBINDINFO;;)I;"
  }
  field {
    name: "OnDataAvailable"
    type: "*(*RIBindStatusCallbackEx;;UIUI*RtagFORMATETC;;*RtagSTGMEDIUM;;)I;"
  }
  field {
    name: "OnObjectAvailable"
    type: "*(*RIBindStatusCallbackEx;;*cR_GUID;;*RIUnknown;;)I;"
  }
  field {
    name: "GetBindInfoEx"
    type: "*(*RIBindStatusCallbackEx;;*UI;*R_tagBINDINFO;;*UI;*UI;)I;"
  }
}
struct {
  name: "IBindStatusCallbackEx"
  field {
    name: "lpVtbl"
    type: "*RIBindStatusCallbackExVtbl;;"
  }
}
struct {
  name: "IAuthenticateVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIAuthenticate;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIAuthenticate;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIAuthenticate;;)UI;"
  }
  field {
    name: "Authenticate"
    type: "*(*RIAuthenticate;;**RHWND__;;;**US;;**US;;)I;"
  }
}
struct {
  name: "IAuthenticate"
  field {
    name: "lpVtbl"
    type: "*RIAuthenticateVtbl;;"
  }
}
struct {
  name: "IHttpNegotiateVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIHttpNegotiate;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIHttpNegotiate;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIHttpNegotiate;;)UI;"
  }
  field {
    name: "BeginningTransaction"
    type: "*(*RIHttpNegotiate;;*cUS;*cUS;UI**US;;)I;"
  }
  field {
    name: "OnResponse"
    type: "*(*RIHttpNegotiate;;UI*cUS;*cUS;**US;;)I;"
  }
}
struct {
  name: "IHttpNegotiate"
  field {
    name: "lpVtbl"
    type: "*RIHttpNegotiateVtbl;;"
  }
}
struct {
  name: "IHttpNegotiate2Vtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIHttpNegotiate2;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIHttpNegotiate2;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIHttpNegotiate2;;)UI;"
  }
  field {
    name: "BeginningTransaction"
    type: "*(*RIHttpNegotiate2;;*cUS;*cUS;UI**US;;)I;"
  }
  field {
    name: "OnResponse"
    type: "*(*RIHttpNegotiate2;;UI*cUS;*cUS;**US;;)I;"
  }
  field {
    name: "GetRootSecurityId"
    type: "*(*RIHttpNegotiate2;;*UB;*UI;UI)I;"
  }
}
struct {
  name: "IHttpNegotiate2"
  field {
    name: "lpVtbl"
    type: "*RIHttpNegotiate2Vtbl;;"
  }
}
struct {
  name: "IBindHostVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIBindHost;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIBindHost;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIBindHost;;)UI;"
  }
  field {
    name: "CreateMoniker"
    type: "*(*RIBindHost;;*US;*RIBindCtx;;**RIMoniker;;;UI)I;"
  }
  field {
    name: "MonikerBindToStorage"
    type: "*(*RIBindHost;;*RIMoniker;;*RIBindCtx;;*RIBindStatusCallback;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "MonikerBindToObject"
    type: "*(*RIBindHost;;*RIMoniker;;*RIBindCtx;;*RIBindStatusCallback;;*cR_GUID;;**V;;)I;"
  }
}
struct {
  name: "IBindHost"
  field {
    name: "lpVtbl"
    type: "*RIBindHostVtbl;;"
  }
}
struct {
  name: "IWinInetInfoVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIWinInetInfo;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIWinInetInfo;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIWinInetInfo;;)UI;"
  }
  field {
    name: "QueryOption"
    type: "*(*RIWinInetInfo;;UI*V;*UI;)I;"
  }
}
struct {
  name: "IWinInetInfo"
  field {
    name: "lpVtbl"
    type: "*RIWinInetInfoVtbl;;"
  }
}
struct {
  name: "IWinInetHttpInfoVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIWinInetHttpInfo;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIWinInetHttpInfo;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIWinInetHttpInfo;;)UI;"
  }
  field {
    name: "QueryOption"
    type: "*(*RIWinInetHttpInfo;;UI*V;*UI;)I;"
  }
  field {
    name: "QueryInfo"
    type: "*(*RIWinInetHttpInfo;;UI*V;*UI;*UI;*UI;)I;"
  }
}
struct {
  name: "IWinInetHttpInfo"
  field {
    name: "lpVtbl"
    type: "*RIWinInetHttpInfoVtbl;;"
  }
}
struct {
  name: "IWindowForBindingUIVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIWindowForBindingUI;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIWindowForBindingUI;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIWindowForBindingUI;;)UI;"
  }
  field {
    name: "GetWindow"
    type: "*(*RIWindowForBindingUI;;*cR_GUID;;**RHWND__;;;)I;"
  }
}
struct {
  name: "IWindowForBindingUI"
  field {
    name: "lpVtbl"
    type: "*RIWindowForBindingUIVtbl;;"
  }
}
struct {
  name: "ICodeInstallVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RICodeInstall;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RICodeInstall;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RICodeInstall;;)UI;"
  }
  field {
    name: "GetWindow"
    type: "*(*RICodeInstall;;*cR_GUID;;**RHWND__;;;)I;"
  }
  field {
    name: "OnCodeInstallProblem"
    type: "*(*RICodeInstall;;UI*cUS;*cUS;UI)I;"
  }
}
struct {
  name: "ICodeInstall"
  field {
    name: "lpVtbl"
    type: "*RICodeInstallVtbl;;"
  }
}
struct {
  name: "IHttpSecurityVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIHttpSecurity;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIHttpSecurity;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIHttpSecurity;;)UI;"
  }
  field {
    name: "GetWindow"
    type: "*(*RIHttpSecurity;;*cR_GUID;;**RHWND__;;;)I;"
  }
  field {
    name: "OnSecurityProblem"
    type: "*(*RIHttpSecurity;;UI)I;"
  }
}
struct {
  name: "IHttpSecurity"
  field {
    name: "lpVtbl"
    type: "*RIHttpSecurityVtbl;;"
  }
}
struct {
  name: "IPersistMonikerVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIPersistMoniker;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIPersistMoniker;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIPersistMoniker;;)UI;"
  }
  field {
    name: "GetClassID"
    type: "*(*RIPersistMoniker;;*R_GUID;;)I;"
  }
  field {
    name: "IsDirty"
    type: "*(*RIPersistMoniker;;)I;"
  }
  field {
    name: "Load"
    type: "*(*RIPersistMoniker;;I*RIMoniker;;*RIBindCtx;;UI)I;"
  }
  field {
    name: "Save"
    type: "*(*RIPersistMoniker;;*RIMoniker;;*RIBindCtx;;I)I;"
  }
  field {
    name: "SaveCompleted"
    type: "*(*RIPersistMoniker;;*RIMoniker;;*RIBindCtx;;)I;"
  }
  field {
    name: "GetCurMoniker"
    type: "*(*RIPersistMoniker;;**RIMoniker;;;)I;"
  }
}
struct {
  name: "IPersistMoniker"
  field {
    name: "lpVtbl"
    type: "*RIPersistMonikerVtbl;;"
  }
}
struct {
  name: "IMonikerPropVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIMonikerProp;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIMonikerProp;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIMonikerProp;;)UI;"
  }
  field {
    name: "PutProperty"
    type: "*(*RIMonikerProp;;X(Enum.enum __WIDL_urlmon_generated_name_00000007)*cUS;)I;"
  }
}
struct {
  name: "IMonikerProp"
  field {
    name: "lpVtbl"
    type: "*RIMonikerPropVtbl;;"
  }
}
struct {
  name: "IBindProtocolVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIBindProtocol;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIBindProtocol;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIBindProtocol;;)UI;"
  }
  field {
    name: "CreateBinding"
    type: "*(*RIBindProtocol;;*cUS;*RIBindCtx;;**RIBinding;;;)I;"
  }
}
struct {
  name: "IBindProtocol"
  field {
    name: "lpVtbl"
    type: "*RIBindProtocolVtbl;;"
  }
}
struct {
  name: "IInternetBindInfoVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIInternetBindInfo;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIInternetBindInfo;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIInternetBindInfo;;)UI;"
  }
  field {
    name: "GetBindInfo"
    type: "*(*RIInternetBindInfo;;*UI;*R_tagBINDINFO;;)I;"
  }
  field {
    name: "GetBindString"
    type: "*(*RIInternetBindInfo;;UI**US;;UI*UI;)I;"
  }
}
struct {
  name: "IInternetBindInfo"
  field {
    name: "lpVtbl"
    type: "*RIInternetBindInfoVtbl;;"
  }
}
struct {
  name: "IInternetPriorityVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIInternetPriority;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIInternetPriority;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIInternetPriority;;)UI;"
  }
  field {
    name: "SetPriority"
    type: "*(*RIInternetPriority;;I)I;"
  }
  field {
    name: "GetPriority"
    type: "*(*RIInternetPriority;;*I;)I;"
  }
}
struct {
  name: "IInternetPriority"
  field {
    name: "lpVtbl"
    type: "*RIInternetPriorityVtbl;;"
  }
}
struct {
  name: "_tagPROTOCOLDATA"
  field {
    name: "grfFlags"
    type: "UI"
  }
  field {
    name: "dwState"
    type: "UI"
  }
  field {
    name: "pData"
    type: "*V;"
  }
  field {
    name: "cbData"
    type: "UI"
  }
}
struct {
  name: "IInternetProtocolRootVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIInternetProtocolRoot;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIInternetProtocolRoot;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIInternetProtocolRoot;;)UI;"
  }
  field {
    name: "Start"
    type: "*(*RIInternetProtocolRoot;;*cUS;*RIInternetProtocolSink;;*RIInternetBindInfo;;UIUI)I;"
  }
  field {
    name: "Continue"
    type: "*(*RIInternetProtocolRoot;;*R_tagPROTOCOLDATA;;)I;"
  }
  field {
    name: "Abort"
    type: "*(*RIInternetProtocolRoot;;IUI)I;"
  }
  field {
    name: "Terminate"
    type: "*(*RIInternetProtocolRoot;;UI)I;"
  }
  field {
    name: "Suspend"
    type: "*(*RIInternetProtocolRoot;;)I;"
  }
  field {
    name: "Resume"
    type: "*(*RIInternetProtocolRoot;;)I;"
  }
}
struct {
  name: "IInternetProtocolRoot"
  field {
    name: "lpVtbl"
    type: "*RIInternetProtocolRootVtbl;;"
  }
}
struct {
  name: "IInternetProtocolSinkVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIInternetProtocolSink;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIInternetProtocolSink;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIInternetProtocolSink;;)UI;"
  }
  field {
    name: "Switch"
    type: "*(*RIInternetProtocolSink;;*R_tagPROTOCOLDATA;;)I;"
  }
  field {
    name: "ReportProgress"
    type: "*(*RIInternetProtocolSink;;UI*cUS;)I;"
  }
  field {
    name: "ReportData"
    type: "*(*RIInternetProtocolSink;;UIUIUI)I;"
  }
  field {
    name: "ReportResult"
    type: "*(*RIInternetProtocolSink;;IUI*cUS;)I;"
  }
}
struct {
  name: "IInternetProtocolSink"
  field {
    name: "lpVtbl"
    type: "*RIInternetProtocolSinkVtbl;;"
  }
}
struct {
  name: "IInternetProtocolVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIInternetProtocol;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIInternetProtocol;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIInternetProtocol;;)UI;"
  }
  field {
    name: "Start"
    type: "*(*RIInternetProtocol;;*cUS;*RIInternetProtocolSink;;*RIInternetBindInfo;;UIUI)I;"
  }
  field {
    name: "Continue"
    type: "*(*RIInternetProtocol;;*R_tagPROTOCOLDATA;;)I;"
  }
  field {
    name: "Abort"
    type: "*(*RIInternetProtocol;;IUI)I;"
  }
  field {
    name: "Terminate"
    type: "*(*RIInternetProtocol;;UI)I;"
  }
  field {
    name: "Suspend"
    type: "*(*RIInternetProtocol;;)I;"
  }
  field {
    name: "Resume"
    type: "*(*RIInternetProtocol;;)I;"
  }
  field {
    name: "Read"
    type: "*(*RIInternetProtocol;;*V;UI*UI;)I;"
  }
  field {
    name: "Seek"
    type: "*(*RIInternetProtocol;;Runion _LARGE_INTEGER;UI*Runion _ULARGE_INTEGER;;)I;"
  }
  field {
    name: "LockRequest"
    type: "*(*RIInternetProtocol;;UI)I;"
  }
  field {
    name: "UnlockRequest"
    type: "*(*RIInternetProtocol;;)I;"
  }
}
struct {
  name: "IInternetProtocol"
  field {
    name: "lpVtbl"
    type: "*RIInternetProtocolVtbl;;"
  }
}
struct {
  name: "IInternetProtocolInfoVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIInternetProtocolInfo;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIInternetProtocolInfo;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIInternetProtocolInfo;;)UI;"
  }
  field {
    name: "ParseUrl"
    type: "*(*RIInternetProtocolInfo;;*cUS;X(Enum.enum _tagPARSEACTION)UI*US;UI*UI;UI)I;"
  }
  field {
    name: "CombineUrl"
    type: "*(*RIInternetProtocolInfo;;*cUS;*cUS;UI*US;UI*UI;UI)I;"
  }
  field {
    name: "CompareUrl"
    type: "*(*RIInternetProtocolInfo;;*cUS;*cUS;UI)I;"
  }
  field {
    name: "QueryInfo"
    type: "*(*RIInternetProtocolInfo;;*cUS;X(Enum.enum _tagQUERYOPTION)UI*V;UI*UI;UI)I;"
  }
}
struct {
  name: "IInternetProtocolInfo"
  field {
    name: "lpVtbl"
    type: "*RIInternetProtocolInfoVtbl;;"
  }
}
struct {
  name: "IInternetSessionVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIInternetSession;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIInternetSession;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIInternetSession;;)UI;"
  }
  field {
    name: "RegisterNameSpace"
    type: "*(*RIInternetSession;;*RIClassFactory;;*cR_GUID;;*cUS;UI*c*cUS;;UI)I;"
  }
  field {
    name: "UnregisterNameSpace"
    type: "*(*RIInternetSession;;*RIClassFactory;;*cUS;)I;"
  }
  field {
    name: "RegisterMimeFilter"
    type: "*(*RIInternetSession;;*RIClassFactory;;*cR_GUID;;*cUS;)I;"
  }
  field {
    name: "UnregisterMimeFilter"
    type: "*(*RIInternetSession;;*RIClassFactory;;*cUS;)I;"
  }
  field {
    name: "CreateBinding"
    type: "*(*RIInternetSession;;*RIBindCtx;;*cUS;*RIUnknown;;**RIUnknown;;;**RIInternetProtocol;;;UI)I;"
  }
  field {
    name: "SetSessionOption"
    type: "*(*RIInternetSession;;UI*V;UIUI)I;"
  }
}
struct {
  name: "IInternetSession"
  field {
    name: "lpVtbl"
    type: "*RIInternetSessionVtbl;;"
  }
}
struct {
  name: "IInternetSecurityMgrSiteVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIInternetSecurityMgrSite;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIInternetSecurityMgrSite;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIInternetSecurityMgrSite;;)UI;"
  }
  field {
    name: "GetWindow"
    type: "*(*RIInternetSecurityMgrSite;;**RHWND__;;;)I;"
  }
  field {
    name: "EnableModeless"
    type: "*(*RIInternetSecurityMgrSite;;I)I;"
  }
}
struct {
  name: "IInternetSecurityMgrSite"
  field {
    name: "lpVtbl"
    type: "*RIInternetSecurityMgrSiteVtbl;;"
  }
}
struct {
  name: "IInternetSecurityManagerVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIInternetSecurityManager;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIInternetSecurityManager;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIInternetSecurityManager;;)UI;"
  }
  field {
    name: "SetSecuritySite"
    type: "*(*RIInternetSecurityManager;;*RIInternetSecurityMgrSite;;)I;"
  }
  field {
    name: "GetSecuritySite"
    type: "*(*RIInternetSecurityManager;;**RIInternetSecurityMgrSite;;;)I;"
  }
  field {
    name: "MapUrlToZone"
    type: "*(*RIInternetSecurityManager;;*cUS;*UI;UI)I;"
  }
  field {
    name: "GetSecurityId"
    type: "*(*RIInternetSecurityManager;;*cUS;*UB;*UI;UI)I;"
  }
  field {
    name: "ProcessUrlAction"
    type: "*(*RIInternetSecurityManager;;*cUS;UI*UB;UI*UB;UIUIUI)I;"
  }
  field {
    name: "QueryCustomPolicy"
    type: "*(*RIInternetSecurityManager;;*cUS;*cR_GUID;;**UB;;*UI;*UB;UIUI)I;"
  }
  field {
    name: "SetZoneMapping"
    type: "*(*RIInternetSecurityManager;;UI*cUS;UI)I;"
  }
  field {
    name: "GetZoneMappings"
    type: "*(*RIInternetSecurityManager;;UI**RIEnumString;;;UI)I;"
  }
}
struct {
  name: "IInternetSecurityManager"
  field {
    name: "lpVtbl"
    type: "*RIInternetSecurityManagerVtbl;;"
  }
}
struct {
  name: "IInternetSecurityManagerExVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIInternetSecurityManagerEx;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIInternetSecurityManagerEx;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIInternetSecurityManagerEx;;)UI;"
  }
  field {
    name: "SetSecuritySite"
    type: "*(*RIInternetSecurityManagerEx;;*RIInternetSecurityMgrSite;;)I;"
  }
  field {
    name: "GetSecuritySite"
    type: "*(*RIInternetSecurityManagerEx;;**RIInternetSecurityMgrSite;;;)I;"
  }
  field {
    name: "MapUrlToZone"
    type: "*(*RIInternetSecurityManagerEx;;*cUS;*UI;UI)I;"
  }
  field {
    name: "GetSecurityId"
    type: "*(*RIInternetSecurityManagerEx;;*cUS;*UB;*UI;UI)I;"
  }
  field {
    name: "ProcessUrlAction"
    type: "*(*RIInternetSecurityManagerEx;;*cUS;UI*UB;UI*UB;UIUIUI)I;"
  }
  field {
    name: "QueryCustomPolicy"
    type: "*(*RIInternetSecurityManagerEx;;*cUS;*cR_GUID;;**UB;;*UI;*UB;UIUI)I;"
  }
  field {
    name: "SetZoneMapping"
    type: "*(*RIInternetSecurityManagerEx;;UI*cUS;UI)I;"
  }
  field {
    name: "GetZoneMappings"
    type: "*(*RIInternetSecurityManagerEx;;UI**RIEnumString;;;UI)I;"
  }
  field {
    name: "ProcessUrlActionEx"
    type: "*(*RIInternetSecurityManagerEx;;*cUS;UI*UB;UI*UB;UIUIUI*UI;)I;"
  }
}
struct {
  name: "IInternetSecurityManagerEx"
  field {
    name: "lpVtbl"
    type: "*RIInternetSecurityManagerExVtbl;;"
  }
}
struct {
  name: "IInternetSecurityManagerEx2Vtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIInternetSecurityManagerEx2;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIInternetSecurityManagerEx2;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIInternetSecurityManagerEx2;;)UI;"
  }
  field {
    name: "SetSecuritySite"
    type: "*(*RIInternetSecurityManagerEx2;;*RIInternetSecurityMgrSite;;)I;"
  }
  field {
    name: "GetSecuritySite"
    type: "*(*RIInternetSecurityManagerEx2;;**RIInternetSecurityMgrSite;;;)I;"
  }
  field {
    name: "MapUrlToZone"
    type: "*(*RIInternetSecurityManagerEx2;;*cUS;*UI;UI)I;"
  }
  field {
    name: "GetSecurityId"
    type: "*(*RIInternetSecurityManagerEx2;;*cUS;*UB;*UI;UI)I;"
  }
  field {
    name: "ProcessUrlAction"
    type: "*(*RIInternetSecurityManagerEx2;;*cUS;UI*UB;UI*UB;UIUIUI)I;"
  }
  field {
    name: "QueryCustomPolicy"
    type: "*(*RIInternetSecurityManagerEx2;;*cUS;*cR_GUID;;**UB;;*UI;*UB;UIUI)I;"
  }
  field {
    name: "SetZoneMapping"
    type: "*(*RIInternetSecurityManagerEx2;;UI*cUS;UI)I;"
  }
  field {
    name: "GetZoneMappings"
    type: "*(*RIInternetSecurityManagerEx2;;UI**RIEnumString;;;UI)I;"
  }
  field {
    name: "ProcessUrlActionEx"
    type: "*(*RIInternetSecurityManagerEx2;;*cUS;UI*UB;UI*UB;UIUIUI*UI;)I;"
  }
  field {
    name: "MapUrlToZoneEx2"
    type: "*(*RIInternetSecurityManagerEx2;;*RIUri;;*UI;UI**US;;*UI;)I;"
  }
  field {
    name: "ProcessUrlActionEx2"
    type: "*(*RIInternetSecurityManagerEx2;;*RIUri;;UI*UB;UI*UB;UIUIUI*UI;)I;"
  }
  field {
    name: "GetSecurityIdEx2"
    type: "*(*RIInternetSecurityManagerEx2;;*RIUri;;*UB;*UI;UI)I;"
  }
  field {
    name: "QueryCustomPolicyEx2"
    type: "*(*RIInternetSecurityManagerEx2;;*RIUri;;*cR_GUID;;**UB;;*UI;*UB;UIUI)I;"
  }
}
struct {
  name: "IInternetSecurityManagerEx2"
  field {
    name: "lpVtbl"
    type: "*RIInternetSecurityManagerEx2Vtbl;;"
  }
}
struct {
  name: "IInternetHostSecurityManagerVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIInternetHostSecurityManager;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIInternetHostSecurityManager;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIInternetHostSecurityManager;;)UI;"
  }
  field {
    name: "GetSecurityId"
    type: "*(*RIInternetHostSecurityManager;;*UB;*UI;UI)I;"
  }
  field {
    name: "ProcessUrlAction"
    type: "*(*RIInternetHostSecurityManager;;UI*UB;UI*UB;UIUIUI)I;"
  }
  field {
    name: "QueryCustomPolicy"
    type: "*(*RIInternetHostSecurityManager;;*cR_GUID;;**UB;;*UI;*UB;UIUI)I;"
  }
}
struct {
  name: "IInternetHostSecurityManager"
  field {
    name: "lpVtbl"
    type: "*RIInternetHostSecurityManagerVtbl;;"
  }
}
struct {
  name: "_ZONEATTRIBUTES"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "szDisplayName"
    type: "X(ConstantArray.WCHAR [260])"
  }
  field {
    name: "szDescription"
    type: "X(ConstantArray.WCHAR [200])"
  }
  field {
    name: "szIconPath"
    type: "X(ConstantArray.WCHAR [260])"
  }
  field {
    name: "dwTemplateMinLevel"
    type: "UI"
  }
  field {
    name: "dwTemplateRecommended"
    type: "UI"
  }
  field {
    name: "dwTemplateCurrentLevel"
    type: "UI"
  }
  field {
    name: "dwFlags"
    type: "UI"
  }
}
struct {
  name: "IInternetZoneManagerVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIInternetZoneManager;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIInternetZoneManager;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIInternetZoneManager;;)UI;"
  }
  field {
    name: "GetZoneAttributes"
    type: "*(*RIInternetZoneManager;;UI*R_ZONEATTRIBUTES;;)I;"
  }
  field {
    name: "SetZoneAttributes"
    type: "*(*RIInternetZoneManager;;UI*R_ZONEATTRIBUTES;;)I;"
  }
  field {
    name: "GetZoneCustomPolicy"
    type: "*(*RIInternetZoneManager;;UI*cR_GUID;;**UB;;*UI;X(Enum.enum _URLZONEREG))I;"
  }
  field {
    name: "SetZoneCustomPolicy"
    type: "*(*RIInternetZoneManager;;UI*cR_GUID;;*UB;UIX(Enum.enum _URLZONEREG))I;"
  }
  field {
    name: "GetZoneActionPolicy"
    type: "*(*RIInternetZoneManager;;UIUI*UB;UIX(Enum.enum _URLZONEREG))I;"
  }
  field {
    name: "SetZoneActionPolicy"
    type: "*(*RIInternetZoneManager;;UIUI*UB;UIX(Enum.enum _URLZONEREG))I;"
  }
  field {
    name: "PromptAction"
    type: "*(*RIInternetZoneManager;;UI*RHWND__;;*cUS;*cUS;UI)I;"
  }
  field {
    name: "LogAction"
    type: "*(*RIInternetZoneManager;;UI*cUS;*cUS;UI)I;"
  }
  field {
    name: "CreateZoneEnumerator"
    type: "*(*RIInternetZoneManager;;*UI;*UI;UI)I;"
  }
  field {
    name: "GetZoneAt"
    type: "*(*RIInternetZoneManager;;UIUI*UI;)I;"
  }
  field {
    name: "DestroyZoneEnumerator"
    type: "*(*RIInternetZoneManager;;UI)I;"
  }
  field {
    name: "CopyTemplatePoliciesToZone"
    type: "*(*RIInternetZoneManager;;UIUIUI)I;"
  }
}
struct {
  name: "IInternetZoneManager"
  field {
    name: "lpVtbl"
    type: "*RIInternetZoneManagerVtbl;;"
  }
}
struct {
  name: "IInternetZoneManagerExVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIInternetZoneManagerEx;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIInternetZoneManagerEx;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIInternetZoneManagerEx;;)UI;"
  }
  field {
    name: "GetZoneAttributes"
    type: "*(*RIInternetZoneManagerEx;;UI*R_ZONEATTRIBUTES;;)I;"
  }
  field {
    name: "SetZoneAttributes"
    type: "*(*RIInternetZoneManagerEx;;UI*R_ZONEATTRIBUTES;;)I;"
  }
  field {
    name: "GetZoneCustomPolicy"
    type: "*(*RIInternetZoneManagerEx;;UI*cR_GUID;;**UB;;*UI;X(Enum.enum _URLZONEREG))I;"
  }
  field {
    name: "SetZoneCustomPolicy"
    type: "*(*RIInternetZoneManagerEx;;UI*cR_GUID;;*UB;UIX(Enum.enum _URLZONEREG))I;"
  }
  field {
    name: "GetZoneActionPolicy"
    type: "*(*RIInternetZoneManagerEx;;UIUI*UB;UIX(Enum.enum _URLZONEREG))I;"
  }
  field {
    name: "SetZoneActionPolicy"
    type: "*(*RIInternetZoneManagerEx;;UIUI*UB;UIX(Enum.enum _URLZONEREG))I;"
  }
  field {
    name: "PromptAction"
    type: "*(*RIInternetZoneManagerEx;;UI*RHWND__;;*cUS;*cUS;UI)I;"
  }
  field {
    name: "LogAction"
    type: "*(*RIInternetZoneManagerEx;;UI*cUS;*cUS;UI)I;"
  }
  field {
    name: "CreateZoneEnumerator"
    type: "*(*RIInternetZoneManagerEx;;*UI;*UI;UI)I;"
  }
  field {
    name: "GetZoneAt"
    type: "*(*RIInternetZoneManagerEx;;UIUI*UI;)I;"
  }
  field {
    name: "DestroyZoneEnumerator"
    type: "*(*RIInternetZoneManagerEx;;UI)I;"
  }
  field {
    name: "CopyTemplatePoliciesToZone"
    type: "*(*RIInternetZoneManagerEx;;UIUIUI)I;"
  }
  field {
    name: "GetZoneActionPolicyEx"
    type: "*(*RIInternetZoneManagerEx;;UIUI*UB;UIX(Enum.enum _URLZONEREG)UI)I;"
  }
  field {
    name: "SetZoneActionPolicyEx"
    type: "*(*RIInternetZoneManagerEx;;UIUI*UB;UIX(Enum.enum _URLZONEREG)UI)I;"
  }
}
struct {
  name: "IInternetZoneManagerEx"
  field {
    name: "lpVtbl"
    type: "*RIInternetZoneManagerExVtbl;;"
  }
}
struct {
  name: "IInternetZoneManagerEx2Vtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIInternetZoneManagerEx2;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIInternetZoneManagerEx2;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIInternetZoneManagerEx2;;)UI;"
  }
  field {
    name: "GetZoneAttributes"
    type: "*(*RIInternetZoneManagerEx2;;UI*R_ZONEATTRIBUTES;;)I;"
  }
  field {
    name: "SetZoneAttributes"
    type: "*(*RIInternetZoneManagerEx2;;UI*R_ZONEATTRIBUTES;;)I;"
  }
  field {
    name: "GetZoneCustomPolicy"
    type: "*(*RIInternetZoneManagerEx2;;UI*cR_GUID;;**UB;;*UI;X(Enum.enum _URLZONEREG))I;"
  }
  field {
    name: "SetZoneCustomPolicy"
    type: "*(*RIInternetZoneManagerEx2;;UI*cR_GUID;;*UB;UIX(Enum.enum _URLZONEREG))I;"
  }
  field {
    name: "GetZoneActionPolicy"
    type: "*(*RIInternetZoneManagerEx2;;UIUI*UB;UIX(Enum.enum _URLZONEREG))I;"
  }
  field {
    name: "SetZoneActionPolicy"
    type: "*(*RIInternetZoneManagerEx2;;UIUI*UB;UIX(Enum.enum _URLZONEREG))I;"
  }
  field {
    name: "PromptAction"
    type: "*(*RIInternetZoneManagerEx2;;UI*RHWND__;;*cUS;*cUS;UI)I;"
  }
  field {
    name: "LogAction"
    type: "*(*RIInternetZoneManagerEx2;;UI*cUS;*cUS;UI)I;"
  }
  field {
    name: "CreateZoneEnumerator"
    type: "*(*RIInternetZoneManagerEx2;;*UI;*UI;UI)I;"
  }
  field {
    name: "GetZoneAt"
    type: "*(*RIInternetZoneManagerEx2;;UIUI*UI;)I;"
  }
  field {
    name: "DestroyZoneEnumerator"
    type: "*(*RIInternetZoneManagerEx2;;UI)I;"
  }
  field {
    name: "CopyTemplatePoliciesToZone"
    type: "*(*RIInternetZoneManagerEx2;;UIUIUI)I;"
  }
  field {
    name: "GetZoneActionPolicyEx"
    type: "*(*RIInternetZoneManagerEx2;;UIUI*UB;UIX(Enum.enum _URLZONEREG)UI)I;"
  }
  field {
    name: "SetZoneActionPolicyEx"
    type: "*(*RIInternetZoneManagerEx2;;UIUI*UB;UIX(Enum.enum _URLZONEREG)UI)I;"
  }
  field {
    name: "GetZoneAttributesEx"
    type: "*(*RIInternetZoneManagerEx2;;UI*R_ZONEATTRIBUTES;;UI)I;"
  }
  field {
    name: "GetZoneSecurityState"
    type: "*(*RIInternetZoneManagerEx2;;UII*UI;*I;)I;"
  }
  field {
    name: "GetIESecurityState"
    type: "*(*RIInternetZoneManagerEx2;;I*UI;*I;I)I;"
  }
  field {
    name: "FixInsecureSettings"
    type: "*(*RIInternetZoneManagerEx2;;)I;"
  }
}
struct {
  name: "IInternetZoneManagerEx2"
  field {
    name: "lpVtbl"
    type: "*RIInternetZoneManagerEx2Vtbl;;"
  }
}
struct {
  name: "_tagSOFTDISTINFO"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "dwFlags"
    type: "UI"
  }
  field {
    name: "dwAdState"
    type: "UI"
  }
  field {
    name: "szTitle"
    type: "*US;"
  }
  field {
    name: "szAbstract"
    type: "*US;"
  }
  field {
    name: "szHREF"
    type: "*US;"
  }
  field {
    name: "dwInstalledVersionMS"
    type: "UI"
  }
  field {
    name: "dwInstalledVersionLS"
    type: "UI"
  }
  field {
    name: "dwUpdateVersionMS"
    type: "UI"
  }
  field {
    name: "dwUpdateVersionLS"
    type: "UI"
  }
  field {
    name: "dwAdvertisedVersionMS"
    type: "UI"
  }
  field {
    name: "dwAdvertisedVersionLS"
    type: "UI"
  }
  field {
    name: "dwReserved"
    type: "UI"
  }
}
struct {
  name: "_tagCODEBASEHOLD"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "szDistUnit"
    type: "*US;"
  }
  field {
    name: "szCodeBase"
    type: "*US;"
  }
  field {
    name: "dwVersionMS"
    type: "UI"
  }
  field {
    name: "dwVersionLS"
    type: "UI"
  }
  field {
    name: "dwStyle"
    type: "UI"
  }
}
struct {
  name: "ISoftDistExtVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RISoftDistExt;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RISoftDistExt;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RISoftDistExt;;)UI;"
  }
  field {
    name: "ProcessSoftDist"
    type: "*(*RISoftDistExt;;*cUS;*RIXMLElement;;*R_tagSOFTDISTINFO;;)I;"
  }
  field {
    name: "GetFirstCodeBase"
    type: "*(*RISoftDistExt;;**US;;*UI;)I;"
  }
  field {
    name: "GetNextCodeBase"
    type: "*(*RISoftDistExt;;**US;;*UI;)I;"
  }
  field {
    name: "AsyncInstallDistributionUnit"
    type: "*(*RISoftDistExt;;*RIBindCtx;;*V;UI*R_tagCODEBASEHOLD;;)I;"
  }
}
struct {
  name: "ISoftDistExt"
  field {
    name: "lpVtbl"
    type: "*RISoftDistExtVtbl;;"
  }
}
struct {
  name: "_tagPROTOCOLFILTERDATA"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "pProtocolSink"
    type: "*RIInternetProtocolSink;;"
  }
  field {
    name: "pProtocol"
    type: "*RIInternetProtocol;;"
  }
  field {
    name: "pUnk"
    type: "*RIUnknown;;"
  }
  field {
    name: "dwFilterFlags"
    type: "UI"
  }
}
struct {
  name: "IUriVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIUri;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIUri;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIUri;;)UI;"
  }
  field {
    name: "GetPropertyBSTR"
    type: "*(*RIUri;;X(Enum.enum __WIDL_urlmon_generated_name_0000000B)**US;;UI)I;"
  }
  field {
    name: "GetPropertyLength"
    type: "*(*RIUri;;X(Enum.enum __WIDL_urlmon_generated_name_0000000B)*UI;UI)I;"
  }
  field {
    name: "GetPropertyDWORD"
    type: "*(*RIUri;;X(Enum.enum __WIDL_urlmon_generated_name_0000000B)*UI;UI)I;"
  }
  field {
    name: "HasProperty"
    type: "*(*RIUri;;X(Enum.enum __WIDL_urlmon_generated_name_0000000B)*I;)I;"
  }
  field {
    name: "GetAbsoluteUri"
    type: "*(*RIUri;;**US;;)I;"
  }
  field {
    name: "GetAuthority"
    type: "*(*RIUri;;**US;;)I;"
  }
  field {
    name: "GetDisplayUri"
    type: "*(*RIUri;;**US;;)I;"
  }
  field {
    name: "GetDomain"
    type: "*(*RIUri;;**US;;)I;"
  }
  field {
    name: "GetExtension"
    type: "*(*RIUri;;**US;;)I;"
  }
  field {
    name: "GetFragment"
    type: "*(*RIUri;;**US;;)I;"
  }
  field {
    name: "GetHost"
    type: "*(*RIUri;;**US;;)I;"
  }
  field {
    name: "GetPassword"
    type: "*(*RIUri;;**US;;)I;"
  }
  field {
    name: "GetPath"
    type: "*(*RIUri;;**US;;)I;"
  }
  field {
    name: "GetPathAndQuery"
    type: "*(*RIUri;;**US;;)I;"
  }
  field {
    name: "GetQuery"
    type: "*(*RIUri;;**US;;)I;"
  }
  field {
    name: "GetRawUri"
    type: "*(*RIUri;;**US;;)I;"
  }
  field {
    name: "GetSchemeName"
    type: "*(*RIUri;;**US;;)I;"
  }
  field {
    name: "GetUserInfo"
    type: "*(*RIUri;;**US;;)I;"
  }
  field {
    name: "GetUserNameA"
    type: "*(*RIUri;;**US;;)I;"
  }
  field {
    name: "GetHostType"
    type: "*(*RIUri;;*UI;)I;"
  }
  field {
    name: "GetPort"
    type: "*(*RIUri;;*UI;)I;"
  }
  field {
    name: "GetScheme"
    type: "*(*RIUri;;*UI;)I;"
  }
  field {
    name: "GetZone"
    type: "*(*RIUri;;*UI;)I;"
  }
  field {
    name: "GetProperties"
    type: "*(*RIUri;;*UI;)I;"
  }
  field {
    name: "IsEqual"
    type: "*(*RIUri;;*RIUri;;*I;)I;"
  }
}
struct {
  name: "IUri"
  field {
    name: "lpVtbl"
    type: "*RIUriVtbl;;"
  }
}
struct {
  name: "IUriContainerVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIUriContainer;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIUriContainer;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIUriContainer;;)UI;"
  }
  field {
    name: "GetIUri"
    type: "*(*RIUriContainer;;**RIUri;;;)I;"
  }
}
struct {
  name: "IUriContainer"
  field {
    name: "lpVtbl"
    type: "*RIUriContainerVtbl;;"
  }
}
struct {
  name: "IUriBuilderVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIUriBuilder;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIUriBuilder;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIUriBuilder;;)UI;"
  }
  field {
    name: "CreateUriSimple"
    type: "*(*RIUriBuilder;;UIUI**RIUri;;;)I;"
  }
  field {
    name: "CreateUri"
    type: "*(*RIUriBuilder;;UIUIUI**RIUri;;;)I;"
  }
  field {
    name: "CreateUriWithFlags"
    type: "*(*RIUriBuilder;;UIUIUIUI**RIUri;;;)I;"
  }
  field {
    name: "GetIUri"
    type: "*(*RIUriBuilder;;**RIUri;;;)I;"
  }
  field {
    name: "SetIUri"
    type: "*(*RIUriBuilder;;*RIUri;;)I;"
  }
  field {
    name: "GetFragment"
    type: "*(*RIUriBuilder;;*UI;**cUS;;)I;"
  }
  field {
    name: "GetHost"
    type: "*(*RIUriBuilder;;*UI;**cUS;;)I;"
  }
  field {
    name: "GetPassword"
    type: "*(*RIUriBuilder;;*UI;**cUS;;)I;"
  }
  field {
    name: "GetPath"
    type: "*(*RIUriBuilder;;*UI;**cUS;;)I;"
  }
  field {
    name: "GetPort"
    type: "*(*RIUriBuilder;;*I;*UI;)I;"
  }
  field {
    name: "GetQuery"
    type: "*(*RIUriBuilder;;*UI;**cUS;;)I;"
  }
  field {
    name: "GetSchemeName"
    type: "*(*RIUriBuilder;;*UI;**cUS;;)I;"
  }
  field {
    name: "GetUserNameA"
    type: "*(*RIUriBuilder;;*UI;**cUS;;)I;"
  }
  field {
    name: "SetFragment"
    type: "*(*RIUriBuilder;;*cUS;)I;"
  }
  field {
    name: "SetHost"
    type: "*(*RIUriBuilder;;*cUS;)I;"
  }
  field {
    name: "SetPassword"
    type: "*(*RIUriBuilder;;*cUS;)I;"
  }
  field {
    name: "SetPath"
    type: "*(*RIUriBuilder;;*cUS;)I;"
  }
  field {
    name: "SetPort"
    type: "*(*RIUriBuilder;;IUI)I;"
  }
  field {
    name: "SetQuery"
    type: "*(*RIUriBuilder;;*cUS;)I;"
  }
  field {
    name: "SetSchemeName"
    type: "*(*RIUriBuilder;;*cUS;)I;"
  }
  field {
    name: "SetUserName"
    type: "*(*RIUriBuilder;;*cUS;)I;"
  }
  field {
    name: "RemoveProperties"
    type: "*(*RIUriBuilder;;UI)I;"
  }
  field {
    name: "HasBeenModified"
    type: "*(*RIUriBuilder;;*I;)I;"
  }
}
struct {
  name: "IUriBuilder"
  field {
    name: "lpVtbl"
    type: "*RIUriBuilderVtbl;;"
  }
}
struct {
  name: "IUriBuilderFactoryVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIUriBuilderFactory;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIUriBuilderFactory;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIUriBuilderFactory;;)UI;"
  }
  field {
    name: "CreateIUriBuilder"
    type: "*(*RIUriBuilderFactory;;UIUI**RIUriBuilder;;;)I;"
  }
  field {
    name: "CreateInitializedIUriBuilder"
    type: "*(*RIUriBuilderFactory;;UIUI**RIUriBuilder;;;)I;"
  }
}
struct {
  name: "IUriBuilderFactory"
  field {
    name: "lpVtbl"
    type: "*RIUriBuilderFactoryVtbl;;"
  }
}
struct {
  name: "IInternetProtocolExVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIInternetProtocolEx;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIInternetProtocolEx;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIInternetProtocolEx;;)UI;"
  }
  field {
    name: "Start"
    type: "*(*RIInternetProtocolEx;;*cUS;*RIInternetProtocolSink;;*RIInternetBindInfo;;UIUI)I;"
  }
  field {
    name: "Continue"
    type: "*(*RIInternetProtocolEx;;*R_tagPROTOCOLDATA;;)I;"
  }
  field {
    name: "Abort"
    type: "*(*RIInternetProtocolEx;;IUI)I;"
  }
  field {
    name: "Terminate"
    type: "*(*RIInternetProtocolEx;;UI)I;"
  }
  field {
    name: "Suspend"
    type: "*(*RIInternetProtocolEx;;)I;"
  }
  field {
    name: "Resume"
    type: "*(*RIInternetProtocolEx;;)I;"
  }
  field {
    name: "Read"
    type: "*(*RIInternetProtocolEx;;*V;UI*UI;)I;"
  }
  field {
    name: "Seek"
    type: "*(*RIInternetProtocolEx;;Runion _LARGE_INTEGER;UI*Runion _ULARGE_INTEGER;;)I;"
  }
  field {
    name: "LockRequest"
    type: "*(*RIInternetProtocolEx;;UI)I;"
  }
  field {
    name: "UnlockRequest"
    type: "*(*RIInternetProtocolEx;;)I;"
  }
  field {
    name: "StartEx"
    type: "*(*RIInternetProtocolEx;;*RIUri;;*RIInternetProtocolSink;;*RIInternetBindInfo;;UI**V;;)I;"
  }
}
struct {
  name: "IInternetProtocolEx"
  field {
    name: "lpVtbl"
    type: "*RIInternetProtocolExVtbl;;"
  }
}
struct {
  name: "IGetBindHandleVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIGetBindHandle;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIGetBindHandle;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIGetBindHandle;;)UI;"
  }
  field {
    name: "GetBindHandle"
    type: "*(*RIGetBindHandle;;X(Enum.enum __WIDL_urlmon_generated_name_0000000D)**V;;)I;"
  }
}
struct {
  name: "IGetBindHandle"
  field {
    name: "lpVtbl"
    type: "*RIGetBindHandleVtbl;;"
  }
}
struct {
  name: "CONFIRMSAFETY"
  field {
    name: "clsid"
    type: "R_GUID;"
  }
  field {
    name: "pUnk"
    type: "*RIUnknown;;"
  }
  field {
    name: "dwFlags"
    type: "UI"
  }
}
struct {
  name: "tagCAUB"
  field {
    name: "cElems"
    type: "UI"
  }
  field {
    name: "pElems"
    type: "*UB;"
  }
}
struct {
  name: "tagCAI"
  field {
    name: "cElems"
    type: "UI"
  }
  field {
    name: "pElems"
    type: "*S;"
  }
}
struct {
  name: "tagCAUI"
  field {
    name: "cElems"
    type: "UI"
  }
  field {
    name: "pElems"
    type: "*US;"
  }
}
struct {
  name: "tagCAL"
  field {
    name: "cElems"
    type: "UI"
  }
  field {
    name: "pElems"
    type: "*I;"
  }
}
struct {
  name: "tagCAUL"
  field {
    name: "cElems"
    type: "UI"
  }
  field {
    name: "pElems"
    type: "*UI;"
  }
}
struct {
  name: "tagCAFLT"
  field {
    name: "cElems"
    type: "UI"
  }
  field {
    name: "pElems"
    type: "*F;"
  }
}
struct {
  name: "tagCADBL"
  field {
    name: "cElems"
    type: "UI"
  }
  field {
    name: "pElems"
    type: "*D;"
  }
}
struct {
  name: "tagCACY"
  field {
    name: "cElems"
    type: "UI"
  }
  field {
    name: "pElems"
    type: "*Runion tagCY;;"
  }
}
struct {
  name: "tagCADATE"
  field {
    name: "cElems"
    type: "UI"
  }
  field {
    name: "pElems"
    type: "*D;"
  }
}
struct {
  name: "tagCABSTR"
  field {
    name: "cElems"
    type: "UI"
  }
  field {
    name: "pElems"
    type: "**US;;"
  }
}
struct {
  name: "tagCABSTRBLOB"
  field {
    name: "cElems"
    type: "UI"
  }
  field {
    name: "pElems"
    type: "*RtagBSTRBLOB;;"
  }
}
struct {
  name: "tagCABOOL"
  field {
    name: "cElems"
    type: "UI"
  }
  field {
    name: "pElems"
    type: "*S;"
  }
}
struct {
  name: "tagCASCODE"
  field {
    name: "cElems"
    type: "UI"
  }
  field {
    name: "pElems"
    type: "*I;"
  }
}
struct {
  name: "tagCAPROPVARIANT"
  field {
    name: "cElems"
    type: "UI"
  }
  field {
    name: "pElems"
    type: "*RtagPROPVARIANT;;"
  }
}
struct {
  name: "tagCAH"
  field {
    name: "cElems"
    type: "UI"
  }
  field {
    name: "pElems"
    type: "*Runion _LARGE_INTEGER;;"
  }
}
struct {
  name: "tagCAUH"
  field {
    name: "cElems"
    type: "UI"
  }
  field {
    name: "pElems"
    type: "*Runion _ULARGE_INTEGER;;"
  }
}
struct {
  name: "tagCALPSTR"
  field {
    name: "cElems"
    type: "UI"
  }
  field {
    name: "pElems"
    type: "**C;;"
  }
}
struct {
  name: "tagCALPWSTR"
  field {
    name: "cElems"
    type: "UI"
  }
  field {
    name: "pElems"
    type: "**US;;"
  }
}
struct {
  name: "tagCAFILETIME"
  field {
    name: "cElems"
    type: "UI"
  }
  field {
    name: "pElems"
    type: "*R_FILETIME;;"
  }
}
struct {
  name: "tagCACLIPDATA"
  field {
    name: "cElems"
    type: "UI"
  }
  field {
    name: "pElems"
    type: "*RtagCLIPDATA;;"
  }
}
struct {
  name: "tagCACLSID"
  field {
    name: "cElems"
    type: "UI"
  }
  field {
    name: "pElems"
    type: "*R_GUID;;"
  }
}
struct {
  name: "tagPROPVARIANT"
  field {
    name: "vt"
    type: "US"
  }
  field {
    name: "wReserved1"
    type: "US"
  }
  field {
    name: "wReserved2"
    type: "US"
  }
  field {
    name: "wReserved3"
    type: "US"
  }
}
struct {
  name: "tagPROPSPEC"
  field {
    name: "ulKind"
    type: "UI"
  }
}
struct {
  name: "tagSTATPROPSTG"
  field {
    name: "lpwstrName"
    type: "*US;"
  }
  field {
    name: "propid"
    type: "UI"
  }
  field {
    name: "vt"
    type: "US"
  }
}
struct {
  name: "tagSTATPROPSETSTG"
  field {
    name: "fmtid"
    type: "R_GUID;"
  }
  field {
    name: "clsid"
    type: "R_GUID;"
  }
  field {
    name: "grfFlags"
    type: "UI"
  }
  field {
    name: "mtime"
    type: "R_FILETIME;"
  }
  field {
    name: "ctime"
    type: "R_FILETIME;"
  }
  field {
    name: "atime"
    type: "R_FILETIME;"
  }
  field {
    name: "dwOSVersion"
    type: "UI"
  }
}
struct {
  name: "IPropertyStorageVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIPropertyStorage;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIPropertyStorage;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIPropertyStorage;;)UI;"
  }
  field {
    name: "ReadMultiple"
    type: "*(*RIPropertyStorage;;UI*cRtagPROPSPEC;;*RtagPROPVARIANT;;)I;"
  }
  field {
    name: "WriteMultiple"
    type: "*(*RIPropertyStorage;;UI*cRtagPROPSPEC;;*cRtagPROPVARIANT;;UI)I;"
  }
  field {
    name: "DeleteMultiple"
    type: "*(*RIPropertyStorage;;UI*cRtagPROPSPEC;;)I;"
  }
  field {
    name: "ReadPropertyNames"
    type: "*(*RIPropertyStorage;;UI*cUI;**US;;)I;"
  }
  field {
    name: "WritePropertyNames"
    type: "*(*RIPropertyStorage;;UI*cUI;*c*US;;)I;"
  }
  field {
    name: "DeletePropertyNames"
    type: "*(*RIPropertyStorage;;UI*cUI;)I;"
  }
  field {
    name: "Commit"
    type: "*(*RIPropertyStorage;;UI)I;"
  }
  field {
    name: "Revert"
    type: "*(*RIPropertyStorage;;)I;"
  }
  field {
    name: "Enum"
    type: "*(*RIPropertyStorage;;**RIEnumSTATPROPSTG;;;)I;"
  }
  field {
    name: "SetTimes"
    type: "*(*RIPropertyStorage;;*cR_FILETIME;;*cR_FILETIME;;*cR_FILETIME;;)I;"
  }
  field {
    name: "SetClass"
    type: "*(*RIPropertyStorage;;*cR_GUID;;)I;"
  }
  field {
    name: "Stat"
    type: "*(*RIPropertyStorage;;*RtagSTATPROPSETSTG;;)I;"
  }
}
struct {
  name: "IPropertyStorage"
  field {
    name: "lpVtbl"
    type: "*RIPropertyStorageVtbl;;"
  }
}
struct {
  name: "IPropertySetStorageVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIPropertySetStorage;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIPropertySetStorage;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIPropertySetStorage;;)UI;"
  }
  field {
    name: "Create"
    type: "*(*RIPropertySetStorage;;*cR_GUID;;*cR_GUID;;UIUI**RIPropertyStorage;;;)I;"
  }
  field {
    name: "Open"
    type: "*(*RIPropertySetStorage;;*cR_GUID;;UI**RIPropertyStorage;;;)I;"
  }
  field {
    name: "Delete"
    type: "*(*RIPropertySetStorage;;*cR_GUID;;)I;"
  }
  field {
    name: "Enum"
    type: "*(*RIPropertySetStorage;;**RIEnumSTATPROPSETSTG;;;)I;"
  }
}
struct {
  name: "IPropertySetStorage"
  field {
    name: "lpVtbl"
    type: "*RIPropertySetStorageVtbl;;"
  }
}
struct {
  name: "IEnumSTATPROPSTGVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIEnumSTATPROPSTG;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIEnumSTATPROPSTG;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIEnumSTATPROPSTG;;)UI;"
  }
  field {
    name: "Next"
    type: "*(*RIEnumSTATPROPSTG;;UI*RtagSTATPROPSTG;;*UI;)I;"
  }
  field {
    name: "Skip"
    type: "*(*RIEnumSTATPROPSTG;;UI)I;"
  }
  field {
    name: "Reset"
    type: "*(*RIEnumSTATPROPSTG;;)I;"
  }
  field {
    name: "Clone"
    type: "*(*RIEnumSTATPROPSTG;;**RIEnumSTATPROPSTG;;;)I;"
  }
}
struct {
  name: "IEnumSTATPROPSTG"
  field {
    name: "lpVtbl"
    type: "*RIEnumSTATPROPSTGVtbl;;"
  }
}
struct {
  name: "IEnumSTATPROPSETSTGVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIEnumSTATPROPSETSTG;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIEnumSTATPROPSETSTG;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIEnumSTATPROPSETSTG;;)UI;"
  }
  field {
    name: "Next"
    type: "*(*RIEnumSTATPROPSETSTG;;UI*RtagSTATPROPSETSTG;;*UI;)I;"
  }
  field {
    name: "Skip"
    type: "*(*RIEnumSTATPROPSETSTG;;UI)I;"
  }
  field {
    name: "Reset"
    type: "*(*RIEnumSTATPROPSETSTG;;)I;"
  }
  field {
    name: "Clone"
    type: "*(*RIEnumSTATPROPSETSTG;;**RIEnumSTATPROPSETSTG;;;)I;"
  }
}
struct {
  name: "IEnumSTATPROPSETSTG"
  field {
    name: "lpVtbl"
    type: "*RIEnumSTATPROPSETSTGVtbl;;"
  }
}
struct {
  name: "SERIALIZEDPROPERTYVALUE"
  field {
    name: "dwType"
    type: "UI"
  }
  field {
    name: "rgb"
    type: "X(ConstantArray.BYTE [1])"
  }
}
struct {
  name: "UDATE"
  field {
    name: "st"
    type: "R_SYSTEMTIME;"
  }
  field {
    name: "wDayOfYear"
    type: "US"
  }
}
struct {
  name: "NUMPARSE"
  field {
    name: "cDig"
    type: "I"
  }
  field {
    name: "dwInFlags"
    type: "UI"
  }
  field {
    name: "dwOutFlags"
    type: "UI"
  }
  field {
    name: "cchUsed"
    type: "I"
  }
  field {
    name: "nBaseShift"
    type: "I"
  }
  field {
    name: "nPwr10"
    type: "I"
  }
}
struct {
  name: "tagPARAMDATA"
  field {
    name: "szName"
    type: "*US;"
  }
  field {
    name: "vt"
    type: "US"
  }
}
struct {
  name: "tagPARAMDATA"
  field {
    name: "szName"
    type: "*US;"
  }
  field {
    name: "vt"
    type: "US"
  }
}
struct {
  name: "tagMETHODDATA"
  field {
    name: "szName"
    type: "*US;"
  }
  field {
    name: "ppdata"
    type: "*RtagPARAMDATA;;"
  }
  field {
    name: "dispid"
    type: "I"
  }
  field {
    name: "iMeth"
    type: "UI"
  }
  field {
    name: "cc"
    type: "X(Enum.enum tagCALLCONV)"
  }
  field {
    name: "cArgs"
    type: "UI"
  }
  field {
    name: "wFlags"
    type: "US"
  }
  field {
    name: "vtReturn"
    type: "US"
  }
}
struct {
  name: "tagMETHODDATA"
  field {
    name: "szName"
    type: "*US;"
  }
  field {
    name: "ppdata"
    type: "*RtagPARAMDATA;;"
  }
  field {
    name: "dispid"
    type: "I"
  }
  field {
    name: "iMeth"
    type: "UI"
  }
  field {
    name: "cc"
    type: "X(Enum.enum tagCALLCONV)"
  }
  field {
    name: "cArgs"
    type: "UI"
  }
  field {
    name: "wFlags"
    type: "US"
  }
  field {
    name: "vtReturn"
    type: "US"
  }
}
struct {
  name: "tagINTERFACEDATA"
  field {
    name: "pmethdata"
    type: "*RtagMETHODDATA;;"
  }
  field {
    name: "cMembers"
    type: "UI"
  }
}
struct {
  name: "tagINTERFACEDATA"
  field {
    name: "pmethdata"
    type: "*RtagMETHODDATA;;"
  }
  field {
    name: "cMembers"
    type: "UI"
  }
}
struct {
  name: "_OLESTREAMVTBL"
  field {
    name: "Get"
    type: "*(*R_OLESTREAM;;*C;UI)UI;"
  }
  field {
    name: "Put"
    type: "*(*R_OLESTREAM;;*C;UI)UI;"
  }
}
struct {
  name: "_OLESTREAM"
  field {
    name: "lpstbl"
    type: "*R_OLESTREAMVTBL;;"
  }
}
struct {
  name: "_FORMAT_PARAMETERS"
  field {
    name: "MediaType"
    type: "X(Enum.enum _MEDIA_TYPE)"
  }
  field {
    name: "StartCylinderNumber"
    type: "UI"
  }
  field {
    name: "EndCylinderNumber"
    type: "UI"
  }
  field {
    name: "StartHeadNumber"
    type: "UI"
  }
  field {
    name: "EndHeadNumber"
    type: "UI"
  }
}
struct {
  name: "_FORMAT_PARAMETERS"
  field {
    name: "MediaType"
    type: "X(Enum.enum _MEDIA_TYPE)"
  }
  field {
    name: "StartCylinderNumber"
    type: "UI"
  }
  field {
    name: "EndCylinderNumber"
    type: "UI"
  }
  field {
    name: "StartHeadNumber"
    type: "UI"
  }
  field {
    name: "EndHeadNumber"
    type: "UI"
  }
}
struct {
  name: "_FORMAT_EX_PARAMETERS"
  field {
    name: "MediaType"
    type: "X(Enum.enum _MEDIA_TYPE)"
  }
  field {
    name: "StartCylinderNumber"
    type: "UI"
  }
  field {
    name: "EndCylinderNumber"
    type: "UI"
  }
  field {
    name: "StartHeadNumber"
    type: "UI"
  }
  field {
    name: "EndHeadNumber"
    type: "UI"
  }
  field {
    name: "FormatGapLength"
    type: "US"
  }
  field {
    name: "SectorsPerTrack"
    type: "US"
  }
  field {
    name: "SectorNumber"
    type: "X(ConstantArray.WORD [1])"
  }
}
struct {
  name: "_FORMAT_EX_PARAMETERS"
  field {
    name: "MediaType"
    type: "X(Enum.enum _MEDIA_TYPE)"
  }
  field {
    name: "StartCylinderNumber"
    type: "UI"
  }
  field {
    name: "EndCylinderNumber"
    type: "UI"
  }
  field {
    name: "StartHeadNumber"
    type: "UI"
  }
  field {
    name: "EndHeadNumber"
    type: "UI"
  }
  field {
    name: "FormatGapLength"
    type: "US"
  }
  field {
    name: "SectorsPerTrack"
    type: "US"
  }
  field {
    name: "SectorNumber"
    type: "X(ConstantArray.WORD [1])"
  }
}
struct {
  name: "_DISK_GEOMETRY"
  field {
    name: "Cylinders"
    type: "Runion _LARGE_INTEGER;"
  }
  field {
    name: "MediaType"
    type: "X(Enum.enum _MEDIA_TYPE)"
  }
  field {
    name: "TracksPerCylinder"
    type: "UI"
  }
  field {
    name: "SectorsPerTrack"
    type: "UI"
  }
  field {
    name: "BytesPerSector"
    type: "UI"
  }
}
struct {
  name: "_DISK_GEOMETRY"
  field {
    name: "Cylinders"
    type: "Runion _LARGE_INTEGER;"
  }
  field {
    name: "MediaType"
    type: "X(Enum.enum _MEDIA_TYPE)"
  }
  field {
    name: "TracksPerCylinder"
    type: "UI"
  }
  field {
    name: "SectorsPerTrack"
    type: "UI"
  }
  field {
    name: "BytesPerSector"
    type: "UI"
  }
}
struct {
  name: "_DISK_GEOMETRY_EX"
  field {
    name: "Geometry"
    type: "R_DISK_GEOMETRY;"
  }
  field {
    name: "DiskSize"
    type: "Runion _LARGE_INTEGER;"
  }
  field {
    name: "Data"
    type: "X(ConstantArray.BYTE [1])"
  }
}
struct {
  name: "_DISK_GEOMETRY_EX"
  field {
    name: "Geometry"
    type: "R_DISK_GEOMETRY;"
  }
  field {
    name: "DiskSize"
    type: "Runion _LARGE_INTEGER;"
  }
  field {
    name: "Data"
    type: "X(ConstantArray.BYTE [1])"
  }
}
struct {
  name: "_PARTITION_INFORMATION"
  field {
    name: "StartingOffset"
    type: "Runion _LARGE_INTEGER;"
  }
  field {
    name: "PartitionLength"
    type: "Runion _LARGE_INTEGER;"
  }
  field {
    name: "HiddenSectors"
    type: "UI"
  }
  field {
    name: "PartitionNumber"
    type: "UI"
  }
  field {
    name: "PartitionType"
    type: "UB"
  }
  field {
    name: "BootIndicator"
    type: "UB"
  }
  field {
    name: "RecognizedPartition"
    type: "UB"
  }
  field {
    name: "RewritePartition"
    type: "UB"
  }
}
struct {
  name: "_PARTITION_INFORMATION"
  field {
    name: "StartingOffset"
    type: "Runion _LARGE_INTEGER;"
  }
  field {
    name: "PartitionLength"
    type: "Runion _LARGE_INTEGER;"
  }
  field {
    name: "HiddenSectors"
    type: "UI"
  }
  field {
    name: "PartitionNumber"
    type: "UI"
  }
  field {
    name: "PartitionType"
    type: "UB"
  }
  field {
    name: "BootIndicator"
    type: "UB"
  }
  field {
    name: "RecognizedPartition"
    type: "UB"
  }
  field {
    name: "RewritePartition"
    type: "UB"
  }
}
struct {
  name: "_SET_PARTITION_INFORMATION"
  field {
    name: "PartitionType"
    type: "UB"
  }
}
struct {
  name: "_SET_PARTITION_INFORMATION"
  field {
    name: "PartitionType"
    type: "UB"
  }
}
struct {
  name: "_DRIVE_LAYOUT_INFORMATION"
  field {
    name: "PartitionCount"
    type: "UI"
  }
  field {
    name: "Signature"
    type: "UI"
  }
  field {
    name: "PartitionEntry"
    type: "X(ConstantArray.PARTITION_INFORMATION [1])"
  }
}
struct {
  name: "_DRIVE_LAYOUT_INFORMATION"
  field {
    name: "PartitionCount"
    type: "UI"
  }
  field {
    name: "Signature"
    type: "UI"
  }
  field {
    name: "PartitionEntry"
    type: "X(ConstantArray.PARTITION_INFORMATION [1])"
  }
}
struct {
  name: "_VERIFY_INFORMATION"
  field {
    name: "StartingOffset"
    type: "Runion _LARGE_INTEGER;"
  }
  field {
    name: "Length"
    type: "UI"
  }
}
struct {
  name: "_VERIFY_INFORMATION"
  field {
    name: "StartingOffset"
    type: "Runion _LARGE_INTEGER;"
  }
  field {
    name: "Length"
    type: "UI"
  }
}
struct {
  name: "_REASSIGN_BLOCKS"
  field {
    name: "Reserved"
    type: "US"
  }
  field {
    name: "Count"
    type: "US"
  }
  field {
    name: "BlockNumber"
    type: "X(ConstantArray.DWORD [1])"
  }
}
struct {
  name: "_REASSIGN_BLOCKS"
  field {
    name: "Reserved"
    type: "US"
  }
  field {
    name: "Count"
    type: "US"
  }
  field {
    name: "BlockNumber"
    type: "X(ConstantArray.DWORD [1])"
  }
}
struct {
  name: "_DISK_CONTROLLER_NUMBER"
  field {
    name: "ControllerNumber"
    type: "UI"
  }
  field {
    name: "DiskNumber"
    type: "UI"
  }
}
struct {
  name: "_DISK_CONTROLLER_NUMBER"
  field {
    name: "ControllerNumber"
    type: "UI"
  }
  field {
    name: "DiskNumber"
    type: "UI"
  }
}
struct {
  name: "_DISK_EXTENT"
  field {
    name: "DiskNumber"
    type: "UI"
  }
  field {
    name: "StartingOffset"
    type: "Runion _LARGE_INTEGER;"
  }
  field {
    name: "ExtentLength"
    type: "Runion _LARGE_INTEGER;"
  }
}
struct {
  name: "_VOLUME_DISK_EXTENTS"
  field {
    name: "NumberOfDiskExtents"
    type: "UI"
  }
  field {
    name: "Extents"
    type: "X(ConstantArray.DISK_EXTENT [1])"
  }
}
struct {
  name: "RETRIEVAL_POINTERS_BUFFER"
  field {
    name: "ExtentCount"
    type: "UI"
  }
  field {
    name: "StartingVcn"
    type: "Runion _LARGE_INTEGER;"
  }
  field {
    name: "Extents"
    type: "X(ConstantArray.struct (anonymous struct at /usr/local/include/wine/windows/winioctl.h:389:5) [1])"
  }
}
struct {
  name: "struct RETRIEVAL_POINTERS_BUFFER::(anonymous at /usr/local/include/wine/windows/winioctl.h:389:5)"
  field {
    name: "NextVcn"
    type: "Runion _LARGE_INTEGER;"
  }
  field {
    name: "Lcn"
    type: "Runion _LARGE_INTEGER;"
  }
}
struct {
  name: "RETRIEVAL_POINTERS_BUFFER"
  field {
    name: "ExtentCount"
    type: "UI"
  }
  field {
    name: "StartingVcn"
    type: "Runion _LARGE_INTEGER;"
  }
  field {
    name: "Extents"
    type: "X(ConstantArray.struct (anonymous struct at /usr/local/include/wine/windows/winioctl.h:389:5) [1])"
  }
}
struct {
  name: "struct RETRIEVAL_POINTERS_BUFFER::(anonymous at /usr/local/include/wine/windows/winioctl.h:389:5)"
  field {
    name: "NextVcn"
    type: "Runion _LARGE_INTEGER;"
  }
  field {
    name: "Lcn"
    type: "Runion _LARGE_INTEGER;"
  }
}
struct {
  name: "_FILE_FS_VOLUME_INFORMATION"
  field {
    name: "VolumeCreationTime"
    type: "Runion _LARGE_INTEGER;"
  }
  field {
    name: "VolumeSerialNumber"
    type: "UI"
  }
  field {
    name: "VolumeLabelLength"
    type: "UI"
  }
  field {
    name: "SupportsObjects"
    type: "UB"
  }
  field {
    name: "VolumeLabel"
    type: "X(ConstantArray.WCHAR [1])"
  }
}
struct {
  name: "_FILE_FS_VOLUME_INFORMATION"
  field {
    name: "VolumeCreationTime"
    type: "Runion _LARGE_INTEGER;"
  }
  field {
    name: "VolumeSerialNumber"
    type: "UI"
  }
  field {
    name: "VolumeLabelLength"
    type: "UI"
  }
  field {
    name: "SupportsObjects"
    type: "UB"
  }
  field {
    name: "VolumeLabel"
    type: "X(ConstantArray.WCHAR [1])"
  }
}
struct {
  name: "_FILE_FS_SIZE_INFORMATION"
  field {
    name: "TotalAllocationUnits"
    type: "Runion _LARGE_INTEGER;"
  }
  field {
    name: "AvailableAllocationUnits"
    type: "Runion _LARGE_INTEGER;"
  }
  field {
    name: "SectorsPerAllocationUnit"
    type: "UI"
  }
  field {
    name: "BytesPerSector"
    type: "UI"
  }
}
struct {
  name: "_FILE_FS_SIZE_INFORMATION"
  field {
    name: "TotalAllocationUnits"
    type: "Runion _LARGE_INTEGER;"
  }
  field {
    name: "AvailableAllocationUnits"
    type: "Runion _LARGE_INTEGER;"
  }
  field {
    name: "SectorsPerAllocationUnit"
    type: "UI"
  }
  field {
    name: "BytesPerSector"
    type: "UI"
  }
}
struct {
  name: "_FILE_FS_DEVICE_INFORMATION"
  field {
    name: "DeviceType"
    type: "UI"
  }
  field {
    name: "Characteristics"
    type: "UI"
  }
}
struct {
  name: "_FILE_FS_DEVICE_INFORMATION"
  field {
    name: "DeviceType"
    type: "UI"
  }
  field {
    name: "Characteristics"
    type: "UI"
  }
}
struct {
  name: "_FILE_FS_ATTRIBUTE_INFORMATION"
  field {
    name: "FileSystemAttribute"
    type: "UI"
  }
  field {
    name: "MaximumComponentNameLength"
    type: "I"
  }
  field {
    name: "FileSystemNameLength"
    type: "UI"
  }
  field {
    name: "FileSystemName"
    type: "X(ConstantArray.WCHAR [1])"
  }
}
struct {
  name: "_FILE_FS_ATTRIBUTE_INFORMATION"
  field {
    name: "FileSystemAttribute"
    type: "UI"
  }
  field {
    name: "MaximumComponentNameLength"
    type: "I"
  }
  field {
    name: "FileSystemNameLength"
    type: "UI"
  }
  field {
    name: "FileSystemName"
    type: "X(ConstantArray.WCHAR [1])"
  }
}
struct {
  name: "_FILE_PIPE_WAIT_FOR_BUFFER"
  field {
    name: "Timeout"
    type: "Runion _LARGE_INTEGER;"
  }
  field {
    name: "NameLength"
    type: "UI"
  }
  field {
    name: "TimeoutSpecified"
    type: "UB"
  }
  field {
    name: "Name"
    type: "X(ConstantArray.WCHAR [1])"
  }
}
struct {
  name: "_FILE_PIPE_WAIT_FOR_BUFFER"
  field {
    name: "Timeout"
    type: "Runion _LARGE_INTEGER;"
  }
  field {
    name: "NameLength"
    type: "UI"
  }
  field {
    name: "TimeoutSpecified"
    type: "UB"
  }
  field {
    name: "Name"
    type: "X(ConstantArray.WCHAR [1])"
  }
}
struct {
  name: "_FILE_PIPE_PEEK_BUFFER"
  field {
    name: "NamedPipeState"
    type: "UI"
  }
  field {
    name: "ReadDataAvailable"
    type: "UI"
  }
  field {
    name: "NumberOfMessages"
    type: "UI"
  }
  field {
    name: "MessageLength"
    type: "UI"
  }
  field {
    name: "Data"
    type: "X(ConstantArray.CHAR [1])"
  }
}
struct {
  name: "_FILE_PIPE_PEEK_BUFFER"
  field {
    name: "NamedPipeState"
    type: "UI"
  }
  field {
    name: "ReadDataAvailable"
    type: "UI"
  }
  field {
    name: "NumberOfMessages"
    type: "UI"
  }
  field {
    name: "MessageLength"
    type: "UI"
  }
  field {
    name: "Data"
    type: "X(ConstantArray.CHAR [1])"
  }
}
struct {
  name: "_SCARD_IO_REQUEST"
  field {
    name: "dwProtocol"
    type: "UI"
  }
  field {
    name: "cbPciLength"
    type: "UI"
  }
}
struct {
  name: "_SCARD_IO_REQUEST"
  field {
    name: "dwProtocol"
    type: "UI"
  }
  field {
    name: "cbPciLength"
    type: "UI"
  }
}
struct {
  name: "_SCARD_IO_REQUEST"
  field {
    name: "dwProtocol"
    type: "UI"
  }
  field {
    name: "cbPciLength"
    type: "UI"
  }
}
struct {
  name: "_SCARD_ATRMASK"
  field {
    name: "cbAtr"
    type: "UI"
  }
  field {
    name: "rgbAtr"
    type: "X(ConstantArray.BYTE [36])"
  }
  field {
    name: "rgbMask"
    type: "X(ConstantArray.BYTE [36])"
  }
}
struct {
  name: "_SCARD_ATRMASK"
  field {
    name: "cbAtr"
    type: "UI"
  }
  field {
    name: "rgbAtr"
    type: "X(ConstantArray.BYTE [36])"
  }
  field {
    name: "rgbMask"
    type: "X(ConstantArray.BYTE [36])"
  }
}
struct {
  name: "_SCARD_ATRMASK"
  field {
    name: "cbAtr"
    type: "UI"
  }
  field {
    name: "rgbAtr"
    type: "X(ConstantArray.BYTE [36])"
  }
  field {
    name: "rgbMask"
    type: "X(ConstantArray.BYTE [36])"
  }
}
struct {
  name: "SCARD_READERSTATEA"
  field {
    name: "szReader"
    type: "*cC;"
  }
  field {
    name: "pvUserData"
    type: "*V;"
  }
  field {
    name: "dwCurrentState"
    type: "UI"
  }
  field {
    name: "dwEventState"
    type: "UI"
  }
  field {
    name: "cbAtr"
    type: "UI"
  }
  field {
    name: "rgbAtr"
    type: "X(ConstantArray.BYTE [36])"
  }
}
struct {
  name: "SCARD_READERSTATEA"
  field {
    name: "szReader"
    type: "*cC;"
  }
  field {
    name: "pvUserData"
    type: "*V;"
  }
  field {
    name: "dwCurrentState"
    type: "UI"
  }
  field {
    name: "dwEventState"
    type: "UI"
  }
  field {
    name: "cbAtr"
    type: "UI"
  }
  field {
    name: "rgbAtr"
    type: "X(ConstantArray.BYTE [36])"
  }
}
struct {
  name: "SCARD_READERSTATEA"
  field {
    name: "szReader"
    type: "*cC;"
  }
  field {
    name: "pvUserData"
    type: "*V;"
  }
  field {
    name: "dwCurrentState"
    type: "UI"
  }
  field {
    name: "dwEventState"
    type: "UI"
  }
  field {
    name: "cbAtr"
    type: "UI"
  }
  field {
    name: "rgbAtr"
    type: "X(ConstantArray.BYTE [36])"
  }
}
struct {
  name: "SCARD_READERSTATEW"
  field {
    name: "szReader"
    type: "*cUS;"
  }
  field {
    name: "pvUserData"
    type: "*V;"
  }
  field {
    name: "dwCurrentState"
    type: "UI"
  }
  field {
    name: "dwEventState"
    type: "UI"
  }
  field {
    name: "cbAtr"
    type: "UI"
  }
  field {
    name: "rgbAtr"
    type: "X(ConstantArray.BYTE [36])"
  }
}
struct {
  name: "SCARD_READERSTATEW"
  field {
    name: "szReader"
    type: "*cUS;"
  }
  field {
    name: "pvUserData"
    type: "*V;"
  }
  field {
    name: "dwCurrentState"
    type: "UI"
  }
  field {
    name: "dwEventState"
    type: "UI"
  }
  field {
    name: "cbAtr"
    type: "UI"
  }
  field {
    name: "rgbAtr"
    type: "X(ConstantArray.BYTE [36])"
  }
}
struct {
  name: "SCARD_READERSTATEW"
  field {
    name: "szReader"
    type: "*cUS;"
  }
  field {
    name: "pvUserData"
    type: "*V;"
  }
  field {
    name: "dwCurrentState"
    type: "UI"
  }
  field {
    name: "dwEventState"
    type: "UI"
  }
  field {
    name: "cbAtr"
    type: "UI"
  }
  field {
    name: "rgbAtr"
    type: "X(ConstantArray.BYTE [36])"
  }
}
struct {
  name: "_PRINTER_DEFAULTSA"
  field {
    name: "pDatatype"
    type: "*C;"
  }
  field {
    name: "pDevMode"
    type: "*RDEVMODEA;;"
  }
  field {
    name: "DesiredAccess"
    type: "UI"
  }
}
struct {
  name: "_PRINTER_DEFAULTSA"
  field {
    name: "pDatatype"
    type: "*C;"
  }
  field {
    name: "pDevMode"
    type: "*RDEVMODEA;;"
  }
  field {
    name: "DesiredAccess"
    type: "UI"
  }
}
struct {
  name: "_PRINTER_DEFAULTSW"
  field {
    name: "pDatatype"
    type: "*US;"
  }
  field {
    name: "pDevMode"
    type: "*RDEVMODEW;;"
  }
  field {
    name: "DesiredAccess"
    type: "UI"
  }
}
struct {
  name: "_PRINTER_DEFAULTSW"
  field {
    name: "pDatatype"
    type: "*US;"
  }
  field {
    name: "pDevMode"
    type: "*RDEVMODEW;;"
  }
  field {
    name: "DesiredAccess"
    type: "UI"
  }
}
struct {
  name: "_DRIVER_INFO_1A"
  field {
    name: "pName"
    type: "*C;"
  }
}
struct {
  name: "_DRIVER_INFO_1A"
  field {
    name: "pName"
    type: "*C;"
  }
}
struct {
  name: "_DRIVER_INFO_1A"
  field {
    name: "pName"
    type: "*C;"
  }
}
struct {
  name: "_DRIVER_INFO_1W"
  field {
    name: "pName"
    type: "*US;"
  }
}
struct {
  name: "_DRIVER_INFO_1W"
  field {
    name: "pName"
    type: "*US;"
  }
}
struct {
  name: "_DRIVER_INFO_1W"
  field {
    name: "pName"
    type: "*US;"
  }
}
struct {
  name: "_DRIVER_INFO_2A"
  field {
    name: "cVersion"
    type: "UI"
  }
  field {
    name: "pName"
    type: "*C;"
  }
  field {
    name: "pEnvironment"
    type: "*C;"
  }
  field {
    name: "pDriverPath"
    type: "*C;"
  }
  field {
    name: "pDataFile"
    type: "*C;"
  }
  field {
    name: "pConfigFile"
    type: "*C;"
  }
}
struct {
  name: "_DRIVER_INFO_2A"
  field {
    name: "cVersion"
    type: "UI"
  }
  field {
    name: "pName"
    type: "*C;"
  }
  field {
    name: "pEnvironment"
    type: "*C;"
  }
  field {
    name: "pDriverPath"
    type: "*C;"
  }
  field {
    name: "pDataFile"
    type: "*C;"
  }
  field {
    name: "pConfigFile"
    type: "*C;"
  }
}
struct {
  name: "_DRIVER_INFO_2A"
  field {
    name: "cVersion"
    type: "UI"
  }
  field {
    name: "pName"
    type: "*C;"
  }
  field {
    name: "pEnvironment"
    type: "*C;"
  }
  field {
    name: "pDriverPath"
    type: "*C;"
  }
  field {
    name: "pDataFile"
    type: "*C;"
  }
  field {
    name: "pConfigFile"
    type: "*C;"
  }
}
struct {
  name: "_DRIVER_INFO_2W"
  field {
    name: "cVersion"
    type: "UI"
  }
  field {
    name: "pName"
    type: "*US;"
  }
  field {
    name: "pEnvironment"
    type: "*US;"
  }
  field {
    name: "pDriverPath"
    type: "*US;"
  }
  field {
    name: "pDataFile"
    type: "*US;"
  }
  field {
    name: "pConfigFile"
    type: "*US;"
  }
}
struct {
  name: "_DRIVER_INFO_2W"
  field {
    name: "cVersion"
    type: "UI"
  }
  field {
    name: "pName"
    type: "*US;"
  }
  field {
    name: "pEnvironment"
    type: "*US;"
  }
  field {
    name: "pDriverPath"
    type: "*US;"
  }
  field {
    name: "pDataFile"
    type: "*US;"
  }
  field {
    name: "pConfigFile"
    type: "*US;"
  }
}
struct {
  name: "_DRIVER_INFO_2W"
  field {
    name: "cVersion"
    type: "UI"
  }
  field {
    name: "pName"
    type: "*US;"
  }
  field {
    name: "pEnvironment"
    type: "*US;"
  }
  field {
    name: "pDriverPath"
    type: "*US;"
  }
  field {
    name: "pDataFile"
    type: "*US;"
  }
  field {
    name: "pConfigFile"
    type: "*US;"
  }
}
struct {
  name: "_DRIVER_INFO_3A"
  field {
    name: "cVersion"
    type: "UI"
  }
  field {
    name: "pName"
    type: "*C;"
  }
  field {
    name: "pEnvironment"
    type: "*C;"
  }
  field {
    name: "pDriverPath"
    type: "*C;"
  }
  field {
    name: "pDataFile"
    type: "*C;"
  }
  field {
    name: "pConfigFile"
    type: "*C;"
  }
  field {
    name: "pHelpFile"
    type: "*C;"
  }
  field {
    name: "pDependentFiles"
    type: "*C;"
  }
  field {
    name: "pMonitorName"
    type: "*C;"
  }
  field {
    name: "pDefaultDataType"
    type: "*C;"
  }
}
struct {
  name: "_DRIVER_INFO_3A"
  field {
    name: "cVersion"
    type: "UI"
  }
  field {
    name: "pName"
    type: "*C;"
  }
  field {
    name: "pEnvironment"
    type: "*C;"
  }
  field {
    name: "pDriverPath"
    type: "*C;"
  }
  field {
    name: "pDataFile"
    type: "*C;"
  }
  field {
    name: "pConfigFile"
    type: "*C;"
  }
  field {
    name: "pHelpFile"
    type: "*C;"
  }
  field {
    name: "pDependentFiles"
    type: "*C;"
  }
  field {
    name: "pMonitorName"
    type: "*C;"
  }
  field {
    name: "pDefaultDataType"
    type: "*C;"
  }
}
struct {
  name: "_DRIVER_INFO_3A"
  field {
    name: "cVersion"
    type: "UI"
  }
  field {
    name: "pName"
    type: "*C;"
  }
  field {
    name: "pEnvironment"
    type: "*C;"
  }
  field {
    name: "pDriverPath"
    type: "*C;"
  }
  field {
    name: "pDataFile"
    type: "*C;"
  }
  field {
    name: "pConfigFile"
    type: "*C;"
  }
  field {
    name: "pHelpFile"
    type: "*C;"
  }
  field {
    name: "pDependentFiles"
    type: "*C;"
  }
  field {
    name: "pMonitorName"
    type: "*C;"
  }
  field {
    name: "pDefaultDataType"
    type: "*C;"
  }
}
struct {
  name: "_DRIVER_INFO_3W"
  field {
    name: "cVersion"
    type: "UI"
  }
  field {
    name: "pName"
    type: "*US;"
  }
  field {
    name: "pEnvironment"
    type: "*US;"
  }
  field {
    name: "pDriverPath"
    type: "*US;"
  }
  field {
    name: "pDataFile"
    type: "*US;"
  }
  field {
    name: "pConfigFile"
    type: "*US;"
  }
  field {
    name: "pHelpFile"
    type: "*US;"
  }
  field {
    name: "pDependentFiles"
    type: "*US;"
  }
  field {
    name: "pMonitorName"
    type: "*US;"
  }
  field {
    name: "pDefaultDataType"
    type: "*US;"
  }
}
struct {
  name: "_DRIVER_INFO_3W"
  field {
    name: "cVersion"
    type: "UI"
  }
  field {
    name: "pName"
    type: "*US;"
  }
  field {
    name: "pEnvironment"
    type: "*US;"
  }
  field {
    name: "pDriverPath"
    type: "*US;"
  }
  field {
    name: "pDataFile"
    type: "*US;"
  }
  field {
    name: "pConfigFile"
    type: "*US;"
  }
  field {
    name: "pHelpFile"
    type: "*US;"
  }
  field {
    name: "pDependentFiles"
    type: "*US;"
  }
  field {
    name: "pMonitorName"
    type: "*US;"
  }
  field {
    name: "pDefaultDataType"
    type: "*US;"
  }
}
struct {
  name: "_DRIVER_INFO_3W"
  field {
    name: "cVersion"
    type: "UI"
  }
  field {
    name: "pName"
    type: "*US;"
  }
  field {
    name: "pEnvironment"
    type: "*US;"
  }
  field {
    name: "pDriverPath"
    type: "*US;"
  }
  field {
    name: "pDataFile"
    type: "*US;"
  }
  field {
    name: "pConfigFile"
    type: "*US;"
  }
  field {
    name: "pHelpFile"
    type: "*US;"
  }
  field {
    name: "pDependentFiles"
    type: "*US;"
  }
  field {
    name: "pMonitorName"
    type: "*US;"
  }
  field {
    name: "pDefaultDataType"
    type: "*US;"
  }
}
struct {
  name: "_DRIVER_INFO_4A"
  field {
    name: "cVersion"
    type: "UI"
  }
  field {
    name: "pName"
    type: "*C;"
  }
  field {
    name: "pEnvironment"
    type: "*C;"
  }
  field {
    name: "pDriverPath"
    type: "*C;"
  }
  field {
    name: "pDataFile"
    type: "*C;"
  }
  field {
    name: "pConfigFile"
    type: "*C;"
  }
  field {
    name: "pHelpFile"
    type: "*C;"
  }
  field {
    name: "pDependentFiles"
    type: "*C;"
  }
  field {
    name: "pMonitorName"
    type: "*C;"
  }
  field {
    name: "pDefaultDataType"
    type: "*C;"
  }
  field {
    name: "pszzPreviousNames"
    type: "*C;"
  }
}
struct {
  name: "_DRIVER_INFO_4A"
  field {
    name: "cVersion"
    type: "UI"
  }
  field {
    name: "pName"
    type: "*C;"
  }
  field {
    name: "pEnvironment"
    type: "*C;"
  }
  field {
    name: "pDriverPath"
    type: "*C;"
  }
  field {
    name: "pDataFile"
    type: "*C;"
  }
  field {
    name: "pConfigFile"
    type: "*C;"
  }
  field {
    name: "pHelpFile"
    type: "*C;"
  }
  field {
    name: "pDependentFiles"
    type: "*C;"
  }
  field {
    name: "pMonitorName"
    type: "*C;"
  }
  field {
    name: "pDefaultDataType"
    type: "*C;"
  }
  field {
    name: "pszzPreviousNames"
    type: "*C;"
  }
}
struct {
  name: "_DRIVER_INFO_4A"
  field {
    name: "cVersion"
    type: "UI"
  }
  field {
    name: "pName"
    type: "*C;"
  }
  field {
    name: "pEnvironment"
    type: "*C;"
  }
  field {
    name: "pDriverPath"
    type: "*C;"
  }
  field {
    name: "pDataFile"
    type: "*C;"
  }
  field {
    name: "pConfigFile"
    type: "*C;"
  }
  field {
    name: "pHelpFile"
    type: "*C;"
  }
  field {
    name: "pDependentFiles"
    type: "*C;"
  }
  field {
    name: "pMonitorName"
    type: "*C;"
  }
  field {
    name: "pDefaultDataType"
    type: "*C;"
  }
  field {
    name: "pszzPreviousNames"
    type: "*C;"
  }
}
struct {
  name: "_DRIVER_INFO_4W"
  field {
    name: "cVersion"
    type: "UI"
  }
  field {
    name: "pName"
    type: "*US;"
  }
  field {
    name: "pEnvironment"
    type: "*US;"
  }
  field {
    name: "pDriverPath"
    type: "*US;"
  }
  field {
    name: "pDataFile"
    type: "*US;"
  }
  field {
    name: "pConfigFile"
    type: "*US;"
  }
  field {
    name: "pHelpFile"
    type: "*US;"
  }
  field {
    name: "pDependentFiles"
    type: "*US;"
  }
  field {
    name: "pMonitorName"
    type: "*US;"
  }
  field {
    name: "pDefaultDataType"
    type: "*US;"
  }
  field {
    name: "pszzPreviousNames"
    type: "*US;"
  }
}
struct {
  name: "_DRIVER_INFO_4W"
  field {
    name: "cVersion"
    type: "UI"
  }
  field {
    name: "pName"
    type: "*US;"
  }
  field {
    name: "pEnvironment"
    type: "*US;"
  }
  field {
    name: "pDriverPath"
    type: "*US;"
  }
  field {
    name: "pDataFile"
    type: "*US;"
  }
  field {
    name: "pConfigFile"
    type: "*US;"
  }
  field {
    name: "pHelpFile"
    type: "*US;"
  }
  field {
    name: "pDependentFiles"
    type: "*US;"
  }
  field {
    name: "pMonitorName"
    type: "*US;"
  }
  field {
    name: "pDefaultDataType"
    type: "*US;"
  }
  field {
    name: "pszzPreviousNames"
    type: "*US;"
  }
}
struct {
  name: "_DRIVER_INFO_4W"
  field {
    name: "cVersion"
    type: "UI"
  }
  field {
    name: "pName"
    type: "*US;"
  }
  field {
    name: "pEnvironment"
    type: "*US;"
  }
  field {
    name: "pDriverPath"
    type: "*US;"
  }
  field {
    name: "pDataFile"
    type: "*US;"
  }
  field {
    name: "pConfigFile"
    type: "*US;"
  }
  field {
    name: "pHelpFile"
    type: "*US;"
  }
  field {
    name: "pDependentFiles"
    type: "*US;"
  }
  field {
    name: "pMonitorName"
    type: "*US;"
  }
  field {
    name: "pDefaultDataType"
    type: "*US;"
  }
  field {
    name: "pszzPreviousNames"
    type: "*US;"
  }
}
struct {
  name: "_DRIVER_INFO_5A"
  field {
    name: "cVersion"
    type: "UI"
  }
  field {
    name: "pName"
    type: "*C;"
  }
  field {
    name: "pEnvironment"
    type: "*C;"
  }
  field {
    name: "pDriverPath"
    type: "*C;"
  }
  field {
    name: "pDataFile"
    type: "*C;"
  }
  field {
    name: "pConfigFile"
    type: "*C;"
  }
  field {
    name: "dwDriverAttributes"
    type: "UI"
  }
  field {
    name: "dwConfigVersion"
    type: "UI"
  }
  field {
    name: "dwDriverVersion"
    type: "UI"
  }
}
struct {
  name: "_DRIVER_INFO_5A"
  field {
    name: "cVersion"
    type: "UI"
  }
  field {
    name: "pName"
    type: "*C;"
  }
  field {
    name: "pEnvironment"
    type: "*C;"
  }
  field {
    name: "pDriverPath"
    type: "*C;"
  }
  field {
    name: "pDataFile"
    type: "*C;"
  }
  field {
    name: "pConfigFile"
    type: "*C;"
  }
  field {
    name: "dwDriverAttributes"
    type: "UI"
  }
  field {
    name: "dwConfigVersion"
    type: "UI"
  }
  field {
    name: "dwDriverVersion"
    type: "UI"
  }
}
struct {
  name: "_DRIVER_INFO_5A"
  field {
    name: "cVersion"
    type: "UI"
  }
  field {
    name: "pName"
    type: "*C;"
  }
  field {
    name: "pEnvironment"
    type: "*C;"
  }
  field {
    name: "pDriverPath"
    type: "*C;"
  }
  field {
    name: "pDataFile"
    type: "*C;"
  }
  field {
    name: "pConfigFile"
    type: "*C;"
  }
  field {
    name: "dwDriverAttributes"
    type: "UI"
  }
  field {
    name: "dwConfigVersion"
    type: "UI"
  }
  field {
    name: "dwDriverVersion"
    type: "UI"
  }
}
struct {
  name: "_DRIVER_INFO_5W"
  field {
    name: "cVersion"
    type: "UI"
  }
  field {
    name: "pName"
    type: "*US;"
  }
  field {
    name: "pEnvironment"
    type: "*US;"
  }
  field {
    name: "pDriverPath"
    type: "*US;"
  }
  field {
    name: "pDataFile"
    type: "*US;"
  }
  field {
    name: "pConfigFile"
    type: "*US;"
  }
  field {
    name: "dwDriverAttributes"
    type: "UI"
  }
  field {
    name: "dwConfigVersion"
    type: "UI"
  }
  field {
    name: "dwDriverVersion"
    type: "UI"
  }
}
struct {
  name: "_DRIVER_INFO_5W"
  field {
    name: "cVersion"
    type: "UI"
  }
  field {
    name: "pName"
    type: "*US;"
  }
  field {
    name: "pEnvironment"
    type: "*US;"
  }
  field {
    name: "pDriverPath"
    type: "*US;"
  }
  field {
    name: "pDataFile"
    type: "*US;"
  }
  field {
    name: "pConfigFile"
    type: "*US;"
  }
  field {
    name: "dwDriverAttributes"
    type: "UI"
  }
  field {
    name: "dwConfigVersion"
    type: "UI"
  }
  field {
    name: "dwDriverVersion"
    type: "UI"
  }
}
struct {
  name: "_DRIVER_INFO_5W"
  field {
    name: "cVersion"
    type: "UI"
  }
  field {
    name: "pName"
    type: "*US;"
  }
  field {
    name: "pEnvironment"
    type: "*US;"
  }
  field {
    name: "pDriverPath"
    type: "*US;"
  }
  field {
    name: "pDataFile"
    type: "*US;"
  }
  field {
    name: "pConfigFile"
    type: "*US;"
  }
  field {
    name: "dwDriverAttributes"
    type: "UI"
  }
  field {
    name: "dwConfigVersion"
    type: "UI"
  }
  field {
    name: "dwDriverVersion"
    type: "UI"
  }
}
struct {
  name: "_DRIVER_INFO_6A"
  field {
    name: "cVersion"
    type: "UI"
  }
  field {
    name: "pName"
    type: "*C;"
  }
  field {
    name: "pEnvironment"
    type: "*C;"
  }
  field {
    name: "pDriverPath"
    type: "*C;"
  }
  field {
    name: "pDataFile"
    type: "*C;"
  }
  field {
    name: "pConfigFile"
    type: "*C;"
  }
  field {
    name: "pHelpFile"
    type: "*C;"
  }
  field {
    name: "pDependentFiles"
    type: "*C;"
  }
  field {
    name: "pMonitorName"
    type: "*C;"
  }
  field {
    name: "pDefaultDataType"
    type: "*C;"
  }
  field {
    name: "pszzPreviousNames"
    type: "*C;"
  }
  field {
    name: "ftDriverDate"
    type: "R_FILETIME;"
  }
  field {
    name: "dwlDriverVersion"
    type: "UI"
  }
  field {
    name: "pszMfgName"
    type: "*C;"
  }
  field {
    name: "pszOEMUrl"
    type: "*C;"
  }
  field {
    name: "pszHardwareID"
    type: "*C;"
  }
  field {
    name: "pszProvider"
    type: "*C;"
  }
}
struct {
  name: "_DRIVER_INFO_6A"
  field {
    name: "cVersion"
    type: "UI"
  }
  field {
    name: "pName"
    type: "*C;"
  }
  field {
    name: "pEnvironment"
    type: "*C;"
  }
  field {
    name: "pDriverPath"
    type: "*C;"
  }
  field {
    name: "pDataFile"
    type: "*C;"
  }
  field {
    name: "pConfigFile"
    type: "*C;"
  }
  field {
    name: "pHelpFile"
    type: "*C;"
  }
  field {
    name: "pDependentFiles"
    type: "*C;"
  }
  field {
    name: "pMonitorName"
    type: "*C;"
  }
  field {
    name: "pDefaultDataType"
    type: "*C;"
  }
  field {
    name: "pszzPreviousNames"
    type: "*C;"
  }
  field {
    name: "ftDriverDate"
    type: "R_FILETIME;"
  }
  field {
    name: "dwlDriverVersion"
    type: "UI"
  }
  field {
    name: "pszMfgName"
    type: "*C;"
  }
  field {
    name: "pszOEMUrl"
    type: "*C;"
  }
  field {
    name: "pszHardwareID"
    type: "*C;"
  }
  field {
    name: "pszProvider"
    type: "*C;"
  }
}
struct {
  name: "_DRIVER_INFO_6A"
  field {
    name: "cVersion"
    type: "UI"
  }
  field {
    name: "pName"
    type: "*C;"
  }
  field {
    name: "pEnvironment"
    type: "*C;"
  }
  field {
    name: "pDriverPath"
    type: "*C;"
  }
  field {
    name: "pDataFile"
    type: "*C;"
  }
  field {
    name: "pConfigFile"
    type: "*C;"
  }
  field {
    name: "pHelpFile"
    type: "*C;"
  }
  field {
    name: "pDependentFiles"
    type: "*C;"
  }
  field {
    name: "pMonitorName"
    type: "*C;"
  }
  field {
    name: "pDefaultDataType"
    type: "*C;"
  }
  field {
    name: "pszzPreviousNames"
    type: "*C;"
  }
  field {
    name: "ftDriverDate"
    type: "R_FILETIME;"
  }
  field {
    name: "dwlDriverVersion"
    type: "UI"
  }
  field {
    name: "pszMfgName"
    type: "*C;"
  }
  field {
    name: "pszOEMUrl"
    type: "*C;"
  }
  field {
    name: "pszHardwareID"
    type: "*C;"
  }
  field {
    name: "pszProvider"
    type: "*C;"
  }
}
struct {
  name: "_DRIVER_INFO_6W"
  field {
    name: "cVersion"
    type: "UI"
  }
  field {
    name: "pName"
    type: "*US;"
  }
  field {
    name: "pEnvironment"
    type: "*US;"
  }
  field {
    name: "pDriverPath"
    type: "*US;"
  }
  field {
    name: "pDataFile"
    type: "*US;"
  }
  field {
    name: "pConfigFile"
    type: "*US;"
  }
  field {
    name: "pHelpFile"
    type: "*US;"
  }
  field {
    name: "pDependentFiles"
    type: "*US;"
  }
  field {
    name: "pMonitorName"
    type: "*US;"
  }
  field {
    name: "pDefaultDataType"
    type: "*US;"
  }
  field {
    name: "pszzPreviousNames"
    type: "*US;"
  }
  field {
    name: "ftDriverDate"
    type: "R_FILETIME;"
  }
  field {
    name: "dwlDriverVersion"
    type: "UI"
  }
  field {
    name: "pszMfgName"
    type: "*US;"
  }
  field {
    name: "pszOEMUrl"
    type: "*US;"
  }
  field {
    name: "pszHardwareID"
    type: "*US;"
  }
  field {
    name: "pszProvider"
    type: "*US;"
  }
}
struct {
  name: "_DRIVER_INFO_6W"
  field {
    name: "cVersion"
    type: "UI"
  }
  field {
    name: "pName"
    type: "*US;"
  }
  field {
    name: "pEnvironment"
    type: "*US;"
  }
  field {
    name: "pDriverPath"
    type: "*US;"
  }
  field {
    name: "pDataFile"
    type: "*US;"
  }
  field {
    name: "pConfigFile"
    type: "*US;"
  }
  field {
    name: "pHelpFile"
    type: "*US;"
  }
  field {
    name: "pDependentFiles"
    type: "*US;"
  }
  field {
    name: "pMonitorName"
    type: "*US;"
  }
  field {
    name: "pDefaultDataType"
    type: "*US;"
  }
  field {
    name: "pszzPreviousNames"
    type: "*US;"
  }
  field {
    name: "ftDriverDate"
    type: "R_FILETIME;"
  }
  field {
    name: "dwlDriverVersion"
    type: "UI"
  }
  field {
    name: "pszMfgName"
    type: "*US;"
  }
  field {
    name: "pszOEMUrl"
    type: "*US;"
  }
  field {
    name: "pszHardwareID"
    type: "*US;"
  }
  field {
    name: "pszProvider"
    type: "*US;"
  }
}
struct {
  name: "_DRIVER_INFO_6W"
  field {
    name: "cVersion"
    type: "UI"
  }
  field {
    name: "pName"
    type: "*US;"
  }
  field {
    name: "pEnvironment"
    type: "*US;"
  }
  field {
    name: "pDriverPath"
    type: "*US;"
  }
  field {
    name: "pDataFile"
    type: "*US;"
  }
  field {
    name: "pConfigFile"
    type: "*US;"
  }
  field {
    name: "pHelpFile"
    type: "*US;"
  }
  field {
    name: "pDependentFiles"
    type: "*US;"
  }
  field {
    name: "pMonitorName"
    type: "*US;"
  }
  field {
    name: "pDefaultDataType"
    type: "*US;"
  }
  field {
    name: "pszzPreviousNames"
    type: "*US;"
  }
  field {
    name: "ftDriverDate"
    type: "R_FILETIME;"
  }
  field {
    name: "dwlDriverVersion"
    type: "UI"
  }
  field {
    name: "pszMfgName"
    type: "*US;"
  }
  field {
    name: "pszOEMUrl"
    type: "*US;"
  }
  field {
    name: "pszHardwareID"
    type: "*US;"
  }
  field {
    name: "pszProvider"
    type: "*US;"
  }
}
struct {
  name: "_DRIVER_INFO_8A"
  field {
    name: "cVersion"
    type: "UI"
  }
  field {
    name: "pName"
    type: "*C;"
  }
  field {
    name: "pEnvironment"
    type: "*C;"
  }
  field {
    name: "pDriverPath"
    type: "*C;"
  }
  field {
    name: "pDataFile"
    type: "*C;"
  }
  field {
    name: "pConfigFile"
    type: "*C;"
  }
  field {
    name: "pHelpFile"
    type: "*C;"
  }
  field {
    name: "pDependentFiles"
    type: "*C;"
  }
  field {
    name: "pMonitorName"
    type: "*C;"
  }
  field {
    name: "pDefaultDataType"
    type: "*C;"
  }
  field {
    name: "pszzPreviousNames"
    type: "*C;"
  }
  field {
    name: "ftDriverDate"
    type: "R_FILETIME;"
  }
  field {
    name: "dwlDriverVersion"
    type: "UI"
  }
  field {
    name: "pszMfgName"
    type: "*C;"
  }
  field {
    name: "pszOEMUrl"
    type: "*C;"
  }
  field {
    name: "pszHardwareID"
    type: "*C;"
  }
  field {
    name: "pszProvider"
    type: "*C;"
  }
  field {
    name: "pszPrintProcessor"
    type: "*C;"
  }
  field {
    name: "pszVendorSetup"
    type: "*C;"
  }
  field {
    name: "pszzColorProfiles"
    type: "*C;"
  }
  field {
    name: "pszInfPath"
    type: "*C;"
  }
  field {
    name: "dwPrinterDriverAttributes"
    type: "UI"
  }
  field {
    name: "pszzCoreDriverDependencies"
    type: "*C;"
  }
  field {
    name: "ftMinInboxDriverVerDate"
    type: "R_FILETIME;"
  }
  field {
    name: "dwlMinInboxDriverVerVersion"
    type: "UI"
  }
}
struct {
  name: "_DRIVER_INFO_8A"
  field {
    name: "cVersion"
    type: "UI"
  }
  field {
    name: "pName"
    type: "*C;"
  }
  field {
    name: "pEnvironment"
    type: "*C;"
  }
  field {
    name: "pDriverPath"
    type: "*C;"
  }
  field {
    name: "pDataFile"
    type: "*C;"
  }
  field {
    name: "pConfigFile"
    type: "*C;"
  }
  field {
    name: "pHelpFile"
    type: "*C;"
  }
  field {
    name: "pDependentFiles"
    type: "*C;"
  }
  field {
    name: "pMonitorName"
    type: "*C;"
  }
  field {
    name: "pDefaultDataType"
    type: "*C;"
  }
  field {
    name: "pszzPreviousNames"
    type: "*C;"
  }
  field {
    name: "ftDriverDate"
    type: "R_FILETIME;"
  }
  field {
    name: "dwlDriverVersion"
    type: "UI"
  }
  field {
    name: "pszMfgName"
    type: "*C;"
  }
  field {
    name: "pszOEMUrl"
    type: "*C;"
  }
  field {
    name: "pszHardwareID"
    type: "*C;"
  }
  field {
    name: "pszProvider"
    type: "*C;"
  }
  field {
    name: "pszPrintProcessor"
    type: "*C;"
  }
  field {
    name: "pszVendorSetup"
    type: "*C;"
  }
  field {
    name: "pszzColorProfiles"
    type: "*C;"
  }
  field {
    name: "pszInfPath"
    type: "*C;"
  }
  field {
    name: "dwPrinterDriverAttributes"
    type: "UI"
  }
  field {
    name: "pszzCoreDriverDependencies"
    type: "*C;"
  }
  field {
    name: "ftMinInboxDriverVerDate"
    type: "R_FILETIME;"
  }
  field {
    name: "dwlMinInboxDriverVerVersion"
    type: "UI"
  }
}
struct {
  name: "_DRIVER_INFO_8A"
  field {
    name: "cVersion"
    type: "UI"
  }
  field {
    name: "pName"
    type: "*C;"
  }
  field {
    name: "pEnvironment"
    type: "*C;"
  }
  field {
    name: "pDriverPath"
    type: "*C;"
  }
  field {
    name: "pDataFile"
    type: "*C;"
  }
  field {
    name: "pConfigFile"
    type: "*C;"
  }
  field {
    name: "pHelpFile"
    type: "*C;"
  }
  field {
    name: "pDependentFiles"
    type: "*C;"
  }
  field {
    name: "pMonitorName"
    type: "*C;"
  }
  field {
    name: "pDefaultDataType"
    type: "*C;"
  }
  field {
    name: "pszzPreviousNames"
    type: "*C;"
  }
  field {
    name: "ftDriverDate"
    type: "R_FILETIME;"
  }
  field {
    name: "dwlDriverVersion"
    type: "UI"
  }
  field {
    name: "pszMfgName"
    type: "*C;"
  }
  field {
    name: "pszOEMUrl"
    type: "*C;"
  }
  field {
    name: "pszHardwareID"
    type: "*C;"
  }
  field {
    name: "pszProvider"
    type: "*C;"
  }
  field {
    name: "pszPrintProcessor"
    type: "*C;"
  }
  field {
    name: "pszVendorSetup"
    type: "*C;"
  }
  field {
    name: "pszzColorProfiles"
    type: "*C;"
  }
  field {
    name: "pszInfPath"
    type: "*C;"
  }
  field {
    name: "dwPrinterDriverAttributes"
    type: "UI"
  }
  field {
    name: "pszzCoreDriverDependencies"
    type: "*C;"
  }
  field {
    name: "ftMinInboxDriverVerDate"
    type: "R_FILETIME;"
  }
  field {
    name: "dwlMinInboxDriverVerVersion"
    type: "UI"
  }
}
struct {
  name: "_DRIVER_INFO_8W"
  field {
    name: "cVersion"
    type: "UI"
  }
  field {
    name: "pName"
    type: "*US;"
  }
  field {
    name: "pEnvironment"
    type: "*US;"
  }
  field {
    name: "pDriverPath"
    type: "*US;"
  }
  field {
    name: "pDataFile"
    type: "*US;"
  }
  field {
    name: "pConfigFile"
    type: "*US;"
  }
  field {
    name: "pHelpFile"
    type: "*US;"
  }
  field {
    name: "pDependentFiles"
    type: "*US;"
  }
  field {
    name: "pMonitorName"
    type: "*US;"
  }
  field {
    name: "pDefaultDataType"
    type: "*US;"
  }
  field {
    name: "pszzPreviousNames"
    type: "*US;"
  }
  field {
    name: "ftDriverDate"
    type: "R_FILETIME;"
  }
  field {
    name: "dwlDriverVersion"
    type: "UI"
  }
  field {
    name: "pszMfgName"
    type: "*US;"
  }
  field {
    name: "pszOEMUrl"
    type: "*US;"
  }
  field {
    name: "pszHardwareID"
    type: "*US;"
  }
  field {
    name: "pszProvider"
    type: "*US;"
  }
  field {
    name: "pszPrintProcessor"
    type: "*US;"
  }
  field {
    name: "pszVendorSetup"
    type: "*US;"
  }
  field {
    name: "pszzColorProfiles"
    type: "*US;"
  }
  field {
    name: "pszInfPath"
    type: "*US;"
  }
  field {
    name: "dwPrinterDriverAttributes"
    type: "UI"
  }
  field {
    name: "pszzCoreDriverDependencies"
    type: "*US;"
  }
  field {
    name: "ftMinInboxDriverVerDate"
    type: "R_FILETIME;"
  }
  field {
    name: "dwlMinInboxDriverVerVersion"
    type: "UI"
  }
}
struct {
  name: "_DRIVER_INFO_8W"
  field {
    name: "cVersion"
    type: "UI"
  }
  field {
    name: "pName"
    type: "*US;"
  }
  field {
    name: "pEnvironment"
    type: "*US;"
  }
  field {
    name: "pDriverPath"
    type: "*US;"
  }
  field {
    name: "pDataFile"
    type: "*US;"
  }
  field {
    name: "pConfigFile"
    type: "*US;"
  }
  field {
    name: "pHelpFile"
    type: "*US;"
  }
  field {
    name: "pDependentFiles"
    type: "*US;"
  }
  field {
    name: "pMonitorName"
    type: "*US;"
  }
  field {
    name: "pDefaultDataType"
    type: "*US;"
  }
  field {
    name: "pszzPreviousNames"
    type: "*US;"
  }
  field {
    name: "ftDriverDate"
    type: "R_FILETIME;"
  }
  field {
    name: "dwlDriverVersion"
    type: "UI"
  }
  field {
    name: "pszMfgName"
    type: "*US;"
  }
  field {
    name: "pszOEMUrl"
    type: "*US;"
  }
  field {
    name: "pszHardwareID"
    type: "*US;"
  }
  field {
    name: "pszProvider"
    type: "*US;"
  }
  field {
    name: "pszPrintProcessor"
    type: "*US;"
  }
  field {
    name: "pszVendorSetup"
    type: "*US;"
  }
  field {
    name: "pszzColorProfiles"
    type: "*US;"
  }
  field {
    name: "pszInfPath"
    type: "*US;"
  }
  field {
    name: "dwPrinterDriverAttributes"
    type: "UI"
  }
  field {
    name: "pszzCoreDriverDependencies"
    type: "*US;"
  }
  field {
    name: "ftMinInboxDriverVerDate"
    type: "R_FILETIME;"
  }
  field {
    name: "dwlMinInboxDriverVerVersion"
    type: "UI"
  }
}
struct {
  name: "_DRIVER_INFO_8W"
  field {
    name: "cVersion"
    type: "UI"
  }
  field {
    name: "pName"
    type: "*US;"
  }
  field {
    name: "pEnvironment"
    type: "*US;"
  }
  field {
    name: "pDriverPath"
    type: "*US;"
  }
  field {
    name: "pDataFile"
    type: "*US;"
  }
  field {
    name: "pConfigFile"
    type: "*US;"
  }
  field {
    name: "pHelpFile"
    type: "*US;"
  }
  field {
    name: "pDependentFiles"
    type: "*US;"
  }
  field {
    name: "pMonitorName"
    type: "*US;"
  }
  field {
    name: "pDefaultDataType"
    type: "*US;"
  }
  field {
    name: "pszzPreviousNames"
    type: "*US;"
  }
  field {
    name: "ftDriverDate"
    type: "R_FILETIME;"
  }
  field {
    name: "dwlDriverVersion"
    type: "UI"
  }
  field {
    name: "pszMfgName"
    type: "*US;"
  }
  field {
    name: "pszOEMUrl"
    type: "*US;"
  }
  field {
    name: "pszHardwareID"
    type: "*US;"
  }
  field {
    name: "pszProvider"
    type: "*US;"
  }
  field {
    name: "pszPrintProcessor"
    type: "*US;"
  }
  field {
    name: "pszVendorSetup"
    type: "*US;"
  }
  field {
    name: "pszzColorProfiles"
    type: "*US;"
  }
  field {
    name: "pszInfPath"
    type: "*US;"
  }
  field {
    name: "dwPrinterDriverAttributes"
    type: "UI"
  }
  field {
    name: "pszzCoreDriverDependencies"
    type: "*US;"
  }
  field {
    name: "ftMinInboxDriverVerDate"
    type: "R_FILETIME;"
  }
  field {
    name: "dwlMinInboxDriverVerVersion"
    type: "UI"
  }
}
struct {
  name: "_PRINTER_INFO_1A"
  field {
    name: "Flags"
    type: "UI"
  }
  field {
    name: "pDescription"
    type: "*C;"
  }
  field {
    name: "pName"
    type: "*C;"
  }
  field {
    name: "pComment"
    type: "*C;"
  }
}
struct {
  name: "_PRINTER_INFO_1A"
  field {
    name: "Flags"
    type: "UI"
  }
  field {
    name: "pDescription"
    type: "*C;"
  }
  field {
    name: "pName"
    type: "*C;"
  }
  field {
    name: "pComment"
    type: "*C;"
  }
}
struct {
  name: "_PRINTER_INFO_1A"
  field {
    name: "Flags"
    type: "UI"
  }
  field {
    name: "pDescription"
    type: "*C;"
  }
  field {
    name: "pName"
    type: "*C;"
  }
  field {
    name: "pComment"
    type: "*C;"
  }
}
struct {
  name: "_PRINTER_INFO_1W"
  field {
    name: "Flags"
    type: "UI"
  }
  field {
    name: "pDescription"
    type: "*US;"
  }
  field {
    name: "pName"
    type: "*US;"
  }
  field {
    name: "pComment"
    type: "*US;"
  }
}
struct {
  name: "_PRINTER_INFO_1W"
  field {
    name: "Flags"
    type: "UI"
  }
  field {
    name: "pDescription"
    type: "*US;"
  }
  field {
    name: "pName"
    type: "*US;"
  }
  field {
    name: "pComment"
    type: "*US;"
  }
}
struct {
  name: "_PRINTER_INFO_1W"
  field {
    name: "Flags"
    type: "UI"
  }
  field {
    name: "pDescription"
    type: "*US;"
  }
  field {
    name: "pName"
    type: "*US;"
  }
  field {
    name: "pComment"
    type: "*US;"
  }
}
struct {
  name: "_PRINTER_INFO_2A"
  field {
    name: "pServerName"
    type: "*C;"
  }
  field {
    name: "pPrinterName"
    type: "*C;"
  }
  field {
    name: "pShareName"
    type: "*C;"
  }
  field {
    name: "pPortName"
    type: "*C;"
  }
  field {
    name: "pDriverName"
    type: "*C;"
  }
  field {
    name: "pComment"
    type: "*C;"
  }
  field {
    name: "pLocation"
    type: "*C;"
  }
  field {
    name: "pDevMode"
    type: "*RDEVMODEA;;"
  }
  field {
    name: "pSepFile"
    type: "*C;"
  }
  field {
    name: "pPrintProcessor"
    type: "*C;"
  }
  field {
    name: "pDatatype"
    type: "*C;"
  }
  field {
    name: "pParameters"
    type: "*C;"
  }
  field {
    name: "pSecurityDescriptor"
    type: "*V;"
  }
  field {
    name: "Attributes"
    type: "UI"
  }
  field {
    name: "Priority"
    type: "UI"
  }
  field {
    name: "DefaultPriority"
    type: "UI"
  }
  field {
    name: "StartTime"
    type: "UI"
  }
  field {
    name: "UntilTime"
    type: "UI"
  }
  field {
    name: "Status"
    type: "UI"
  }
  field {
    name: "cJobs"
    type: "UI"
  }
  field {
    name: "AveragePPM"
    type: "UI"
  }
}
struct {
  name: "_PRINTER_INFO_2A"
  field {
    name: "pServerName"
    type: "*C;"
  }
  field {
    name: "pPrinterName"
    type: "*C;"
  }
  field {
    name: "pShareName"
    type: "*C;"
  }
  field {
    name: "pPortName"
    type: "*C;"
  }
  field {
    name: "pDriverName"
    type: "*C;"
  }
  field {
    name: "pComment"
    type: "*C;"
  }
  field {
    name: "pLocation"
    type: "*C;"
  }
  field {
    name: "pDevMode"
    type: "*RDEVMODEA;;"
  }
  field {
    name: "pSepFile"
    type: "*C;"
  }
  field {
    name: "pPrintProcessor"
    type: "*C;"
  }
  field {
    name: "pDatatype"
    type: "*C;"
  }
  field {
    name: "pParameters"
    type: "*C;"
  }
  field {
    name: "pSecurityDescriptor"
    type: "*V;"
  }
  field {
    name: "Attributes"
    type: "UI"
  }
  field {
    name: "Priority"
    type: "UI"
  }
  field {
    name: "DefaultPriority"
    type: "UI"
  }
  field {
    name: "StartTime"
    type: "UI"
  }
  field {
    name: "UntilTime"
    type: "UI"
  }
  field {
    name: "Status"
    type: "UI"
  }
  field {
    name: "cJobs"
    type: "UI"
  }
  field {
    name: "AveragePPM"
    type: "UI"
  }
}
struct {
  name: "_PRINTER_INFO_2A"
  field {
    name: "pServerName"
    type: "*C;"
  }
  field {
    name: "pPrinterName"
    type: "*C;"
  }
  field {
    name: "pShareName"
    type: "*C;"
  }
  field {
    name: "pPortName"
    type: "*C;"
  }
  field {
    name: "pDriverName"
    type: "*C;"
  }
  field {
    name: "pComment"
    type: "*C;"
  }
  field {
    name: "pLocation"
    type: "*C;"
  }
  field {
    name: "pDevMode"
    type: "*RDEVMODEA;;"
  }
  field {
    name: "pSepFile"
    type: "*C;"
  }
  field {
    name: "pPrintProcessor"
    type: "*C;"
  }
  field {
    name: "pDatatype"
    type: "*C;"
  }
  field {
    name: "pParameters"
    type: "*C;"
  }
  field {
    name: "pSecurityDescriptor"
    type: "*V;"
  }
  field {
    name: "Attributes"
    type: "UI"
  }
  field {
    name: "Priority"
    type: "UI"
  }
  field {
    name: "DefaultPriority"
    type: "UI"
  }
  field {
    name: "StartTime"
    type: "UI"
  }
  field {
    name: "UntilTime"
    type: "UI"
  }
  field {
    name: "Status"
    type: "UI"
  }
  field {
    name: "cJobs"
    type: "UI"
  }
  field {
    name: "AveragePPM"
    type: "UI"
  }
}
struct {
  name: "_PRINTER_INFO_2W"
  field {
    name: "pServerName"
    type: "*US;"
  }
  field {
    name: "pPrinterName"
    type: "*US;"
  }
  field {
    name: "pShareName"
    type: "*US;"
  }
  field {
    name: "pPortName"
    type: "*US;"
  }
  field {
    name: "pDriverName"
    type: "*US;"
  }
  field {
    name: "pComment"
    type: "*US;"
  }
  field {
    name: "pLocation"
    type: "*US;"
  }
  field {
    name: "pDevMode"
    type: "*RDEVMODEW;;"
  }
  field {
    name: "pSepFile"
    type: "*US;"
  }
  field {
    name: "pPrintProcessor"
    type: "*US;"
  }
  field {
    name: "pDatatype"
    type: "*US;"
  }
  field {
    name: "pParameters"
    type: "*US;"
  }
  field {
    name: "pSecurityDescriptor"
    type: "*V;"
  }
  field {
    name: "Attributes"
    type: "UI"
  }
  field {
    name: "Priority"
    type: "UI"
  }
  field {
    name: "DefaultPriority"
    type: "UI"
  }
  field {
    name: "StartTime"
    type: "UI"
  }
  field {
    name: "UntilTime"
    type: "UI"
  }
  field {
    name: "Status"
    type: "UI"
  }
  field {
    name: "cJobs"
    type: "UI"
  }
  field {
    name: "AveragePPM"
    type: "UI"
  }
}
struct {
  name: "_PRINTER_INFO_2W"
  field {
    name: "pServerName"
    type: "*US;"
  }
  field {
    name: "pPrinterName"
    type: "*US;"
  }
  field {
    name: "pShareName"
    type: "*US;"
  }
  field {
    name: "pPortName"
    type: "*US;"
  }
  field {
    name: "pDriverName"
    type: "*US;"
  }
  field {
    name: "pComment"
    type: "*US;"
  }
  field {
    name: "pLocation"
    type: "*US;"
  }
  field {
    name: "pDevMode"
    type: "*RDEVMODEW;;"
  }
  field {
    name: "pSepFile"
    type: "*US;"
  }
  field {
    name: "pPrintProcessor"
    type: "*US;"
  }
  field {
    name: "pDatatype"
    type: "*US;"
  }
  field {
    name: "pParameters"
    type: "*US;"
  }
  field {
    name: "pSecurityDescriptor"
    type: "*V;"
  }
  field {
    name: "Attributes"
    type: "UI"
  }
  field {
    name: "Priority"
    type: "UI"
  }
  field {
    name: "DefaultPriority"
    type: "UI"
  }
  field {
    name: "StartTime"
    type: "UI"
  }
  field {
    name: "UntilTime"
    type: "UI"
  }
  field {
    name: "Status"
    type: "UI"
  }
  field {
    name: "cJobs"
    type: "UI"
  }
  field {
    name: "AveragePPM"
    type: "UI"
  }
}
struct {
  name: "_PRINTER_INFO_2W"
  field {
    name: "pServerName"
    type: "*US;"
  }
  field {
    name: "pPrinterName"
    type: "*US;"
  }
  field {
    name: "pShareName"
    type: "*US;"
  }
  field {
    name: "pPortName"
    type: "*US;"
  }
  field {
    name: "pDriverName"
    type: "*US;"
  }
  field {
    name: "pComment"
    type: "*US;"
  }
  field {
    name: "pLocation"
    type: "*US;"
  }
  field {
    name: "pDevMode"
    type: "*RDEVMODEW;;"
  }
  field {
    name: "pSepFile"
    type: "*US;"
  }
  field {
    name: "pPrintProcessor"
    type: "*US;"
  }
  field {
    name: "pDatatype"
    type: "*US;"
  }
  field {
    name: "pParameters"
    type: "*US;"
  }
  field {
    name: "pSecurityDescriptor"
    type: "*V;"
  }
  field {
    name: "Attributes"
    type: "UI"
  }
  field {
    name: "Priority"
    type: "UI"
  }
  field {
    name: "DefaultPriority"
    type: "UI"
  }
  field {
    name: "StartTime"
    type: "UI"
  }
  field {
    name: "UntilTime"
    type: "UI"
  }
  field {
    name: "Status"
    type: "UI"
  }
  field {
    name: "cJobs"
    type: "UI"
  }
  field {
    name: "AveragePPM"
    type: "UI"
  }
}
struct {
  name: "_PRINTER_INFO_3"
  field {
    name: "pSecurityDescriptor"
    type: "*V;"
  }
}
struct {
  name: "_PRINTER_INFO_3"
  field {
    name: "pSecurityDescriptor"
    type: "*V;"
  }
}
struct {
  name: "_PRINTER_INFO_3"
  field {
    name: "pSecurityDescriptor"
    type: "*V;"
  }
}
struct {
  name: "_PRINTER_INFO_4A"
  field {
    name: "pPrinterName"
    type: "*C;"
  }
  field {
    name: "pServerName"
    type: "*C;"
  }
  field {
    name: "Attributes"
    type: "UI"
  }
}
struct {
  name: "_PRINTER_INFO_4A"
  field {
    name: "pPrinterName"
    type: "*C;"
  }
  field {
    name: "pServerName"
    type: "*C;"
  }
  field {
    name: "Attributes"
    type: "UI"
  }
}
struct {
  name: "_PRINTER_INFO_4A"
  field {
    name: "pPrinterName"
    type: "*C;"
  }
  field {
    name: "pServerName"
    type: "*C;"
  }
  field {
    name: "Attributes"
    type: "UI"
  }
}
struct {
  name: "_PRINTER_INFO_4W"
  field {
    name: "pPrinterName"
    type: "*US;"
  }
  field {
    name: "pServerName"
    type: "*US;"
  }
  field {
    name: "Attributes"
    type: "UI"
  }
}
struct {
  name: "_PRINTER_INFO_4W"
  field {
    name: "pPrinterName"
    type: "*US;"
  }
  field {
    name: "pServerName"
    type: "*US;"
  }
  field {
    name: "Attributes"
    type: "UI"
  }
}
struct {
  name: "_PRINTER_INFO_4W"
  field {
    name: "pPrinterName"
    type: "*US;"
  }
  field {
    name: "pServerName"
    type: "*US;"
  }
  field {
    name: "Attributes"
    type: "UI"
  }
}
struct {
  name: "_PRINTER_INFO_5A"
  field {
    name: "pPrinterName"
    type: "*C;"
  }
  field {
    name: "pPortName"
    type: "*C;"
  }
  field {
    name: "Attributes"
    type: "UI"
  }
  field {
    name: "DeviceNotSelectedTimeout"
    type: "UI"
  }
  field {
    name: "TransmissionRetryTimeout"
    type: "UI"
  }
}
struct {
  name: "_PRINTER_INFO_5A"
  field {
    name: "pPrinterName"
    type: "*C;"
  }
  field {
    name: "pPortName"
    type: "*C;"
  }
  field {
    name: "Attributes"
    type: "UI"
  }
  field {
    name: "DeviceNotSelectedTimeout"
    type: "UI"
  }
  field {
    name: "TransmissionRetryTimeout"
    type: "UI"
  }
}
struct {
  name: "_PRINTER_INFO_5A"
  field {
    name: "pPrinterName"
    type: "*C;"
  }
  field {
    name: "pPortName"
    type: "*C;"
  }
  field {
    name: "Attributes"
    type: "UI"
  }
  field {
    name: "DeviceNotSelectedTimeout"
    type: "UI"
  }
  field {
    name: "TransmissionRetryTimeout"
    type: "UI"
  }
}
struct {
  name: "_PRINTER_INFO_5W"
  field {
    name: "pPrinterName"
    type: "*US;"
  }
  field {
    name: "pPortName"
    type: "*US;"
  }
  field {
    name: "Attributes"
    type: "UI"
  }
  field {
    name: "DeviceNotSelectedTimeout"
    type: "UI"
  }
  field {
    name: "TransmissionRetryTimeout"
    type: "UI"
  }
}
struct {
  name: "_PRINTER_INFO_5W"
  field {
    name: "pPrinterName"
    type: "*US;"
  }
  field {
    name: "pPortName"
    type: "*US;"
  }
  field {
    name: "Attributes"
    type: "UI"
  }
  field {
    name: "DeviceNotSelectedTimeout"
    type: "UI"
  }
  field {
    name: "TransmissionRetryTimeout"
    type: "UI"
  }
}
struct {
  name: "_PRINTER_INFO_5W"
  field {
    name: "pPrinterName"
    type: "*US;"
  }
  field {
    name: "pPortName"
    type: "*US;"
  }
  field {
    name: "Attributes"
    type: "UI"
  }
  field {
    name: "DeviceNotSelectedTimeout"
    type: "UI"
  }
  field {
    name: "TransmissionRetryTimeout"
    type: "UI"
  }
}
struct {
  name: "_PRINTER_INFO_6"
  field {
    name: "dwStatus"
    type: "UI"
  }
}
struct {
  name: "_PRINTER_INFO_6"
  field {
    name: "dwStatus"
    type: "UI"
  }
}
struct {
  name: "_PRINTER_INFO_6"
  field {
    name: "dwStatus"
    type: "UI"
  }
}
struct {
  name: "_PRINTER_INFO_7A"
  field {
    name: "pszObjectGUID"
    type: "*C;"
  }
  field {
    name: "dwAction"
    type: "UI"
  }
}
struct {
  name: "_PRINTER_INFO_7A"
  field {
    name: "pszObjectGUID"
    type: "*C;"
  }
  field {
    name: "dwAction"
    type: "UI"
  }
}
struct {
  name: "_PRINTER_INFO_7A"
  field {
    name: "pszObjectGUID"
    type: "*C;"
  }
  field {
    name: "dwAction"
    type: "UI"
  }
}
struct {
  name: "_PRINTER_INFO_7W"
  field {
    name: "pszObjectGUID"
    type: "*US;"
  }
  field {
    name: "dwAction"
    type: "UI"
  }
}
struct {
  name: "_PRINTER_INFO_7W"
  field {
    name: "pszObjectGUID"
    type: "*US;"
  }
  field {
    name: "dwAction"
    type: "UI"
  }
}
struct {
  name: "_PRINTER_INFO_7W"
  field {
    name: "pszObjectGUID"
    type: "*US;"
  }
  field {
    name: "dwAction"
    type: "UI"
  }
}
struct {
  name: "_PRINTER_INFO_8A"
  field {
    name: "pDevMode"
    type: "*RDEVMODEA;;"
  }
}
struct {
  name: "_PRINTER_INFO_8A"
  field {
    name: "pDevMode"
    type: "*RDEVMODEA;;"
  }
}
struct {
  name: "_PRINTER_INFO_8A"
  field {
    name: "pDevMode"
    type: "*RDEVMODEA;;"
  }
}
struct {
  name: "_PRINTER_INFO_8W"
  field {
    name: "pDevMode"
    type: "*RDEVMODEW;;"
  }
}
struct {
  name: "_PRINTER_INFO_8W"
  field {
    name: "pDevMode"
    type: "*RDEVMODEW;;"
  }
}
struct {
  name: "_PRINTER_INFO_8W"
  field {
    name: "pDevMode"
    type: "*RDEVMODEW;;"
  }
}
struct {
  name: "_PRINTER_INFO_9A"
  field {
    name: "pDevMode"
    type: "*RDEVMODEA;;"
  }
}
struct {
  name: "_PRINTER_INFO_9A"
  field {
    name: "pDevMode"
    type: "*RDEVMODEA;;"
  }
}
struct {
  name: "_PRINTER_INFO_9A"
  field {
    name: "pDevMode"
    type: "*RDEVMODEA;;"
  }
}
struct {
  name: "_PRINTER_INFO_9W"
  field {
    name: "pDevMode"
    type: "*RDEVMODEW;;"
  }
}
struct {
  name: "_PRINTER_INFO_9W"
  field {
    name: "pDevMode"
    type: "*RDEVMODEW;;"
  }
}
struct {
  name: "_PRINTER_INFO_9W"
  field {
    name: "pDevMode"
    type: "*RDEVMODEW;;"
  }
}
struct {
  name: "_JOB_INFO_1A"
  field {
    name: "JobId"
    type: "UI"
  }
  field {
    name: "pPrinterName"
    type: "*C;"
  }
  field {
    name: "pMachineName"
    type: "*C;"
  }
  field {
    name: "pUserName"
    type: "*C;"
  }
  field {
    name: "pDocument"
    type: "*C;"
  }
  field {
    name: "pDatatype"
    type: "*C;"
  }
  field {
    name: "pStatus"
    type: "*C;"
  }
  field {
    name: "Status"
    type: "UI"
  }
  field {
    name: "Priority"
    type: "UI"
  }
  field {
    name: "Position"
    type: "UI"
  }
  field {
    name: "TotalPages"
    type: "UI"
  }
  field {
    name: "PagesPrinted"
    type: "UI"
  }
  field {
    name: "Submitted"
    type: "R_SYSTEMTIME;"
  }
}
struct {
  name: "_JOB_INFO_1A"
  field {
    name: "JobId"
    type: "UI"
  }
  field {
    name: "pPrinterName"
    type: "*C;"
  }
  field {
    name: "pMachineName"
    type: "*C;"
  }
  field {
    name: "pUserName"
    type: "*C;"
  }
  field {
    name: "pDocument"
    type: "*C;"
  }
  field {
    name: "pDatatype"
    type: "*C;"
  }
  field {
    name: "pStatus"
    type: "*C;"
  }
  field {
    name: "Status"
    type: "UI"
  }
  field {
    name: "Priority"
    type: "UI"
  }
  field {
    name: "Position"
    type: "UI"
  }
  field {
    name: "TotalPages"
    type: "UI"
  }
  field {
    name: "PagesPrinted"
    type: "UI"
  }
  field {
    name: "Submitted"
    type: "R_SYSTEMTIME;"
  }
}
struct {
  name: "_JOB_INFO_1A"
  field {
    name: "JobId"
    type: "UI"
  }
  field {
    name: "pPrinterName"
    type: "*C;"
  }
  field {
    name: "pMachineName"
    type: "*C;"
  }
  field {
    name: "pUserName"
    type: "*C;"
  }
  field {
    name: "pDocument"
    type: "*C;"
  }
  field {
    name: "pDatatype"
    type: "*C;"
  }
  field {
    name: "pStatus"
    type: "*C;"
  }
  field {
    name: "Status"
    type: "UI"
  }
  field {
    name: "Priority"
    type: "UI"
  }
  field {
    name: "Position"
    type: "UI"
  }
  field {
    name: "TotalPages"
    type: "UI"
  }
  field {
    name: "PagesPrinted"
    type: "UI"
  }
  field {
    name: "Submitted"
    type: "R_SYSTEMTIME;"
  }
}
struct {
  name: "_JOB_INFO_1W"
  field {
    name: "JobId"
    type: "UI"
  }
  field {
    name: "pPrinterName"
    type: "*US;"
  }
  field {
    name: "pMachineName"
    type: "*US;"
  }
  field {
    name: "pUserName"
    type: "*US;"
  }
  field {
    name: "pDocument"
    type: "*US;"
  }
  field {
    name: "pDatatype"
    type: "*US;"
  }
  field {
    name: "pStatus"
    type: "*US;"
  }
  field {
    name: "Status"
    type: "UI"
  }
  field {
    name: "Priority"
    type: "UI"
  }
  field {
    name: "Position"
    type: "UI"
  }
  field {
    name: "TotalPages"
    type: "UI"
  }
  field {
    name: "PagesPrinted"
    type: "UI"
  }
  field {
    name: "Submitted"
    type: "R_SYSTEMTIME;"
  }
}
struct {
  name: "_JOB_INFO_1W"
  field {
    name: "JobId"
    type: "UI"
  }
  field {
    name: "pPrinterName"
    type: "*US;"
  }
  field {
    name: "pMachineName"
    type: "*US;"
  }
  field {
    name: "pUserName"
    type: "*US;"
  }
  field {
    name: "pDocument"
    type: "*US;"
  }
  field {
    name: "pDatatype"
    type: "*US;"
  }
  field {
    name: "pStatus"
    type: "*US;"
  }
  field {
    name: "Status"
    type: "UI"
  }
  field {
    name: "Priority"
    type: "UI"
  }
  field {
    name: "Position"
    type: "UI"
  }
  field {
    name: "TotalPages"
    type: "UI"
  }
  field {
    name: "PagesPrinted"
    type: "UI"
  }
  field {
    name: "Submitted"
    type: "R_SYSTEMTIME;"
  }
}
struct {
  name: "_JOB_INFO_1W"
  field {
    name: "JobId"
    type: "UI"
  }
  field {
    name: "pPrinterName"
    type: "*US;"
  }
  field {
    name: "pMachineName"
    type: "*US;"
  }
  field {
    name: "pUserName"
    type: "*US;"
  }
  field {
    name: "pDocument"
    type: "*US;"
  }
  field {
    name: "pDatatype"
    type: "*US;"
  }
  field {
    name: "pStatus"
    type: "*US;"
  }
  field {
    name: "Status"
    type: "UI"
  }
  field {
    name: "Priority"
    type: "UI"
  }
  field {
    name: "Position"
    type: "UI"
  }
  field {
    name: "TotalPages"
    type: "UI"
  }
  field {
    name: "PagesPrinted"
    type: "UI"
  }
  field {
    name: "Submitted"
    type: "R_SYSTEMTIME;"
  }
}
struct {
  name: "_JOB_INFO_2A"
  field {
    name: "JobId"
    type: "UI"
  }
  field {
    name: "pPrinterName"
    type: "*C;"
  }
  field {
    name: "pMachineName"
    type: "*C;"
  }
  field {
    name: "pUserName"
    type: "*C;"
  }
  field {
    name: "pDocument"
    type: "*C;"
  }
  field {
    name: "pNotifyName"
    type: "*C;"
  }
  field {
    name: "pDatatype"
    type: "*C;"
  }
  field {
    name: "pPrintProcessor"
    type: "*C;"
  }
  field {
    name: "pParameters"
    type: "*C;"
  }
  field {
    name: "pDriverName"
    type: "*C;"
  }
  field {
    name: "pDevMode"
    type: "*RDEVMODEA;;"
  }
  field {
    name: "pStatus"
    type: "*C;"
  }
  field {
    name: "pSecurityDescriptor"
    type: "*V;"
  }
  field {
    name: "Status"
    type: "UI"
  }
  field {
    name: "Priority"
    type: "UI"
  }
  field {
    name: "Position"
    type: "UI"
  }
  field {
    name: "StartTime"
    type: "UI"
  }
  field {
    name: "UntilTime"
    type: "UI"
  }
  field {
    name: "TotalPages"
    type: "UI"
  }
  field {
    name: "Size"
    type: "UI"
  }
  field {
    name: "Submitted"
    type: "R_SYSTEMTIME;"
  }
  field {
    name: "Time"
    type: "UI"
  }
  field {
    name: "PagesPrinted"
    type: "UI"
  }
}
struct {
  name: "_JOB_INFO_2A"
  field {
    name: "JobId"
    type: "UI"
  }
  field {
    name: "pPrinterName"
    type: "*C;"
  }
  field {
    name: "pMachineName"
    type: "*C;"
  }
  field {
    name: "pUserName"
    type: "*C;"
  }
  field {
    name: "pDocument"
    type: "*C;"
  }
  field {
    name: "pNotifyName"
    type: "*C;"
  }
  field {
    name: "pDatatype"
    type: "*C;"
  }
  field {
    name: "pPrintProcessor"
    type: "*C;"
  }
  field {
    name: "pParameters"
    type: "*C;"
  }
  field {
    name: "pDriverName"
    type: "*C;"
  }
  field {
    name: "pDevMode"
    type: "*RDEVMODEA;;"
  }
  field {
    name: "pStatus"
    type: "*C;"
  }
  field {
    name: "pSecurityDescriptor"
    type: "*V;"
  }
  field {
    name: "Status"
    type: "UI"
  }
  field {
    name: "Priority"
    type: "UI"
  }
  field {
    name: "Position"
    type: "UI"
  }
  field {
    name: "StartTime"
    type: "UI"
  }
  field {
    name: "UntilTime"
    type: "UI"
  }
  field {
    name: "TotalPages"
    type: "UI"
  }
  field {
    name: "Size"
    type: "UI"
  }
  field {
    name: "Submitted"
    type: "R_SYSTEMTIME;"
  }
  field {
    name: "Time"
    type: "UI"
  }
  field {
    name: "PagesPrinted"
    type: "UI"
  }
}
struct {
  name: "_JOB_INFO_2A"
  field {
    name: "JobId"
    type: "UI"
  }
  field {
    name: "pPrinterName"
    type: "*C;"
  }
  field {
    name: "pMachineName"
    type: "*C;"
  }
  field {
    name: "pUserName"
    type: "*C;"
  }
  field {
    name: "pDocument"
    type: "*C;"
  }
  field {
    name: "pNotifyName"
    type: "*C;"
  }
  field {
    name: "pDatatype"
    type: "*C;"
  }
  field {
    name: "pPrintProcessor"
    type: "*C;"
  }
  field {
    name: "pParameters"
    type: "*C;"
  }
  field {
    name: "pDriverName"
    type: "*C;"
  }
  field {
    name: "pDevMode"
    type: "*RDEVMODEA;;"
  }
  field {
    name: "pStatus"
    type: "*C;"
  }
  field {
    name: "pSecurityDescriptor"
    type: "*V;"
  }
  field {
    name: "Status"
    type: "UI"
  }
  field {
    name: "Priority"
    type: "UI"
  }
  field {
    name: "Position"
    type: "UI"
  }
  field {
    name: "StartTime"
    type: "UI"
  }
  field {
    name: "UntilTime"
    type: "UI"
  }
  field {
    name: "TotalPages"
    type: "UI"
  }
  field {
    name: "Size"
    type: "UI"
  }
  field {
    name: "Submitted"
    type: "R_SYSTEMTIME;"
  }
  field {
    name: "Time"
    type: "UI"
  }
  field {
    name: "PagesPrinted"
    type: "UI"
  }
}
struct {
  name: "_JOB_INFO_2W"
  field {
    name: "JobId"
    type: "UI"
  }
  field {
    name: "pPrinterName"
    type: "*US;"
  }
  field {
    name: "pMachineName"
    type: "*US;"
  }
  field {
    name: "pUserName"
    type: "*US;"
  }
  field {
    name: "pDocument"
    type: "*US;"
  }
  field {
    name: "pNotifyName"
    type: "*US;"
  }
  field {
    name: "pDatatype"
    type: "*US;"
  }
  field {
    name: "pPrintProcessor"
    type: "*US;"
  }
  field {
    name: "pParameters"
    type: "*US;"
  }
  field {
    name: "pDriverName"
    type: "*US;"
  }
  field {
    name: "pDevMode"
    type: "*RDEVMODEW;;"
  }
  field {
    name: "pStatus"
    type: "*US;"
  }
  field {
    name: "pSecurityDescriptor"
    type: "*V;"
  }
  field {
    name: "Status"
    type: "UI"
  }
  field {
    name: "Priority"
    type: "UI"
  }
  field {
    name: "Position"
    type: "UI"
  }
  field {
    name: "StartTime"
    type: "UI"
  }
  field {
    name: "UntilTime"
    type: "UI"
  }
  field {
    name: "TotalPages"
    type: "UI"
  }
  field {
    name: "Size"
    type: "UI"
  }
  field {
    name: "Submitted"
    type: "R_SYSTEMTIME;"
  }
  field {
    name: "Time"
    type: "UI"
  }
  field {
    name: "PagesPrinted"
    type: "UI"
  }
}
struct {
  name: "_JOB_INFO_2W"
  field {
    name: "JobId"
    type: "UI"
  }
  field {
    name: "pPrinterName"
    type: "*US;"
  }
  field {
    name: "pMachineName"
    type: "*US;"
  }
  field {
    name: "pUserName"
    type: "*US;"
  }
  field {
    name: "pDocument"
    type: "*US;"
  }
  field {
    name: "pNotifyName"
    type: "*US;"
  }
  field {
    name: "pDatatype"
    type: "*US;"
  }
  field {
    name: "pPrintProcessor"
    type: "*US;"
  }
  field {
    name: "pParameters"
    type: "*US;"
  }
  field {
    name: "pDriverName"
    type: "*US;"
  }
  field {
    name: "pDevMode"
    type: "*RDEVMODEW;;"
  }
  field {
    name: "pStatus"
    type: "*US;"
  }
  field {
    name: "pSecurityDescriptor"
    type: "*V;"
  }
  field {
    name: "Status"
    type: "UI"
  }
  field {
    name: "Priority"
    type: "UI"
  }
  field {
    name: "Position"
    type: "UI"
  }
  field {
    name: "StartTime"
    type: "UI"
  }
  field {
    name: "UntilTime"
    type: "UI"
  }
  field {
    name: "TotalPages"
    type: "UI"
  }
  field {
    name: "Size"
    type: "UI"
  }
  field {
    name: "Submitted"
    type: "R_SYSTEMTIME;"
  }
  field {
    name: "Time"
    type: "UI"
  }
  field {
    name: "PagesPrinted"
    type: "UI"
  }
}
struct {
  name: "_JOB_INFO_2W"
  field {
    name: "JobId"
    type: "UI"
  }
  field {
    name: "pPrinterName"
    type: "*US;"
  }
  field {
    name: "pMachineName"
    type: "*US;"
  }
  field {
    name: "pUserName"
    type: "*US;"
  }
  field {
    name: "pDocument"
    type: "*US;"
  }
  field {
    name: "pNotifyName"
    type: "*US;"
  }
  field {
    name: "pDatatype"
    type: "*US;"
  }
  field {
    name: "pPrintProcessor"
    type: "*US;"
  }
  field {
    name: "pParameters"
    type: "*US;"
  }
  field {
    name: "pDriverName"
    type: "*US;"
  }
  field {
    name: "pDevMode"
    type: "*RDEVMODEW;;"
  }
  field {
    name: "pStatus"
    type: "*US;"
  }
  field {
    name: "pSecurityDescriptor"
    type: "*V;"
  }
  field {
    name: "Status"
    type: "UI"
  }
  field {
    name: "Priority"
    type: "UI"
  }
  field {
    name: "Position"
    type: "UI"
  }
  field {
    name: "StartTime"
    type: "UI"
  }
  field {
    name: "UntilTime"
    type: "UI"
  }
  field {
    name: "TotalPages"
    type: "UI"
  }
  field {
    name: "Size"
    type: "UI"
  }
  field {
    name: "Submitted"
    type: "R_SYSTEMTIME;"
  }
  field {
    name: "Time"
    type: "UI"
  }
  field {
    name: "PagesPrinted"
    type: "UI"
  }
}
struct {
  name: "_JOB_INFO_3"
  field {
    name: "JobId"
    type: "UI"
  }
  field {
    name: "NextJobId"
    type: "UI"
  }
  field {
    name: "Reserved"
    type: "UI"
  }
}
struct {
  name: "_JOB_INFO_3"
  field {
    name: "JobId"
    type: "UI"
  }
  field {
    name: "NextJobId"
    type: "UI"
  }
  field {
    name: "Reserved"
    type: "UI"
  }
}
struct {
  name: "_JOB_INFO_3"
  field {
    name: "JobId"
    type: "UI"
  }
  field {
    name: "NextJobId"
    type: "UI"
  }
  field {
    name: "Reserved"
    type: "UI"
  }
}
struct {
  name: "_ADDJOB_INFO_1A"
  field {
    name: "Path"
    type: "*C;"
  }
  field {
    name: "JobId"
    type: "UI"
  }
}
struct {
  name: "_ADDJOB_INFO_1A"
  field {
    name: "Path"
    type: "*C;"
  }
  field {
    name: "JobId"
    type: "UI"
  }
}
struct {
  name: "_ADDJOB_INFO_1A"
  field {
    name: "Path"
    type: "*C;"
  }
  field {
    name: "JobId"
    type: "UI"
  }
}
struct {
  name: "_ADDJOB_INFO_1W"
  field {
    name: "Path"
    type: "*US;"
  }
  field {
    name: "JobId"
    type: "UI"
  }
}
struct {
  name: "_ADDJOB_INFO_1W"
  field {
    name: "Path"
    type: "*US;"
  }
  field {
    name: "JobId"
    type: "UI"
  }
}
struct {
  name: "_ADDJOB_INFO_1W"
  field {
    name: "Path"
    type: "*US;"
  }
  field {
    name: "JobId"
    type: "UI"
  }
}
struct {
  name: "_DOC_INFO_1A"
  field {
    name: "pDocName"
    type: "*C;"
  }
  field {
    name: "pOutputFile"
    type: "*C;"
  }
  field {
    name: "pDatatype"
    type: "*C;"
  }
}
struct {
  name: "_DOC_INFO_1A"
  field {
    name: "pDocName"
    type: "*C;"
  }
  field {
    name: "pOutputFile"
    type: "*C;"
  }
  field {
    name: "pDatatype"
    type: "*C;"
  }
}
struct {
  name: "_DOC_INFO_1A"
  field {
    name: "pDocName"
    type: "*C;"
  }
  field {
    name: "pOutputFile"
    type: "*C;"
  }
  field {
    name: "pDatatype"
    type: "*C;"
  }
}
struct {
  name: "_DOC_INFO_1W"
  field {
    name: "pDocName"
    type: "*US;"
  }
  field {
    name: "pOutputFile"
    type: "*US;"
  }
  field {
    name: "pDatatype"
    type: "*US;"
  }
}
struct {
  name: "_DOC_INFO_1W"
  field {
    name: "pDocName"
    type: "*US;"
  }
  field {
    name: "pOutputFile"
    type: "*US;"
  }
  field {
    name: "pDatatype"
    type: "*US;"
  }
}
struct {
  name: "_DOC_INFO_1W"
  field {
    name: "pDocName"
    type: "*US;"
  }
  field {
    name: "pOutputFile"
    type: "*US;"
  }
  field {
    name: "pDatatype"
    type: "*US;"
  }
}
struct {
  name: "_DOC_INFO_2A"
  field {
    name: "pDocName"
    type: "*C;"
  }
  field {
    name: "pOutputFile"
    type: "*C;"
  }
  field {
    name: "pDatatype"
    type: "*C;"
  }
  field {
    name: "dwMode"
    type: "UI"
  }
  field {
    name: "JobId"
    type: "UI"
  }
}
struct {
  name: "_DOC_INFO_2A"
  field {
    name: "pDocName"
    type: "*C;"
  }
  field {
    name: "pOutputFile"
    type: "*C;"
  }
  field {
    name: "pDatatype"
    type: "*C;"
  }
  field {
    name: "dwMode"
    type: "UI"
  }
  field {
    name: "JobId"
    type: "UI"
  }
}
struct {
  name: "_DOC_INFO_2A"
  field {
    name: "pDocName"
    type: "*C;"
  }
  field {
    name: "pOutputFile"
    type: "*C;"
  }
  field {
    name: "pDatatype"
    type: "*C;"
  }
  field {
    name: "dwMode"
    type: "UI"
  }
  field {
    name: "JobId"
    type: "UI"
  }
}
struct {
  name: "_DOC_INFO_2W"
  field {
    name: "pDocName"
    type: "*US;"
  }
  field {
    name: "pOutputFile"
    type: "*US;"
  }
  field {
    name: "pDatatype"
    type: "*US;"
  }
  field {
    name: "dwMode"
    type: "UI"
  }
  field {
    name: "JobId"
    type: "UI"
  }
}
struct {
  name: "_DOC_INFO_2W"
  field {
    name: "pDocName"
    type: "*US;"
  }
  field {
    name: "pOutputFile"
    type: "*US;"
  }
  field {
    name: "pDatatype"
    type: "*US;"
  }
  field {
    name: "dwMode"
    type: "UI"
  }
  field {
    name: "JobId"
    type: "UI"
  }
}
struct {
  name: "_DOC_INFO_2W"
  field {
    name: "pDocName"
    type: "*US;"
  }
  field {
    name: "pOutputFile"
    type: "*US;"
  }
  field {
    name: "pDatatype"
    type: "*US;"
  }
  field {
    name: "dwMode"
    type: "UI"
  }
  field {
    name: "JobId"
    type: "UI"
  }
}
struct {
  name: "_FORM_INFO_1A"
  field {
    name: "Flags"
    type: "UI"
  }
  field {
    name: "pName"
    type: "*C;"
  }
  field {
    name: "Size"
    type: "RtagSIZE;"
  }
  field {
    name: "ImageableArea"
    type: "R_RECTL;"
  }
}
struct {
  name: "_FORM_INFO_1A"
  field {
    name: "Flags"
    type: "UI"
  }
  field {
    name: "pName"
    type: "*C;"
  }
  field {
    name: "Size"
    type: "RtagSIZE;"
  }
  field {
    name: "ImageableArea"
    type: "R_RECTL;"
  }
}
struct {
  name: "_FORM_INFO_1A"
  field {
    name: "Flags"
    type: "UI"
  }
  field {
    name: "pName"
    type: "*C;"
  }
  field {
    name: "Size"
    type: "RtagSIZE;"
  }
  field {
    name: "ImageableArea"
    type: "R_RECTL;"
  }
}
struct {
  name: "_FORM_INFO_1W"
  field {
    name: "Flags"
    type: "UI"
  }
  field {
    name: "pName"
    type: "*US;"
  }
  field {
    name: "Size"
    type: "RtagSIZE;"
  }
  field {
    name: "ImageableArea"
    type: "R_RECTL;"
  }
}
struct {
  name: "_FORM_INFO_1W"
  field {
    name: "Flags"
    type: "UI"
  }
  field {
    name: "pName"
    type: "*US;"
  }
  field {
    name: "Size"
    type: "RtagSIZE;"
  }
  field {
    name: "ImageableArea"
    type: "R_RECTL;"
  }
}
struct {
  name: "_FORM_INFO_1W"
  field {
    name: "Flags"
    type: "UI"
  }
  field {
    name: "pName"
    type: "*US;"
  }
  field {
    name: "Size"
    type: "RtagSIZE;"
  }
  field {
    name: "ImageableArea"
    type: "R_RECTL;"
  }
}
struct {
  name: "_FORM_INFO_2A"
  field {
    name: "Flags"
    type: "UI"
  }
  field {
    name: "pName"
    type: "*C;"
  }
  field {
    name: "Size"
    type: "RtagSIZE;"
  }
  field {
    name: "ImageableArea"
    type: "R_RECTL;"
  }
  field {
    name: "pKeyword"
    type: "*cC;"
  }
  field {
    name: "StringType"
    type: "UI"
  }
  field {
    name: "pMuiDll"
    type: "*C;"
  }
  field {
    name: "dwResourceId"
    type: "UI"
  }
  field {
    name: "pDisplayName"
    type: "*C;"
  }
  field {
    name: "wLangId"
    type: "US"
  }
}
struct {
  name: "_FORM_INFO_2A"
  field {
    name: "Flags"
    type: "UI"
  }
  field {
    name: "pName"
    type: "*C;"
  }
  field {
    name: "Size"
    type: "RtagSIZE;"
  }
  field {
    name: "ImageableArea"
    type: "R_RECTL;"
  }
  field {
    name: "pKeyword"
    type: "*cC;"
  }
  field {
    name: "StringType"
    type: "UI"
  }
  field {
    name: "pMuiDll"
    type: "*C;"
  }
  field {
    name: "dwResourceId"
    type: "UI"
  }
  field {
    name: "pDisplayName"
    type: "*C;"
  }
  field {
    name: "wLangId"
    type: "US"
  }
}
struct {
  name: "_FORM_INFO_2A"
  field {
    name: "Flags"
    type: "UI"
  }
  field {
    name: "pName"
    type: "*C;"
  }
  field {
    name: "Size"
    type: "RtagSIZE;"
  }
  field {
    name: "ImageableArea"
    type: "R_RECTL;"
  }
  field {
    name: "pKeyword"
    type: "*cC;"
  }
  field {
    name: "StringType"
    type: "UI"
  }
  field {
    name: "pMuiDll"
    type: "*C;"
  }
  field {
    name: "dwResourceId"
    type: "UI"
  }
  field {
    name: "pDisplayName"
    type: "*C;"
  }
  field {
    name: "wLangId"
    type: "US"
  }
}
struct {
  name: "_FORM_INFO_2W"
  field {
    name: "Flags"
    type: "UI"
  }
  field {
    name: "pName"
    type: "*US;"
  }
  field {
    name: "Size"
    type: "RtagSIZE;"
  }
  field {
    name: "ImageableArea"
    type: "R_RECTL;"
  }
  field {
    name: "pKeyword"
    type: "*cC;"
  }
  field {
    name: "StringType"
    type: "UI"
  }
  field {
    name: "pMuiDll"
    type: "*US;"
  }
  field {
    name: "dwResourceId"
    type: "UI"
  }
  field {
    name: "pDisplayName"
    type: "*US;"
  }
  field {
    name: "wLangId"
    type: "US"
  }
}
struct {
  name: "_FORM_INFO_2W"
  field {
    name: "Flags"
    type: "UI"
  }
  field {
    name: "pName"
    type: "*US;"
  }
  field {
    name: "Size"
    type: "RtagSIZE;"
  }
  field {
    name: "ImageableArea"
    type: "R_RECTL;"
  }
  field {
    name: "pKeyword"
    type: "*cC;"
  }
  field {
    name: "StringType"
    type: "UI"
  }
  field {
    name: "pMuiDll"
    type: "*US;"
  }
  field {
    name: "dwResourceId"
    type: "UI"
  }
  field {
    name: "pDisplayName"
    type: "*US;"
  }
  field {
    name: "wLangId"
    type: "US"
  }
}
struct {
  name: "_FORM_INFO_2W"
  field {
    name: "Flags"
    type: "UI"
  }
  field {
    name: "pName"
    type: "*US;"
  }
  field {
    name: "Size"
    type: "RtagSIZE;"
  }
  field {
    name: "ImageableArea"
    type: "R_RECTL;"
  }
  field {
    name: "pKeyword"
    type: "*cC;"
  }
  field {
    name: "StringType"
    type: "UI"
  }
  field {
    name: "pMuiDll"
    type: "*US;"
  }
  field {
    name: "dwResourceId"
    type: "UI"
  }
  field {
    name: "pDisplayName"
    type: "*US;"
  }
  field {
    name: "wLangId"
    type: "US"
  }
}
struct {
  name: "_PRINTPROCESSOR_INFO_1A"
  field {
    name: "pName"
    type: "*C;"
  }
}
struct {
  name: "_PRINTPROCESSOR_INFO_1A"
  field {
    name: "pName"
    type: "*C;"
  }
}
struct {
  name: "_PRINTPROCESSOR_INFO_1A"
  field {
    name: "pName"
    type: "*C;"
  }
}
struct {
  name: "_PRINTPROCESSOR_INFO_1W"
  field {
    name: "pName"
    type: "*US;"
  }
}
struct {
  name: "_PRINTPROCESSOR_INFO_1W"
  field {
    name: "pName"
    type: "*US;"
  }
}
struct {
  name: "_PRINTPROCESSOR_INFO_1W"
  field {
    name: "pName"
    type: "*US;"
  }
}
struct {
  name: "_PORT_INFO_1A"
  field {
    name: "pName"
    type: "*C;"
  }
}
struct {
  name: "_PORT_INFO_1A"
  field {
    name: "pName"
    type: "*C;"
  }
}
struct {
  name: "_PORT_INFO_1A"
  field {
    name: "pName"
    type: "*C;"
  }
}
struct {
  name: "_PORT_INFO_1W"
  field {
    name: "pName"
    type: "*US;"
  }
}
struct {
  name: "_PORT_INFO_1W"
  field {
    name: "pName"
    type: "*US;"
  }
}
struct {
  name: "_PORT_INFO_1W"
  field {
    name: "pName"
    type: "*US;"
  }
}
struct {
  name: "_PORT_INFO_2A"
  field {
    name: "pPortName"
    type: "*C;"
  }
  field {
    name: "pMonitorName"
    type: "*C;"
  }
  field {
    name: "pDescription"
    type: "*C;"
  }
  field {
    name: "fPortType"
    type: "UI"
  }
  field {
    name: "Reserved"
    type: "UI"
  }
}
struct {
  name: "_PORT_INFO_2A"
  field {
    name: "pPortName"
    type: "*C;"
  }
  field {
    name: "pMonitorName"
    type: "*C;"
  }
  field {
    name: "pDescription"
    type: "*C;"
  }
  field {
    name: "fPortType"
    type: "UI"
  }
  field {
    name: "Reserved"
    type: "UI"
  }
}
struct {
  name: "_PORT_INFO_2A"
  field {
    name: "pPortName"
    type: "*C;"
  }
  field {
    name: "pMonitorName"
    type: "*C;"
  }
  field {
    name: "pDescription"
    type: "*C;"
  }
  field {
    name: "fPortType"
    type: "UI"
  }
  field {
    name: "Reserved"
    type: "UI"
  }
}
struct {
  name: "_PORT_INFO_2W"
  field {
    name: "pPortName"
    type: "*US;"
  }
  field {
    name: "pMonitorName"
    type: "*US;"
  }
  field {
    name: "pDescription"
    type: "*US;"
  }
  field {
    name: "fPortType"
    type: "UI"
  }
  field {
    name: "Reserved"
    type: "UI"
  }
}
struct {
  name: "_PORT_INFO_2W"
  field {
    name: "pPortName"
    type: "*US;"
  }
  field {
    name: "pMonitorName"
    type: "*US;"
  }
  field {
    name: "pDescription"
    type: "*US;"
  }
  field {
    name: "fPortType"
    type: "UI"
  }
  field {
    name: "Reserved"
    type: "UI"
  }
}
struct {
  name: "_PORT_INFO_2W"
  field {
    name: "pPortName"
    type: "*US;"
  }
  field {
    name: "pMonitorName"
    type: "*US;"
  }
  field {
    name: "pDescription"
    type: "*US;"
  }
  field {
    name: "fPortType"
    type: "UI"
  }
  field {
    name: "Reserved"
    type: "UI"
  }
}
struct {
  name: "_PORT_INFO_3A"
  field {
    name: "dwStatus"
    type: "UI"
  }
  field {
    name: "pszStatus"
    type: "*C;"
  }
  field {
    name: "dwSeverity"
    type: "UI"
  }
}
struct {
  name: "_PORT_INFO_3A"
  field {
    name: "dwStatus"
    type: "UI"
  }
  field {
    name: "pszStatus"
    type: "*C;"
  }
  field {
    name: "dwSeverity"
    type: "UI"
  }
}
struct {
  name: "_PORT_INFO_3A"
  field {
    name: "dwStatus"
    type: "UI"
  }
  field {
    name: "pszStatus"
    type: "*C;"
  }
  field {
    name: "dwSeverity"
    type: "UI"
  }
}
struct {
  name: "_PORT_INFO_3W"
  field {
    name: "dwStatus"
    type: "UI"
  }
  field {
    name: "pszStatus"
    type: "*US;"
  }
  field {
    name: "dwSeverity"
    type: "UI"
  }
}
struct {
  name: "_PORT_INFO_3W"
  field {
    name: "dwStatus"
    type: "UI"
  }
  field {
    name: "pszStatus"
    type: "*US;"
  }
  field {
    name: "dwSeverity"
    type: "UI"
  }
}
struct {
  name: "_PORT_INFO_3W"
  field {
    name: "dwStatus"
    type: "UI"
  }
  field {
    name: "pszStatus"
    type: "*US;"
  }
  field {
    name: "dwSeverity"
    type: "UI"
  }
}
struct {
  name: "_MONITOR_INFO_1A"
  field {
    name: "pName"
    type: "*C;"
  }
}
struct {
  name: "_MONITOR_INFO_1A"
  field {
    name: "pName"
    type: "*C;"
  }
}
struct {
  name: "_MONITOR_INFO_1A"
  field {
    name: "pName"
    type: "*C;"
  }
}
struct {
  name: "_MONITOR_INFO_1W"
  field {
    name: "pName"
    type: "*US;"
  }
}
struct {
  name: "_MONITOR_INFO_1W"
  field {
    name: "pName"
    type: "*US;"
  }
}
struct {
  name: "_MONITOR_INFO_1W"
  field {
    name: "pName"
    type: "*US;"
  }
}
struct {
  name: "_MONITOR_INFO_2A"
  field {
    name: "pName"
    type: "*C;"
  }
  field {
    name: "pEnvironment"
    type: "*C;"
  }
  field {
    name: "pDLLName"
    type: "*C;"
  }
}
struct {
  name: "_MONITOR_INFO_2A"
  field {
    name: "pName"
    type: "*C;"
  }
  field {
    name: "pEnvironment"
    type: "*C;"
  }
  field {
    name: "pDLLName"
    type: "*C;"
  }
}
struct {
  name: "_MONITOR_INFO_2A"
  field {
    name: "pName"
    type: "*C;"
  }
  field {
    name: "pEnvironment"
    type: "*C;"
  }
  field {
    name: "pDLLName"
    type: "*C;"
  }
}
struct {
  name: "_MONITOR_INFO_2W"
  field {
    name: "pName"
    type: "*US;"
  }
  field {
    name: "pEnvironment"
    type: "*US;"
  }
  field {
    name: "pDLLName"
    type: "*US;"
  }
}
struct {
  name: "_MONITOR_INFO_2W"
  field {
    name: "pName"
    type: "*US;"
  }
  field {
    name: "pEnvironment"
    type: "*US;"
  }
  field {
    name: "pDLLName"
    type: "*US;"
  }
}
struct {
  name: "_MONITOR_INFO_2W"
  field {
    name: "pName"
    type: "*US;"
  }
  field {
    name: "pEnvironment"
    type: "*US;"
  }
  field {
    name: "pDLLName"
    type: "*US;"
  }
}
struct {
  name: "_DATATYPES_INFO_1A"
  field {
    name: "pName"
    type: "*C;"
  }
}
struct {
  name: "_DATATYPES_INFO_1A"
  field {
    name: "pName"
    type: "*C;"
  }
}
struct {
  name: "_DATATYPES_INFO_1A"
  field {
    name: "pName"
    type: "*C;"
  }
}
struct {
  name: "_DATATYPES_INFO_1W"
  field {
    name: "pName"
    type: "*US;"
  }
}
struct {
  name: "_DATATYPES_INFO_1W"
  field {
    name: "pName"
    type: "*US;"
  }
}
struct {
  name: "_DATATYPES_INFO_1W"
  field {
    name: "pName"
    type: "*US;"
  }
}
struct {
  name: "_PRINTER_NOTIFY_OPTIONS_TYPE"
  field {
    name: "Type"
    type: "US"
  }
  field {
    name: "Reserved0"
    type: "US"
  }
  field {
    name: "Reserved1"
    type: "UI"
  }
  field {
    name: "Reserved2"
    type: "UI"
  }
  field {
    name: "Count"
    type: "UI"
  }
  field {
    name: "pFields"
    type: "*US;"
  }
}
struct {
  name: "_PRINTER_NOTIFY_OPTIONS_TYPE"
  field {
    name: "Type"
    type: "US"
  }
  field {
    name: "Reserved0"
    type: "US"
  }
  field {
    name: "Reserved1"
    type: "UI"
  }
  field {
    name: "Reserved2"
    type: "UI"
  }
  field {
    name: "Count"
    type: "UI"
  }
  field {
    name: "pFields"
    type: "*US;"
  }
}
struct {
  name: "_PRINTER_NOTIFY_OPTIONS_TYPE"
  field {
    name: "Type"
    type: "US"
  }
  field {
    name: "Reserved0"
    type: "US"
  }
  field {
    name: "Reserved1"
    type: "UI"
  }
  field {
    name: "Reserved2"
    type: "UI"
  }
  field {
    name: "Count"
    type: "UI"
  }
  field {
    name: "pFields"
    type: "*US;"
  }
}
struct {
  name: "_PRINTER_NOTIFY_OPTIONS"
  field {
    name: "Version"
    type: "UI"
  }
  field {
    name: "Flags"
    type: "UI"
  }
  field {
    name: "Count"
    type: "UI"
  }
  field {
    name: "pTypes"
    type: "*R_PRINTER_NOTIFY_OPTIONS_TYPE;;"
  }
}
struct {
  name: "_PRINTER_NOTIFY_OPTIONS"
  field {
    name: "Version"
    type: "UI"
  }
  field {
    name: "Flags"
    type: "UI"
  }
  field {
    name: "Count"
    type: "UI"
  }
  field {
    name: "pTypes"
    type: "*R_PRINTER_NOTIFY_OPTIONS_TYPE;;"
  }
}
struct {
  name: "_PRINTER_NOTIFY_OPTIONS"
  field {
    name: "Version"
    type: "UI"
  }
  field {
    name: "Flags"
    type: "UI"
  }
  field {
    name: "Count"
    type: "UI"
  }
  field {
    name: "pTypes"
    type: "*R_PRINTER_NOTIFY_OPTIONS_TYPE;;"
  }
}
struct {
  name: "_PRINTER_NOTIFY_INFO_DATA"
  field {
    name: "Type"
    type: "US"
  }
  field {
    name: "Field"
    type: "US"
  }
  field {
    name: "Reserved"
    type: "UI"
  }
  field {
    name: "Id"
    type: "UI"
  }
  field {
    name: "NotifyData"
    type: "Runion _PRINTER_NOTIFY_INFO_DATA::(anonymous at /usr/local/include/wine/windows/winspool.h:1031:3);"
  }
}
struct {
  name: "struct _PRINTER_NOTIFY_INFO_DATA::(anonymous at /usr/local/include/wine/windows/winspool.h:1033:5)"
  field {
    name: "cbBuf"
    type: "UI"
  }
  field {
    name: "pBuf"
    type: "*V;"
  }
}
struct {
  name: "_PRINTER_NOTIFY_INFO_DATA"
  field {
    name: "Type"
    type: "US"
  }
  field {
    name: "Field"
    type: "US"
  }
  field {
    name: "Reserved"
    type: "UI"
  }
  field {
    name: "Id"
    type: "UI"
  }
  field {
    name: "NotifyData"
    type: "Runion _PRINTER_NOTIFY_INFO_DATA::(anonymous at /usr/local/include/wine/windows/winspool.h:1031:3);"
  }
}
struct {
  name: "struct _PRINTER_NOTIFY_INFO_DATA::(anonymous at /usr/local/include/wine/windows/winspool.h:1033:5)"
  field {
    name: "cbBuf"
    type: "UI"
  }
  field {
    name: "pBuf"
    type: "*V;"
  }
}
struct {
  name: "_PRINTER_NOTIFY_INFO_DATA"
  field {
    name: "Type"
    type: "US"
  }
  field {
    name: "Field"
    type: "US"
  }
  field {
    name: "Reserved"
    type: "UI"
  }
  field {
    name: "Id"
    type: "UI"
  }
  field {
    name: "NotifyData"
    type: "Runion _PRINTER_NOTIFY_INFO_DATA::(anonymous at /usr/local/include/wine/windows/winspool.h:1031:3);"
  }
}
struct {
  name: "struct _PRINTER_NOTIFY_INFO_DATA::(anonymous at /usr/local/include/wine/windows/winspool.h:1033:5)"
  field {
    name: "cbBuf"
    type: "UI"
  }
  field {
    name: "pBuf"
    type: "*V;"
  }
}
struct {
  name: "_PRINTER_NOTIFY_INFO"
  field {
    name: "Version"
    type: "UI"
  }
  field {
    name: "Flags"
    type: "UI"
  }
  field {
    name: "Count"
    type: "UI"
  }
  field {
    name: "aData"
    type: "X(ConstantArray.PRINTER_NOTIFY_INFO_DATA [1])"
  }
}
struct {
  name: "_PRINTER_NOTIFY_INFO"
  field {
    name: "Version"
    type: "UI"
  }
  field {
    name: "Flags"
    type: "UI"
  }
  field {
    name: "Count"
    type: "UI"
  }
  field {
    name: "aData"
    type: "X(ConstantArray.PRINTER_NOTIFY_INFO_DATA [1])"
  }
}
struct {
  name: "_PRINTER_NOTIFY_INFO"
  field {
    name: "Version"
    type: "UI"
  }
  field {
    name: "Flags"
    type: "UI"
  }
  field {
    name: "Count"
    type: "UI"
  }
  field {
    name: "aData"
    type: "X(ConstantArray.PRINTER_NOTIFY_INFO_DATA [1])"
  }
}
struct {
  name: "_PROVIDOR_INFO_1A"
  field {
    name: "pName"
    type: "*C;"
  }
  field {
    name: "pEnvironment"
    type: "*C;"
  }
  field {
    name: "pDLLName"
    type: "*C;"
  }
}
struct {
  name: "_PROVIDOR_INFO_1A"
  field {
    name: "pName"
    type: "*C;"
  }
  field {
    name: "pEnvironment"
    type: "*C;"
  }
  field {
    name: "pDLLName"
    type: "*C;"
  }
}
struct {
  name: "_PROVIDOR_INFO_1A"
  field {
    name: "pName"
    type: "*C;"
  }
  field {
    name: "pEnvironment"
    type: "*C;"
  }
  field {
    name: "pDLLName"
    type: "*C;"
  }
}
struct {
  name: "_PROVIDOR_INFO_1W"
  field {
    name: "pName"
    type: "*US;"
  }
  field {
    name: "pEnvironment"
    type: "*US;"
  }
  field {
    name: "pDLLName"
    type: "*US;"
  }
}
struct {
  name: "_PROVIDOR_INFO_1W"
  field {
    name: "pName"
    type: "*US;"
  }
  field {
    name: "pEnvironment"
    type: "*US;"
  }
  field {
    name: "pDLLName"
    type: "*US;"
  }
}
struct {
  name: "_PROVIDOR_INFO_1W"
  field {
    name: "pName"
    type: "*US;"
  }
  field {
    name: "pEnvironment"
    type: "*US;"
  }
  field {
    name: "pDLLName"
    type: "*US;"
  }
}
struct {
  name: "_PRINTER_ENUM_VALUESA"
  field {
    name: "pValueName"
    type: "*C;"
  }
  field {
    name: "cbValueName"
    type: "UI"
  }
  field {
    name: "dwType"
    type: "UI"
  }
  field {
    name: "pData"
    type: "*UB;"
  }
  field {
    name: "cbData"
    type: "UI"
  }
}
struct {
  name: "_PRINTER_ENUM_VALUESA"
  field {
    name: "pValueName"
    type: "*C;"
  }
  field {
    name: "cbValueName"
    type: "UI"
  }
  field {
    name: "dwType"
    type: "UI"
  }
  field {
    name: "pData"
    type: "*UB;"
  }
  field {
    name: "cbData"
    type: "UI"
  }
}
struct {
  name: "_PRINTER_ENUM_VALUESW"
  field {
    name: "pValueName"
    type: "*US;"
  }
  field {
    name: "cbValueName"
    type: "UI"
  }
  field {
    name: "dwType"
    type: "UI"
  }
  field {
    name: "pData"
    type: "*UB;"
  }
  field {
    name: "cbData"
    type: "UI"
  }
}
struct {
  name: "_PRINTER_ENUM_VALUESW"
  field {
    name: "pValueName"
    type: "*US;"
  }
  field {
    name: "cbValueName"
    type: "UI"
  }
  field {
    name: "dwType"
    type: "UI"
  }
  field {
    name: "pData"
    type: "*UB;"
  }
  field {
    name: "cbData"
    type: "UI"
  }
}
struct {
  name: "_BINARY_CONTAINER"
  field {
    name: "cbBuf"
    type: "UI"
  }
  field {
    name: "pData"
    type: "*UB;"
  }
}
struct {
  name: "_BINARY_CONTAINER"
  field {
    name: "cbBuf"
    type: "UI"
  }
  field {
    name: "pData"
    type: "*UB;"
  }
}
struct {
  name: "_BIDI_DATA"
  field {
    name: "dwBidiType"
    type: "UI"
  }
  field {
    name: "u"
    type: "Runion _BIDI_DATA::(anonymous at /usr/local/include/wine/windows/winspool.h:1101:2);"
  }
}
struct {
  name: "_BIDI_DATA"
  field {
    name: "dwBidiType"
    type: "UI"
  }
  field {
    name: "u"
    type: "Runion _BIDI_DATA::(anonymous at /usr/local/include/wine/windows/winspool.h:1101:2);"
  }
}
struct {
  name: "_BIDI_DATA"
  field {
    name: "dwBidiType"
    type: "UI"
  }
  field {
    name: "u"
    type: "Runion _BIDI_DATA::(anonymous at /usr/local/include/wine/windows/winspool.h:1101:2);"
  }
}
struct {
  name: "_BIDI_REQUEST_DATA"
  field {
    name: "dwReqNumber"
    type: "UI"
  }
  field {
    name: "pSchema"
    type: "*US;"
  }
  field {
    name: "data"
    type: "R_BIDI_DATA;"
  }
}
struct {
  name: "_BIDI_REQUEST_DATA"
  field {
    name: "dwReqNumber"
    type: "UI"
  }
  field {
    name: "pSchema"
    type: "*US;"
  }
  field {
    name: "data"
    type: "R_BIDI_DATA;"
  }
}
struct {
  name: "_BIDI_REQUEST_DATA"
  field {
    name: "dwReqNumber"
    type: "UI"
  }
  field {
    name: "pSchema"
    type: "*US;"
  }
  field {
    name: "data"
    type: "R_BIDI_DATA;"
  }
}
struct {
  name: "_BIDI_REQUEST_CONTAINER"
  field {
    name: "Version"
    type: "UI"
  }
  field {
    name: "Flags"
    type: "UI"
  }
  field {
    name: "Count"
    type: "UI"
  }
  field {
    name: "aData"
    type: "X(ConstantArray.BIDI_REQUEST_DATA [1])"
  }
}
struct {
  name: "_BIDI_REQUEST_CONTAINER"
  field {
    name: "Version"
    type: "UI"
  }
  field {
    name: "Flags"
    type: "UI"
  }
  field {
    name: "Count"
    type: "UI"
  }
  field {
    name: "aData"
    type: "X(ConstantArray.BIDI_REQUEST_DATA [1])"
  }
}
struct {
  name: "_BIDI_REQUEST_CONTAINER"
  field {
    name: "Version"
    type: "UI"
  }
  field {
    name: "Flags"
    type: "UI"
  }
  field {
    name: "Count"
    type: "UI"
  }
  field {
    name: "aData"
    type: "X(ConstantArray.BIDI_REQUEST_DATA [1])"
  }
}
struct {
  name: "_BIDI_RESPONSE_DATA"
  field {
    name: "dwResult"
    type: "UI"
  }
  field {
    name: "dwReqNumber"
    type: "UI"
  }
  field {
    name: "pSchema"
    type: "*US;"
  }
  field {
    name: "data"
    type: "R_BIDI_DATA;"
  }
}
struct {
  name: "_BIDI_RESPONSE_DATA"
  field {
    name: "dwResult"
    type: "UI"
  }
  field {
    name: "dwReqNumber"
    type: "UI"
  }
  field {
    name: "pSchema"
    type: "*US;"
  }
  field {
    name: "data"
    type: "R_BIDI_DATA;"
  }
}
struct {
  name: "_BIDI_RESPONSE_DATA"
  field {
    name: "dwResult"
    type: "UI"
  }
  field {
    name: "dwReqNumber"
    type: "UI"
  }
  field {
    name: "pSchema"
    type: "*US;"
  }
  field {
    name: "data"
    type: "R_BIDI_DATA;"
  }
}
struct {
  name: "_BIDI_RESPONSE_CONTAINER"
  field {
    name: "Version"
    type: "UI"
  }
  field {
    name: "Flags"
    type: "UI"
  }
  field {
    name: "Count"
    type: "UI"
  }
  field {
    name: "aData"
    type: "X(ConstantArray.BIDI_RESPONSE_DATA [1])"
  }
}
struct {
  name: "_BIDI_RESPONSE_CONTAINER"
  field {
    name: "Version"
    type: "UI"
  }
  field {
    name: "Flags"
    type: "UI"
  }
  field {
    name: "Count"
    type: "UI"
  }
  field {
    name: "aData"
    type: "X(ConstantArray.BIDI_RESPONSE_DATA [1])"
  }
}
struct {
  name: "_BIDI_RESPONSE_CONTAINER"
  field {
    name: "Version"
    type: "UI"
  }
  field {
    name: "Flags"
    type: "UI"
  }
  field {
    name: "Count"
    type: "UI"
  }
  field {
    name: "aData"
    type: "X(ConstantArray.BIDI_RESPONSE_DATA [1])"
  }
}
struct {
  name: "_PROPSHEETPAGEA"
  field {
    name: "dwSize"
    type: "UI"
  }
  field {
    name: "dwFlags"
    type: "UI"
  }
  field {
    name: "hInstance"
    type: "*RHINSTANCE__;;"
  }
  field {
    name: "pszTitle"
    type: "*cC;"
  }
  field {
    name: "pfnDlgProc"
    type: "*(*RHWND__;;UIUII)I;"
  }
  field {
    name: "lParam"
    type: "I"
  }
  field {
    name: "pfnCallback"
    type: "*(*RHWND__;;UI*R_PROPSHEETPAGEA;;)UI;"
  }
  field {
    name: "pcRefParent"
    type: "*UI;"
  }
  field {
    name: "pszHeaderTitle"
    type: "*cC;"
  }
  field {
    name: "pszHeaderSubTitle"
    type: "*cC;"
  }
  field {
    name: "hActCtx"
    type: "*V;"
  }
}
struct {
  name: "_PROPSHEETPAGEA"
  field {
    name: "dwSize"
    type: "UI"
  }
  field {
    name: "dwFlags"
    type: "UI"
  }
  field {
    name: "hInstance"
    type: "*RHINSTANCE__;;"
  }
  field {
    name: "pszTitle"
    type: "*cC;"
  }
  field {
    name: "pfnDlgProc"
    type: "*(*RHWND__;;UIUII)I;"
  }
  field {
    name: "lParam"
    type: "I"
  }
  field {
    name: "pfnCallback"
    type: "*(*RHWND__;;UI*R_PROPSHEETPAGEA;;)UI;"
  }
  field {
    name: "pcRefParent"
    type: "*UI;"
  }
  field {
    name: "pszHeaderTitle"
    type: "*cC;"
  }
  field {
    name: "pszHeaderSubTitle"
    type: "*cC;"
  }
  field {
    name: "hActCtx"
    type: "*V;"
  }
}
struct {
  name: "_PROPSHEETPAGEA"
  field {
    name: "dwSize"
    type: "UI"
  }
  field {
    name: "dwFlags"
    type: "UI"
  }
  field {
    name: "hInstance"
    type: "*RHINSTANCE__;;"
  }
  field {
    name: "pszTitle"
    type: "*cC;"
  }
  field {
    name: "pfnDlgProc"
    type: "*(*RHWND__;;UIUII)I;"
  }
  field {
    name: "lParam"
    type: "I"
  }
  field {
    name: "pfnCallback"
    type: "*(*RHWND__;;UI*R_PROPSHEETPAGEA;;)UI;"
  }
  field {
    name: "pcRefParent"
    type: "*UI;"
  }
  field {
    name: "pszHeaderTitle"
    type: "*cC;"
  }
  field {
    name: "pszHeaderSubTitle"
    type: "*cC;"
  }
  field {
    name: "hActCtx"
    type: "*V;"
  }
}
struct {
  name: "_PROPSHEETPAGEA"
  field {
    name: "dwSize"
    type: "UI"
  }
  field {
    name: "dwFlags"
    type: "UI"
  }
  field {
    name: "hInstance"
    type: "*RHINSTANCE__;;"
  }
  field {
    name: "pszTitle"
    type: "*cC;"
  }
  field {
    name: "pfnDlgProc"
    type: "*(*RHWND__;;UIUII)I;"
  }
  field {
    name: "lParam"
    type: "I"
  }
  field {
    name: "pfnCallback"
    type: "*(*RHWND__;;UI*R_PROPSHEETPAGEA;;)UI;"
  }
  field {
    name: "pcRefParent"
    type: "*UI;"
  }
  field {
    name: "pszHeaderTitle"
    type: "*cC;"
  }
  field {
    name: "pszHeaderSubTitle"
    type: "*cC;"
  }
  field {
    name: "hActCtx"
    type: "*V;"
  }
}
struct {
  name: "_PROPSHEETPAGEW"
  field {
    name: "dwSize"
    type: "UI"
  }
  field {
    name: "dwFlags"
    type: "UI"
  }
  field {
    name: "hInstance"
    type: "*RHINSTANCE__;;"
  }
  field {
    name: "pszTitle"
    type: "*cUS;"
  }
  field {
    name: "pfnDlgProc"
    type: "*(*RHWND__;;UIUII)I;"
  }
  field {
    name: "lParam"
    type: "I"
  }
  field {
    name: "pfnCallback"
    type: "*(*RHWND__;;UI*R_PROPSHEETPAGEW;;)UI;"
  }
  field {
    name: "pcRefParent"
    type: "*UI;"
  }
  field {
    name: "pszHeaderTitle"
    type: "*cUS;"
  }
  field {
    name: "pszHeaderSubTitle"
    type: "*cUS;"
  }
  field {
    name: "hActCtx"
    type: "*V;"
  }
}
struct {
  name: "_PROPSHEETPAGEW"
  field {
    name: "dwSize"
    type: "UI"
  }
  field {
    name: "dwFlags"
    type: "UI"
  }
  field {
    name: "hInstance"
    type: "*RHINSTANCE__;;"
  }
  field {
    name: "pszTitle"
    type: "*cUS;"
  }
  field {
    name: "pfnDlgProc"
    type: "*(*RHWND__;;UIUII)I;"
  }
  field {
    name: "lParam"
    type: "I"
  }
  field {
    name: "pfnCallback"
    type: "*(*RHWND__;;UI*R_PROPSHEETPAGEW;;)UI;"
  }
  field {
    name: "pcRefParent"
    type: "*UI;"
  }
  field {
    name: "pszHeaderTitle"
    type: "*cUS;"
  }
  field {
    name: "pszHeaderSubTitle"
    type: "*cUS;"
  }
  field {
    name: "hActCtx"
    type: "*V;"
  }
}
struct {
  name: "_PROPSHEETPAGEW"
  field {
    name: "dwSize"
    type: "UI"
  }
  field {
    name: "dwFlags"
    type: "UI"
  }
  field {
    name: "hInstance"
    type: "*RHINSTANCE__;;"
  }
  field {
    name: "pszTitle"
    type: "*cUS;"
  }
  field {
    name: "pfnDlgProc"
    type: "*(*RHWND__;;UIUII)I;"
  }
  field {
    name: "lParam"
    type: "I"
  }
  field {
    name: "pfnCallback"
    type: "*(*RHWND__;;UI*R_PROPSHEETPAGEW;;)UI;"
  }
  field {
    name: "pcRefParent"
    type: "*UI;"
  }
  field {
    name: "pszHeaderTitle"
    type: "*cUS;"
  }
  field {
    name: "pszHeaderSubTitle"
    type: "*cUS;"
  }
  field {
    name: "hActCtx"
    type: "*V;"
  }
}
struct {
  name: "_PROPSHEETPAGEW"
  field {
    name: "dwSize"
    type: "UI"
  }
  field {
    name: "dwFlags"
    type: "UI"
  }
  field {
    name: "hInstance"
    type: "*RHINSTANCE__;;"
  }
  field {
    name: "pszTitle"
    type: "*cUS;"
  }
  field {
    name: "pfnDlgProc"
    type: "*(*RHWND__;;UIUII)I;"
  }
  field {
    name: "lParam"
    type: "I"
  }
  field {
    name: "pfnCallback"
    type: "*(*RHWND__;;UI*R_PROPSHEETPAGEW;;)UI;"
  }
  field {
    name: "pcRefParent"
    type: "*UI;"
  }
  field {
    name: "pszHeaderTitle"
    type: "*cUS;"
  }
  field {
    name: "pszHeaderSubTitle"
    type: "*cUS;"
  }
  field {
    name: "hActCtx"
    type: "*V;"
  }
}
struct {
  name: "_PROPSHEETHEADERA"
  field {
    name: "dwSize"
    type: "UI"
  }
  field {
    name: "dwFlags"
    type: "UI"
  }
  field {
    name: "hwndParent"
    type: "*RHWND__;;"
  }
  field {
    name: "hInstance"
    type: "*RHINSTANCE__;;"
  }
  field {
    name: "pszCaption"
    type: "*cC;"
  }
  field {
    name: "nPages"
    type: "UI"
  }
  field {
    name: "pfnCallback"
    type: "*(*RHWND__;;UII)I;"
  }
  field {
    name: "hplWatermark"
    type: "*RHPALETTE__;;"
  }
}
struct {
  name: "_PROPSHEETHEADERA"
  field {
    name: "dwSize"
    type: "UI"
  }
  field {
    name: "dwFlags"
    type: "UI"
  }
  field {
    name: "hwndParent"
    type: "*RHWND__;;"
  }
  field {
    name: "hInstance"
    type: "*RHINSTANCE__;;"
  }
  field {
    name: "pszCaption"
    type: "*cC;"
  }
  field {
    name: "nPages"
    type: "UI"
  }
  field {
    name: "pfnCallback"
    type: "*(*RHWND__;;UII)I;"
  }
  field {
    name: "hplWatermark"
    type: "*RHPALETTE__;;"
  }
}
struct {
  name: "_PROPSHEETHEADERW"
  field {
    name: "dwSize"
    type: "UI"
  }
  field {
    name: "dwFlags"
    type: "UI"
  }
  field {
    name: "hwndParent"
    type: "*RHWND__;;"
  }
  field {
    name: "hInstance"
    type: "*RHINSTANCE__;;"
  }
  field {
    name: "pszCaption"
    type: "*cUS;"
  }
  field {
    name: "nPages"
    type: "UI"
  }
  field {
    name: "pfnCallback"
    type: "*(*RHWND__;;UII)I;"
  }
  field {
    name: "hplWatermark"
    type: "*RHPALETTE__;;"
  }
}
struct {
  name: "_PROPSHEETHEADERW"
  field {
    name: "dwSize"
    type: "UI"
  }
  field {
    name: "dwFlags"
    type: "UI"
  }
  field {
    name: "hwndParent"
    type: "*RHWND__;;"
  }
  field {
    name: "hInstance"
    type: "*RHINSTANCE__;;"
  }
  field {
    name: "pszCaption"
    type: "*cUS;"
  }
  field {
    name: "nPages"
    type: "UI"
  }
  field {
    name: "pfnCallback"
    type: "*(*RHWND__;;UII)I;"
  }
  field {
    name: "hplWatermark"
    type: "*RHPALETTE__;;"
  }
}
struct {
  name: "_PSHNOTIFY"
  field {
    name: "hdr"
    type: "RtagNMHDR;"
  }
  field {
    name: "lParam"
    type: "I"
  }
}
struct {
  name: "_PSHNOTIFY"
  field {
    name: "hdr"
    type: "RtagNMHDR;"
  }
  field {
    name: "lParam"
    type: "I"
  }
}
struct {
  name: "tagOFNA"
  field {
    name: "lStructSize"
    type: "UI"
  }
  field {
    name: "hwndOwner"
    type: "*RHWND__;;"
  }
  field {
    name: "hInstance"
    type: "*RHINSTANCE__;;"
  }
  field {
    name: "lpstrFilter"
    type: "*cC;"
  }
  field {
    name: "lpstrCustomFilter"
    type: "*C;"
  }
  field {
    name: "nMaxCustFilter"
    type: "UI"
  }
  field {
    name: "nFilterIndex"
    type: "UI"
  }
  field {
    name: "lpstrFile"
    type: "*C;"
  }
  field {
    name: "nMaxFile"
    type: "UI"
  }
  field {
    name: "lpstrFileTitle"
    type: "*C;"
  }
  field {
    name: "nMaxFileTitle"
    type: "UI"
  }
  field {
    name: "lpstrInitialDir"
    type: "*cC;"
  }
  field {
    name: "lpstrTitle"
    type: "*cC;"
  }
  field {
    name: "Flags"
    type: "UI"
  }
  field {
    name: "nFileOffset"
    type: "US"
  }
  field {
    name: "nFileExtension"
    type: "US"
  }
  field {
    name: "lpstrDefExt"
    type: "*cC;"
  }
  field {
    name: "lCustData"
    type: "I"
  }
  field {
    name: "lpfnHook"
    type: "*(*RHWND__;;UIUII)UI;"
  }
  field {
    name: "lpTemplateName"
    type: "*cC;"
  }
  field {
    name: "pvReserved"
    type: "*V;"
  }
  field {
    name: "dwReserved"
    type: "UI"
  }
  field {
    name: "FlagsEx"
    type: "UI"
  }
}
struct {
  name: "tagOFNA"
  field {
    name: "lStructSize"
    type: "UI"
  }
  field {
    name: "hwndOwner"
    type: "*RHWND__;;"
  }
  field {
    name: "hInstance"
    type: "*RHINSTANCE__;;"
  }
  field {
    name: "lpstrFilter"
    type: "*cC;"
  }
  field {
    name: "lpstrCustomFilter"
    type: "*C;"
  }
  field {
    name: "nMaxCustFilter"
    type: "UI"
  }
  field {
    name: "nFilterIndex"
    type: "UI"
  }
  field {
    name: "lpstrFile"
    type: "*C;"
  }
  field {
    name: "nMaxFile"
    type: "UI"
  }
  field {
    name: "lpstrFileTitle"
    type: "*C;"
  }
  field {
    name: "nMaxFileTitle"
    type: "UI"
  }
  field {
    name: "lpstrInitialDir"
    type: "*cC;"
  }
  field {
    name: "lpstrTitle"
    type: "*cC;"
  }
  field {
    name: "Flags"
    type: "UI"
  }
  field {
    name: "nFileOffset"
    type: "US"
  }
  field {
    name: "nFileExtension"
    type: "US"
  }
  field {
    name: "lpstrDefExt"
    type: "*cC;"
  }
  field {
    name: "lCustData"
    type: "I"
  }
  field {
    name: "lpfnHook"
    type: "*(*RHWND__;;UIUII)UI;"
  }
  field {
    name: "lpTemplateName"
    type: "*cC;"
  }
  field {
    name: "pvReserved"
    type: "*V;"
  }
  field {
    name: "dwReserved"
    type: "UI"
  }
  field {
    name: "FlagsEx"
    type: "UI"
  }
}
struct {
  name: "tagOFNW"
  field {
    name: "lStructSize"
    type: "UI"
  }
  field {
    name: "hwndOwner"
    type: "*RHWND__;;"
  }
  field {
    name: "hInstance"
    type: "*RHINSTANCE__;;"
  }
  field {
    name: "lpstrFilter"
    type: "*cUS;"
  }
  field {
    name: "lpstrCustomFilter"
    type: "*US;"
  }
  field {
    name: "nMaxCustFilter"
    type: "UI"
  }
  field {
    name: "nFilterIndex"
    type: "UI"
  }
  field {
    name: "lpstrFile"
    type: "*US;"
  }
  field {
    name: "nMaxFile"
    type: "UI"
  }
  field {
    name: "lpstrFileTitle"
    type: "*US;"
  }
  field {
    name: "nMaxFileTitle"
    type: "UI"
  }
  field {
    name: "lpstrInitialDir"
    type: "*cUS;"
  }
  field {
    name: "lpstrTitle"
    type: "*cUS;"
  }
  field {
    name: "Flags"
    type: "UI"
  }
  field {
    name: "nFileOffset"
    type: "US"
  }
  field {
    name: "nFileExtension"
    type: "US"
  }
  field {
    name: "lpstrDefExt"
    type: "*cUS;"
  }
  field {
    name: "lCustData"
    type: "I"
  }
  field {
    name: "lpfnHook"
    type: "*(*RHWND__;;UIUII)UI;"
  }
  field {
    name: "lpTemplateName"
    type: "*cUS;"
  }
  field {
    name: "pvReserved"
    type: "*V;"
  }
  field {
    name: "dwReserved"
    type: "UI"
  }
  field {
    name: "FlagsEx"
    type: "UI"
  }
}
struct {
  name: "tagOFNW"
  field {
    name: "lStructSize"
    type: "UI"
  }
  field {
    name: "hwndOwner"
    type: "*RHWND__;;"
  }
  field {
    name: "hInstance"
    type: "*RHINSTANCE__;;"
  }
  field {
    name: "lpstrFilter"
    type: "*cUS;"
  }
  field {
    name: "lpstrCustomFilter"
    type: "*US;"
  }
  field {
    name: "nMaxCustFilter"
    type: "UI"
  }
  field {
    name: "nFilterIndex"
    type: "UI"
  }
  field {
    name: "lpstrFile"
    type: "*US;"
  }
  field {
    name: "nMaxFile"
    type: "UI"
  }
  field {
    name: "lpstrFileTitle"
    type: "*US;"
  }
  field {
    name: "nMaxFileTitle"
    type: "UI"
  }
  field {
    name: "lpstrInitialDir"
    type: "*cUS;"
  }
  field {
    name: "lpstrTitle"
    type: "*cUS;"
  }
  field {
    name: "Flags"
    type: "UI"
  }
  field {
    name: "nFileOffset"
    type: "US"
  }
  field {
    name: "nFileExtension"
    type: "US"
  }
  field {
    name: "lpstrDefExt"
    type: "*cUS;"
  }
  field {
    name: "lCustData"
    type: "I"
  }
  field {
    name: "lpfnHook"
    type: "*(*RHWND__;;UIUII)UI;"
  }
  field {
    name: "lpTemplateName"
    type: "*cUS;"
  }
  field {
    name: "pvReserved"
    type: "*V;"
  }
  field {
    name: "dwReserved"
    type: "UI"
  }
  field {
    name: "FlagsEx"
    type: "UI"
  }
}
struct {
  name: "OFNOTIFYA"
  field {
    name: "hdr"
    type: "RtagNMHDR;"
  }
  field {
    name: "lpOFN"
    type: "*RtagOFNA;;"
  }
  field {
    name: "pszFile"
    type: "*C;"
  }
}
struct {
  name: "OFNOTIFYA"
  field {
    name: "hdr"
    type: "RtagNMHDR;"
  }
  field {
    name: "lpOFN"
    type: "*RtagOFNA;;"
  }
  field {
    name: "pszFile"
    type: "*C;"
  }
}
struct {
  name: "OFNOTIFYW"
  field {
    name: "hdr"
    type: "RtagNMHDR;"
  }
  field {
    name: "lpOFN"
    type: "*RtagOFNW;;"
  }
  field {
    name: "pszFile"
    type: "*US;"
  }
}
struct {
  name: "OFNOTIFYW"
  field {
    name: "hdr"
    type: "RtagNMHDR;"
  }
  field {
    name: "lpOFN"
    type: "*RtagOFNW;;"
  }
  field {
    name: "pszFile"
    type: "*US;"
  }
}
struct {
  name: "_OFNOTIFYEXA"
  field {
    name: "hdr"
    type: "RtagNMHDR;"
  }
  field {
    name: "lpOFN"
    type: "*RtagOFNA;;"
  }
  field {
    name: "psf"
    type: "*V;"
  }
  field {
    name: "pidl"
    type: "*V;"
  }
}
struct {
  name: "_OFNOTIFYEXA"
  field {
    name: "hdr"
    type: "RtagNMHDR;"
  }
  field {
    name: "lpOFN"
    type: "*RtagOFNA;;"
  }
  field {
    name: "psf"
    type: "*V;"
  }
  field {
    name: "pidl"
    type: "*V;"
  }
}
struct {
  name: "_OFNOTIFYEXW"
  field {
    name: "hdr"
    type: "RtagNMHDR;"
  }
  field {
    name: "lpOFN"
    type: "*RtagOFNW;;"
  }
  field {
    name: "psf"
    type: "*V;"
  }
  field {
    name: "pidl"
    type: "*V;"
  }
}
struct {
  name: "_OFNOTIFYEXW"
  field {
    name: "hdr"
    type: "RtagNMHDR;"
  }
  field {
    name: "lpOFN"
    type: "*RtagOFNW;;"
  }
  field {
    name: "psf"
    type: "*V;"
  }
  field {
    name: "pidl"
    type: "*V;"
  }
}
struct {
  name: "CHOOSECOLORA"
  field {
    name: "lStructSize"
    type: "UI"
  }
  field {
    name: "hwndOwner"
    type: "*RHWND__;;"
  }
  field {
    name: "hInstance"
    type: "*RHWND__;;"
  }
  field {
    name: "rgbResult"
    type: "UI"
  }
  field {
    name: "lpCustColors"
    type: "*UI;"
  }
  field {
    name: "Flags"
    type: "UI"
  }
  field {
    name: "lCustData"
    type: "UI"
  }
  field {
    name: "lpfnHook"
    type: "*(*RHWND__;;UIUII)UI;"
  }
  field {
    name: "lpTemplateName"
    type: "*cC;"
  }
}
struct {
  name: "CHOOSECOLORW"
  field {
    name: "lStructSize"
    type: "UI"
  }
  field {
    name: "hwndOwner"
    type: "*RHWND__;;"
  }
  field {
    name: "hInstance"
    type: "*RHWND__;;"
  }
  field {
    name: "rgbResult"
    type: "UI"
  }
  field {
    name: "lpCustColors"
    type: "*UI;"
  }
  field {
    name: "Flags"
    type: "UI"
  }
  field {
    name: "lCustData"
    type: "UI"
  }
  field {
    name: "lpfnHook"
    type: "*(*RHWND__;;UIUII)UI;"
  }
  field {
    name: "lpTemplateName"
    type: "*cUS;"
  }
}
struct {
  name: "FINDREPLACEA"
  field {
    name: "lStructSize"
    type: "UI"
  }
  field {
    name: "hwndOwner"
    type: "*RHWND__;;"
  }
  field {
    name: "hInstance"
    type: "*RHINSTANCE__;;"
  }
  field {
    name: "Flags"
    type: "UI"
  }
  field {
    name: "lpstrFindWhat"
    type: "*C;"
  }
  field {
    name: "lpstrReplaceWith"
    type: "*C;"
  }
  field {
    name: "wFindWhatLen"
    type: "US"
  }
  field {
    name: "wReplaceWithLen"
    type: "US"
  }
  field {
    name: "lCustData"
    type: "I"
  }
  field {
    name: "lpfnHook"
    type: "*(*RHWND__;;UIUII)UI;"
  }
  field {
    name: "lpTemplateName"
    type: "*cC;"
  }
}
struct {
  name: "FINDREPLACEA"
  field {
    name: "lStructSize"
    type: "UI"
  }
  field {
    name: "hwndOwner"
    type: "*RHWND__;;"
  }
  field {
    name: "hInstance"
    type: "*RHINSTANCE__;;"
  }
  field {
    name: "Flags"
    type: "UI"
  }
  field {
    name: "lpstrFindWhat"
    type: "*C;"
  }
  field {
    name: "lpstrReplaceWith"
    type: "*C;"
  }
  field {
    name: "wFindWhatLen"
    type: "US"
  }
  field {
    name: "wReplaceWithLen"
    type: "US"
  }
  field {
    name: "lCustData"
    type: "I"
  }
  field {
    name: "lpfnHook"
    type: "*(*RHWND__;;UIUII)UI;"
  }
  field {
    name: "lpTemplateName"
    type: "*cC;"
  }
}
struct {
  name: "FINDREPLACEW"
  field {
    name: "lStructSize"
    type: "UI"
  }
  field {
    name: "hwndOwner"
    type: "*RHWND__;;"
  }
  field {
    name: "hInstance"
    type: "*RHINSTANCE__;;"
  }
  field {
    name: "Flags"
    type: "UI"
  }
  field {
    name: "lpstrFindWhat"
    type: "*US;"
  }
  field {
    name: "lpstrReplaceWith"
    type: "*US;"
  }
  field {
    name: "wFindWhatLen"
    type: "US"
  }
  field {
    name: "wReplaceWithLen"
    type: "US"
  }
  field {
    name: "lCustData"
    type: "I"
  }
  field {
    name: "lpfnHook"
    type: "*(*RHWND__;;UIUII)UI;"
  }
  field {
    name: "lpTemplateName"
    type: "*cUS;"
  }
}
struct {
  name: "FINDREPLACEW"
  field {
    name: "lStructSize"
    type: "UI"
  }
  field {
    name: "hwndOwner"
    type: "*RHWND__;;"
  }
  field {
    name: "hInstance"
    type: "*RHINSTANCE__;;"
  }
  field {
    name: "Flags"
    type: "UI"
  }
  field {
    name: "lpstrFindWhat"
    type: "*US;"
  }
  field {
    name: "lpstrReplaceWith"
    type: "*US;"
  }
  field {
    name: "wFindWhatLen"
    type: "US"
  }
  field {
    name: "wReplaceWithLen"
    type: "US"
  }
  field {
    name: "lCustData"
    type: "I"
  }
  field {
    name: "lpfnHook"
    type: "*(*RHWND__;;UIUII)UI;"
  }
  field {
    name: "lpTemplateName"
    type: "*cUS;"
  }
}
struct {
  name: "tagCHOOSEFONTA"
  field {
    name: "lStructSize"
    type: "UI"
  }
  field {
    name: "hwndOwner"
    type: "*RHWND__;;"
  }
  field {
    name: "hDC"
    type: "*RHDC__;;"
  }
  field {
    name: "lpLogFont"
    type: "*RtagLOGFONTA;;"
  }
  field {
    name: "iPointSize"
    type: "I"
  }
  field {
    name: "Flags"
    type: "UI"
  }
  field {
    name: "rgbColors"
    type: "UI"
  }
  field {
    name: "lCustData"
    type: "I"
  }
  field {
    name: "lpfnHook"
    type: "*(*RHWND__;;UIUII)UI;"
  }
  field {
    name: "lpTemplateName"
    type: "*cC;"
  }
  field {
    name: "hInstance"
    type: "*RHINSTANCE__;;"
  }
  field {
    name: "lpszStyle"
    type: "*C;"
  }
  field {
    name: "nFontType"
    type: "US"
  }
  field {
    name: "___MISSING_ALIGNMENT__"
    type: "US"
  }
  field {
    name: "nSizeMin"
    type: "I"
  }
  field {
    name: "nSizeMax"
    type: "I"
  }
}
struct {
  name: "tagCHOOSEFONTA"
  field {
    name: "lStructSize"
    type: "UI"
  }
  field {
    name: "hwndOwner"
    type: "*RHWND__;;"
  }
  field {
    name: "hDC"
    type: "*RHDC__;;"
  }
  field {
    name: "lpLogFont"
    type: "*RtagLOGFONTA;;"
  }
  field {
    name: "iPointSize"
    type: "I"
  }
  field {
    name: "Flags"
    type: "UI"
  }
  field {
    name: "rgbColors"
    type: "UI"
  }
  field {
    name: "lCustData"
    type: "I"
  }
  field {
    name: "lpfnHook"
    type: "*(*RHWND__;;UIUII)UI;"
  }
  field {
    name: "lpTemplateName"
    type: "*cC;"
  }
  field {
    name: "hInstance"
    type: "*RHINSTANCE__;;"
  }
  field {
    name: "lpszStyle"
    type: "*C;"
  }
  field {
    name: "nFontType"
    type: "US"
  }
  field {
    name: "___MISSING_ALIGNMENT__"
    type: "US"
  }
  field {
    name: "nSizeMin"
    type: "I"
  }
  field {
    name: "nSizeMax"
    type: "I"
  }
}
struct {
  name: "tagCHOOSEFONTW"
  field {
    name: "lStructSize"
    type: "UI"
  }
  field {
    name: "hwndOwner"
    type: "*RHWND__;;"
  }
  field {
    name: "hDC"
    type: "*RHDC__;;"
  }
  field {
    name: "lpLogFont"
    type: "*RtagLOGFONTW;;"
  }
  field {
    name: "iPointSize"
    type: "I"
  }
  field {
    name: "Flags"
    type: "UI"
  }
  field {
    name: "rgbColors"
    type: "UI"
  }
  field {
    name: "lCustData"
    type: "I"
  }
  field {
    name: "lpfnHook"
    type: "*(*RHWND__;;UIUII)UI;"
  }
  field {
    name: "lpTemplateName"
    type: "*cUS;"
  }
  field {
    name: "hInstance"
    type: "*RHINSTANCE__;;"
  }
  field {
    name: "lpszStyle"
    type: "*US;"
  }
  field {
    name: "nFontType"
    type: "US"
  }
  field {
    name: "___MISSING_ALIGNMENT__"
    type: "US"
  }
  field {
    name: "nSizeMin"
    type: "I"
  }
  field {
    name: "nSizeMax"
    type: "I"
  }
}
struct {
  name: "tagCHOOSEFONTW"
  field {
    name: "lStructSize"
    type: "UI"
  }
  field {
    name: "hwndOwner"
    type: "*RHWND__;;"
  }
  field {
    name: "hDC"
    type: "*RHDC__;;"
  }
  field {
    name: "lpLogFont"
    type: "*RtagLOGFONTW;;"
  }
  field {
    name: "iPointSize"
    type: "I"
  }
  field {
    name: "Flags"
    type: "UI"
  }
  field {
    name: "rgbColors"
    type: "UI"
  }
  field {
    name: "lCustData"
    type: "I"
  }
  field {
    name: "lpfnHook"
    type: "*(*RHWND__;;UIUII)UI;"
  }
  field {
    name: "lpTemplateName"
    type: "*cUS;"
  }
  field {
    name: "hInstance"
    type: "*RHINSTANCE__;;"
  }
  field {
    name: "lpszStyle"
    type: "*US;"
  }
  field {
    name: "nFontType"
    type: "US"
  }
  field {
    name: "___MISSING_ALIGNMENT__"
    type: "US"
  }
  field {
    name: "nSizeMin"
    type: "I"
  }
  field {
    name: "nSizeMax"
    type: "I"
  }
}
struct {
  name: "tagPDA"
  field {
    name: "lStructSize"
    type: "UI"
  }
  field {
    name: "hwndOwner"
    type: "*RHWND__;;"
  }
  field {
    name: "hDevMode"
    type: "*V;"
  }
  field {
    name: "hDevNames"
    type: "*V;"
  }
  field {
    name: "hDC"
    type: "*RHDC__;;"
  }
  field {
    name: "Flags"
    type: "UI"
  }
  field {
    name: "nFromPage"
    type: "US"
  }
  field {
    name: "nToPage"
    type: "US"
  }
  field {
    name: "nMinPage"
    type: "US"
  }
  field {
    name: "nMaxPage"
    type: "US"
  }
  field {
    name: "nCopies"
    type: "US"
  }
  field {
    name: "hInstance"
    type: "*RHINSTANCE__;;"
  }
  field {
    name: "lCustData"
    type: "I"
  }
  field {
    name: "lpfnPrintHook"
    type: "*(*RHWND__;;UIUII)UI;"
  }
  field {
    name: "lpfnSetupHook"
    type: "*(*RHWND__;;UIUII)UI;"
  }
  field {
    name: "lpPrintTemplateName"
    type: "*cC;"
  }
  field {
    name: "lpSetupTemplateName"
    type: "*cC;"
  }
  field {
    name: "hPrintTemplate"
    type: "*V;"
  }
  field {
    name: "hSetupTemplate"
    type: "*V;"
  }
}
struct {
  name: "tagPDA"
  field {
    name: "lStructSize"
    type: "UI"
  }
  field {
    name: "hwndOwner"
    type: "*RHWND__;;"
  }
  field {
    name: "hDevMode"
    type: "*V;"
  }
  field {
    name: "hDevNames"
    type: "*V;"
  }
  field {
    name: "hDC"
    type: "*RHDC__;;"
  }
  field {
    name: "Flags"
    type: "UI"
  }
  field {
    name: "nFromPage"
    type: "US"
  }
  field {
    name: "nToPage"
    type: "US"
  }
  field {
    name: "nMinPage"
    type: "US"
  }
  field {
    name: "nMaxPage"
    type: "US"
  }
  field {
    name: "nCopies"
    type: "US"
  }
  field {
    name: "hInstance"
    type: "*RHINSTANCE__;;"
  }
  field {
    name: "lCustData"
    type: "I"
  }
  field {
    name: "lpfnPrintHook"
    type: "*(*RHWND__;;UIUII)UI;"
  }
  field {
    name: "lpfnSetupHook"
    type: "*(*RHWND__;;UIUII)UI;"
  }
  field {
    name: "lpPrintTemplateName"
    type: "*cC;"
  }
  field {
    name: "lpSetupTemplateName"
    type: "*cC;"
  }
  field {
    name: "hPrintTemplate"
    type: "*V;"
  }
  field {
    name: "hSetupTemplate"
    type: "*V;"
  }
}
struct {
  name: "tagPDW"
  field {
    name: "lStructSize"
    type: "UI"
  }
  field {
    name: "hwndOwner"
    type: "*RHWND__;;"
  }
  field {
    name: "hDevMode"
    type: "*V;"
  }
  field {
    name: "hDevNames"
    type: "*V;"
  }
  field {
    name: "hDC"
    type: "*RHDC__;;"
  }
  field {
    name: "Flags"
    type: "UI"
  }
  field {
    name: "nFromPage"
    type: "US"
  }
  field {
    name: "nToPage"
    type: "US"
  }
  field {
    name: "nMinPage"
    type: "US"
  }
  field {
    name: "nMaxPage"
    type: "US"
  }
  field {
    name: "nCopies"
    type: "US"
  }
  field {
    name: "hInstance"
    type: "*RHINSTANCE__;;"
  }
  field {
    name: "lCustData"
    type: "I"
  }
  field {
    name: "lpfnPrintHook"
    type: "*(*RHWND__;;UIUII)UI;"
  }
  field {
    name: "lpfnSetupHook"
    type: "*(*RHWND__;;UIUII)UI;"
  }
  field {
    name: "lpPrintTemplateName"
    type: "*cUS;"
  }
  field {
    name: "lpSetupTemplateName"
    type: "*cUS;"
  }
  field {
    name: "hPrintTemplate"
    type: "*V;"
  }
  field {
    name: "hSetupTemplate"
    type: "*V;"
  }
}
struct {
  name: "tagPDW"
  field {
    name: "lStructSize"
    type: "UI"
  }
  field {
    name: "hwndOwner"
    type: "*RHWND__;;"
  }
  field {
    name: "hDevMode"
    type: "*V;"
  }
  field {
    name: "hDevNames"
    type: "*V;"
  }
  field {
    name: "hDC"
    type: "*RHDC__;;"
  }
  field {
    name: "Flags"
    type: "UI"
  }
  field {
    name: "nFromPage"
    type: "US"
  }
  field {
    name: "nToPage"
    type: "US"
  }
  field {
    name: "nMinPage"
    type: "US"
  }
  field {
    name: "nMaxPage"
    type: "US"
  }
  field {
    name: "nCopies"
    type: "US"
  }
  field {
    name: "hInstance"
    type: "*RHINSTANCE__;;"
  }
  field {
    name: "lCustData"
    type: "I"
  }
  field {
    name: "lpfnPrintHook"
    type: "*(*RHWND__;;UIUII)UI;"
  }
  field {
    name: "lpfnSetupHook"
    type: "*(*RHWND__;;UIUII)UI;"
  }
  field {
    name: "lpPrintTemplateName"
    type: "*cUS;"
  }
  field {
    name: "lpSetupTemplateName"
    type: "*cUS;"
  }
  field {
    name: "hPrintTemplate"
    type: "*V;"
  }
  field {
    name: "hSetupTemplate"
    type: "*V;"
  }
}
struct {
  name: "DEVNAMES"
  field {
    name: "wDriverOffset"
    type: "US"
  }
  field {
    name: "wDeviceOffset"
    type: "US"
  }
  field {
    name: "wOutputOffset"
    type: "US"
  }
  field {
    name: "wDefault"
    type: "US"
  }
}
struct {
  name: "tagPSDA"
  field {
    name: "lStructSize"
    type: "UI"
  }
  field {
    name: "hwndOwner"
    type: "*RHWND__;;"
  }
  field {
    name: "hDevMode"
    type: "*V;"
  }
  field {
    name: "hDevNames"
    type: "*V;"
  }
  field {
    name: "Flags"
    type: "UI"
  }
  field {
    name: "ptPaperSize"
    type: "RtagPOINT;"
  }
  field {
    name: "rtMinMargin"
    type: "RtagRECT;"
  }
  field {
    name: "rtMargin"
    type: "RtagRECT;"
  }
  field {
    name: "hInstance"
    type: "*RHINSTANCE__;;"
  }
  field {
    name: "lCustData"
    type: "I"
  }
  field {
    name: "lpfnPageSetupHook"
    type: "*(*RHWND__;;UIUII)UI;"
  }
  field {
    name: "lpfnPagePaintHook"
    type: "*(*RHWND__;;UIUII)UI;"
  }
  field {
    name: "lpPageSetupTemplateName"
    type: "*cC;"
  }
  field {
    name: "hPageSetupTemplate"
    type: "*V;"
  }
}
struct {
  name: "tagPSDA"
  field {
    name: "lStructSize"
    type: "UI"
  }
  field {
    name: "hwndOwner"
    type: "*RHWND__;;"
  }
  field {
    name: "hDevMode"
    type: "*V;"
  }
  field {
    name: "hDevNames"
    type: "*V;"
  }
  field {
    name: "Flags"
    type: "UI"
  }
  field {
    name: "ptPaperSize"
    type: "RtagPOINT;"
  }
  field {
    name: "rtMinMargin"
    type: "RtagRECT;"
  }
  field {
    name: "rtMargin"
    type: "RtagRECT;"
  }
  field {
    name: "hInstance"
    type: "*RHINSTANCE__;;"
  }
  field {
    name: "lCustData"
    type: "I"
  }
  field {
    name: "lpfnPageSetupHook"
    type: "*(*RHWND__;;UIUII)UI;"
  }
  field {
    name: "lpfnPagePaintHook"
    type: "*(*RHWND__;;UIUII)UI;"
  }
  field {
    name: "lpPageSetupTemplateName"
    type: "*cC;"
  }
  field {
    name: "hPageSetupTemplate"
    type: "*V;"
  }
}
struct {
  name: "tagPSDW"
  field {
    name: "lStructSize"
    type: "UI"
  }
  field {
    name: "hwndOwner"
    type: "*RHWND__;;"
  }
  field {
    name: "hDevMode"
    type: "*V;"
  }
  field {
    name: "hDevNames"
    type: "*V;"
  }
  field {
    name: "Flags"
    type: "UI"
  }
  field {
    name: "ptPaperSize"
    type: "RtagPOINT;"
  }
  field {
    name: "rtMinMargin"
    type: "RtagRECT;"
  }
  field {
    name: "rtMargin"
    type: "RtagRECT;"
  }
  field {
    name: "hInstance"
    type: "*RHINSTANCE__;;"
  }
  field {
    name: "lCustData"
    type: "I"
  }
  field {
    name: "lpfnPageSetupHook"
    type: "*(*RHWND__;;UIUII)UI;"
  }
  field {
    name: "lpfnPagePaintHook"
    type: "*(*RHWND__;;UIUII)UI;"
  }
  field {
    name: "lpPageSetupTemplateName"
    type: "*cUS;"
  }
  field {
    name: "hPageSetupTemplate"
    type: "*V;"
  }
}
struct {
  name: "tagPSDW"
  field {
    name: "lStructSize"
    type: "UI"
  }
  field {
    name: "hwndOwner"
    type: "*RHWND__;;"
  }
  field {
    name: "hDevMode"
    type: "*V;"
  }
  field {
    name: "hDevNames"
    type: "*V;"
  }
  field {
    name: "Flags"
    type: "UI"
  }
  field {
    name: "ptPaperSize"
    type: "RtagPOINT;"
  }
  field {
    name: "rtMinMargin"
    type: "RtagRECT;"
  }
  field {
    name: "rtMargin"
    type: "RtagRECT;"
  }
  field {
    name: "hInstance"
    type: "*RHINSTANCE__;;"
  }
  field {
    name: "lCustData"
    type: "I"
  }
  field {
    name: "lpfnPageSetupHook"
    type: "*(*RHWND__;;UIUII)UI;"
  }
  field {
    name: "lpfnPagePaintHook"
    type: "*(*RHWND__;;UIUII)UI;"
  }
  field {
    name: "lpPageSetupTemplateName"
    type: "*cUS;"
  }
  field {
    name: "hPageSetupTemplate"
    type: "*V;"
  }
}
struct {
  name: "tagPRINTPAGERANGE"
  field {
    name: "nFromPage"
    type: "UI"
  }
  field {
    name: "nToPage"
    type: "UI"
  }
}
struct {
  name: "tagPRINTPAGERANGE"
  field {
    name: "nFromPage"
    type: "UI"
  }
  field {
    name: "nToPage"
    type: "UI"
  }
}
struct {
  name: "tagPDEXA"
  field {
    name: "lStructSize"
    type: "UI"
  }
  field {
    name: "hwndOwner"
    type: "*RHWND__;;"
  }
  field {
    name: "hDevMode"
    type: "*V;"
  }
  field {
    name: "hDevNames"
    type: "*V;"
  }
  field {
    name: "hDC"
    type: "*RHDC__;;"
  }
  field {
    name: "Flags"
    type: "UI"
  }
  field {
    name: "Flags2"
    type: "UI"
  }
  field {
    name: "ExclusionFlags"
    type: "UI"
  }
  field {
    name: "nPageRanges"
    type: "UI"
  }
  field {
    name: "nMaxPageRanges"
    type: "UI"
  }
  field {
    name: "lpPageRanges"
    type: "*RtagPRINTPAGERANGE;;"
  }
  field {
    name: "nMinPage"
    type: "UI"
  }
  field {
    name: "nMaxPage"
    type: "UI"
  }
  field {
    name: "nCopies"
    type: "UI"
  }
  field {
    name: "hInstance"
    type: "*RHINSTANCE__;;"
  }
  field {
    name: "lpPrintTemplateName"
    type: "*cC;"
  }
  field {
    name: "lpCallback"
    type: "*V;"
  }
  field {
    name: "nPropertyPages"
    type: "UI"
  }
  field {
    name: "lphPropertyPages"
    type: "**R_PSP;;;"
  }
  field {
    name: "nStartPage"
    type: "UI"
  }
  field {
    name: "dwResultAction"
    type: "UI"
  }
}
struct {
  name: "tagPDEXA"
  field {
    name: "lStructSize"
    type: "UI"
  }
  field {
    name: "hwndOwner"
    type: "*RHWND__;;"
  }
  field {
    name: "hDevMode"
    type: "*V;"
  }
  field {
    name: "hDevNames"
    type: "*V;"
  }
  field {
    name: "hDC"
    type: "*RHDC__;;"
  }
  field {
    name: "Flags"
    type: "UI"
  }
  field {
    name: "Flags2"
    type: "UI"
  }
  field {
    name: "ExclusionFlags"
    type: "UI"
  }
  field {
    name: "nPageRanges"
    type: "UI"
  }
  field {
    name: "nMaxPageRanges"
    type: "UI"
  }
  field {
    name: "lpPageRanges"
    type: "*RtagPRINTPAGERANGE;;"
  }
  field {
    name: "nMinPage"
    type: "UI"
  }
  field {
    name: "nMaxPage"
    type: "UI"
  }
  field {
    name: "nCopies"
    type: "UI"
  }
  field {
    name: "hInstance"
    type: "*RHINSTANCE__;;"
  }
  field {
    name: "lpPrintTemplateName"
    type: "*cC;"
  }
  field {
    name: "lpCallback"
    type: "*V;"
  }
  field {
    name: "nPropertyPages"
    type: "UI"
  }
  field {
    name: "lphPropertyPages"
    type: "**R_PSP;;;"
  }
  field {
    name: "nStartPage"
    type: "UI"
  }
  field {
    name: "dwResultAction"
    type: "UI"
  }
}
struct {
  name: "tagPDEXW"
  field {
    name: "lStructSize"
    type: "UI"
  }
  field {
    name: "hwndOwner"
    type: "*RHWND__;;"
  }
  field {
    name: "hDevMode"
    type: "*V;"
  }
  field {
    name: "hDevNames"
    type: "*V;"
  }
  field {
    name: "hDC"
    type: "*RHDC__;;"
  }
  field {
    name: "Flags"
    type: "UI"
  }
  field {
    name: "Flags2"
    type: "UI"
  }
  field {
    name: "ExclusionFlags"
    type: "UI"
  }
  field {
    name: "nPageRanges"
    type: "UI"
  }
  field {
    name: "nMaxPageRanges"
    type: "UI"
  }
  field {
    name: "lpPageRanges"
    type: "*RtagPRINTPAGERANGE;;"
  }
  field {
    name: "nMinPage"
    type: "UI"
  }
  field {
    name: "nMaxPage"
    type: "UI"
  }
  field {
    name: "nCopies"
    type: "UI"
  }
  field {
    name: "hInstance"
    type: "*RHINSTANCE__;;"
  }
  field {
    name: "lpPrintTemplateName"
    type: "*cUS;"
  }
  field {
    name: "lpCallback"
    type: "*V;"
  }
  field {
    name: "nPropertyPages"
    type: "UI"
  }
  field {
    name: "lphPropertyPages"
    type: "**R_PSP;;;"
  }
  field {
    name: "nStartPage"
    type: "UI"
  }
  field {
    name: "dwResultAction"
    type: "UI"
  }
}
struct {
  name: "tagPDEXW"
  field {
    name: "lStructSize"
    type: "UI"
  }
  field {
    name: "hwndOwner"
    type: "*RHWND__;;"
  }
  field {
    name: "hDevMode"
    type: "*V;"
  }
  field {
    name: "hDevNames"
    type: "*V;"
  }
  field {
    name: "hDC"
    type: "*RHDC__;;"
  }
  field {
    name: "Flags"
    type: "UI"
  }
  field {
    name: "Flags2"
    type: "UI"
  }
  field {
    name: "ExclusionFlags"
    type: "UI"
  }
  field {
    name: "nPageRanges"
    type: "UI"
  }
  field {
    name: "nMaxPageRanges"
    type: "UI"
  }
  field {
    name: "lpPageRanges"
    type: "*RtagPRINTPAGERANGE;;"
  }
  field {
    name: "nMinPage"
    type: "UI"
  }
  field {
    name: "nMaxPage"
    type: "UI"
  }
  field {
    name: "nCopies"
    type: "UI"
  }
  field {
    name: "hInstance"
    type: "*RHINSTANCE__;;"
  }
  field {
    name: "lpPrintTemplateName"
    type: "*cUS;"
  }
  field {
    name: "lpCallback"
    type: "*V;"
  }
  field {
    name: "nPropertyPages"
    type: "UI"
  }
  field {
    name: "lphPropertyPages"
    type: "**R_PSP;;;"
  }
  field {
    name: "nStartPage"
    type: "UI"
  }
  field {
    name: "dwResultAction"
    type: "UI"
  }
}
struct {
  name: "IPrintDialogCallback"
  field {
    name: "lpVtbl"
    type: "*RIPrintDialogCallbackVtbl;;"
  }
}
struct {
  name: "IPrintDialogCallbackVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIPrintDialogCallback;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIPrintDialogCallback;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIPrintDialogCallback;;)UI;"
  }
  field {
    name: "InitDone"
    type: "*(*RIPrintDialogCallback;;)I;"
  }
  field {
    name: "SelectionChange"
    type: "*(*RIPrintDialogCallback;;)I;"
  }
  field {
    name: "HandleMessage"
    type: "*(*RIPrintDialogCallback;;*RHWND__;;UIUII*I;)I;"
  }
}
struct {
  name: "IPrintDialogServices"
  field {
    name: "lpVtbl"
    type: "*RIPrintDialogServicesVtbl;;"
  }
}
struct {
  name: "IPrintDialogServicesVtbl"
  field {
    name: "QueryInterface"
    type: "*(*RIPrintDialogServices;;*cR_GUID;;**V;;)I;"
  }
  field {
    name: "AddRef"
    type: "*(*RIPrintDialogServices;;)UI;"
  }
  field {
    name: "Release"
    type: "*(*RIPrintDialogServices;;)UI;"
  }
  field {
    name: "GetCurrentDevMode"
    type: "*(*RIPrintDialogServices;;*RDEVMODEW;;*UI;)I;"
  }
  field {
    name: "GetCurrentPrinterName"
    type: "*(*RIPrintDialogServices;;*US;*UI;)I;"
  }
  field {
    name: "GetCurrentPortName"
    type: "*(*RIPrintDialogServices;;*US;*UI;)I;"
  }
}
struct {
  name: "SC_HANDLE__"
  field {
    name: "unused"
    type: "I"
  }
}
struct {
  name: "SERVICE_STATUS_HANDLE__"
  field {
    name: "unused"
    type: "I"
  }
}
struct {
  name: "_SERVICE_STATUS"
  field {
    name: "dwServiceType"
    type: "UI"
  }
  field {
    name: "dwCurrentState"
    type: "UI"
  }
  field {
    name: "dwControlsAccepted"
    type: "UI"
  }
  field {
    name: "dwWin32ExitCode"
    type: "UI"
  }
  field {
    name: "dwServiceSpecificExitCode"
    type: "UI"
  }
  field {
    name: "dwCheckPoint"
    type: "UI"
  }
  field {
    name: "dwWaitHint"
    type: "UI"
  }
}
struct {
  name: "_SERVICE_STATUS"
  field {
    name: "dwServiceType"
    type: "UI"
  }
  field {
    name: "dwCurrentState"
    type: "UI"
  }
  field {
    name: "dwControlsAccepted"
    type: "UI"
  }
  field {
    name: "dwWin32ExitCode"
    type: "UI"
  }
  field {
    name: "dwServiceSpecificExitCode"
    type: "UI"
  }
  field {
    name: "dwCheckPoint"
    type: "UI"
  }
  field {
    name: "dwWaitHint"
    type: "UI"
  }
}
struct {
  name: "_SERVICE_STATUS_PROCESS"
  field {
    name: "dwServiceType"
    type: "UI"
  }
  field {
    name: "dwCurrentState"
    type: "UI"
  }
  field {
    name: "dwControlsAccepted"
    type: "UI"
  }
  field {
    name: "dwWin32ExitCode"
    type: "UI"
  }
  field {
    name: "dwServiceSpecificExitCode"
    type: "UI"
  }
  field {
    name: "dwCheckPoint"
    type: "UI"
  }
  field {
    name: "dwWaitHint"
    type: "UI"
  }
  field {
    name: "dwProcessId"
    type: "UI"
  }
  field {
    name: "dwServiceFlags"
    type: "UI"
  }
}
struct {
  name: "_SERVICE_STATUS_PROCESS"
  field {
    name: "dwServiceType"
    type: "UI"
  }
  field {
    name: "dwCurrentState"
    type: "UI"
  }
  field {
    name: "dwControlsAccepted"
    type: "UI"
  }
  field {
    name: "dwWin32ExitCode"
    type: "UI"
  }
  field {
    name: "dwServiceSpecificExitCode"
    type: "UI"
  }
  field {
    name: "dwCheckPoint"
    type: "UI"
  }
  field {
    name: "dwWaitHint"
    type: "UI"
  }
  field {
    name: "dwProcessId"
    type: "UI"
  }
  field {
    name: "dwServiceFlags"
    type: "UI"
  }
}
struct {
  name: "_SERVICE_TABLE_ENTRYA"
  field {
    name: "lpServiceName"
    type: "*C;"
  }
  field {
    name: "lpServiceProc"
    type: "*(UI**C;;)V;"
  }
}
struct {
  name: "_SERVICE_TABLE_ENTRYA"
  field {
    name: "lpServiceName"
    type: "*C;"
  }
  field {
    name: "lpServiceProc"
    type: "*(UI**C;;)V;"
  }
}
struct {
  name: "_SERVICE_TABLE_ENTRYW"
  field {
    name: "lpServiceName"
    type: "*US;"
  }
  field {
    name: "lpServiceProc"
    type: "*(UI**US;;)V;"
  }
}
struct {
  name: "_SERVICE_TABLE_ENTRYW"
  field {
    name: "lpServiceName"
    type: "*US;"
  }
  field {
    name: "lpServiceProc"
    type: "*(UI**US;;)V;"
  }
}
struct {
  name: "_ENUM_SERVICE_STATUSA"
  field {
    name: "lpServiceName"
    type: "*C;"
  }
  field {
    name: "lpDisplayName"
    type: "*C;"
  }
  field {
    name: "ServiceStatus"
    type: "R_SERVICE_STATUS;"
  }
}
struct {
  name: "_ENUM_SERVICE_STATUSA"
  field {
    name: "lpServiceName"
    type: "*C;"
  }
  field {
    name: "lpDisplayName"
    type: "*C;"
  }
  field {
    name: "ServiceStatus"
    type: "R_SERVICE_STATUS;"
  }
}
struct {
  name: "_ENUM_SERVICE_STATUSW"
  field {
    name: "lpServiceName"
    type: "*US;"
  }
  field {
    name: "lpDisplayName"
    type: "*US;"
  }
  field {
    name: "ServiceStatus"
    type: "R_SERVICE_STATUS;"
  }
}
struct {
  name: "_ENUM_SERVICE_STATUSW"
  field {
    name: "lpServiceName"
    type: "*US;"
  }
  field {
    name: "lpDisplayName"
    type: "*US;"
  }
  field {
    name: "ServiceStatus"
    type: "R_SERVICE_STATUS;"
  }
}
struct {
  name: "_ENUM_SERVICE_STATUS_PROCESSA"
  field {
    name: "lpServiceName"
    type: "*C;"
  }
  field {
    name: "lpDisplayName"
    type: "*C;"
  }
  field {
    name: "ServiceStatusProcess"
    type: "R_SERVICE_STATUS_PROCESS;"
  }
}
struct {
  name: "_ENUM_SERVICE_STATUS_PROCESSA"
  field {
    name: "lpServiceName"
    type: "*C;"
  }
  field {
    name: "lpDisplayName"
    type: "*C;"
  }
  field {
    name: "ServiceStatusProcess"
    type: "R_SERVICE_STATUS_PROCESS;"
  }
}
struct {
  name: "_ENUM_SERVICE_STATUS_PROCESSW"
  field {
    name: "lpServiceName"
    type: "*US;"
  }
  field {
    name: "lpDisplayName"
    type: "*US;"
  }
  field {
    name: "ServiceStatusProcess"
    type: "R_SERVICE_STATUS_PROCESS;"
  }
}
struct {
  name: "_ENUM_SERVICE_STATUS_PROCESSW"
  field {
    name: "lpServiceName"
    type: "*US;"
  }
  field {
    name: "lpDisplayName"
    type: "*US;"
  }
  field {
    name: "ServiceStatusProcess"
    type: "R_SERVICE_STATUS_PROCESS;"
  }
}
struct {
  name: "_QUERY_SERVICE_CONFIGA"
  field {
    name: "dwServiceType"
    type: "UI"
  }
  field {
    name: "dwStartType"
    type: "UI"
  }
  field {
    name: "dwErrorControl"
    type: "UI"
  }
  field {
    name: "lpBinaryPathName"
    type: "*C;"
  }
  field {
    name: "lpLoadOrderGroup"
    type: "*C;"
  }
  field {
    name: "dwTagId"
    type: "UI"
  }
  field {
    name: "lpDependencies"
    type: "*C;"
  }
  field {
    name: "lpServiceStartName"
    type: "*C;"
  }
  field {
    name: "lpDisplayName"
    type: "*C;"
  }
}
struct {
  name: "_QUERY_SERVICE_CONFIGA"
  field {
    name: "dwServiceType"
    type: "UI"
  }
  field {
    name: "dwStartType"
    type: "UI"
  }
  field {
    name: "dwErrorControl"
    type: "UI"
  }
  field {
    name: "lpBinaryPathName"
    type: "*C;"
  }
  field {
    name: "lpLoadOrderGroup"
    type: "*C;"
  }
  field {
    name: "dwTagId"
    type: "UI"
  }
  field {
    name: "lpDependencies"
    type: "*C;"
  }
  field {
    name: "lpServiceStartName"
    type: "*C;"
  }
  field {
    name: "lpDisplayName"
    type: "*C;"
  }
}
struct {
  name: "_QUERY_SERVICE_CONFIGW"
  field {
    name: "dwServiceType"
    type: "UI"
  }
  field {
    name: "dwStartType"
    type: "UI"
  }
  field {
    name: "dwErrorControl"
    type: "UI"
  }
  field {
    name: "lpBinaryPathName"
    type: "*US;"
  }
  field {
    name: "lpLoadOrderGroup"
    type: "*US;"
  }
  field {
    name: "dwTagId"
    type: "UI"
  }
  field {
    name: "lpDependencies"
    type: "*US;"
  }
  field {
    name: "lpServiceStartName"
    type: "*US;"
  }
  field {
    name: "lpDisplayName"
    type: "*US;"
  }
}
struct {
  name: "_QUERY_SERVICE_CONFIGW"
  field {
    name: "dwServiceType"
    type: "UI"
  }
  field {
    name: "dwStartType"
    type: "UI"
  }
  field {
    name: "dwErrorControl"
    type: "UI"
  }
  field {
    name: "lpBinaryPathName"
    type: "*US;"
  }
  field {
    name: "lpLoadOrderGroup"
    type: "*US;"
  }
  field {
    name: "dwTagId"
    type: "UI"
  }
  field {
    name: "lpDependencies"
    type: "*US;"
  }
  field {
    name: "lpServiceStartName"
    type: "*US;"
  }
  field {
    name: "lpDisplayName"
    type: "*US;"
  }
}
struct {
  name: "_SERVICE_DESCRIPTIONA"
  field {
    name: "lpDescription"
    type: "*C;"
  }
}
struct {
  name: "_SERVICE_DESCRIPTIONA"
  field {
    name: "lpDescription"
    type: "*C;"
  }
}
struct {
  name: "_SERVICE_DESCRIPTIONW"
  field {
    name: "lpDescription"
    type: "*US;"
  }
}
struct {
  name: "_SERVICE_DESCRIPTIONW"
  field {
    name: "lpDescription"
    type: "*US;"
  }
}
struct {
  name: "_SC_ACTION"
  field {
    name: "Type"
    type: "X(Enum.enum _SC_ACTION_TYPE)"
  }
  field {
    name: "Delay"
    type: "UI"
  }
}
struct {
  name: "_SC_ACTION"
  field {
    name: "Type"
    type: "X(Enum.enum _SC_ACTION_TYPE)"
  }
  field {
    name: "Delay"
    type: "UI"
  }
}
struct {
  name: "_SERVICE_FAILURE_ACTIONSA"
  field {
    name: "dwResetPeriod"
    type: "UI"
  }
  field {
    name: "lpRebootMsg"
    type: "*C;"
  }
  field {
    name: "lpCommand"
    type: "*C;"
  }
  field {
    name: "cActions"
    type: "UI"
  }
  field {
    name: "lpsaActions"
    type: "*R_SC_ACTION;;"
  }
}
struct {
  name: "_SERVICE_FAILURE_ACTIONSA"
  field {
    name: "dwResetPeriod"
    type: "UI"
  }
  field {
    name: "lpRebootMsg"
    type: "*C;"
  }
  field {
    name: "lpCommand"
    type: "*C;"
  }
  field {
    name: "cActions"
    type: "UI"
  }
  field {
    name: "lpsaActions"
    type: "*R_SC_ACTION;;"
  }
}
struct {
  name: "_SERVICE_FAILURE_ACTIONSW"
  field {
    name: "dwResetPeriod"
    type: "UI"
  }
  field {
    name: "lpRebootMsg"
    type: "*US;"
  }
  field {
    name: "lpCommand"
    type: "*US;"
  }
  field {
    name: "cActions"
    type: "UI"
  }
  field {
    name: "lpsaActions"
    type: "*R_SC_ACTION;;"
  }
}
struct {
  name: "_SERVICE_FAILURE_ACTIONSW"
  field {
    name: "dwResetPeriod"
    type: "UI"
  }
  field {
    name: "lpRebootMsg"
    type: "*US;"
  }
  field {
    name: "lpCommand"
    type: "*US;"
  }
  field {
    name: "cActions"
    type: "UI"
  }
  field {
    name: "lpsaActions"
    type: "*R_SC_ACTION;;"
  }
}
struct {
  name: "_SERVICE_DELAYED_AUTO_START_INFO"
  field {
    name: "fDelayedAutostart"
    type: "I"
  }
}
struct {
  name: "_SERVICE_DELAYED_AUTO_START_INFO"
  field {
    name: "fDelayedAutostart"
    type: "I"
  }
}
struct {
  name: "_SERVICE_FAILURE_ACTIONS_FLAG"
  field {
    name: "fFailureActionsOnNonCrashFailures"
    type: "I"
  }
}
struct {
  name: "_SERVICE_FAILURE_ACTIONS_FLAG"
  field {
    name: "fFailureActionsOnNonCrashFailures"
    type: "I"
  }
}
struct {
  name: "_SERVICE_SID_INFO"
  field {
    name: "dwServiceSidType"
    type: "UI"
  }
}
struct {
  name: "_SERVICE_SID_INFO"
  field {
    name: "dwServiceSidType"
    type: "UI"
  }
}
struct {
  name: "_SERVICE_REQUIRED_PRIVILEGES_INFOA"
  field {
    name: "pmszRequiredPrivileges"
    type: "*C;"
  }
}
struct {
  name: "_SERVICE_REQUIRED_PRIVILEGES_INFOA"
  field {
    name: "pmszRequiredPrivileges"
    type: "*C;"
  }
}
struct {
  name: "_SERVICE_REQUIRED_PRIVILEGES_INFOW"
  field {
    name: "pmszRequiredPrivileges"
    type: "*US;"
  }
}
struct {
  name: "_SERVICE_REQUIRED_PRIVILEGES_INFOW"
  field {
    name: "pmszRequiredPrivileges"
    type: "*US;"
  }
}
struct {
  name: "_SERVICE_PRESHUTDOWN_INFO"
  field {
    name: "dwPreshutdownTimeout"
    type: "UI"
  }
}
struct {
  name: "_SERVICE_PRESHUTDOWN_INFO"
  field {
    name: "dwPreshutdownTimeout"
    type: "UI"
  }
}
struct {
  name: "_QUERY_SERVICE_LOCK_STATUSA"
  field {
    name: "fIsLocked"
    type: "UI"
  }
  field {
    name: "lpLockOwner"
    type: "*C;"
  }
  field {
    name: "dwLockDuration"
    type: "UI"
  }
}
struct {
  name: "_QUERY_SERVICE_LOCK_STATUSA"
  field {
    name: "fIsLocked"
    type: "UI"
  }
  field {
    name: "lpLockOwner"
    type: "*C;"
  }
  field {
    name: "dwLockDuration"
    type: "UI"
  }
}
struct {
  name: "_QUERY_SERVICE_LOCK_STATUSW"
  field {
    name: "fIsLocked"
    type: "UI"
  }
  field {
    name: "lpLockOwner"
    type: "*US;"
  }
  field {
    name: "dwLockDuration"
    type: "UI"
  }
}
struct {
  name: "_QUERY_SERVICE_LOCK_STATUSW"
  field {
    name: "fIsLocked"
    type: "UI"
  }
  field {
    name: "lpLockOwner"
    type: "*US;"
  }
  field {
    name: "dwLockDuration"
    type: "UI"
  }
}
struct {
  name: "tagMODEMDEVCAPS"
  field {
    name: "dwActualSize"
    type: "UI"
  }
  field {
    name: "dwRequiredSize"
    type: "UI"
  }
  field {
    name: "dwDevSpecificOffset"
    type: "UI"
  }
  field {
    name: "dwDevSpecificSize"
    type: "UI"
  }
  field {
    name: "dwModemProviderVersion"
    type: "UI"
  }
  field {
    name: "dwModemManufacturerOffset"
    type: "UI"
  }
  field {
    name: "dwModemManufacturerSize"
    type: "UI"
  }
  field {
    name: "dwModemModelOffset"
    type: "UI"
  }
  field {
    name: "dwModemModelSize"
    type: "UI"
  }
  field {
    name: "dwModemVersionOffset"
    type: "UI"
  }
  field {
    name: "dwModemVersionSize"
    type: "UI"
  }
  field {
    name: "dwDialOptions"
    type: "UI"
  }
  field {
    name: "dwCallSetupFailTimer"
    type: "UI"
  }
  field {
    name: "dwInactivityTimeout"
    type: "UI"
  }
  field {
    name: "dwSpeakerVolume"
    type: "UI"
  }
  field {
    name: "dwSpeakerMode"
    type: "UI"
  }
  field {
    name: "dwModemoptions"
    type: "UI"
  }
  field {
    name: "dwMaxDTERate"
    type: "UI"
  }
  field {
    name: "dwMaxDCERate"
    type: "UI"
  }
  field {
    name: "abVariablePortion"
    type: "X(ConstantArray.BYTE [1])"
  }
}
struct {
  name: "tagMODEMDEVCAPS"
  field {
    name: "dwActualSize"
    type: "UI"
  }
  field {
    name: "dwRequiredSize"
    type: "UI"
  }
  field {
    name: "dwDevSpecificOffset"
    type: "UI"
  }
  field {
    name: "dwDevSpecificSize"
    type: "UI"
  }
  field {
    name: "dwModemProviderVersion"
    type: "UI"
  }
  field {
    name: "dwModemManufacturerOffset"
    type: "UI"
  }
  field {
    name: "dwModemManufacturerSize"
    type: "UI"
  }
  field {
    name: "dwModemModelOffset"
    type: "UI"
  }
  field {
    name: "dwModemModelSize"
    type: "UI"
  }
  field {
    name: "dwModemVersionOffset"
    type: "UI"
  }
  field {
    name: "dwModemVersionSize"
    type: "UI"
  }
  field {
    name: "dwDialOptions"
    type: "UI"
  }
  field {
    name: "dwCallSetupFailTimer"
    type: "UI"
  }
  field {
    name: "dwInactivityTimeout"
    type: "UI"
  }
  field {
    name: "dwSpeakerVolume"
    type: "UI"
  }
  field {
    name: "dwSpeakerMode"
    type: "UI"
  }
  field {
    name: "dwModemoptions"
    type: "UI"
  }
  field {
    name: "dwMaxDTERate"
    type: "UI"
  }
  field {
    name: "dwMaxDCERate"
    type: "UI"
  }
  field {
    name: "abVariablePortion"
    type: "X(ConstantArray.BYTE [1])"
  }
}
struct {
  name: "tagMODEMSETTINGS"
  field {
    name: "dwActualSize"
    type: "UI"
  }
  field {
    name: "dwRequiredSize"
    type: "UI"
  }
  field {
    name: "dwDevSpecificOffset"
    type: "UI"
  }
  field {
    name: "dwDevSpecificSize"
    type: "UI"
  }
  field {
    name: "dwCallSetupFailTimer"
    type: "UI"
  }
  field {
    name: "dwInactivityTimeout"
    type: "UI"
  }
  field {
    name: "dwSpeakerVolume"
    type: "UI"
  }
  field {
    name: "dwSpeakerMode"
    type: "UI"
  }
  field {
    name: "dwPreferredModemOptions"
    type: "UI"
  }
  field {
    name: "dwNegotiatedModemOptions"
    type: "UI"
  }
  field {
    name: "dwNegotiatedDCERate"
    type: "UI"
  }
  field {
    name: "abVariablePortion"
    type: "X(ConstantArray.BYTE [1])"
  }
}
struct {
  name: "tagMODEMSETTINGS"
  field {
    name: "dwActualSize"
    type: "UI"
  }
  field {
    name: "dwRequiredSize"
    type: "UI"
  }
  field {
    name: "dwDevSpecificOffset"
    type: "UI"
  }
  field {
    name: "dwDevSpecificSize"
    type: "UI"
  }
  field {
    name: "dwCallSetupFailTimer"
    type: "UI"
  }
  field {
    name: "dwInactivityTimeout"
    type: "UI"
  }
  field {
    name: "dwSpeakerVolume"
    type: "UI"
  }
  field {
    name: "dwSpeakerMode"
    type: "UI"
  }
  field {
    name: "dwPreferredModemOptions"
    type: "UI"
  }
  field {
    name: "dwNegotiatedModemOptions"
    type: "UI"
  }
  field {
    name: "dwNegotiatedDCERate"
    type: "UI"
  }
  field {
    name: "abVariablePortion"
    type: "X(ConstantArray.BYTE [1])"
  }
}
struct {
  name: "tagREGISTERWORDA"
  field {
    name: "lpReading"
    type: "*C;"
  }
  field {
    name: "lpWord"
    type: "*C;"
  }
}
struct {
  name: "tagREGISTERWORDA"
  field {
    name: "lpReading"
    type: "*C;"
  }
  field {
    name: "lpWord"
    type: "*C;"
  }
}
struct {
  name: "tagREGISTERWORDA"
  field {
    name: "lpReading"
    type: "*C;"
  }
  field {
    name: "lpWord"
    type: "*C;"
  }
}
struct {
  name: "tagREGISTERWORDA"
  field {
    name: "lpReading"
    type: "*C;"
  }
  field {
    name: "lpWord"
    type: "*C;"
  }
}
struct {
  name: "tagREGISTERWORDW"
  field {
    name: "lpReading"
    type: "*US;"
  }
  field {
    name: "lpWord"
    type: "*US;"
  }
}
struct {
  name: "tagREGISTERWORDW"
  field {
    name: "lpReading"
    type: "*US;"
  }
  field {
    name: "lpWord"
    type: "*US;"
  }
}
struct {
  name: "tagREGISTERWORDW"
  field {
    name: "lpReading"
    type: "*US;"
  }
  field {
    name: "lpWord"
    type: "*US;"
  }
}
struct {
  name: "tagREGISTERWORDW"
  field {
    name: "lpReading"
    type: "*US;"
  }
  field {
    name: "lpWord"
    type: "*US;"
  }
}
struct {
  name: "tagCANDIDATEFORM"
  field {
    name: "dwIndex"
    type: "UI"
  }
  field {
    name: "dwStyle"
    type: "UI"
  }
  field {
    name: "ptCurrentPos"
    type: "RtagPOINT;"
  }
  field {
    name: "rcArea"
    type: "RtagRECT;"
  }
}
struct {
  name: "tagCANDIDATEFORM"
  field {
    name: "dwIndex"
    type: "UI"
  }
  field {
    name: "dwStyle"
    type: "UI"
  }
  field {
    name: "ptCurrentPos"
    type: "RtagPOINT;"
  }
  field {
    name: "rcArea"
    type: "RtagRECT;"
  }
}
struct {
  name: "tagCANDIDATELIST"
  field {
    name: "dwSize"
    type: "UI"
  }
  field {
    name: "dwStyle"
    type: "UI"
  }
  field {
    name: "dwCount"
    type: "UI"
  }
  field {
    name: "dwSelection"
    type: "UI"
  }
  field {
    name: "dwPageStart"
    type: "UI"
  }
  field {
    name: "dwPageSize"
    type: "UI"
  }
  field {
    name: "dwOffset"
    type: "X(ConstantArray.DWORD [1])"
  }
}
struct {
  name: "tagCANDIDATELIST"
  field {
    name: "dwSize"
    type: "UI"
  }
  field {
    name: "dwStyle"
    type: "UI"
  }
  field {
    name: "dwCount"
    type: "UI"
  }
  field {
    name: "dwSelection"
    type: "UI"
  }
  field {
    name: "dwPageStart"
    type: "UI"
  }
  field {
    name: "dwPageSize"
    type: "UI"
  }
  field {
    name: "dwOffset"
    type: "X(ConstantArray.DWORD [1])"
  }
}
struct {
  name: "tagSTYLEBUFA"
  field {
    name: "dwStyle"
    type: "UI"
  }
  field {
    name: "szDescription"
    type: "X(ConstantArray.CHAR [32])"
  }
}
struct {
  name: "tagSTYLEBUFA"
  field {
    name: "dwStyle"
    type: "UI"
  }
  field {
    name: "szDescription"
    type: "X(ConstantArray.CHAR [32])"
  }
}
struct {
  name: "tagSTYLEBUFW"
  field {
    name: "dwStyle"
    type: "UI"
  }
  field {
    name: "szDescription"
    type: "X(ConstantArray.WCHAR [32])"
  }
}
struct {
  name: "tagSTYLEBUFW"
  field {
    name: "dwStyle"
    type: "UI"
  }
  field {
    name: "szDescription"
    type: "X(ConstantArray.WCHAR [32])"
  }
}
struct {
  name: "tagRECONVERTSTRING"
  field {
    name: "dwSize"
    type: "UI"
  }
  field {
    name: "dwVersion"
    type: "UI"
  }
  field {
    name: "dwStrLen"
    type: "UI"
  }
  field {
    name: "dwStrOffset"
    type: "UI"
  }
  field {
    name: "dwCompStrLen"
    type: "UI"
  }
  field {
    name: "dwCompStrOffset"
    type: "UI"
  }
  field {
    name: "dwTargetStrLen"
    type: "UI"
  }
  field {
    name: "dwTargetStrOffset"
    type: "UI"
  }
}
struct {
  name: "tagRECONVERTSTRING"
  field {
    name: "dwSize"
    type: "UI"
  }
  field {
    name: "dwVersion"
    type: "UI"
  }
  field {
    name: "dwStrLen"
    type: "UI"
  }
  field {
    name: "dwStrOffset"
    type: "UI"
  }
  field {
    name: "dwCompStrLen"
    type: "UI"
  }
  field {
    name: "dwCompStrOffset"
    type: "UI"
  }
  field {
    name: "dwTargetStrLen"
    type: "UI"
  }
  field {
    name: "dwTargetStrOffset"
    type: "UI"
  }
}
struct {
  name: "tagIMEMENUITEMINFOA"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "fType"
    type: "UI"
  }
  field {
    name: "fState"
    type: "UI"
  }
  field {
    name: "wID"
    type: "UI"
  }
  field {
    name: "hbmpChecked"
    type: "*RHBITMAP__;;"
  }
  field {
    name: "hbmpUnchecked"
    type: "*RHBITMAP__;;"
  }
  field {
    name: "dwItemData"
    type: "UI"
  }
  field {
    name: "szString"
    type: "X(ConstantArray.CHAR [80])"
  }
  field {
    name: "hbmpItem"
    type: "*RHBITMAP__;;"
  }
}
struct {
  name: "tagIMEMENUITEMINFOA"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "fType"
    type: "UI"
  }
  field {
    name: "fState"
    type: "UI"
  }
  field {
    name: "wID"
    type: "UI"
  }
  field {
    name: "hbmpChecked"
    type: "*RHBITMAP__;;"
  }
  field {
    name: "hbmpUnchecked"
    type: "*RHBITMAP__;;"
  }
  field {
    name: "dwItemData"
    type: "UI"
  }
  field {
    name: "szString"
    type: "X(ConstantArray.CHAR [80])"
  }
  field {
    name: "hbmpItem"
    type: "*RHBITMAP__;;"
  }
}
struct {
  name: "tagIMEMENUITEMINFOW"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "fType"
    type: "UI"
  }
  field {
    name: "fState"
    type: "UI"
  }
  field {
    name: "wID"
    type: "UI"
  }
  field {
    name: "hbmpChecked"
    type: "*RHBITMAP__;;"
  }
  field {
    name: "hbmpUnchecked"
    type: "*RHBITMAP__;;"
  }
  field {
    name: "dwItemData"
    type: "UI"
  }
  field {
    name: "szString"
    type: "X(ConstantArray.WCHAR [80])"
  }
  field {
    name: "hbmpItem"
    type: "*RHBITMAP__;;"
  }
}
struct {
  name: "tagIMEMENUITEMINFOW"
  field {
    name: "cbSize"
    type: "UI"
  }
  field {
    name: "fType"
    type: "UI"
  }
  field {
    name: "fState"
    type: "UI"
  }
  field {
    name: "wID"
    type: "UI"
  }
  field {
    name: "hbmpChecked"
    type: "*RHBITMAP__;;"
  }
  field {
    name: "hbmpUnchecked"
    type: "*RHBITMAP__;;"
  }
  field {
    name: "dwItemData"
    type: "UI"
  }
  field {
    name: "szString"
    type: "X(ConstantArray.WCHAR [80])"
  }
  field {
    name: "hbmpItem"
    type: "*RHBITMAP__;;"
  }
}
struct {
  name: "_tagCOMPOSITIONFORM"
  field {
    name: "dwStyle"
    type: "UI"
  }
  field {
    name: "ptCurrentPos"
    type: "RtagPOINT;"
  }
  field {
    name: "rcArea"
    type: "RtagRECT;"
  }
}
struct {
  name: "_tagCOMPOSITIONFORM"
  field {
    name: "dwStyle"
    type: "UI"
  }
  field {
    name: "ptCurrentPos"
    type: "RtagPOINT;"
  }
  field {
    name: "rcArea"
    type: "RtagRECT;"
  }
}
struct {
  name: "_tagIMECHARPOSITION"
  field {
    name: "dwSize"
    type: "UI"
  }
  field {
    name: "dwCharPos"
    type: "UI"
  }
  field {
    name: "pt"
    type: "RtagPOINT;"
  }
  field {
    name: "cLineHeight"
    type: "UI"
  }
  field {
    name: "rcDocument"
    type: "RtagRECT;"
  }
}
struct {
  name: "_tagIMECHARPOSITION"
  field {
    name: "dwSize"
    type: "UI"
  }
  field {
    name: "dwCharPos"
    type: "UI"
  }
  field {
    name: "pt"
    type: "RtagPOINT;"
  }
  field {
    name: "cLineHeight"
    type: "UI"
  }
  field {
    name: "rcDocument"
    type: "RtagRECT;"
  }
}
diagnostic {
  severity: 4
  line: 0
  column: 0
  message: "fatal error: too many errors emitted, stopping now [-ferror-limit=]"
  category: ""
}
